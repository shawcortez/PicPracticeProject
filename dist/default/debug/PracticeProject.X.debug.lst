

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 23 15:27:23 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F452
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	param0,global,class=BANK0,space=1,delta=1
    59  0000                     
    60                           	psect	idataBANK1
    61  0001A2                     __pidataBANK1:
    62                           	opt stack 0
    63                           
    64                           ;initializer for main@F3981
    65  0001A2  33                 	db	51
    66  0001A3  32                 	db	50
    67  0001A4  28                 	db	40
    68  0001A5  01                 	db	1
    69  0001A6  0C                 	db	12
    70  0001A7  06                 	db	6
    71  0001A8  00                 	db	0
    72                           
    73                           ;initializer for main@F3983
    74  0001A9  84                 	db	132
    75  0001AA  43                 	db	67
    76  0001AB  55                 	db	85
    77  0001AC  4E                 	db	78
    78  0001AD  54                 	db	84
    79  0001AE  00                 	db	0
    80                           
    81                           ;initializer for main@F3985
    82  0001AF  C5                 	db	197
    83  0001B0  52                 	db	82
    84  0001B1  50                 	db	80
    85  0001B2  53                 	db	83
    86  0001B3  00                 	db	0
    87                           
    88                           	psect	smallconst
    89  000600                     __psmallconst:
    90                           	opt stack 0
    91  000600  00                 	db	0
    92  000601                     _dpowers:
    93                           	opt stack 0
    94  000601  0001               	dw	1
    95  000603  0000               	dw	0
    96  000605  000A               	dw	10
    97  000607  0000               	dw	0
    98  000609  0064               	dw	100
    99  00060B  0000               	dw	0
   100  00060D  03E8               	dw	1000
   101  00060F  0000               	dw	0
   102  000611  2710               	dw	10000
   103  000613  0000               	dw	0
   104  000615  86A0               	dw	34464
   105  000617  0001               	dw	1
   106  000619  4240               	dw	16960
   107  00061B  000F               	dw	15
   108  00061D  9680               	dw	38528
   109  00061F  0098               	dw	152
   110  000621  E100               	dw	57600
   111  000623  05F5               	dw	1525
   112  000625  CA00               	dw	51712
   113  000627  3B9A               	dw	15258
   114  000629                     __end_of_dpowers:
   115                           	opt stack 0
   116  000629                     __npowers_:
   117                           	opt stack 0
   118  000629  00                 	db	0
   119  00062A  80                 	db	128
   120  00062B  3F                 	db	63
   121  00062C  CD                 	db	205
   122  00062D  CC                 	db	204
   123  00062E  3D                 	db	61
   124  00062F  D7                 	db	215
   125  000630  23                 	db	35
   126  000631  3C                 	db	60
   127  000632  12                 	db	18
   128  000633  83                 	db	131
   129  000634  3A                 	db	58
   130  000635  B7                 	db	183
   131  000636  D1                 	db	209
   132  000637  38                 	db	56
   133  000638  C6                 	db	198
   134  000639  27                 	db	39
   135  00063A  37                 	db	55
   136  00063B  38                 	db	56
   137  00063C  86                 	db	134
   138  00063D  35                 	db	53
   139  00063E  C0                 	db	192
   140  00063F  D6                 	db	214
   141  000640  33                 	db	51
   142  000641  CC                 	db	204
   143  000642  2B                 	db	43
   144  000643  32                 	db	50
   145  000644  70                 	db	112
   146  000645  89                 	db	137
   147  000646  30                 	db	48
   148  000647  E7                 	db	231
   149  000648  DB                 	db	219
   150  000649  2E                 	db	46
   151  00064A  E5                 	db	229
   152  00064B  3C                 	db	60
   153  00064C  1E                 	db	30
   154  00064D  42                 	db	66
   155  00064E  A2                 	db	162
   156  00064F  0D                 	db	13
   157  000650                     __end_of__npowers_:
   158                           	opt stack 0
   159  000650                     __powers_:
   160                           	opt stack 0
   161  000650  00                 	db	0
   162  000651  80                 	db	128
   163  000652  3F                 	db	63
   164  000653  00                 	db	0
   165  000654  20                 	db	32
   166  000655  41                 	db	65
   167  000656  00                 	db	0
   168  000657  C8                 	db	200
   169  000658  42                 	db	66
   170  000659  00                 	db	0
   171  00065A  7A                 	db	122
   172  00065B  44                 	db	68
   173  00065C  40                 	db	64
   174  00065D  1C                 	db	28
   175  00065E  46                 	db	70
   176  00065F  50                 	db	80
   177  000660  C3                 	db	195
   178  000661  47                 	db	71
   179  000662  24                 	db	36
   180  000663  74                 	db	116
   181  000664  49                 	db	73
   182  000665  97                 	db	151
   183  000666  18                 	db	24
   184  000667  4B                 	db	75
   185  000668  BC                 	db	188
   186  000669  BE                 	db	190
   187  00066A  4C                 	db	76
   188  00066B  6B                 	db	107
   189  00066C  6E                 	db	110
   190  00066D  4E                 	db	78
   191  00066E  03                 	db	3
   192  00066F  15                 	db	21
   193  000670  50                 	db	80
   194  000671  79                 	db	121
   195  000672  AD                 	db	173
   196  000673  60                 	db	96
   197  000674  F3                 	db	243
   198  000675  49                 	db	73
   199  000676  71                 	db	113
   200  000677                     __end_of__powers_:
   201                           	opt stack 0
   202  000677                     _QEM:
   203                           	opt stack 0
   204  000677  0000               	dw	0
   205  000679  FFFF               	dw	65535
   206  00067B  0001               	dw	1
   207  00067D  0002               	dw	2
   208  00067F  0001               	dw	1
   209  000681  0000               	dw	0
   210  000683  0002               	dw	2
   211  000685  FFFF               	dw	65535
   212  000687  FFFF               	dw	65535
   213  000689  0002               	dw	2
   214  00068B  0000               	dw	0
   215  00068D  0001               	dw	1
   216  00068F  0002               	dw	2
   217  000691  0001               	dw	1
   218  000693  FFFF               	dw	65535
   219  000695  0000               	dw	0
   220  000697                     __end_of_QEM:
   221                           	opt stack 0
   222  000697                     _CountPerRev:
   223                           	opt stack 0
   224  000697  0400               	dw	1024
   225  000699                     __end_of_CountPerRev:
   226                           	opt stack 0
   227  000699                     _EncoderPoll:
   228                           	opt stack 0
   229  000699  0080               	dw	128
   230  00069B                     __end_of_EncoderPoll:
   231                           	opt stack 0
   232  0000                     _ADCON1	set	4033
   233  0000                     _CCP1CONbits	set	4029
   234  0000                     _CCPR1L	set	4030
   235  0000                     _INTCON2bits	set	4081
   236  0000                     _INTCONbits	set	4082
   237  0000                     _PORTA	set	3968
   238  0000                     _PORTAbits	set	3968
   239  0000                     _PORTBbits	set	3969
   240  0000                     _PORTD	set	3971
   241  0000                     _PORTEbits	set	3972
   242  0000                     _PR2	set	4043
   243  0000                     _RCONbits	set	4048
   244  0000                     _T0CONbits	set	4053
   245  0000                     _T2CONbits	set	4042
   246  0000                     _TMR0H	set	4055
   247  0000                     _TMR0L	set	4054
   248  0000                     _TRISA	set	3986
   249  0000                     _TRISBbits	set	3987
   250  0000                     _TRISCbits	set	3988
   251  0000                     _TRISD	set	3989
   252  0000                     _TRISE	set	3990
   253  0000                     _LATB4	set	31828
   254  00069B                     __stringdata:
   255                           	opt stack 0
   256  00069B                     STR_1:
   257  00069B  25                 	db	37
   258  00069C  2A                 	db	42
   259  00069D  2E                 	db	46
   260  00069E  2A                 	db	42
   261  00069F  67                 	db	103	;'g'
   262  0006A0  00                 	db	0
   263  0006A1                     __end_of__stringdata:
   264                           	opt stack 0
   265                           
   266                           ; #config settings
   267  0006A1  00                 	db	0	; dummy byte at the end
   268  0000                     
   269                           	psect	cinit
   270  003D9E                     __pcinit:
   271                           	opt stack 0
   272  003D9E                     start_initialization:
   273                           	opt stack 0
   274  003D9E                     __initialization:
   275                           	opt stack 0
   276                           
   277                           ; Clear objects allocated to BANK1 (3 bytes)
   278  003D9E  0101               	movlb	1
   279  003DA0  6B82               	clrf	(__pbssBANK1+2)& (0+255),b
   280  003DA2  6B81               	clrf	(__pbssBANK1+1)& (0+255),b
   281  003DA4  6B80               	clrf	__pbssBANK1& (0+255),b
   282                           
   283                           ; Clear objects allocated to COMRAM (13 bytes)
   284  003DA6  EE00  F04D         	lfsr	0,__pbssCOMRAM
   285  003DAA  0E0D               	movlw	13
   286  003DAC                     clear_0:
   287  003DAC  6AEE               	clrf	postinc0,c
   288  003DAE  06E8               	decf	wreg,f,c
   289  003DB0  E1FD               	bnz	clear_0
   290                           
   291                           ; Initialize objects allocated to BANK1 (18 bytes)
   292                           ; load TBLPTR registers with __pidataBANK1
   293  003DB2  0EA2               	movlw	low __pidataBANK1
   294  003DB4  6EF6               	movwf	tblptrl,c
   295  003DB6  0E01               	movlw	high __pidataBANK1
   296  003DB8  6EF7               	movwf	tblptrh,c
   297  003DBA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   298  003DBC  6EF8               	movwf	tblptru,c
   299  003DBE  EE01  F06E         	lfsr	0,__pdataBANK1
   300  003DC2  EE10 F012          	lfsr	1,18
   301  003DC6                     copy_data0:
   302  003DC6  0009               	tblrd		*+
   303  003DC8  CFF5 FFEE          	movff	tablat,postinc0
   304  003DCC  50E5               	movf	postdec1,w,c
   305  003DCE  50E1               	movf	fsr1l,w,c
   306  003DD0  E1FA               	bnz	copy_data0
   307  003DD2                     end_of_initialization:
   308                           	opt stack 0
   309  003DD2                     __end_of__initialization:
   310                           	opt stack 0
   311  003DD2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   312  003DD4  6EF8               	movwf	tblptru,c
   313  003DD6  0100               	movlb	0
   314  003DD8  EFCF  F017         	goto	_main	;jump to C main() function
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           postdec1	equ	0xFE5
   322                           fsr1l	equ	0xFE1
   323                           
   324                           	psect	bssCOMRAM
   325  00004D                     __pbssCOMRAM:
   326                           	opt stack 0
   327  00004D                     _PartialRot:
   328                           	opt stack 0
   329  00004D                     	ds	3
   330  000050                     _CCWTurn:
   331                           	opt stack 0
   332  000050                     	ds	2
   333  000052                     _CHA:
   334                           	opt stack 0
   335  000052                     	ds	2
   336  000054                     _CHB:
   337                           	opt stack 0
   338  000054                     	ds	2
   339  000056                     _CWTurn:
   340                           	opt stack 0
   341  000056                     	ds	2
   342  000058                     _OLD_ROT:
   343                           	opt stack 0
   344  000058                     	ds	2
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	bssBANK1
   355  000180                     __pbssBANK1:
   356                           	opt stack 0
   357  000180                     _RPS:
   358                           	opt stack 0
   359  000180                     	ds	3
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec1	equ	0xFE5
   367                           fsr1l	equ	0xFE1
   368                           
   369                           	psect	dataBANK1
   370  00016E                     __pdataBANK1:
   371                           	opt stack 0
   372  00016E                     main@F3981:
   373                           	opt stack 0
   374  00016E                     	ds	7
   375  000175                     main@F3983:
   376                           	opt stack 0
   377  000175                     	ds	6
   378  00017B                     main@F3985:
   379                           	opt stack 0
   380  00017B                     	ds	5
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	cstackBANK1
   391  000100                     __pcstackBANK1:
   392                           	opt stack 0
   393  000100                     ?___ftsub:
   394                           	opt stack 0
   395  000100                     ___ftge@ff1:
   396                           	opt stack 0
   397  000100                     ___ftsub@f1:
   398                           	opt stack 0
   399                           
   400                           ; 3 bytes @ 0x0
   401  000100                     	ds	3
   402  000103                     ___ftge@ff2:
   403                           	opt stack 0
   404  000103                     ___ftsub@f2:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0x3
   408  000103                     	ds	3
   409  000106                     ??___ftge:
   410                           
   411                           ; 0 bytes @ 0x6
   412  000106                     	ds	3
   413  000109                     ?_sprintf:
   414                           	opt stack 0
   415  000109                     sprintf@sp:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x9
   419  000109                     	ds	2
   420  00010B                     sprintf@f:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0xB
   424  00010B                     	ds	9
   425  000114                     ??_sprintf:
   426                           
   427                           ; 0 bytes @ 0x14
   428  000114                     	ds	6
   429  00011A                     _sprintf$1748:
   430                           	opt stack 0
   431                           
   432                           ; 3 bytes @ 0x1A
   433  00011A                     	ds	3
   434  00011D                     _sprintf$1138:
   435                           	opt stack 0
   436                           
   437                           ; 4 bytes @ 0x1D
   438  00011D                     	ds	4
   439  000121                     sprintf@vd:
   440                           	opt stack 0
   441                           
   442                           ; 4 bytes @ 0x21
   443  000121                     	ds	4
   444  000125                     sprintf@vd_1140:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0x25
   448  000125                     	ds	4
   449  000129                     sprintf@temp:
   450                           	opt stack 0
   451                           
   452                           ; 3 bytes @ 0x29
   453  000129                     	ds	3
   454  00012C                     sprintf@ap:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x2C
   458  00012C                     	ds	2
   459  00012E                     sprintf@ccnt:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x2E
   463  00012E                     	ds	2
   464  000130                     sprintf@integ:
   465                           	opt stack 0
   466                           
   467                           ; 3 bytes @ 0x30
   468  000130                     	ds	3
   469  000133                     sprintf@width:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x33
   473  000133                     	ds	2
   474  000135                     sprintf@flag:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x35
   478  000135                     	ds	2
   479  000137                     sprintf@_val:
   480                           	opt stack 0
   481                           
   482                           ; 5 bytes @ 0x37
   483  000137                     	ds	5
   484  00013C                     sprintf@exp:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x3C
   488  00013C                     	ds	2
   489  00013E                     sprintf@fval:
   490                           	opt stack 0
   491                           
   492                           ; 3 bytes @ 0x3E
   493  00013E                     	ds	3
   494  000141                     sprintf@prec:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x41
   498  000141                     	ds	2
   499  000143                     sprintf@c:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x43
   503  000143                     	ds	1
   504  000144                     WriteLCD@LCDstart:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x44
   508  000144                     	ds	2
   509  000146                     WriteLCD@len:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x46
   513  000146                     	ds	2
   514  000148                     WriteLCD@var:
   515                           	opt stack 0
   516                           
   517                           ; 3 bytes @ 0x48
   518  000148                     	ds	3
   519  00014B                     WriteLCD@Msg:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x4B
   523  00014B                     	ds	2
   524  00014D                     WriteLCD@msgptr:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x4D
   528  00014D                     	ds	2
   529  00014F                     WriteLCD@width:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x4F
   533  00014F                     	ds	2
   534  000151                     ??_main:
   535                           
   536                           ; 0 bytes @ 0x51
   537  000151                     	ds	1
   538  000152                     main@LCDinit:
   539                           	opt stack 0
   540                           
   541                           ; 7 bytes @ 0x52
   542  000152                     	ds	7
   543  000159                     main@Msg1:
   544                           	opt stack 0
   545                           
   546                           ; 6 bytes @ 0x59
   547  000159                     	ds	6
   548  00015F                     main@Msg2:
   549                           	opt stack 0
   550                           
   551                           ; 5 bytes @ 0x5F
   552  00015F                     	ds	5
   553  000164                     main@Msg3:
   554                           	opt stack 0
   555                           
   556                           ; 10 bytes @ 0x64
   557  000164                     	ds	10
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           postdec1	equ	0xFE5
   565                           fsr1l	equ	0xFE1
   566                           
   567                           	psect	cstackBANK0
   568  000080                     __pcstackBANK0:
   569                           	opt stack 0
   570  000080                     ??_TimerStopped:
   571                           
   572                           ; 0 bytes @ 0x0
   573  000080                     	ds	17
   574  000091                     ??_high_isr:
   575                           
   576                           ; 0 bytes @ 0x11
   577  000091                     	ds	14
   578  00009F                     ??_isdigit:
   579  00009F                     ?___awmod:
   580                           	opt stack 0
   581  00009F                     ?___ftpack:
   582                           	opt stack 0
   583  00009F                     ?__tdiv_to_l_:
   584                           	opt stack 0
   585  00009F                     ?__div_to_l_:
   586                           	opt stack 0
   587  00009F                     ?___fttol:
   588                           	opt stack 0
   589  00009F                     ?___lldiv:
   590                           	opt stack 0
   591  00009F                     ?___llmod:
   592                           	opt stack 0
   593  00009F                     Delay100TCYx@unit:
   594                           	opt stack 0
   595  00009F                     Delay10TCYx@unit:
   596                           	opt stack 0
   597  00009F                     Delay1KTCYx@unit:
   598                           	opt stack 0
   599  00009F                     WriteTimer0@timer0:
   600                           	opt stack 0
   601  00009F                     ___awmod@dividend:
   602                           	opt stack 0
   603  00009F                     __div_to_l_@f1:
   604                           	opt stack 0
   605  00009F                     ___ftpack@arg:
   606                           	opt stack 0
   607  00009F                     __tdiv_to_l_@f1:
   608                           	opt stack 0
   609  00009F                     ___fttol@f1:
   610                           	opt stack 0
   611  00009F                     ___lldiv@dividend:
   612                           	opt stack 0
   613  00009F                     ___llmod@dividend:
   614                           	opt stack 0
   615                           
   616                           ; 4 bytes @ 0x1F
   617  00009F                     	ds	1
   618  0000A0                     _isdigit$1512:
   619                           	opt stack 0
   620  0000A0                     WaitHalfSec@Halfcount:
   621                           	opt stack 0
   622  0000A0                     DisplayLCD@tempPtr:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x20
   626  0000A0                     	ds	1
   627  0000A1                     isdigit@c:
   628                           	opt stack 0
   629  0000A1                     WriteTimer0@timer:
   630                           	opt stack 0
   631  0000A1                     ___awmod@divisor:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x21
   635  0000A1                     	ds	1
   636  0000A2                     ___ftpack@exp:
   637                           	opt stack 0
   638  0000A2                     DisplayLCD@init:
   639                           	opt stack 0
   640  0000A2                     __div_to_l_@f2:
   641                           	opt stack 0
   642  0000A2                     __tdiv_to_l_@f2:
   643                           	opt stack 0
   644                           
   645                           ; 3 bytes @ 0x22
   646  0000A2                     	ds	1
   647  0000A3                     ??___fttol:
   648  0000A3                     ___awmod@counter:
   649                           	opt stack 0
   650  0000A3                     ___ftpack@sign:
   651                           	opt stack 0
   652  0000A3                     ___lldiv@divisor:
   653                           	opt stack 0
   654  0000A3                     ___llmod@divisor:
   655                           	opt stack 0
   656                           
   657                           ; 4 bytes @ 0x23
   658  0000A3                     	ds	1
   659  0000A4                     ??___ftpack:
   660  0000A4                     DisplayLCD@currentChar:
   661                           	opt stack 0
   662  0000A4                     ___awmod@sign:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x24
   666  0000A4                     	ds	1
   667  0000A5                     ??__tdiv_to_l_:
   668  0000A5                     ??__div_to_l_:
   669  0000A5                     ?___awdiv:
   670                           	opt stack 0
   671  0000A5                     ___awdiv@dividend:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x25
   675  0000A5                     	ds	2
   676  0000A7                     ___llmod@counter:
   677                           	opt stack 0
   678  0000A7                     ___awdiv@divisor:
   679                           	opt stack 0
   680  0000A7                     ___lldiv@quotient:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x27
   684  0000A7                     	ds	1
   685  0000A8                     ___fttol@sign1:
   686                           	opt stack 0
   687  0000A8                     __tdiv_to_l_@quot:
   688                           	opt stack 0
   689                           
   690                           ; 4 bytes @ 0x28
   691  0000A8                     	ds	1
   692  0000A9                     ___awdiv@counter:
   693                           	opt stack 0
   694  0000A9                     __div_to_l_@quot:
   695                           	opt stack 0
   696  0000A9                     ___fttol@lval:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x29
   700  0000A9                     	ds	1
   701  0000AA                     ___awdiv@sign:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x2A
   705  0000AA                     	ds	1
   706  0000AB                     ___lldiv@counter:
   707                           	opt stack 0
   708  0000AB                     ___awdiv@quotient:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x2B
   712  0000AB                     	ds	1
   713  0000AC                     __tdiv_to_l_@cntr:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x2C
   717  0000AC                     	ds	1
   718  0000AD                     ?___wmul:
   719                           	opt stack 0
   720  0000AD                     __div_to_l_@cntr:
   721                           	opt stack 0
   722  0000AD                     __tdiv_to_l_@exp1:
   723                           	opt stack 0
   724  0000AD                     ___fttol@exp1:
   725                           	opt stack 0
   726  0000AD                     ___wmul@multiplier:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x2D
   730  0000AD                     	ds	1
   731  0000AE                     ?___lltoft:
   732                           	opt stack 0
   733  0000AE                     __div_to_l_@exp1:
   734                           	opt stack 0
   735  0000AE                     ___lltoft@c:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x2E
   739  0000AE                     	ds	1
   740  0000AF                     ___wmul@multiplicand:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x2F
   744  0000AF                     	ds	2
   745  0000B1                     ___wmul@product:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x31
   749  0000B1                     	ds	1
   750  0000B2                     ??___lltoft:
   751                           
   752                           ; 0 bytes @ 0x32
   753  0000B2                     	ds	4
   754  0000B6                     ___lltoft@exp:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x36
   758  0000B6                     	ds	1
   759  0000B7                     ?___ftneg:
   760                           	opt stack 0
   761  0000B7                     ___ftneg@f1:
   762                           	opt stack 0
   763                           
   764                           ; 3 bytes @ 0x37
   765  0000B7                     	ds	3
   766  0000BA                     ?___ftmul:
   767                           	opt stack 0
   768  0000BA                     ___ftmul@f1:
   769                           	opt stack 0
   770                           
   771                           ; 3 bytes @ 0x3A
   772  0000BA                     	ds	3
   773  0000BD                     ___ftmul@f2:
   774                           	opt stack 0
   775                           
   776                           ; 3 bytes @ 0x3D
   777  0000BD                     	ds	3
   778  0000C0                     ??___ftmul:
   779                           
   780                           ; 0 bytes @ 0x40
   781  0000C0                     	ds	3
   782  0000C3                     ___ftmul@exp:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x43
   786  0000C3                     	ds	1
   787  0000C4                     ___ftmul@f3_as_product:
   788                           	opt stack 0
   789                           
   790                           ; 3 bytes @ 0x44
   791  0000C4                     	ds	3
   792  0000C7                     ___ftmul@cntr:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x47
   796  0000C7                     	ds	1
   797  0000C8                     ___ftmul@sign:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x48
   801  0000C8                     	ds	1
   802  0000C9                     ?_fround:
   803                           	opt stack 0
   804  0000C9                     ?_scale:
   805                           	opt stack 0
   806                           
   807                           ; 3 bytes @ 0x49
   808  0000C9                     	ds	3
   809  0000CC                     _fround$1746:
   810                           	opt stack 0
   811  0000CC                     _scale$1747:
   812                           	opt stack 0
   813                           
   814                           ; 3 bytes @ 0x4C
   815  0000CC                     	ds	3
   816  0000CF                     scale@scl:
   817                           	opt stack 0
   818  0000CF                     _fround$1745:
   819                           	opt stack 0
   820                           
   821                           ; 3 bytes @ 0x4F
   822  0000CF                     	ds	1
   823  0000D0                     ?___ftdiv:
   824                           	opt stack 0
   825  0000D0                     ___ftdiv@f1:
   826                           	opt stack 0
   827                           
   828                           ; 3 bytes @ 0x50
   829  0000D0                     	ds	2
   830  0000D2                     fround@prec:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x52
   834  0000D2                     	ds	1
   835  0000D3                     ?___ftadd:
   836                           	opt stack 0
   837  0000D3                     ___ftadd@f1:
   838                           	opt stack 0
   839  0000D3                     ___ftdiv@f2:
   840                           	opt stack 0
   841                           
   842                           ; 3 bytes @ 0x53
   843  0000D3                     	ds	3
   844  0000D6                     ??___ftdiv:
   845  0000D6                     ___ftadd@f2:
   846                           	opt stack 0
   847                           
   848                           ; 3 bytes @ 0x56
   849  0000D6                     	ds	3
   850  0000D9                     ??___ftadd:
   851  0000D9                     ___ftdiv@cntr:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x59
   855  0000D9                     	ds	1
   856  0000DA                     ___ftdiv@f3:
   857                           	opt stack 0
   858                           
   859                           ; 3 bytes @ 0x5A
   860  0000DA                     	ds	2
   861  0000DC                     ___ftadd@sign:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x5C
   865  0000DC                     	ds	1
   866  0000DD                     ___ftadd@exp2:
   867                           	opt stack 0
   868  0000DD                     ___ftdiv@exp:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x5D
   872  0000DD                     	ds	1
   873  0000DE                     ___ftadd@exp1:
   874                           	opt stack 0
   875  0000DE                     ___ftdiv@sign:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x5E
   879  0000DE                     	ds	1
   880  0000DF                     ??_WriteLCD:
   881  0000DF                     
   882                           ; 0 bytes @ 0x5F
   883  0000DF                     	ds	2
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           postdec1	equ	0xFE5
   891                           fsr1l	equ	0xFE1
   892                           
   893                           	psect	cstackCOMRAM
   894  000001                     __pcstackCOMRAM:
   895                           	opt stack 0
   896  000001                     ?i1___ftpack:
   897                           	opt stack 0
   898  000001                     ?i1___ftneg:
   899                           	opt stack 0
   900  000001                     i1WriteTimer0@timer0:
   901                           	opt stack 0
   902  000001                     i1___ftpack@arg:
   903                           	opt stack 0
   904  000001                     i1___ftneg@f1:
   905                           	opt stack 0
   906                           
   907                           ; 3 bytes @ 0x0
   908  000001                     	ds	2
   909  000003                     i1WriteTimer0@timer:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x2
   913  000003                     	ds	1
   914  000004                     ?_fabs:
   915                           	opt stack 0
   916  000004                     i1___ftpack@exp:
   917                           	opt stack 0
   918  000004                     fabs@d:
   919                           	opt stack 0
   920                           
   921                           ; 3 bytes @ 0x3
   922  000004                     	ds	1
   923  000005                     i1___ftpack@sign:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x4
   927  000005                     	ds	1
   928  000006                     ??i1___ftpack:
   929                           
   930                           ; 0 bytes @ 0x5
   931  000006                     	ds	1
   932  000007                     
   933                           ; 0 bytes @ 0x6
   934  000007                     	ds	2
   935  000009                     ?___awtoft:
   936                           	opt stack 0
   937  000009                     ___awtoft@c:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x8
   941  000009                     	ds	3
   942  00000C                     ___awtoft@sign:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0xB
   946  00000C                     	ds	1
   947  00000D                     ?i1___ftdiv:
   948                           	opt stack 0
   949  00000D                     i1___ftdiv@f1:
   950                           	opt stack 0
   951                           
   952                           ; 3 bytes @ 0xC
   953  00000D                     	ds	3
   954  000010                     i1___ftdiv@f2:
   955                           	opt stack 0
   956                           
   957                           ; 3 bytes @ 0xF
   958  000010                     	ds	3
   959  000013                     ??i1___ftdiv:
   960                           
   961                           ; 0 bytes @ 0x12
   962  000013                     	ds	3
   963  000016                     i1___ftdiv@cntr:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x15
   967  000016                     	ds	1
   968  000017                     i1___ftdiv@f3:
   969                           	opt stack 0
   970                           
   971                           ; 3 bytes @ 0x16
   972  000017                     	ds	3
   973  00001A                     i1___ftdiv@exp:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x19
   977  00001A                     	ds	1
   978  00001B                     i1___ftdiv@sign:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x1A
   982  00001B                     	ds	1
   983  00001C                     ?i1___ftadd:
   984                           	opt stack 0
   985  00001C                     i1___ftadd@f1:
   986                           	opt stack 0
   987                           
   988                           ; 3 bytes @ 0x1B
   989  00001C                     	ds	3
   990  00001F                     i1___ftadd@f2:
   991                           	opt stack 0
   992                           
   993                           ; 3 bytes @ 0x1E
   994  00001F                     	ds	3
   995  000022                     ??i1___ftadd:
   996                           
   997                           ; 0 bytes @ 0x21
   998  000022                     	ds	3
   999  000025                     i1___ftadd@sign:
  1000                           	opt stack 0
  1001                           
  1002                           ; 1 bytes @ 0x24
  1003  000025                     	ds	1
  1004  000026                     i1___ftadd@exp2:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x25
  1008  000026                     	ds	1
  1009  000027                     i1___ftadd@exp1:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x26
  1013  000027                     	ds	1
  1014  000028                     ?i1___ftsub:
  1015                           	opt stack 0
  1016  000028                     i1___ftsub@f1:
  1017                           	opt stack 0
  1018                           
  1019                           ; 3 bytes @ 0x27
  1020  000028                     	ds	3
  1021  00002B                     i1___ftsub@f2:
  1022                           	opt stack 0
  1023                           
  1024                           ; 3 bytes @ 0x2A
  1025  00002B                     	ds	3
  1026  00002E                     ??_ReadEncoder:
  1027  00002E                     
  1028                           ; 0 bytes @ 0x2D
  1029  00002E                     	ds	4
  1030  000032                     ReadEncoder@Old:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x31
  1034  000032                     	ds	2
  1035  000034                     ReadEncoder@New:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x33
  1039  000034                     	ds	2
  1040  000036                     ReadEncoder@Anew:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x35
  1044  000036                     	ds	2
  1045  000038                     ReadEncoder@Bnew:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x37
  1049  000038                     	ds	2
  1050  00003A                     ReadEncoder@NEW_ROT:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x39
  1054  00003A                     	ds	2
  1055  00003C                     ??_low_isr:
  1056                           
  1057                           ; 0 bytes @ 0x3B
  1058  00003C                     	ds	17
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec1	equ	0xFE5
  1066                           fsr1l	equ	0xFE1
  1067                           
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 49 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  Msg3           10  100[BANK1 ] unsigned char [10]
  1078 ;;  LCDinit         7   82[BANK1 ] unsigned char [7]
  1079 ;;  Msg1            6   89[BANK1 ] unsigned char [6]
  1080 ;;  Msg2            5   95[BANK1 ] unsigned char [5]
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  2   50[COMRAM] int 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1090 ;;      Params:         0       0       0       0       0       0       0
  1091 ;;      Locals:         0       0      28       0       0       0       0
  1092 ;;      Temps:          0       0       1       0       0       0       0
  1093 ;;      Totals:         0       0      29       0       0       0       0
  1094 ;;Total ram usage:       29 bytes
  1095 ;; Hardware stack levels required when called:   11
  1096 ;; This function calls:
  1097 ;;		_CloseTimer0
  1098 ;;		_DisplayLCD
  1099 ;;		_InitApp
  1100 ;;		_InitInterrupts
  1101 ;;		_WaitHalfSec
  1102 ;;		_WriteLCD
  1103 ;;		_WriteTimer0
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text0
  1110  002F9E                     __ptext0:
  1111                           	opt stack 0
  1112  002F9E                     _main:
  1113                           	opt stack 19
  1114                           
  1115                           ;incstack = 0
  1116  002F9E  FFFF               	dw	65535
  1117                           
  1118                           ;main.c: 53: char LCDinit[] = {0x33,0x32,0x28,0x01,0x0c,0x06,0x00};
  1119  002FA0  EE21  F06E         	lfsr	2,main@F3981
  1120  002FA4  EE11  F052         	lfsr	1,main@LCDinit
  1121  002FA8  0E07               	movlw	7
  1122  002FAA                     u4511:
  1123  002FAA  CFDE FFE6          	movff	postinc2,postinc1
  1124  002FAE  2EE8               	decfsz	wreg,f,c
  1125  002FB0  D7FC               	goto	u4511
  1126                           
  1127                           ;main.c: 54: char Msg1[] = {0x84,'C','U','N','T','\0'};
  1128  002FB2  EE21  F075         	lfsr	2,main@F3983
  1129  002FB6  EE11  F059         	lfsr	1,main@Msg1
  1130  002FBA  0E06               	movlw	6
  1131  002FBC                     u4521:
  1132  002FBC  CFDE FFE6          	movff	postinc2,postinc1
  1133  002FC0  2EE8               	decfsz	wreg,f,c
  1134  002FC2  D7FC               	goto	u4521
  1135                           
  1136                           ;main.c: 55: char Msg2[] = {0xC5,'R','P','S','\0'};
  1137  002FC4  EE21  F07B         	lfsr	2,main@F3985
  1138  002FC8  EE11  F05F         	lfsr	1,main@Msg2
  1139  002FCC  0E05               	movlw	5
  1140  002FCE                     u4531:
  1141  002FCE  CFDE FFE6          	movff	postinc2,postinc1
  1142  002FD2  2EE8               	decfsz	wreg,f,c
  1143  002FD4  D7FC               	goto	u4531
  1144                           
  1145                           ;main.c: 56: char Msg3[10];
  1146                           ;main.c: 57: InitApp();
  1147  002FD6  ECEE  F01E         	call	_InitApp	;wreg free
  1148                           
  1149                           ;main.c: 58: DisplayLCD(LCDinit,1);
  1150  002FDA  0101               	movlb	1	; () banked
  1151  002FDC  0E01               	movlw	high main@LCDinit
  1152  002FDE  0100               	movlb	0	; () banked
  1153  002FE0  6FA1               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
  1154  002FE2  0101               	movlb	1	; () banked
  1155  002FE4  0E52               	movlw	low main@LCDinit
  1156  002FE6  0100               	movlb	0	; () banked
  1157  002FE8  6FA0               	movwf	DisplayLCD@tempPtr& (0+255),b
  1158  002FEA  0E00               	movlw	0
  1159  002FEC  0100               	movlb	0	; () banked
  1160  002FEE  6FA3               	movwf	(DisplayLCD@init+1)& (0+255),b
  1161  002FF0  0E01               	movlw	1
  1162  002FF2  0100               	movlb	0	; () banked
  1163  002FF4  6FA2               	movwf	DisplayLCD@init& (0+255),b
  1164  002FF6  EC9A  F01D         	call	_DisplayLCD	;wreg free
  1165                           
  1166                           ;main.c: 59: DisplayLCD(Msg1,0);
  1167  002FFA  0101               	movlb	1	; () banked
  1168  002FFC  0E01               	movlw	high main@Msg1
  1169  002FFE  0100               	movlb	0	; () banked
  1170  003000  6FA1               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
  1171  003002  0101               	movlb	1	; () banked
  1172  003004  0E59               	movlw	low main@Msg1
  1173  003006  0100               	movlb	0	; () banked
  1174  003008  6FA0               	movwf	DisplayLCD@tempPtr& (0+255),b
  1175  00300A  0E00               	movlw	0
  1176  00300C  0100               	movlb	0	; () banked
  1177  00300E  6FA3               	movwf	(DisplayLCD@init+1)& (0+255),b
  1178  003010  0E00               	movlw	0
  1179  003012  0100               	movlb	0	; () banked
  1180  003014  6FA2               	movwf	DisplayLCD@init& (0+255),b
  1181  003016  EC9A  F01D         	call	_DisplayLCD	;wreg free
  1182                           
  1183                           ;main.c: 60: DisplayLCD(Msg2,0);
  1184  00301A  0101               	movlb	1	; () banked
  1185  00301C  0E01               	movlw	high main@Msg2
  1186  00301E  0100               	movlb	0	; () banked
  1187  003020  6FA1               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
  1188  003022  0101               	movlb	1	; () banked
  1189  003024  0E5F               	movlw	low main@Msg2
  1190  003026  0100               	movlb	0	; () banked
  1191  003028  6FA0               	movwf	DisplayLCD@tempPtr& (0+255),b
  1192  00302A  0E00               	movlw	0
  1193  00302C  0100               	movlb	0	; () banked
  1194  00302E  6FA3               	movwf	(DisplayLCD@init+1)& (0+255),b
  1195  003030  0E00               	movlw	0
  1196  003032  0100               	movlb	0	; () banked
  1197  003034  6FA2               	movwf	DisplayLCD@init& (0+255),b
  1198  003036  EC9A  F01D         	call	_DisplayLCD	;wreg free
  1199                           
  1200                           ;main.c: 61: CHA = PORTBbits.RB5;
  1201  00303A  AA81               	btfss	3969,5,c	;volatile
  1202  00303C  D004               	goto	u4540
  1203  00303E  0101               	movlb	1	; () banked
  1204  003040  6B51               	clrf	??_main& (0+255),b
  1205  003042  2B51               	incf	??_main& (0+255),f,b
  1206  003044  D002               	goto	u4548
  1207  003046                     u4540:
  1208  003046  0101               	movlb	1	; () banked
  1209  003048  6B51               	clrf	??_main& (0+255),b
  1210  00304A                     u4548:
  1211  00304A  0101               	movlb	1	; () banked
  1212  00304C  5151               	movf	??_main& (0+255),w,b
  1213  00304E  6E52               	movwf	_CHA,c
  1214  003050  6A53               	clrf	_CHA+1,c
  1215                           
  1216                           ; BSR set to: 1
  1217                           ;main.c: 62: CHB = PORTBbits.RB4;
  1218  003052  A881               	btfss	3969,4,c	;volatile
  1219  003054  D004               	goto	u4550
  1220  003056  0101               	movlb	1	; () banked
  1221  003058  6B51               	clrf	??_main& (0+255),b
  1222  00305A  2B51               	incf	??_main& (0+255),f,b
  1223  00305C  D002               	goto	u4558
  1224  00305E                     u4550:
  1225  00305E  0101               	movlb	1	; () banked
  1226  003060  6B51               	clrf	??_main& (0+255),b
  1227  003062                     u4558:
  1228  003062  0101               	movlb	1	; () banked
  1229  003064  5151               	movf	??_main& (0+255),w,b
  1230  003066  6E54               	movwf	_CHB,c
  1231  003068  6A55               	clrf	_CHB+1,c
  1232                           
  1233                           ; BSR set to: 1
  1234                           ;main.c: 63: OLD_ROT = 0;
  1235  00306A  0E00               	movlw	0
  1236  00306C  6E59               	movwf	_OLD_ROT+1,c
  1237  00306E  0E00               	movlw	0
  1238  003070  6E58               	movwf	_OLD_ROT,c
  1239                           
  1240                           ; BSR set to: 1
  1241                           ;main.c: 64: CCWTurn = 0;
  1242  003072  0E00               	movlw	0
  1243  003074  6E51               	movwf	_CCWTurn+1,c
  1244  003076  0E00               	movlw	0
  1245  003078  6E50               	movwf	_CCWTurn,c
  1246                           
  1247                           ; BSR set to: 1
  1248                           ;main.c: 65: CWTurn = 0;
  1249  00307A  0E00               	movlw	0
  1250  00307C  6E57               	movwf	_CWTurn+1,c
  1251  00307E  0E00               	movlw	0
  1252  003080  6E56               	movwf	_CWTurn,c
  1253                           
  1254                           ; BSR set to: 1
  1255                           ;main.c: 66: RPS = 0.0;
  1256  003082  0E00               	movlw	0
  1257  003084  0101               	movlb	1	; () banked
  1258  003086  6F80               	movwf	_RPS& (0+255),b
  1259  003088  0E00               	movlw	0
  1260  00308A  0101               	movlb	1	; () banked
  1261  00308C  6F81               	movwf	(_RPS+1)& (0+255),b
  1262  00308E  0E00               	movlw	0
  1263  003090  0101               	movlb	1	; () banked
  1264  003092  6F82               	movwf	(_RPS+2)& (0+255),b
  1265                           
  1266                           ; BSR set to: 1
  1267                           ;main.c: 68: PR2 = 0x9B;
  1268  003094  0E9B               	movlw	155
  1269  003096  6ECB               	movwf	4043,c	;volatile
  1270                           
  1271                           ; BSR set to: 1
  1272                           ;main.c: 69: CCP1CONbits.DC1B1 = 0;
  1273  003098  9ABD               	bcf	4029,5,c	;volatile
  1274                           
  1275                           ; BSR set to: 1
  1276                           ;main.c: 70: CCP1CONbits.DC1B0 = 0;
  1277  00309A  98BD               	bcf	4029,4,c	;volatile
  1278                           
  1279                           ; BSR set to: 1
  1280                           ;main.c: 71: CCPR1L = 0b00000100;
  1281  00309C  0E04               	movlw	4
  1282  00309E  6EBE               	movwf	4030,c	;volatile
  1283                           
  1284                           ; BSR set to: 1
  1285                           ;main.c: 73: WriteTimer0(0x0000);
  1286  0030A0  0E00               	movlw	0
  1287  0030A2  0100               	movlb	0	; () banked
  1288  0030A4  6FA0               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  1289  0030A6  0E00               	movlw	0
  1290  0030A8  0100               	movlb	0	; () banked
  1291  0030AA  6F9F               	movwf	WriteTimer0@timer0& (0+255),b
  1292  0030AC  ECCF  F01F         	call	_WriteTimer0	;wreg free
  1293                           
  1294                           ;main.c: 75: InitInterrupts();
  1295  0030B0  EC96  F01F         	call	_InitInterrupts	;wreg free
  1296  0030B4                     l3933:
  1297                           
  1298                           ;main.c: 81: {
  1299                           ;main.c: 82: WaitHalfSec();
  1300  0030B4  EC29  F01F         	call	_WaitHalfSec	;wreg free
  1301                           
  1302                           ;main.c: 83: WriteLCD(0xC0,5,RPS,Msg3);
  1303  0030B8  0E00               	movlw	0
  1304  0030BA  0101               	movlb	1	; () banked
  1305  0030BC  6F45               	movwf	(WriteLCD@LCDstart+1)& (0+255),b
  1306  0030BE  0EC0               	movlw	192
  1307  0030C0  0101               	movlb	1	; () banked
  1308  0030C2  6F44               	movwf	WriteLCD@LCDstart& (0+255),b
  1309  0030C4  0E00               	movlw	0
  1310  0030C6  0101               	movlb	1	; () banked
  1311  0030C8  6F47               	movwf	(WriteLCD@len+1)& (0+255),b
  1312  0030CA  0E05               	movlw	5
  1313  0030CC  0101               	movlb	1	; () banked
  1314  0030CE  6F46               	movwf	WriteLCD@len& (0+255),b
  1315  0030D0  C180  F148         	movff	_RPS,WriteLCD@var
  1316  0030D4  C181  F149         	movff	_RPS+1,WriteLCD@var+1
  1317  0030D8  C182  F14A         	movff	_RPS+2,WriteLCD@var+2
  1318  0030DC  0101               	movlb	1	; () banked
  1319  0030DE  0E01               	movlw	high main@Msg3
  1320  0030E0  0101               	movlb	1	; () banked
  1321  0030E2  6F4C               	movwf	(WriteLCD@Msg+1)& (0+255),b
  1322  0030E4  0101               	movlb	1	; () banked
  1323  0030E6  0E64               	movlw	low main@Msg3
  1324  0030E8  0101               	movlb	1	; () banked
  1325  0030EA  6F4B               	movwf	WriteLCD@Msg& (0+255),b
  1326  0030EC  ECC5  F019         	call	_WriteLCD	;wreg free
  1327  0030F0  D7E1               	goto	l3933
  1328  0030F2                     __end_of_main:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           postinc1	equ	0xFE6
  1337                           postdec1	equ	0xFE5
  1338                           fsr1l	equ	0xFE1
  1339                           postinc2	equ	0xFDE
  1340                           
  1341 ;; *************** function _WriteTimer0 *****************
  1342 ;; Defined at:
  1343 ;;		line 16 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0write.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  timer0          2   31[BANK0 ] unsigned int 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  timer           2   33[BANK0 ] struct Timers
  1348 ;; Return value:  Size  Location     Type
  1349 ;;		None               void
  1350 ;; Registers used:
  1351 ;;		None
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1357 ;;      Params:         0       2       0       0       0       0       0
  1358 ;;      Locals:         0       2       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0
  1360 ;;      Totals:         0       4       0       0       0       0       0
  1361 ;;Total ram usage:        4 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    6
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text1
  1372  003F9E                     __ptext1:
  1373                           	opt stack 0
  1374  003F9E                     _WriteTimer0:
  1375                           	opt stack 23
  1376                           
  1377                           ;incstack = 0
  1378  003F9E  FFFF               	dw	65535
  1379  003FA0  C09F  F0A1         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1380  003FA4  C0A0  F0A2         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1381  003FA8  C0A2  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1382  003FAC  C0A1  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1383  003FB0  0012               	return	
  1384  003FB2  FFFF               	dw	65535	; errata NOP
  1385  003FB4                     __end_of_WriteTimer0:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           postinc0	equ	0xFEE
  1392                           wreg	equ	0xFE8
  1393                           postinc1	equ	0xFE6
  1394                           postdec1	equ	0xFE5
  1395                           fsr1l	equ	0xFE1
  1396                           postinc2	equ	0xFDE
  1397                           
  1398 ;; *************** function _WriteLCD *****************
  1399 ;; Defined at:
  1400 ;;		line 269 in file "user.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  LCDstart        2   68[BANK1 ] int 
  1403 ;;  len             2   70[BANK1 ] int 
  1404 ;;  var             3   72[BANK1 ] int 
  1405 ;;  Msg             2   75[BANK1 ] PTR unsigned char 
  1406 ;;		 -> main@Msg3(10), 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  width           2   79[BANK1 ] int 
  1409 ;;  msgptr          2   77[BANK1 ] PTR unsigned char 
  1410 ;;		 -> main@Msg3(10), 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;		None               void
  1413 ;; Registers used:
  1414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1420 ;;      Params:         0       0       9       0       0       0       0
  1421 ;;      Locals:         0       0       4       0       0       0       0
  1422 ;;      Temps:          0       2       0       0       0       0       0
  1423 ;;      Totals:         0       2      13       0       0       0       0
  1424 ;;Total ram usage:       15 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:   10
  1427 ;; This function calls:
  1428 ;;		_DisplayLCD
  1429 ;;		_sprintf
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text2
  1436  00338A                     __ptext2:
  1437                           	opt stack 0
  1438  00338A                     _WriteLCD:
  1439                           	opt stack 19
  1440                           
  1441                           ;incstack = 0
  1442  00338A  FFFF               	dw	65535
  1443                           
  1444                           ;user.c: 271: char *msgptr = Msg;
  1445  00338C  0101               	movlb	1	; () banked
  1446  00338E  C14C  F14E         	movff	WriteLCD@Msg+1,WriteLCD@msgptr+1
  1447  003392  0101               	movlb	1	; () banked
  1448  003394  C14B  F14D         	movff	WriteLCD@Msg,WriteLCD@msgptr
  1449                           
  1450                           ; BSR set to: 1
  1451                           ;user.c: 272: int width = sprintf(msgptr+1,"%*.*g",len,len-1,var);
  1452  003398  0E01               	movlw	1
  1453  00339A  0101               	movlb	1	; () banked
  1454  00339C  254D               	addwf	WriteLCD@msgptr& (0+255),w,b
  1455  00339E  0101               	movlb	1	; () banked
  1456  0033A0  6F09               	movwf	sprintf@sp& (0+255),b
  1457  0033A2  0E00               	movlw	0
  1458  0033A4  0101               	movlb	1	; () banked
  1459  0033A6  214E               	addwfc	(WriteLCD@msgptr+1)& (0+255),w,b
  1460  0033A8  0101               	movlb	1	; () banked
  1461  0033AA  6F0A               	movwf	(sprintf@sp+1)& (0+255),b
  1462  0033AC  0E06               	movlw	high STR_1
  1463  0033AE  0101               	movlb	1	; () banked
  1464  0033B0  6F0C               	movwf	(sprintf@f+1)& (0+255),b
  1465  0033B2  0E9B               	movlw	low STR_1
  1466  0033B4  0101               	movlb	1	; () banked
  1467  0033B6  6F0B               	movwf	sprintf@f& (0+255),b
  1468  0033B8  C146  F10D         	movff	WriteLCD@len,?_sprintf+4
  1469  0033BC  C147  F10E         	movff	WriteLCD@len+1,?_sprintf+5
  1470  0033C0  0EFF               	movlw	255
  1471  0033C2  0101               	movlb	1	; () banked
  1472  0033C4  2546               	addwf	WriteLCD@len& (0+255),w,b
  1473  0033C6  0101               	movlb	1	; () banked
  1474  0033C8  6F0F               	movwf	(?_sprintf+6)& (0+255),b
  1475  0033CA  0EFF               	movlw	255
  1476  0033CC  0101               	movlb	1	; () banked
  1477  0033CE  2147               	addwfc	(WriteLCD@len+1)& (0+255),w,b
  1478  0033D0  0101               	movlb	1	; () banked
  1479  0033D2  6F10               	movwf	(?_sprintf+7)& (0+255),b
  1480  0033D4  C148  F111         	movff	WriteLCD@var,?_sprintf+8
  1481  0033D8  C149  F112         	movff	WriteLCD@var+1,?_sprintf+9
  1482  0033DC  C14A  F113         	movff	WriteLCD@var+2,?_sprintf+10
  1483  0033E0  EC51  F003         	call	_sprintf	;wreg free
  1484  0033E4  0101               	movlb	1	; () banked
  1485  0033E6  C109  F14F         	movff	?_sprintf,WriteLCD@width
  1486  0033EA  0101               	movlb	1	; () banked
  1487  0033EC  C10A  F150         	movff	?_sprintf+1,WriteLCD@width+1
  1488                           
  1489                           ; BSR set to: 1
  1490                           ;user.c: 274: Msg[0] = LCDstart;
  1491  0033F0  C14B  FFD9         	movff	WriteLCD@Msg,fsr2l
  1492  0033F4  C14C  FFDA         	movff	WriteLCD@Msg+1,fsr2h
  1493  0033F8  0101               	movlb	1	; () banked
  1494  0033FA  C144  FFDF         	movff	WriteLCD@LCDstart,indf2
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;user.c: 275: if (width > len)
  1498  0033FE  0101               	movlb	1	; () banked
  1499  003400  5147               	movf	(WriteLCD@len+1)& (0+255),w,b
  1500  003402  0A80               	xorlw	128
  1501  003404  0100               	movlb	0	; () banked
  1502  003406  6FDF               	movwf	??_WriteLCD& (0+255),b
  1503  003408  0101               	movlb	1	; () banked
  1504  00340A  514F               	movf	WriteLCD@width& (0+255),w,b
  1505  00340C  0101               	movlb	1	; () banked
  1506  00340E  5D46               	subwf	WriteLCD@len& (0+255),w,b
  1507  003410  0101               	movlb	1	; () banked
  1508  003412  5150               	movf	(WriteLCD@width+1)& (0+255),w,b
  1509  003414  0A80               	xorlw	128
  1510  003416  0100               	movlb	0	; () banked
  1511  003418  59DF               	subwfb	??_WriteLCD& (0+255),w,b
  1512  00341A  B0D8               	btfsc	status,0,c
  1513  00341C  D02C               	goto	l3849
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;user.c: 276: {
  1517                           ;user.c: 277: Msg[len+1] = '!';
  1518  00341E  0E01               	movlw	1
  1519  003420  0101               	movlb	1	; () banked
  1520  003422  2546               	addwf	WriteLCD@len& (0+255),w,b
  1521  003424  0100               	movlb	0	; () banked
  1522  003426  6FDF               	movwf	??_WriteLCD& (0+255),b
  1523  003428  0E00               	movlw	0
  1524  00342A  0101               	movlb	1	; () banked
  1525  00342C  2147               	addwfc	(WriteLCD@len+1)& (0+255),w,b
  1526  00342E  0100               	movlb	0	; () banked
  1527  003430  6FE0               	movwf	(??_WriteLCD+1)& (0+255),b
  1528  003432  0100               	movlb	0	; () banked
  1529  003434  51DF               	movf	??_WriteLCD& (0+255),w,b
  1530  003436  0101               	movlb	1	; () banked
  1531  003438  254B               	addwf	WriteLCD@Msg& (0+255),w,b
  1532  00343A  6ED9               	movwf	fsr2l,c
  1533  00343C  0100               	movlb	0	; () banked
  1534  00343E  51E0               	movf	(??_WriteLCD+1)& (0+255),w,b
  1535  003440  0101               	movlb	1	; () banked
  1536  003442  214C               	addwfc	(WriteLCD@Msg+1)& (0+255),w,b
  1537  003444  6EDA               	movwf	fsr2h,c
  1538  003446  0E21               	movlw	33
  1539  003448  6EDF               	movwf	indf2,c
  1540                           
  1541                           ;user.c: 278: Msg[len+2] = '\0';
  1542  00344A  0E02               	movlw	2
  1543  00344C  0101               	movlb	1	; () banked
  1544  00344E  2546               	addwf	WriteLCD@len& (0+255),w,b
  1545  003450  0100               	movlb	0	; () banked
  1546  003452  6FDF               	movwf	??_WriteLCD& (0+255),b
  1547  003454  0E00               	movlw	0
  1548  003456  0101               	movlb	1	; () banked
  1549  003458  2147               	addwfc	(WriteLCD@len+1)& (0+255),w,b
  1550  00345A  0100               	movlb	0	; () banked
  1551  00345C  6FE0               	movwf	(??_WriteLCD+1)& (0+255),b
  1552  00345E  0100               	movlb	0	; () banked
  1553  003460  51DF               	movf	??_WriteLCD& (0+255),w,b
  1554  003462  0101               	movlb	1	; () banked
  1555  003464  254B               	addwf	WriteLCD@Msg& (0+255),w,b
  1556  003466  6ED9               	movwf	fsr2l,c
  1557  003468  0100               	movlb	0	; () banked
  1558  00346A  51E0               	movf	(??_WriteLCD+1)& (0+255),w,b
  1559  00346C  0101               	movlb	1	; () banked
  1560  00346E  214C               	addwfc	(WriteLCD@Msg+1)& (0+255),w,b
  1561  003470  6EDA               	movwf	fsr2h,c
  1562  003472  0E00               	movlw	0
  1563  003474  6EDF               	movwf	indf2,c
  1564  003476                     l3849:
  1565                           
  1566                           ;user.c: 279: }
  1567                           ;user.c: 280: DisplayLCD(Msg,0);
  1568  003476  0101               	movlb	1	; () banked
  1569  003478  0100               	movlb	0	; () banked
  1570  00347A  C14C  F0A1         	movff	WriteLCD@Msg+1,DisplayLCD@tempPtr+1
  1571  00347E  0101               	movlb	1	; () banked
  1572  003480  0100               	movlb	0	; () banked
  1573  003482  C14B  F0A0         	movff	WriteLCD@Msg,DisplayLCD@tempPtr
  1574  003486  0E00               	movlw	0
  1575  003488  0100               	movlb	0	; () banked
  1576  00348A  6FA3               	movwf	(DisplayLCD@init+1)& (0+255),b
  1577  00348C  0E00               	movlw	0
  1578  00348E  0100               	movlb	0	; () banked
  1579  003490  6FA2               	movwf	DisplayLCD@init& (0+255),b
  1580  003492  EC9A  F01D         	call	_DisplayLCD	;wreg free
  1581  003496  0012               	return	
  1582  003498  FFFF               	dw	65535	; errata NOP
  1583  00349A                     __end_of_WriteLCD:
  1584                           	opt stack 0
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           postinc1	equ	0xFE6
  1592                           postdec1	equ	0xFE5
  1593                           fsr1l	equ	0xFE1
  1594                           indf2	equ	0xFDF
  1595                           postinc2	equ	0xFDE
  1596                           fsr2h	equ	0xFDA
  1597                           fsr2l	equ	0xFD9
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _sprintf *****************
  1601 ;; Defined at:
  1602 ;;		line 492 in file "/Applications/microchip/xc8/v1.33/sources/common/doprnt.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  sp              2    9[BANK1 ] PTR unsigned char 
  1605 ;;		 -> main@Msg3(10), 
  1606 ;;  f               2   11[BANK1 ] PTR const unsigned char 
  1607 ;;		 -> STR_1(6), 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  vd              4   33[BANK1 ] unsigned long 
  1610 ;;  temp            3   41[BANK1 ] unsigned long 
  1611 ;;  vd              4   37[BANK1 ] unsigned long 
  1612 ;;  _val            5   55[BANK1 ] struct .
  1613 ;;  fval            3   62[BANK1 ] struct .
  1614 ;;  integ           3   48[BANK1 ] struct .
  1615 ;;  ival            3    0        struct .
  1616 ;;  prec            2   65[BANK1 ] int 
  1617 ;;  exp             2   60[BANK1 ] int 
  1618 ;;  flag            2   53[BANK1 ] unsigned short 
  1619 ;;  width           2   51[BANK1 ] int 
  1620 ;;  ccnt            2   46[BANK1 ] int 
  1621 ;;  ap              2   44[BANK1 ] PTR void [1]
  1622 ;;		 -> ?_sprintf(2), 
  1623 ;;  c               1   67[BANK1 ] char 
  1624 ;;  d               1    0        unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  2    9[BANK1 ] int 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1634 ;;      Params:         0       0      11       0       0       0       0
  1635 ;;      Locals:         0       0      42       0       0       0       0
  1636 ;;      Temps:          0       0       6       0       0       0       0
  1637 ;;      Totals:         0       0      59       0       0       0       0
  1638 ;;Total ram usage:       59 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    9
  1641 ;; This function calls:
  1642 ;;		___awdiv
  1643 ;;		___awmod
  1644 ;;		___ftadd
  1645 ;;		___ftdiv
  1646 ;;		___ftge
  1647 ;;		___ftmul
  1648 ;;		___ftneg
  1649 ;;		___ftsub
  1650 ;;		___fttol
  1651 ;;		___lldiv
  1652 ;;		___llmod
  1653 ;;		___lltoft
  1654 ;;		___wmul
  1655 ;;		__div_to_l_
  1656 ;;		__tdiv_to_l_
  1657 ;;		_fround
  1658 ;;		_isdigit
  1659 ;;		_scale
  1660 ;; This function is called by:
  1661 ;;		_WriteLCD
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text3
  1666  0006A2                     __ptext3:
  1667                           	opt stack 0
  1668  0006A2                     _sprintf:
  1669                           	opt stack 19
  1670                           
  1671                           ;incstack = 0
  1672  0006A2  FFFF               	dw	65535
  1673                           
  1674                           ;doprnt.c: 494: va_list ap;
  1675                           ;doprnt.c: 499: signed char c;
  1676                           ;doprnt.c: 501: int width;
  1677                           ;doprnt.c: 504: int prec;
  1678                           ;doprnt.c: 508: unsigned short flag;
  1679                           ;doprnt.c: 510: int ccnt = 0;
  1680  0006A4  0E00               	movlw	0
  1681  0006A6  0101               	movlb	1	; () banked
  1682  0006A8  6F2F               	movwf	(sprintf@ccnt+1)& (0+255),b
  1683  0006AA  0E00               	movlw	0
  1684  0006AC  0101               	movlb	1	; () banked
  1685  0006AE  6F2E               	movwf	sprintf@ccnt& (0+255),b
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;doprnt.c: 515: char d;
  1689                           ;doprnt.c: 516: double fval, integ;
  1690                           ;doprnt.c: 517: int exp;
  1691                           ;doprnt.c: 518: double ival;
  1692                           ;doprnt.c: 519: union {
  1693                           ;doprnt.c: 520: unsigned long _val;
  1694                           ;doprnt.c: 521: struct {
  1695                           ;doprnt.c: 522: const char * _cp;
  1696                           ;doprnt.c: 523: unsigned _len;
  1697                           ;doprnt.c: 524: } _str;
  1698                           ;doprnt.c: 525: } _val;
  1699                           ;doprnt.c: 542: *ap = __va_start();
  1700  0006B0  0101               	movlb	1	; () banked
  1701  0006B2  0E01               	movlw	high (?_sprintf+4)
  1702  0006B4  0101               	movlb	1	; () banked
  1703  0006B6  6F2D               	movwf	(sprintf@ap+1)& (0+255),b
  1704  0006B8  0101               	movlb	1	; () banked
  1705  0006BA  0E0D               	movlw	low (?_sprintf+4)
  1706  0006BC  0101               	movlb	1	; () banked
  1707  0006BE  6F2C               	movwf	sprintf@ap& (0+255),b
  1708                           
  1709                           ;doprnt.c: 545: while(c = *f++) {
  1710  0006C0  EF9B  F00D         	goto	l3729
  1711  0006C4                     l3259:
  1712                           
  1713                           ; BSR set to: 1
  1714                           ;doprnt.c: 547: if(c != '%')
  1715  0006C4  0101               	movlb	1	; () banked
  1716  0006C6  5143               	movf	sprintf@c& (0+255),w,b
  1717  0006C8  0A25               	xorlw	37
  1718  0006CA  B4D8               	btfsc	status,2,c
  1719  0006CC  D009               	goto	l3267
  1720                           
  1721                           ; BSR set to: 1
  1722                           ;doprnt.c: 549: {
  1723                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
  1724  0006CE  C109  FFD9         	movff	sprintf@sp,fsr2l
  1725  0006D2  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  1726  0006D6  0101               	movlb	1	; () banked
  1727  0006D8  C143  FFDF         	movff	sprintf@c,indf2
  1728  0006DC  EF95  F00D         	goto	L10
  1729  0006E0                     l3267:
  1730                           
  1731                           ; BSR set to: 1
  1732                           ;doprnt.c: 552: }
  1733                           ;doprnt.c: 555: width = 0;
  1734  0006E0  0E00               	movlw	0
  1735  0006E2  0101               	movlb	1	; () banked
  1736  0006E4  6F34               	movwf	(sprintf@width+1)& (0+255),b
  1737  0006E6  0E00               	movlw	0
  1738  0006E8  0101               	movlb	1	; () banked
  1739  0006EA  6F33               	movwf	sprintf@width& (0+255),b
  1740                           
  1741                           ;doprnt.c: 557: flag = 0;
  1742  0006EC  0E00               	movlw	0
  1743  0006EE  0101               	movlb	1	; () banked
  1744  0006F0  6F36               	movwf	(sprintf@flag+1)& (0+255),b
  1745  0006F2  0E00               	movlw	0
  1746  0006F4  0101               	movlb	1	; () banked
  1747  0006F6  6F35               	movwf	sprintf@flag& (0+255),b
  1748                           
  1749                           ; BSR set to: 1
  1750                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1751  0006F8  0101               	movlb	1	; () banked
  1752  0006FA  C10B  FFF6         	movff	sprintf@f,tblptrl
  1753  0006FE  0101               	movlb	1	; () banked
  1754  000700  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  1755  000704                     	if	0	;tblptru may be non-zero
  1756  000704                     	endif
  1757  000704                     	if	0	;tblptru may be non-zero
  1758  000704                     	endif
  1759  000704  0008               	tblrd		*
  1760  000706  FFFF               	dw	65535	; errata NOP
  1761  000708  50F5               	movf	tablat,w,c
  1762  00070A  EC7E  F01F         	call	_isdigit
  1763  00070E  A0D8               	btfss	status,0,c
  1764  000710  D04A               	goto	l3281
  1765                           
  1766                           ;doprnt.c: 607: width = 0;
  1767  000712  0E00               	movlw	0
  1768  000714  0101               	movlb	1	; () banked
  1769  000716  6F34               	movwf	(sprintf@width+1)& (0+255),b
  1770  000718  0E00               	movlw	0
  1771  00071A  0101               	movlb	1	; () banked
  1772  00071C  6F33               	movwf	sprintf@width& (0+255),b
  1773  00071E                     l3273:
  1774                           
  1775                           ;doprnt.c: 609: width *= 10;
  1776  00071E  C133  F0AD         	movff	sprintf@width,___wmul@multiplier
  1777  000722  C134  F0AE         	movff	sprintf@width+1,___wmul@multiplier+1
  1778  000726  0E00               	movlw	0
  1779  000728  0100               	movlb	0	; () banked
  1780  00072A  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1781  00072C  0E0A               	movlw	10
  1782  00072E  0100               	movlb	0	; () banked
  1783  000730  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  1784  000732  EC0C  F01F         	call	___wmul	;wreg free
  1785  000736  0100               	movlb	0	; () banked
  1786  000738  C0AD  F133         	movff	?___wmul,sprintf@width
  1787  00073C  0100               	movlb	0	; () banked
  1788  00073E  C0AE  F134         	movff	?___wmul+1,sprintf@width+1
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;doprnt.c: 610: width += *f++ - '0';
  1792  000742  0ED0               	movlw	208
  1793  000744  0101               	movlb	1	; () banked
  1794  000746  6F14               	movwf	??_sprintf& (0+255),b
  1795  000748  0EFF               	movlw	255
  1796  00074A  6F15               	movwf	(??_sprintf+1)& (0+255),b
  1797  00074C  0101               	movlb	1	; () banked
  1798  00074E  C10B  FFF6         	movff	sprintf@f,tblptrl
  1799  000752  0101               	movlb	1	; () banked
  1800  000754  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  1801  000758                     	if	0	;tblptru may be non-zero
  1802  000758                     	endif
  1803  000758                     	if	0	;tblptru may be non-zero
  1804  000758                     	endif
  1805  000758  0008               	tblrd		*
  1806  00075A  FFFF               	dw	65535	; errata NOP
  1807  00075C  50F5               	movf	tablat,w,c
  1808  00075E  0101               	movlb	1	; () banked
  1809  000760  6F16               	movwf	(??_sprintf+2)& (0+255),b
  1810  000762  6B17               	clrf	(??_sprintf+3)& (0+255),b
  1811  000764  0101               	movlb	1	; () banked
  1812  000766  5114               	movf	??_sprintf& (0+255),w,b
  1813  000768  0101               	movlb	1	; () banked
  1814  00076A  2716               	addwf	(??_sprintf+2)& (0+255),f,b
  1815  00076C  0101               	movlb	1	; () banked
  1816  00076E  5115               	movf	(??_sprintf+1)& (0+255),w,b
  1817  000770  0101               	movlb	1	; () banked
  1818  000772  2317               	addwfc	(??_sprintf+3)& (0+255),f,b
  1819  000774  0101               	movlb	1	; () banked
  1820  000776  5116               	movf	(??_sprintf+2)& (0+255),w,b
  1821  000778  0101               	movlb	1	; () banked
  1822  00077A  2733               	addwf	sprintf@width& (0+255),f,b
  1823  00077C  0101               	movlb	1	; () banked
  1824  00077E  5117               	movf	(??_sprintf+3)& (0+255),w,b
  1825  000780  0101               	movlb	1	; () banked
  1826  000782  2334               	addwfc	(sprintf@width+1)& (0+255),f,b
  1827                           
  1828                           ; BSR set to: 1
  1829  000784  0101               	movlb	1	; () banked
  1830  000786  4B0B               	infsnz	sprintf@f& (0+255),f,b
  1831  000788  2B0C               	incf	(sprintf@f+1)& (0+255),f,b
  1832                           
  1833                           ; BSR set to: 1
  1834                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1835  00078A  0101               	movlb	1	; () banked
  1836  00078C  C10B  FFF6         	movff	sprintf@f,tblptrl
  1837  000790  0101               	movlb	1	; () banked
  1838  000792  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  1839  000796                     	if	0	;tblptru may be non-zero
  1840  000796                     	endif
  1841  000796                     	if	0	;tblptru may be non-zero
  1842  000796                     	endif
  1843  000796  0008               	tblrd		*
  1844  000798  FFFF               	dw	65535	; errata NOP
  1845  00079A  50F5               	movf	tablat,w,c
  1846  00079C  EC7E  F01F         	call	_isdigit
  1847  0007A0  A0D8               	btfss	status,0,c
  1848  0007A2  D020               	goto	l3289
  1849  0007A4  D7BC               	goto	l3273
  1850  0007A6                     l3281:
  1851  0007A6  0101               	movlb	1	; () banked
  1852  0007A8  C10B  FFF6         	movff	sprintf@f,tblptrl
  1853  0007AC  0101               	movlb	1	; () banked
  1854  0007AE  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  1855  0007B2                     	if	0	;tblptru may be non-zero
  1856  0007B2                     	endif
  1857  0007B2                     	if	0	;tblptru may be non-zero
  1858  0007B2                     	endif
  1859  0007B2  0008               	tblrd		*
  1860  0007B4  FFFF               	dw	65535	; errata NOP
  1861  0007B6  50F5               	movf	tablat,w,c
  1862  0007B8  0A2A               	xorlw	42
  1863  0007BA  A4D8               	btfss	status,2,c
  1864  0007BC  D013               	goto	l3289
  1865                           
  1866                           ; BSR set to: 1
  1867                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
  1868  0007BE  C12C  FFD9         	movff	sprintf@ap,fsr2l
  1869  0007C2  C12D  FFDA         	movff	sprintf@ap+1,fsr2h
  1870  0007C6  0101               	movlb	1	; () banked
  1871  0007C8  CFDE F133          	movff	postinc2,sprintf@width
  1872  0007CC  0101               	movlb	1	; () banked
  1873  0007CE  CFDD F134          	movff	postdec2,sprintf@width+1
  1874                           
  1875                           ; BSR set to: 1
  1876  0007D2  0E02               	movlw	2
  1877  0007D4  0101               	movlb	1	; () banked
  1878  0007D6  272C               	addwf	sprintf@ap& (0+255),f,b
  1879  0007D8  0E00               	movlw	0
  1880  0007DA  0101               	movlb	1	; () banked
  1881  0007DC  232D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;doprnt.c: 615: f++;
  1885  0007DE  0101               	movlb	1	; () banked
  1886  0007E0  4B0B               	infsnz	sprintf@f& (0+255),f,b
  1887  0007E2  2B0C               	incf	(sprintf@f+1)& (0+255),f,b
  1888  0007E4                     l3289:
  1889                           
  1890                           ;doprnt.c: 617: }
  1891                           ;doprnt.c: 620: if(*f == '.') {
  1892  0007E4  0101               	movlb	1	; () banked
  1893  0007E6  C10B  FFF6         	movff	sprintf@f,tblptrl
  1894  0007EA  0101               	movlb	1	; () banked
  1895  0007EC  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  1896  0007F0                     	if	0	;tblptru may be non-zero
  1897  0007F0                     	endif
  1898  0007F0                     	if	0	;tblptru may be non-zero
  1899  0007F0                     	endif
  1900  0007F0  0008               	tblrd		*
  1901  0007F2  FFFF               	dw	65535	; errata NOP
  1902  0007F4  50F5               	movf	tablat,w,c
  1903  0007F6  0A2E               	xorlw	46
  1904  0007F8  A4D8               	btfss	status,2,c
  1905  0007FA  D061               	goto	l3309
  1906                           
  1907                           ; BSR set to: 1
  1908                           ;doprnt.c: 621: flag |= 0x4000;
  1909  0007FC  0101               	movlb	1	; () banked
  1910  0007FE  8D36               	bsf	(sprintf@flag+1)& (0+255),6,b
  1911                           
  1912                           ;doprnt.c: 622: f++;
  1913  000800  0101               	movlb	1	; () banked
  1914  000802  4B0B               	infsnz	sprintf@f& (0+255),f,b
  1915  000804  2B0C               	incf	(sprintf@f+1)& (0+255),f,b
  1916                           
  1917                           ; BSR set to: 1
  1918                           ;doprnt.c: 624: if(*f == '*') {
  1919  000806  0101               	movlb	1	; () banked
  1920  000808  C10B  FFF6         	movff	sprintf@f,tblptrl
  1921  00080C  0101               	movlb	1	; () banked
  1922  00080E  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  1923  000812                     	if	0	;tblptru may be non-zero
  1924  000812                     	endif
  1925  000812                     	if	0	;tblptru may be non-zero
  1926  000812                     	endif
  1927  000812  0008               	tblrd		*
  1928  000814  FFFF               	dw	65535	; errata NOP
  1929  000816  50F5               	movf	tablat,w,c
  1930  000818  0A2A               	xorlw	42
  1931  00081A  A4D8               	btfss	status,2,c
  1932  00081C  D014               	goto	l3301
  1933                           
  1934                           ; BSR set to: 1
  1935                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
  1936  00081E  C12C  FFD9         	movff	sprintf@ap,fsr2l
  1937  000822  C12D  FFDA         	movff	sprintf@ap+1,fsr2h
  1938  000826  0101               	movlb	1	; () banked
  1939  000828  CFDE F141          	movff	postinc2,sprintf@prec
  1940  00082C  0101               	movlb	1	; () banked
  1941  00082E  CFDD F142          	movff	postdec2,sprintf@prec+1
  1942                           
  1943                           ; BSR set to: 1
  1944  000832  0E02               	movlw	2
  1945  000834  0101               	movlb	1	; () banked
  1946  000836  272C               	addwf	sprintf@ap& (0+255),f,b
  1947  000838  0E00               	movlw	0
  1948  00083A  0101               	movlb	1	; () banked
  1949  00083C  232D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;doprnt.c: 626: f++;
  1953  00083E  0101               	movlb	1	; () banked
  1954  000840  4B0B               	infsnz	sprintf@f& (0+255),f,b
  1955  000842  2B0C               	incf	(sprintf@f+1)& (0+255),f,b
  1956                           
  1957                           ;doprnt.c: 627: } else
  1958  000844  D048               	goto	l3317
  1959  000846                     l3301:
  1960                           
  1961                           ; BSR set to: 1
  1962                           ;doprnt.c: 629: {
  1963                           ;doprnt.c: 630: prec = 0;
  1964  000846  0E00               	movlw	0
  1965  000848  0101               	movlb	1	; () banked
  1966  00084A  6F42               	movwf	(sprintf@prec+1)& (0+255),b
  1967  00084C  0E00               	movlw	0
  1968  00084E  0101               	movlb	1	; () banked
  1969  000850  6F41               	movwf	sprintf@prec& (0+255),b
  1970                           
  1971                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1972  000852  D027               	goto	l3307
  1973  000854                     l3303:
  1974                           
  1975                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1976  000854  C141  F0AD         	movff	sprintf@prec,___wmul@multiplier
  1977  000858  C142  F0AE         	movff	sprintf@prec+1,___wmul@multiplier+1
  1978  00085C  0E00               	movlw	0
  1979  00085E  0100               	movlb	0	; () banked
  1980  000860  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1981  000862  0E0A               	movlw	10
  1982  000864  0100               	movlb	0	; () banked
  1983  000866  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  1984  000868  EC0C  F01F         	call	___wmul	;wreg free
  1985  00086C  0101               	movlb	1	; () banked
  1986  00086E  C10B  FFF6         	movff	sprintf@f,tblptrl
  1987  000872  0101               	movlb	1	; () banked
  1988  000874  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  1989  000878                     	if	0	;tblptru may be non-zero
  1990  000878                     	endif
  1991  000878                     	if	0	;tblptru may be non-zero
  1992  000878                     	endif
  1993  000878  0008               	tblrd		*
  1994  00087A  FFFF               	dw	65535	; errata NOP
  1995  00087C  50F5               	movf	tablat,w,c
  1996  00087E  0100               	movlb	0	; () banked
  1997  000880  27AD               	addwf	?___wmul& (0+255),f,b
  1998  000882  0E00               	movlw	0
  1999  000884  0100               	movlb	0	; () banked
  2000  000886  23AE               	addwfc	(?___wmul+1)& (0+255),f,b
  2001  000888  0ED0               	movlw	208
  2002  00088A  0100               	movlb	0	; () banked
  2003  00088C  25AD               	addwf	?___wmul& (0+255),w,b
  2004  00088E  0101               	movlb	1	; () banked
  2005  000890  6F41               	movwf	sprintf@prec& (0+255),b
  2006  000892  0EFF               	movlw	255
  2007  000894  0100               	movlb	0	; () banked
  2008  000896  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  2009  000898  0101               	movlb	1	; () banked
  2010  00089A  6F42               	movwf	(sprintf@prec+1)& (0+255),b
  2011                           
  2012                           ; BSR set to: 1
  2013  00089C  0101               	movlb	1	; () banked
  2014  00089E  4B0B               	infsnz	sprintf@f& (0+255),f,b
  2015  0008A0  2B0C               	incf	(sprintf@f+1)& (0+255),f,b
  2016  0008A2                     l3307:
  2017                           
  2018                           ; BSR set to: 1
  2019  0008A2  0101               	movlb	1	; () banked
  2020  0008A4  C10B  FFF6         	movff	sprintf@f,tblptrl
  2021  0008A8  0101               	movlb	1	; () banked
  2022  0008AA  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  2023  0008AE                     	if	0	;tblptru may be non-zero
  2024  0008AE                     	endif
  2025  0008AE                     	if	0	;tblptru may be non-zero
  2026  0008AE                     	endif
  2027  0008AE  0008               	tblrd		*
  2028  0008B0  FFFF               	dw	65535	; errata NOP
  2029  0008B2  50F5               	movf	tablat,w,c
  2030  0008B4  EC7E  F01F         	call	_isdigit
  2031  0008B8  A0D8               	btfss	status,0,c
  2032  0008BA  D00D               	goto	l3317
  2033  0008BC  D7CB               	goto	l3303
  2034  0008BE                     l3309:
  2035                           
  2036                           ;doprnt.c: 635: prec = 0;
  2037  0008BE  0E00               	movlw	0
  2038  0008C0  0101               	movlb	1	; () banked
  2039  0008C2  6F42               	movwf	(sprintf@prec+1)& (0+255),b
  2040  0008C4  0E00               	movlw	0
  2041  0008C6  0101               	movlb	1	; () banked
  2042  0008C8  6F41               	movwf	sprintf@prec& (0+255),b
  2043                           
  2044                           ; BSR set to: 1
  2045                           ;doprnt.c: 637: flag |= 0x1000;
  2046  0008CA  0101               	movlb	1	; () banked
  2047  0008CC  8936               	bsf	(sprintf@flag+1)& (0+255),4,b
  2048  0008CE  D003               	goto	l3317
  2049  0008D0                     l3313:
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;doprnt.c: 692: flag |= 0x200;
  2053  0008D0  0101               	movlb	1	; () banked
  2054  0008D2  8336               	bsf	(sprintf@flag+1)& (0+255),1,b
  2055                           
  2056                           ;doprnt.c: 693: break;
  2057  0008D4  D019               	goto	l3319
  2058  0008D6                     l3317:
  2059  0008D6  0101               	movlb	1	; () banked
  2060  0008D8  C10B  FFF6         	movff	sprintf@f,tblptrl
  2061  0008DC  0101               	movlb	1	; () banked
  2062  0008DE  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  2063  0008E2  0101               	movlb	1	; () banked
  2064  0008E4  4B0B               	infsnz	sprintf@f& (0+255),f,b
  2065  0008E6  2B0C               	incf	(sprintf@f+1)& (0+255),f,b
  2066  0008E8                     	if	0	;tblptru may be non-zero
  2067  0008E8                     	endif
  2068  0008E8                     	if	0	;tblptru may be non-zero
  2069  0008E8                     	endif
  2070  0008E8  0008               	tblrd		*
  2071  0008EA  FFFF               	dw	65535	; errata NOP
  2072  0008EC  0101               	movlb	1	; () banked
  2073  0008EE  CFF5 F143          	movff	tablat,sprintf@c
  2074  0008F2  0101               	movlb	1	; () banked
  2075  0008F4  5143               	movf	sprintf@c& (0+255),w,b
  2076                           
  2077                           ; Switch size 1, requested type "space"
  2078                           ; Number of cases is 2, Range of values is 0 to 103
  2079                           ; switch strategies available:
  2080                           ; Name         Instructions Cycles
  2081                           ; simple_byte            7     4 (average)
  2082                           ;	Chosen strategy is simple_byte
  2083  0008F6  0A00               	xorlw	0	; case 0
  2084  0008F8  B4D8               	btfsc	status,2,c
  2085  0008FA  EFAD  F00D         	goto	l3731
  2086  0008FE  0A67               	xorlw	103	; case 103
  2087  000900  B4D8               	btfsc	status,2,c
  2088  000902  D7E6               	goto	l3313
  2089  000904  EF9B  F00D         	goto	l3729
  2090  000908                     l3319:
  2091                           
  2092                           ; BSR set to: 1
  2093                           ;doprnt.c: 834: if(flag & (0x700)) {
  2094  000908  0E07               	movlw	7
  2095  00090A  0101               	movlb	1	; () banked
  2096  00090C  1536               	andwf	(sprintf@flag+1)& (0+255),w,b
  2097  00090E  B4D8               	btfsc	status,2,c
  2098  000910  EFCD  F00C         	goto	l3677
  2099                           
  2100                           ; BSR set to: 1
  2101                           ;doprnt.c: 836: if(flag & 0x1000)
  2102  000914  0101               	movlb	1	; () banked
  2103  000916  A936               	btfss	(sprintf@flag+1)& (0+255),4,b
  2104  000918  D006               	goto	l3325
  2105                           
  2106                           ; BSR set to: 1
  2107                           ;doprnt.c: 838: prec = 6;
  2108  00091A  0E00               	movlw	0
  2109  00091C  0101               	movlb	1	; () banked
  2110  00091E  6F42               	movwf	(sprintf@prec+1)& (0+255),b
  2111  000920  0E06               	movlw	6
  2112  000922  0101               	movlb	1	; () banked
  2113  000924  6F41               	movwf	sprintf@prec& (0+255),b
  2114  000926                     l3325:
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2118  000926  C12C  FFD9         	movff	sprintf@ap,fsr2l
  2119  00092A  C12D  FFDA         	movff	sprintf@ap+1,fsr2h
  2120  00092E  0101               	movlb	1	; () banked
  2121  000930  CFDE F13E          	movff	postinc2,sprintf@fval
  2122  000934  0101               	movlb	1	; () banked
  2123  000936  CFDE F13F          	movff	postinc2,sprintf@fval+1
  2124  00093A  0101               	movlb	1	; () banked
  2125  00093C  CFDD F140          	movff	postdec2,sprintf@fval+2
  2126                           
  2127                           ; BSR set to: 1
  2128  000940  0E03               	movlw	3
  2129  000942  0101               	movlb	1	; () banked
  2130  000944  272C               	addwf	sprintf@ap& (0+255),f,b
  2131  000946  0E00               	movlw	0
  2132  000948  0101               	movlb	1	; () banked
  2133  00094A  232D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2134                           
  2135                           ; BSR set to: 1
  2136                           ;doprnt.c: 840: if(fval < 0.0) {
  2137  00094C  0101               	movlb	1	; () banked
  2138  00094E  5140               	movf	(sprintf@fval+2)& (0+255),w,b
  2139  000950  0A80               	xorlw	128
  2140  000952  0F80               	addlw	128
  2141  000954  E107               	bnz	u3685
  2142  000956  0E00               	movlw	0
  2143  000958  0101               	movlb	1	; () banked
  2144  00095A  5D3F               	subwf	(sprintf@fval+1)& (0+255),w,b
  2145  00095C  E103               	bnz	u3685
  2146  00095E  0E00               	movlw	0
  2147  000960  0101               	movlb	1	; () banked
  2148  000962  5D3E               	subwf	sprintf@fval& (0+255),w,b
  2149  000964                     u3685:
  2150  000964  B0D8               	btfsc	status,0,c
  2151  000966  D011               	goto	l3335
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;doprnt.c: 841: fval = -fval;
  2155  000968  C13E  F0B7         	movff	sprintf@fval,___ftneg@f1
  2156  00096C  C13F  F0B8         	movff	sprintf@fval+1,___ftneg@f1+1
  2157  000970  C140  F0B9         	movff	sprintf@fval+2,___ftneg@f1+2
  2158  000974  EC63  F01F         	call	___ftneg	;wreg free
  2159  000978  C0B7  F13E         	movff	?___ftneg,sprintf@fval
  2160  00097C  C0B8  F13F         	movff	?___ftneg+1,sprintf@fval+1
  2161  000980  C0B9  F140         	movff	?___ftneg+2,sprintf@fval+2
  2162                           
  2163                           ;doprnt.c: 842: flag |= 0x03;
  2164  000984  0E03               	movlw	3
  2165  000986  0101               	movlb	1	; () banked
  2166  000988  1335               	iorwf	sprintf@flag& (0+255),f,b
  2167  00098A                     l3335:
  2168                           
  2169                           ; BSR set to: 1
  2170                           ;doprnt.c: 843: }
  2171                           ;doprnt.c: 844: exp = 0;
  2172  00098A  0E00               	movlw	0
  2173  00098C  0101               	movlb	1	; () banked
  2174  00098E  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  2175  000990  0E00               	movlw	0
  2176  000992  0101               	movlb	1	; () banked
  2177  000994  6F3C               	movwf	sprintf@exp& (0+255),b
  2178                           
  2179                           ; BSR set to: 1
  2180                           ;doprnt.c: 845: if( fval!=0) {
  2181  000996  0E7F               	movlw	127
  2182  000998  0101               	movlb	1	; () banked
  2183  00099A  1540               	andwf	(sprintf@fval+2)& (0+255),w,b
  2184  00099C  0101               	movlb	1	; () banked
  2185  00099E  113F               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2186  0009A0  0101               	movlb	1	; () banked
  2187  0009A2  113E               	iorwf	sprintf@fval& (0+255),w,b
  2188  0009A4  B4D8               	btfsc	status,2,c
  2189  0009A6  D0AA               	goto	l3363
  2190                           
  2191                           ; BSR set to: 1
  2192                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2193  0009A8  0E82               	movlw	130
  2194  0009AA  0101               	movlb	1	; () banked
  2195  0009AC  6F14               	movwf	??_sprintf& (0+255),b
  2196  0009AE  0EFF               	movlw	255
  2197  0009B0  6F15               	movwf	(??_sprintf+1)& (0+255),b
  2198  0009B2  0101               	movlb	1	; () banked
  2199  0009B4  C13E  F116         	movff	sprintf@fval,??_sprintf+2
  2200  0009B8  0101               	movlb	1	; () banked
  2201  0009BA  C13F  F117         	movff	sprintf@fval+1,??_sprintf+3
  2202  0009BE  0101               	movlb	1	; () banked
  2203  0009C0  C140  F118         	movff	sprintf@fval+2,??_sprintf+4
  2204  0009C4  0101               	movlb	1	; () banked
  2205  0009C6  C141  F119         	movff	sprintf@fval+3,??_sprintf+5
  2206  0009CA  0E10               	movlw	16
  2207  0009CC  D006               	goto	u3700
  2208  0009CE                     u3705:
  2209  0009CE  0101               	movlb	1	; () banked
  2210  0009D0  90D8               	bcf	status,0,c
  2211  0009D2  3319               	rrcf	(??_sprintf+5)& (0+255),f,b
  2212  0009D4  3318               	rrcf	(??_sprintf+4)& (0+255),f,b
  2213  0009D6  3317               	rrcf	(??_sprintf+3)& (0+255),f,b
  2214  0009D8  3316               	rrcf	(??_sprintf+2)& (0+255),f,b
  2215  0009DA                     u3700:
  2216  0009DA  2EE8               	decfsz	wreg,f,c
  2217  0009DC  D7F8               	goto	u3705
  2218  0009DE  0101               	movlb	1	; () banked
  2219  0009E0  5116               	movf	(??_sprintf+2)& (0+255),w,b
  2220  0009E2  0101               	movlb	1	; () banked
  2221  0009E4  2514               	addwf	??_sprintf& (0+255),w,b
  2222  0009E6  0101               	movlb	1	; () banked
  2223  0009E8  6F3C               	movwf	sprintf@exp& (0+255),b
  2224  0009EA  0E00               	movlw	0
  2225  0009EC  0101               	movlb	1	; () banked
  2226  0009EE  2115               	addwfc	(??_sprintf+1)& (0+255),w,b
  2227  0009F0  0101               	movlb	1	; () banked
  2228  0009F2  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  2229                           
  2230                           ; BSR set to: 1
  2231                           ;doprnt.c: 847: exp--;
  2232  0009F4  0101               	movlb	1	; () banked
  2233  0009F6  073C               	decf	sprintf@exp& (0+255),f,b
  2234  0009F8  A0D8               	btfss	status,0,c
  2235  0009FA  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;doprnt.c: 848: exp *= 3;
  2239  0009FC  C13C  F0AD         	movff	sprintf@exp,___wmul@multiplier
  2240  000A00  C13D  F0AE         	movff	sprintf@exp+1,___wmul@multiplier+1
  2241  000A04  0E00               	movlw	0
  2242  000A06  0100               	movlb	0	; () banked
  2243  000A08  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2244  000A0A  0E03               	movlw	3
  2245  000A0C  0100               	movlb	0	; () banked
  2246  000A0E  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  2247  000A10  EC0C  F01F         	call	___wmul	;wreg free
  2248  000A14  0100               	movlb	0	; () banked
  2249  000A16  C0AD  F13C         	movff	?___wmul,sprintf@exp
  2250  000A1A  0100               	movlb	0	; () banked
  2251  000A1C  C0AE  F13D         	movff	?___wmul+1,sprintf@exp+1
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;doprnt.c: 849: exp /= 10;
  2255  000A20  C13C  F0A5         	movff	sprintf@exp,___awdiv@dividend
  2256  000A24  C13D  F0A6         	movff	sprintf@exp+1,___awdiv@dividend+1
  2257  000A28  0E00               	movlw	0
  2258  000A2A  0100               	movlb	0	; () banked
  2259  000A2C  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  2260  000A2E  0E0A               	movlw	10
  2261  000A30  0100               	movlb	0	; () banked
  2262  000A32  6FA7               	movwf	___awdiv@divisor& (0+255),b
  2263  000A34  ECD4  F01A         	call	___awdiv	;wreg free
  2264  000A38  0100               	movlb	0	; () banked
  2265  000A3A  C0A5  F13C         	movff	?___awdiv,sprintf@exp
  2266  000A3E  0100               	movlb	0	; () banked
  2267  000A40  C0A6  F13D         	movff	?___awdiv+1,sprintf@exp+1
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;doprnt.c: 850: if(exp < 0)
  2271  000A44  0101               	movlb	1	; () banked
  2272  000A46  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  2273  000A48  0A80               	xorlw	128
  2274  000A4A  6EF3               	movwf	prodl,c
  2275  000A4C  0E80               	movlw	128
  2276  000A4E  5CF3               	subwf	prodl,w,c
  2277  000A50  0E00               	movlw	0
  2278  000A52  B4D8               	btfsc	status,2,c
  2279  000A54  5D3C               	subwf	sprintf@exp& (0+255),w,b
  2280  000A56  B0D8               	btfsc	status,0,c
  2281  000A58  D004               	goto	l3351
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;doprnt.c: 851: exp--;
  2285  000A5A  0101               	movlb	1	; () banked
  2286  000A5C  073C               	decf	sprintf@exp& (0+255),f,b
  2287  000A5E  A0D8               	btfss	status,0,c
  2288  000A60  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  2289  000A62                     l3351:
  2290                           
  2291                           ; BSR set to: 1
  2292                           ;doprnt.c: 855: integ = scale(-exp);
  2293  000A62  0101               	movlb	1	; () banked
  2294  000A64  513C               	movf	sprintf@exp& (0+255),w,b
  2295  000A66  0800               	sublw	0
  2296  000A68  ECB9  F00D         	call	_scale
  2297  000A6C  C0C9  F130         	movff	?_scale,sprintf@integ
  2298  000A70  C0CA  F131         	movff	?_scale+1,sprintf@integ+1
  2299  000A74  C0CB  F132         	movff	?_scale+2,sprintf@integ+2
  2300                           
  2301                           ;doprnt.c: 856: integ *= fval;
  2302  000A78  C130  F0BA         	movff	sprintf@integ,___ftmul@f1
  2303  000A7C  C131  F0BB         	movff	sprintf@integ+1,___ftmul@f1+1
  2304  000A80  C132  F0BC         	movff	sprintf@integ+2,___ftmul@f1+2
  2305  000A84  C13E  F0BD         	movff	sprintf@fval,___ftmul@f2
  2306  000A88  C13F  F0BE         	movff	sprintf@fval+1,___ftmul@f2+1
  2307  000A8C  C140  F0BF         	movff	sprintf@fval+2,___ftmul@f2+2
  2308  000A90  EC1B  F017         	call	___ftmul	;wreg free
  2309  000A94  C0BA  F130         	movff	?___ftmul,sprintf@integ
  2310  000A98  C0BB  F131         	movff	?___ftmul+1,sprintf@integ+1
  2311  000A9C  C0BC  F132         	movff	?___ftmul+2,sprintf@integ+2
  2312                           
  2313                           ;doprnt.c: 857: if(integ < 1.0)
  2314  000AA0  C130  F100         	movff	sprintf@integ,___ftge@ff1
  2315  000AA4  C131  F101         	movff	sprintf@integ+1,___ftge@ff1+1
  2316  000AA8  C132  F102         	movff	sprintf@integ+2,___ftge@ff1+2
  2317  000AAC  0E00               	movlw	0
  2318  000AAE  0101               	movlb	1	; () banked
  2319  000AB0  6F03               	movwf	___ftge@ff2& (0+255),b
  2320  000AB2  0E80               	movlw	128
  2321  000AB4  0101               	movlb	1	; () banked
  2322  000AB6  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  2323  000AB8  0E3F               	movlw	63
  2324  000ABA  0101               	movlb	1	; () banked
  2325  000ABC  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  2326  000ABE  EC20  F01C         	call	___ftge	;wreg free
  2327  000AC2  B0D8               	btfsc	status,0,c
  2328  000AC4  D005               	goto	l3359
  2329                           
  2330                           ;doprnt.c: 858: exp--;
  2331  000AC6  0101               	movlb	1	; () banked
  2332  000AC8  073C               	decf	sprintf@exp& (0+255),f,b
  2333  000ACA  A0D8               	btfss	status,0,c
  2334  000ACC  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  2335  000ACE  D016               	goto	l3363
  2336  000AD0                     l3359:
  2337                           
  2338                           ;doprnt.c: 859: else if(integ >= 10.0)
  2339  000AD0  C130  F100         	movff	sprintf@integ,___ftge@ff1
  2340  000AD4  C131  F101         	movff	sprintf@integ+1,___ftge@ff1+1
  2341  000AD8  C132  F102         	movff	sprintf@integ+2,___ftge@ff1+2
  2342  000ADC  0E00               	movlw	0
  2343  000ADE  0101               	movlb	1	; () banked
  2344  000AE0  6F03               	movwf	___ftge@ff2& (0+255),b
  2345  000AE2  0E20               	movlw	32
  2346  000AE4  0101               	movlb	1	; () banked
  2347  000AE6  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  2348  000AE8  0E41               	movlw	65
  2349  000AEA  0101               	movlb	1	; () banked
  2350  000AEC  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  2351  000AEE  EC20  F01C         	call	___ftge	;wreg free
  2352  000AF2  A0D8               	btfss	status,0,c
  2353  000AF4  D003               	goto	l3363
  2354                           
  2355                           ;doprnt.c: 860: exp++;
  2356  000AF6  0101               	movlb	1	; () banked
  2357  000AF8  4B3C               	infsnz	sprintf@exp& (0+255),f,b
  2358  000AFA  2B3D               	incf	(sprintf@exp+1)& (0+255),f,b
  2359  000AFC                     l3363:
  2360                           
  2361                           ;doprnt.c: 861: }
  2362                           ;doprnt.c: 863: if(exp <= 0)
  2363  000AFC  0101               	movlb	1	; () banked
  2364  000AFE  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  2365  000B00  0A80               	xorlw	128
  2366  000B02  6EF3               	movwf	prodl,c
  2367  000B04  0E80               	movlw	128
  2368  000B06  5CF3               	subwf	prodl,w,c
  2369  000B08  0E01               	movlw	1
  2370  000B0A  B4D8               	btfsc	status,2,c
  2371  000B0C  5D3C               	subwf	sprintf@exp& (0+255),w,b
  2372  000B0E  B0D8               	btfsc	status,0,c
  2373  000B10  D004               	goto	l243
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;doprnt.c: 864: c = 1;
  2377  000B12  0E01               	movlw	1
  2378  000B14  0101               	movlb	1	; () banked
  2379  000B16  6F43               	movwf	sprintf@c& (0+255),b
  2380  000B18  D002               	goto	l244
  2381  000B1A                     l243:
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;doprnt.c: 865: else
  2385                           ;doprnt.c: 866: c = exp;
  2386  000B1A  C13C  F143         	movff	sprintf@exp,sprintf@c
  2387  000B1E                     l244:
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;doprnt.c: 867: if(
  2391                           ;doprnt.c: 875: flag & 0x200 && (exp < -4 || exp >= (int)prec)
  2392                           ;doprnt.c: 877: ) {
  2393  000B1E  0101               	movlb	1	; () banked
  2394  000B20  A336               	btfss	(sprintf@flag+1)& (0+255),1,b
  2395  000B22  D336               	goto	l245
  2396                           
  2397                           ; BSR set to: 1
  2398  000B24  0101               	movlb	1	; () banked
  2399  000B26  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  2400  000B28  0A80               	xorlw	128
  2401  000B2A  0F81               	addlw	-127
  2402  000B2C  0EFC               	movlw	252
  2403  000B2E  B4D8               	btfsc	status,2,c
  2404  000B30  5D3C               	subwf	sprintf@exp& (0+255),w,b
  2405  000B32  A0D8               	btfss	status,0,c
  2406  000B34  D010               	goto	l3371
  2407                           
  2408                           ; BSR set to: 1
  2409  000B36  0101               	movlb	1	; () banked
  2410  000B38  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  2411  000B3A  0A80               	xorlw	128
  2412  000B3C  0101               	movlb	1	; () banked
  2413  000B3E  6F14               	movwf	??_sprintf& (0+255),b
  2414  000B40  0101               	movlb	1	; () banked
  2415  000B42  5141               	movf	sprintf@prec& (0+255),w,b
  2416  000B44  0101               	movlb	1	; () banked
  2417  000B46  5D3C               	subwf	sprintf@exp& (0+255),w,b
  2418  000B48  0101               	movlb	1	; () banked
  2419  000B4A  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  2420  000B4C  0A80               	xorlw	128
  2421  000B4E  0101               	movlb	1	; () banked
  2422  000B50  5914               	subwfb	??_sprintf& (0+255),w,b
  2423  000B52  A0D8               	btfss	status,0,c
  2424  000B54  D31D               	goto	l245
  2425  000B56                     l3371:
  2426                           
  2427                           ; BSR set to: 1
  2428                           ;doprnt.c: 879: if(prec && flag & 0x200)
  2429  000B56  0101               	movlb	1	; () banked
  2430  000B58  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  2431  000B5A  1141               	iorwf	sprintf@prec& (0+255),w,b
  2432  000B5C  B4D8               	btfsc	status,2,c
  2433  000B5E  D007               	goto	l3377
  2434                           
  2435                           ; BSR set to: 1
  2436  000B60  0101               	movlb	1	; () banked
  2437  000B62  A336               	btfss	(sprintf@flag+1)& (0+255),1,b
  2438  000B64  D004               	goto	l3377
  2439                           
  2440                           ; BSR set to: 1
  2441                           ;doprnt.c: 880: prec--;
  2442  000B66  0101               	movlb	1	; () banked
  2443  000B68  0741               	decf	sprintf@prec& (0+255),f,b
  2444  000B6A  A0D8               	btfss	status,0,c
  2445  000B6C  0742               	decf	(sprintf@prec+1)& (0+255),f,b
  2446  000B6E                     l3377:
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;doprnt.c: 882: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
  2450  000B6E  0E09               	movlw	9
  2451  000B70  0101               	movlb	1	; () banked
  2452  000B72  5D41               	subwf	sprintf@prec& (0+255),w,b
  2453  000B74  0E00               	movlw	0
  2454  000B76  0101               	movlb	1	; () banked
  2455  000B78  5942               	subwfb	(sprintf@prec+1)& (0+255),w,b
  2456  000B7A  A0D8               	btfss	status,0,c
  2457  000B7C  D004               	goto	l249
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;doprnt.c: 883: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
  2461  000B7E  0E08               	movlw	8
  2462  000B80  0101               	movlb	1	; () banked
  2463  000B82  6F43               	movwf	sprintf@c& (0+255),b
  2464  000B84  D002               	goto	l3381
  2465  000B86                     l249:
  2466                           
  2467                           ; BSR set to: 1
  2468                           ;doprnt.c: 884: else
  2469                           ;doprnt.c: 885: c = prec;
  2470  000B86  C141  F143         	movff	sprintf@prec,sprintf@c
  2471  000B8A                     l3381:
  2472                           
  2473                           ; BSR set to: 1
  2474                           ;doprnt.c: 886: if( fval!=0) {
  2475  000B8A  0E7F               	movlw	127
  2476  000B8C  0101               	movlb	1	; () banked
  2477  000B8E  1540               	andwf	(sprintf@fval+2)& (0+255),w,b
  2478  000B90  0101               	movlb	1	; () banked
  2479  000B92  113F               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2480  000B94  0101               	movlb	1	; () banked
  2481  000B96  113E               	iorwf	sprintf@fval& (0+255),w,b
  2482  000B98  B4D8               	btfsc	status,2,c
  2483  000B9A  D10D               	goto	l3401
  2484                           
  2485                           ; BSR set to: 1
  2486                           ;doprnt.c: 887: fval /= scale(exp-c);
  2487  000B9C  C13E  F0D0         	movff	sprintf@fval,___ftdiv@f1
  2488  000BA0  C13F  F0D1         	movff	sprintf@fval+1,___ftdiv@f1+1
  2489  000BA4  C140  F0D2         	movff	sprintf@fval+2,___ftdiv@f1+2
  2490  000BA8  0101               	movlb	1	; () banked
  2491  000BAA  5143               	movf	sprintf@c& (0+255),w,b
  2492  000BAC  0800               	sublw	0
  2493  000BAE  0101               	movlb	1	; () banked
  2494  000BB0  253C               	addwf	sprintf@exp& (0+255),w,b
  2495  000BB2  ECB9  F00D         	call	_scale
  2496  000BB6  C0C9  F0D3         	movff	?_scale,___ftdiv@f2
  2497  000BBA  C0CA  F0D4         	movff	?_scale+1,___ftdiv@f2+1
  2498  000BBE  C0CB  F0D5         	movff	?_scale+2,___ftdiv@f2+2
  2499  000BC2  EC20  F019         	call	___ftdiv	;wreg free
  2500  000BC6  C0D0  F13E         	movff	?___ftdiv,sprintf@fval
  2501  000BCA  C0D1  F13F         	movff	?___ftdiv+1,sprintf@fval+1
  2502  000BCE  C0D2  F140         	movff	?___ftdiv+2,sprintf@fval+2
  2503                           
  2504                           ;doprnt.c: 902: if(fval - (double)(unsigned long)fval >= 0.5)
  2505  000BD2  C13E  F0D6         	movff	sprintf@fval,___ftadd@f2
  2506  000BD6  C13F  F0D7         	movff	sprintf@fval+1,___ftadd@f2+1
  2507  000BDA  C140  F0D8         	movff	sprintf@fval+2,___ftadd@f2+2
  2508  000BDE  C13E  F09F         	movff	sprintf@fval,___fttol@f1
  2509  000BE2  C13F  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
  2510  000BE6  C140  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
  2511  000BEA  EC79  F018         	call	___fttol	;wreg free
  2512  000BEE  C09F  F0AE         	movff	?___fttol,___lltoft@c
  2513  000BF2  C0A0  F0AF         	movff	?___fttol+1,___lltoft@c+1
  2514  000BF6  C0A1  F0B0         	movff	?___fttol+2,___lltoft@c+2
  2515  000BFA  C0A2  F0B1         	movff	?___fttol+3,___lltoft@c+3
  2516  000BFE  ECEE  F01D         	call	___lltoft	;wreg free
  2517  000C02  C0AE  F0B7         	movff	?___lltoft,___ftneg@f1
  2518  000C06  C0AF  F0B8         	movff	?___lltoft+1,___ftneg@f1+1
  2519  000C0A  C0B0  F0B9         	movff	?___lltoft+2,___ftneg@f1+2
  2520  000C0E  EC63  F01F         	call	___ftneg	;wreg free
  2521  000C12  C0B7  F0D3         	movff	?___ftneg,___ftadd@f1
  2522  000C16  C0B8  F0D4         	movff	?___ftneg+1,___ftadd@f1+1
  2523  000C1A  C0B9  F0D5         	movff	?___ftneg+2,___ftadd@f1+2
  2524  000C1E  EC13  F012         	call	___ftadd	;wreg free
  2525  000C22  C0D3  F100         	movff	?___ftadd,___ftge@ff1
  2526  000C26  C0D4  F101         	movff	?___ftadd+1,___ftge@ff1+1
  2527  000C2A  C0D5  F102         	movff	?___ftadd+2,___ftge@ff1+2
  2528  000C2E  0E00               	movlw	0
  2529  000C30  0101               	movlb	1	; () banked
  2530  000C32  6F03               	movwf	___ftge@ff2& (0+255),b
  2531  000C34  0E00               	movlw	0
  2532  000C36  0101               	movlb	1	; () banked
  2533  000C38  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  2534  000C3A  0E3F               	movlw	63
  2535  000C3C  0101               	movlb	1	; () banked
  2536  000C3E  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  2537  000C40  EC20  F01C         	call	___ftge	;wreg free
  2538  000C44  A0D8               	btfss	status,0,c
  2539  000C46  D017               	goto	l3389
  2540                           
  2541                           ;doprnt.c: 903: fval += 0.5;
  2542  000C48  C13E  F0D3         	movff	sprintf@fval,___ftadd@f1
  2543  000C4C  C13F  F0D4         	movff	sprintf@fval+1,___ftadd@f1+1
  2544  000C50  C140  F0D5         	movff	sprintf@fval+2,___ftadd@f1+2
  2545  000C54  0E00               	movlw	0
  2546  000C56  0100               	movlb	0	; () banked
  2547  000C58  6FD6               	movwf	___ftadd@f2& (0+255),b
  2548  000C5A  0E00               	movlw	0
  2549  000C5C  0100               	movlb	0	; () banked
  2550  000C5E  6FD7               	movwf	(___ftadd@f2+1)& (0+255),b
  2551  000C60  0E3F               	movlw	63
  2552  000C62  0100               	movlb	0	; () banked
  2553  000C64  6FD8               	movwf	(___ftadd@f2+2)& (0+255),b
  2554  000C66  EC13  F012         	call	___ftadd	;wreg free
  2555  000C6A  C0D3  F13E         	movff	?___ftadd,sprintf@fval
  2556  000C6E  C0D4  F13F         	movff	?___ftadd+1,sprintf@fval+1
  2557  000C72  C0D5  F140         	movff	?___ftadd+2,sprintf@fval+2
  2558  000C76                     l3389:
  2559                           
  2560                           ;doprnt.c: 904: if((unsigned long)fval >= dpowers[c+1]) {
  2561  000C76  0101               	movlb	1	; () banked
  2562  000C78  C143  F114         	movff	sprintf@c,??_sprintf
  2563  000C7C  0101               	movlb	1	; () banked
  2564  000C7E  6B15               	clrf	(??_sprintf+1)& (0+255),b
  2565  000C80  BF14               	btfsc	??_sprintf& (0+255),7,b
  2566  000C82  0715               	decf	(??_sprintf+1)& (0+255),f,b
  2567  000C84  0101               	movlb	1	; () banked
  2568  000C86  90D8               	bcf	status,0,c
  2569  000C88  3714               	rlcf	??_sprintf& (0+255),f,b
  2570  000C8A  3715               	rlcf	(??_sprintf+1)& (0+255),f,b
  2571  000C8C  0101               	movlb	1	; () banked
  2572  000C8E  90D8               	bcf	status,0,c
  2573  000C90  3714               	rlcf	??_sprintf& (0+255),f,b
  2574  000C92  3715               	rlcf	(??_sprintf+1)& (0+255),f,b
  2575  000C94  0E04               	movlw	4
  2576  000C96  0101               	movlb	1	; () banked
  2577  000C98  2714               	addwf	??_sprintf& (0+255),f,b
  2578  000C9A  0E00               	movlw	0
  2579  000C9C  2315               	addwfc	(??_sprintf+1)& (0+255),f,b
  2580  000C9E  0E01               	movlw	low _dpowers
  2581  000CA0  0101               	movlb	1	; () banked
  2582  000CA2  2514               	addwf	??_sprintf& (0+255),w,b
  2583  000CA4  6EF6               	movwf	tblptrl,c
  2584  000CA6  0E06               	movlw	high _dpowers
  2585  000CA8  2115               	addwfc	(??_sprintf+1)& (0+255),w,b
  2586  000CAA  6EF7               	movwf	tblptrh,c
  2587  000CAC                     	if	0	;There are less than 3 active tblptr bytes
  2588  000CAC                     	endif
  2589  000CAC  C13E  F09F         	movff	sprintf@fval,___fttol@f1
  2590  000CB0  C13F  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
  2591  000CB4  C140  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
  2592  000CB8  EC79  F018         	call	___fttol	;wreg free
  2593  000CBC  C09F  F116         	movff	?___fttol,??_sprintf+2
  2594  000CC0  C0A0  F117         	movff	?___fttol+1,??_sprintf+3
  2595  000CC4  C0A1  F118         	movff	?___fttol+2,??_sprintf+4
  2596  000CC8  C0A2  F119         	movff	?___fttol+3,??_sprintf+5
  2597  000CCC  0009               	tblrd		*+
  2598  000CCE  FFFF               	dw	65535	; errata NOP
  2599  000CD0  50F5               	movf	tablat,w,c
  2600  000CD2  0101               	movlb	1	; () banked
  2601  000CD4  5D16               	subwf	(??_sprintf+2)& (0+255),w,b
  2602  000CD6  0009               	tblrd		*+
  2603  000CD8  FFFF               	dw	65535	; errata NOP
  2604  000CDA  50F5               	movf	tablat,w,c
  2605  000CDC  5917               	subwfb	(??_sprintf+3)& (0+255),w,b
  2606  000CDE  0009               	tblrd		*+
  2607  000CE0  FFFF               	dw	65535	; errata NOP
  2608  000CE2  50F5               	movf	tablat,w,c
  2609  000CE4  5918               	subwfb	(??_sprintf+4)& (0+255),w,b
  2610  000CE6  0009               	tblrd		*+
  2611  000CE8  FFFF               	dw	65535	; errata NOP
  2612  000CEA  50F5               	movf	tablat,w,c
  2613  000CEC  5919               	subwfb	(??_sprintf+5)& (0+255),w,b
  2614  000CEE  A0D8               	btfss	status,0,c
  2615  000CF0  D01B               	goto	l3395
  2616                           
  2617                           ; BSR set to: 1
  2618                           ;doprnt.c: 905: fval *= 1e-1;
  2619  000CF2  C13E  F0BA         	movff	sprintf@fval,___ftmul@f1
  2620  000CF6  C13F  F0BB         	movff	sprintf@fval+1,___ftmul@f1+1
  2621  000CFA  C140  F0BC         	movff	sprintf@fval+2,___ftmul@f1+2
  2622  000CFE  0ECD               	movlw	205
  2623  000D00  0100               	movlb	0	; () banked
  2624  000D02  6FBD               	movwf	___ftmul@f2& (0+255),b
  2625  000D04  0ECC               	movlw	204
  2626  000D06  0100               	movlb	0	; () banked
  2627  000D08  6FBE               	movwf	(___ftmul@f2+1)& (0+255),b
  2628  000D0A  0E3D               	movlw	61
  2629  000D0C  0100               	movlb	0	; () banked
  2630  000D0E  6FBF               	movwf	(___ftmul@f2+2)& (0+255),b
  2631  000D10  EC1B  F017         	call	___ftmul	;wreg free
  2632  000D14  C0BA  F13E         	movff	?___ftmul,sprintf@fval
  2633  000D18  C0BB  F13F         	movff	?___ftmul+1,sprintf@fval+1
  2634  000D1C  C0BC  F140         	movff	?___ftmul+2,sprintf@fval+2
  2635                           
  2636                           ;doprnt.c: 906: exp++;
  2637  000D20  0101               	movlb	1	; () banked
  2638  000D22  4B3C               	infsnz	sprintf@exp& (0+255),f,b
  2639  000D24  2B3D               	incf	(sprintf@exp+1)& (0+255),f,b
  2640                           
  2641                           ;doprnt.c: 907: } else if((unsigned long)fval < dpowers[c]) {
  2642  000D26  D047               	goto	l3401
  2643  000D28                     l3395:
  2644                           
  2645                           ; BSR set to: 1
  2646  000D28  0101               	movlb	1	; () banked
  2647  000D2A  5143               	movf	sprintf@c& (0+255),w,b
  2648  000D2C  0D04               	mullw	4
  2649  000D2E  0E01               	movlw	low _dpowers
  2650  000D30  24F3               	addwf	prodl,w,c
  2651  000D32  6EF6               	movwf	tblptrl,c
  2652  000D34  0E06               	movlw	high _dpowers
  2653  000D36  20F4               	addwfc	prodh,w,c
  2654  000D38  6EF7               	movwf	tblptrh,c
  2655  000D3A                     	if	0	;There are less than 3 active tblptr bytes
  2656  000D3A                     	endif
  2657  000D3A  C13E  F09F         	movff	sprintf@fval,___fttol@f1
  2658  000D3E  C13F  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
  2659  000D42  C140  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
  2660  000D46  EC79  F018         	call	___fttol	;wreg free
  2661  000D4A  C09F  F114         	movff	?___fttol,??_sprintf
  2662  000D4E  C0A0  F115         	movff	?___fttol+1,??_sprintf+1
  2663  000D52  C0A1  F116         	movff	?___fttol+2,??_sprintf+2
  2664  000D56  C0A2  F117         	movff	?___fttol+3,??_sprintf+3
  2665  000D5A  0009               	tblrd		*+
  2666  000D5C  FFFF               	dw	65535	; errata NOP
  2667  000D5E  50F5               	movf	tablat,w,c
  2668  000D60  0101               	movlb	1	; () banked
  2669  000D62  5D14               	subwf	??_sprintf& (0+255),w,b
  2670  000D64  0009               	tblrd		*+
  2671  000D66  FFFF               	dw	65535	; errata NOP
  2672  000D68  50F5               	movf	tablat,w,c
  2673  000D6A  5915               	subwfb	(??_sprintf+1)& (0+255),w,b
  2674  000D6C  0009               	tblrd		*+
  2675  000D6E  FFFF               	dw	65535	; errata NOP
  2676  000D70  50F5               	movf	tablat,w,c
  2677  000D72  5916               	subwfb	(??_sprintf+2)& (0+255),w,b
  2678  000D74  0009               	tblrd		*+
  2679  000D76  FFFF               	dw	65535	; errata NOP
  2680  000D78  50F5               	movf	tablat,w,c
  2681  000D7A  5917               	subwfb	(??_sprintf+3)& (0+255),w,b
  2682  000D7C  B0D8               	btfsc	status,0,c
  2683  000D7E  D01B               	goto	l3401
  2684                           
  2685                           ; BSR set to: 1
  2686                           ;doprnt.c: 908: fval *= 10.0;
  2687  000D80  C13E  F0BA         	movff	sprintf@fval,___ftmul@f1
  2688  000D84  C13F  F0BB         	movff	sprintf@fval+1,___ftmul@f1+1
  2689  000D88  C140  F0BC         	movff	sprintf@fval+2,___ftmul@f1+2
  2690  000D8C  0E00               	movlw	0
  2691  000D8E  0100               	movlb	0	; () banked
  2692  000D90  6FBD               	movwf	___ftmul@f2& (0+255),b
  2693  000D92  0E20               	movlw	32
  2694  000D94  0100               	movlb	0	; () banked
  2695  000D96  6FBE               	movwf	(___ftmul@f2+1)& (0+255),b
  2696  000D98  0E41               	movlw	65
  2697  000D9A  0100               	movlb	0	; () banked
  2698  000D9C  6FBF               	movwf	(___ftmul@f2+2)& (0+255),b
  2699  000D9E  EC1B  F017         	call	___ftmul	;wreg free
  2700  000DA2  C0BA  F13E         	movff	?___ftmul,sprintf@fval
  2701  000DA6  C0BB  F13F         	movff	?___ftmul+1,sprintf@fval+1
  2702  000DAA  C0BC  F140         	movff	?___ftmul+2,sprintf@fval+2
  2703                           
  2704                           ;doprnt.c: 909: exp--;
  2705  000DAE  0101               	movlb	1	; () banked
  2706  000DB0  073C               	decf	sprintf@exp& (0+255),f,b
  2707  000DB2  A0D8               	btfss	status,0,c
  2708  000DB4  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  2709  000DB6                     l3401:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;doprnt.c: 910: }
  2713                           ;doprnt.c: 912: }
  2714                           ;doprnt.c: 938: width -= prec + 5;
  2715  000DB6  0E05               	movlw	5
  2716  000DB8  0101               	movlb	1	; () banked
  2717  000DBA  2541               	addwf	sprintf@prec& (0+255),w,b
  2718  000DBC  0101               	movlb	1	; () banked
  2719  000DBE  6F14               	movwf	??_sprintf& (0+255),b
  2720  000DC0  0E00               	movlw	0
  2721  000DC2  0101               	movlb	1	; () banked
  2722  000DC4  2142               	addwfc	(sprintf@prec+1)& (0+255),w,b
  2723  000DC6  0101               	movlb	1	; () banked
  2724  000DC8  6F15               	movwf	(??_sprintf+1)& (0+255),b
  2725  000DCA  0101               	movlb	1	; () banked
  2726  000DCC  5114               	movf	??_sprintf& (0+255),w,b
  2727  000DCE  0101               	movlb	1	; () banked
  2728  000DD0  5F33               	subwf	sprintf@width& (0+255),f,b
  2729  000DD2  0101               	movlb	1	; () banked
  2730  000DD4  5115               	movf	(??_sprintf+1)& (0+255),w,b
  2731  000DD6  0101               	movlb	1	; () banked
  2732  000DD8  5B34               	subwfb	(sprintf@width+1)& (0+255),f,b
  2733                           
  2734                           ; BSR set to: 1
  2735                           ;doprnt.c: 943: if(flag & 0x03)
  2736  000DDA  0E03               	movlw	3
  2737  000DDC  0101               	movlb	1	; () banked
  2738  000DDE  1535               	andwf	sprintf@flag& (0+255),w,b
  2739  000DE0  0101               	movlb	1	; () banked
  2740  000DE2  6F14               	movwf	??_sprintf& (0+255),b
  2741  000DE4  0E00               	movlw	0
  2742  000DE6  0101               	movlb	1	; () banked
  2743  000DE8  1536               	andwf	(sprintf@flag+1)& (0+255),w,b
  2744  000DEA  0101               	movlb	1	; () banked
  2745  000DEC  6F15               	movwf	(??_sprintf+1)& (0+255),b
  2746  000DEE  0101               	movlb	1	; () banked
  2747  000DF0  5115               	movf	(??_sprintf+1)& (0+255),w,b
  2748  000DF2  1114               	iorwf	??_sprintf& (0+255),w,b
  2749  000DF4  B4D8               	btfsc	status,2,c
  2750  000DF6  D011               	goto	l3415
  2751  000DF8  D00C               	goto	L2
  2752  000DFA                     l3407:
  2753                           
  2754                           ; BSR set to: 1
  2755                           ;doprnt.c: 974: ((*sp++ = (' ')),(++ccnt));
  2756  000DFA  C109  FFD9         	movff	sprintf@sp,fsr2l
  2757  000DFE  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  2758  000E02  0E20               	movlw	32
  2759  000E04  6EDF               	movwf	indf2,c
  2760                           
  2761                           ; BSR set to: 1
  2762  000E06  0101               	movlb	1	; () banked
  2763  000E08  4B09               	infsnz	sprintf@sp& (0+255),f,b
  2764  000E0A  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  2765                           
  2766                           ; BSR set to: 1
  2767  000E0C  0101               	movlb	1	; () banked
  2768  000E0E  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  2769  000E10  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2770  000E12                     L2:
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;doprnt.c: 975: width--;
  2774  000E12  0101               	movlb	1	; () banked
  2775  000E14  0733               	decf	sprintf@width& (0+255),f,b
  2776  000E16  A0D8               	btfss	status,0,c
  2777  000E18  0734               	decf	(sprintf@width+1)& (0+255),f,b
  2778  000E1A                     l3415:
  2779                           
  2780                           ; BSR set to: 1
  2781  000E1A  0101               	movlb	1	; () banked
  2782  000E1C  5134               	movf	(sprintf@width+1)& (0+255),w,b
  2783  000E1E  0A80               	xorlw	128
  2784  000E20  6EF3               	movwf	prodl,c
  2785  000E22  0E80               	movlw	128
  2786  000E24  5CF3               	subwf	prodl,w,c
  2787  000E26  0E01               	movlw	1
  2788  000E28  B4D8               	btfsc	status,2,c
  2789  000E2A  5D33               	subwf	sprintf@width& (0+255),w,b
  2790  000E2C  B0D8               	btfsc	status,0,c
  2791  000E2E  D7E5               	goto	l3407
  2792                           
  2793                           ; BSR set to: 1
  2794                           ;doprnt.c: 976: }
  2795                           ;doprnt.c: 982: if(flag & 0x03)
  2796                           
  2797                           ; BSR set to: 1
  2798  000E30  0E03               	movlw	3
  2799  000E32  0101               	movlb	1	; () banked
  2800  000E34  1535               	andwf	sprintf@flag& (0+255),w,b
  2801  000E36  0101               	movlb	1	; () banked
  2802  000E38  6F14               	movwf	??_sprintf& (0+255),b
  2803  000E3A  0E00               	movlw	0
  2804  000E3C  0101               	movlb	1	; () banked
  2805  000E3E  1536               	andwf	(sprintf@flag+1)& (0+255),w,b
  2806  000E40  0101               	movlb	1	; () banked
  2807  000E42  6F15               	movwf	(??_sprintf+1)& (0+255),b
  2808  000E44  0101               	movlb	1	; () banked
  2809  000E46  5115               	movf	(??_sprintf+1)& (0+255),w,b
  2810  000E48  1114               	iorwf	??_sprintf& (0+255),w,b
  2811  000E4A  B4D8               	btfsc	status,2,c
  2812  000E4C  D00C               	goto	l3425
  2813                           
  2814                           ; BSR set to: 1
  2815                           ;doprnt.c: 983: ((*sp++ = ('-')),(++ccnt));
  2816  000E4E  C109  FFD9         	movff	sprintf@sp,fsr2l
  2817  000E52  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  2818  000E56  0E2D               	movlw	45
  2819  000E58  6EDF               	movwf	indf2,c
  2820                           
  2821                           ; BSR set to: 1
  2822  000E5A  0101               	movlb	1	; () banked
  2823  000E5C  4B09               	infsnz	sprintf@sp& (0+255),f,b
  2824  000E5E  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  2825                           
  2826                           ; BSR set to: 1
  2827  000E60  0101               	movlb	1	; () banked
  2828  000E62  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  2829  000E64  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2830  000E66                     l3425:
  2831                           
  2832                           ; BSR set to: 1
  2833                           ;doprnt.c: 989: }
  2834                           ;doprnt.c: 994: _val._val = (unsigned long)fval;
  2835  000E66  C13E  F09F         	movff	sprintf@fval,___fttol@f1
  2836  000E6A  C13F  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
  2837  000E6E  C140  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
  2838  000E72  EC79  F018         	call	___fttol	;wreg free
  2839  000E76  C09F  F137         	movff	?___fttol,sprintf@_val
  2840  000E7A  C0A0  F138         	movff	?___fttol+1,sprintf@_val+1
  2841  000E7E  C0A1  F139         	movff	?___fttol+2,sprintf@_val+2
  2842  000E82  C0A2  F13A         	movff	?___fttol+3,sprintf@_val+3
  2843                           
  2844                           ;doprnt.c: 995: ((*sp++ = (_val._val/dpowers[c] + '0')),(++ccnt));
  2845  000E86  C137  F09F         	movff	sprintf@_val,___lldiv@dividend
  2846  000E8A  C138  F0A0         	movff	sprintf@_val+1,___lldiv@dividend+1
  2847  000E8E  C139  F0A1         	movff	sprintf@_val+2,___lldiv@dividend+2
  2848  000E92  C13A  F0A2         	movff	sprintf@_val+3,___lldiv@dividend+3
  2849  000E96  0101               	movlb	1	; () banked
  2850  000E98  5143               	movf	sprintf@c& (0+255),w,b
  2851  000E9A  0D04               	mullw	4
  2852  000E9C  0E01               	movlw	low _dpowers
  2853  000E9E  24F3               	addwf	prodl,w,c
  2854  000EA0  6EF6               	movwf	tblptrl,c
  2855  000EA2  0E06               	movlw	high _dpowers
  2856  000EA4  20F4               	addwfc	prodh,w,c
  2857  000EA6  6EF7               	movwf	tblptrh,c
  2858  000EA8                     	if	0	;There are less than 3 active tblptr bytes
  2859  000EA8                     	endif
  2860  000EA8  0009               	tblrd		*+
  2861  000EAA  FFFF               	dw	65535	; errata NOP
  2862  000EAC  0100               	movlb	0	; () banked
  2863  000EAE  CFF5 F0A3          	movff	tablat,___lldiv@divisor
  2864  000EB2  0009               	tblrd		*+
  2865  000EB4  FFFF               	dw	65535	; errata NOP
  2866  000EB6  0100               	movlb	0	; () banked
  2867  000EB8  CFF5 F0A4          	movff	tablat,___lldiv@divisor+1
  2868  000EBC  0009               	tblrd		*+
  2869  000EBE  FFFF               	dw	65535	; errata NOP
  2870  000EC0  0100               	movlb	0	; () banked
  2871  000EC2  CFF5 F0A5          	movff	tablat,___lldiv@divisor+2
  2872  000EC6  000A               	tblrd		*-
  2873  000EC8  FFFF               	dw	65535	; errata NOP
  2874  000ECA  0100               	movlb	0	; () banked
  2875  000ECC  CFF5 F0A6          	movff	tablat,___lldiv@divisor+3
  2876  000ED0  ECB4  F01B         	call	___lldiv	;wreg free
  2877  000ED4  C09F  F114         	movff	?___lldiv,??_sprintf
  2878  000ED8  C0A0  F115         	movff	?___lldiv+1,??_sprintf+1
  2879  000EDC  C0A1  F116         	movff	?___lldiv+2,??_sprintf+2
  2880  000EE0  C0A2  F117         	movff	?___lldiv+3,??_sprintf+3
  2881  000EE4  0101               	movlb	1	; () banked
  2882  000EE6  5114               	movf	??_sprintf& (0+255),w,b
  2883  000EE8  0F30               	addlw	48
  2884  000EEA  C109  FFD9         	movff	sprintf@sp,fsr2l
  2885  000EEE  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  2886  000EF2  6EDF               	movwf	indf2,c
  2887                           
  2888                           ; BSR set to: 1
  2889  000EF4  0101               	movlb	1	; () banked
  2890  000EF6  4B09               	infsnz	sprintf@sp& (0+255),f,b
  2891  000EF8  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  2892                           
  2893                           ; BSR set to: 1
  2894  000EFA  0101               	movlb	1	; () banked
  2895  000EFC  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  2896  000EFE  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2897                           
  2898                           ; BSR set to: 1
  2899                           ;doprnt.c: 996: _val._val %= dpowers[c];
  2900  000F00  C137  F09F         	movff	sprintf@_val,___llmod@dividend
  2901  000F04  C138  F0A0         	movff	sprintf@_val+1,___llmod@dividend+1
  2902  000F08  C139  F0A1         	movff	sprintf@_val+2,___llmod@dividend+2
  2903  000F0C  C13A  F0A2         	movff	sprintf@_val+3,___llmod@dividend+3
  2904  000F10  0101               	movlb	1	; () banked
  2905  000F12  5143               	movf	sprintf@c& (0+255),w,b
  2906  000F14  0D04               	mullw	4
  2907  000F16  0E01               	movlw	low _dpowers
  2908  000F18  24F3               	addwf	prodl,w,c
  2909  000F1A  6EF6               	movwf	tblptrl,c
  2910  000F1C  0E06               	movlw	high _dpowers
  2911  000F1E  20F4               	addwfc	prodh,w,c
  2912  000F20  6EF7               	movwf	tblptrh,c
  2913  000F22                     	if	0	;There are less than 3 active tblptr bytes
  2914  000F22                     	endif
  2915  000F22  0009               	tblrd		*+
  2916  000F24  FFFF               	dw	65535	; errata NOP
  2917  000F26  0100               	movlb	0	; () banked
  2918  000F28  CFF5 F0A3          	movff	tablat,___llmod@divisor
  2919  000F2C  0009               	tblrd		*+
  2920  000F2E  FFFF               	dw	65535	; errata NOP
  2921  000F30  0100               	movlb	0	; () banked
  2922  000F32  CFF5 F0A4          	movff	tablat,___llmod@divisor+1
  2923  000F36  0009               	tblrd		*+
  2924  000F38  FFFF               	dw	65535	; errata NOP
  2925  000F3A  0100               	movlb	0	; () banked
  2926  000F3C  CFF5 F0A5          	movff	tablat,___llmod@divisor+2
  2927  000F40  000A               	tblrd		*-
  2928  000F42  FFFF               	dw	65535	; errata NOP
  2929  000F44  0100               	movlb	0	; () banked
  2930  000F46  CFF5 F0A6          	movff	tablat,___llmod@divisor+3
  2931  000F4A  EC46  F01D         	call	___llmod	;wreg free
  2932  000F4E  C09F  F137         	movff	?___llmod,sprintf@_val
  2933  000F52  C0A0  F138         	movff	?___llmod+1,sprintf@_val+1
  2934  000F56  C0A1  F139         	movff	?___llmod+2,sprintf@_val+2
  2935  000F5A  C0A2  F13A         	movff	?___llmod+3,sprintf@_val+3
  2936                           
  2937                           ;doprnt.c: 1001: if(prec)
  2938  000F5E  0101               	movlb	1	; () banked
  2939  000F60  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  2940  000F62  1141               	iorwf	sprintf@prec& (0+255),w,b
  2941  000F64  B4D8               	btfsc	status,2,c
  2942  000F66  D0B6               	goto	l3469
  2943                           
  2944                           ; BSR set to: 1
  2945                           ;doprnt.c: 1003: {
  2946                           ;doprnt.c: 1004: ((*sp++ = ('.')),(++ccnt));
  2947  000F68  C109  FFD9         	movff	sprintf@sp,fsr2l
  2948  000F6C  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  2949  000F70  0E2E               	movlw	46
  2950  000F72  6EDF               	movwf	indf2,c
  2951                           
  2952                           ; BSR set to: 1
  2953  000F74  0101               	movlb	1	; () banked
  2954  000F76  4B09               	infsnz	sprintf@sp& (0+255),f,b
  2955  000F78  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  2956                           
  2957                           ; BSR set to: 1
  2958  000F7A  0101               	movlb	1	; () banked
  2959  000F7C  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  2960  000F7E  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;doprnt.c: 1005: prec -= c;
  2964  000F80  0101               	movlb	1	; () banked
  2965  000F82  5143               	movf	sprintf@c& (0+255),w,b
  2966  000F84  0101               	movlb	1	; () banked
  2967  000F86  5F41               	subwf	sprintf@prec& (0+255),f,b
  2968  000F88  0E00               	movlw	0
  2969  000F8A  0101               	movlb	1	; () banked
  2970  000F8C  BF43               	btfsc	sprintf@c& (0+255),7,b
  2971  000F8E  0EFF               	movlw	255
  2972  000F90  0101               	movlb	1	; () banked
  2973  000F92  5B42               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2974                           
  2975                           ;doprnt.c: 1006: while(c--) {
  2976  000F94  D083               	goto	l3457
  2977  000F96                     l263:
  2978                           
  2979                           ; BSR set to: 1
  2980                           ;doprnt.c: 1011: if(flag & 0x200 && _val._val == 0) {
  2981  000F96  0101               	movlb	1	; () banked
  2982  000F98  A336               	btfss	(sprintf@flag+1)& (0+255),1,b
  2983  000F9A  D014               	goto	l3449
  2984                           
  2985                           ; BSR set to: 1
  2986  000F9C  0101               	movlb	1	; () banked
  2987  000F9E  513A               	movf	(sprintf@_val+3)& (0+255),w,b
  2988  000FA0  1137               	iorwf	sprintf@_val& (0+255),w,b
  2989  000FA2  1138               	iorwf	(sprintf@_val+1)& (0+255),w,b
  2990  000FA4  1139               	iorwf	(sprintf@_val+2)& (0+255),w,b
  2991  000FA6  A4D8               	btfss	status,2,c
  2992  000FA8  D00D               	goto	l3449
  2993                           
  2994                           ; BSR set to: 1
  2995                           ;doprnt.c: 1012: prec = c = 0;
  2996  000FAA  0E00               	movlw	0
  2997  000FAC  0101               	movlb	1	; () banked
  2998  000FAE  6F43               	movwf	sprintf@c& (0+255),b
  2999  000FB0  0101               	movlb	1	; () banked
  3000  000FB2  5143               	movf	sprintf@c& (0+255),w,b
  3001  000FB4  0101               	movlb	1	; () banked
  3002  000FB6  6F41               	movwf	sprintf@prec& (0+255),b
  3003  000FB8  0101               	movlb	1	; () banked
  3004  000FBA  6B42               	clrf	(sprintf@prec+1)& (0+255),b
  3005  000FBC  0101               	movlb	1	; () banked
  3006  000FBE  BF41               	btfsc	sprintf@prec& (0+255),7,b
  3007  000FC0  0742               	decf	(sprintf@prec+1)& (0+255),f,b
  3008                           
  3009                           ;doprnt.c: 1013: break;
  3010  000FC2  D083               	goto	l3467
  3011  000FC4                     l3449:
  3012                           
  3013                           ; BSR set to: 1
  3014                           ;doprnt.c: 1014: }
  3015                           ;doprnt.c: 1016: ((*sp++ = ('0' + (_val._val/dpowers[c]))),(++ccnt));
  3016  000FC4  C137  F09F         	movff	sprintf@_val,___lldiv@dividend
  3017  000FC8  C138  F0A0         	movff	sprintf@_val+1,___lldiv@dividend+1
  3018  000FCC  C139  F0A1         	movff	sprintf@_val+2,___lldiv@dividend+2
  3019  000FD0  C13A  F0A2         	movff	sprintf@_val+3,___lldiv@dividend+3
  3020  000FD4  0101               	movlb	1	; () banked
  3021  000FD6  5143               	movf	sprintf@c& (0+255),w,b
  3022  000FD8  0D04               	mullw	4
  3023  000FDA  0E01               	movlw	low _dpowers
  3024  000FDC  24F3               	addwf	prodl,w,c
  3025  000FDE  6EF6               	movwf	tblptrl,c
  3026  000FE0  0E06               	movlw	high _dpowers
  3027  000FE2  20F4               	addwfc	prodh,w,c
  3028  000FE4  6EF7               	movwf	tblptrh,c
  3029  000FE6                     	if	0	;There are less than 3 active tblptr bytes
  3030  000FE6                     	endif
  3031  000FE6  0009               	tblrd		*+
  3032  000FE8  FFFF               	dw	65535	; errata NOP
  3033  000FEA  0100               	movlb	0	; () banked
  3034  000FEC  CFF5 F0A3          	movff	tablat,___lldiv@divisor
  3035  000FF0  0009               	tblrd		*+
  3036  000FF2  FFFF               	dw	65535	; errata NOP
  3037  000FF4  0100               	movlb	0	; () banked
  3038  000FF6  CFF5 F0A4          	movff	tablat,___lldiv@divisor+1
  3039  000FFA  0009               	tblrd		*+
  3040  000FFC  FFFF               	dw	65535	; errata NOP
  3041  000FFE  0100               	movlb	0	; () banked
  3042  001000  CFF5 F0A5          	movff	tablat,___lldiv@divisor+2
  3043  001004  000A               	tblrd		*-
  3044  001006  FFFF               	dw	65535	; errata NOP
  3045  001008  0100               	movlb	0	; () banked
  3046  00100A  CFF5 F0A6          	movff	tablat,___lldiv@divisor+3
  3047  00100E  ECB4  F01B         	call	___lldiv	;wreg free
  3048  001012  C09F  F114         	movff	?___lldiv,??_sprintf
  3049  001016  C0A0  F115         	movff	?___lldiv+1,??_sprintf+1
  3050  00101A  C0A1  F116         	movff	?___lldiv+2,??_sprintf+2
  3051  00101E  C0A2  F117         	movff	?___lldiv+3,??_sprintf+3
  3052  001022  0101               	movlb	1	; () banked
  3053  001024  5114               	movf	??_sprintf& (0+255),w,b
  3054  001026  0F30               	addlw	48
  3055  001028  C109  FFD9         	movff	sprintf@sp,fsr2l
  3056  00102C  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3057  001030  6EDF               	movwf	indf2,c
  3058                           
  3059                           ; BSR set to: 1
  3060  001032  0101               	movlb	1	; () banked
  3061  001034  4B09               	infsnz	sprintf@sp& (0+255),f,b
  3062  001036  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  3063                           
  3064                           ; BSR set to: 1
  3065  001038  0101               	movlb	1	; () banked
  3066  00103A  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  3067  00103C  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3068                           
  3069                           ; BSR set to: 1
  3070                           ;doprnt.c: 1017: _val._val %= dpowers[c];
  3071  00103E  C137  F09F         	movff	sprintf@_val,___llmod@dividend
  3072  001042  C138  F0A0         	movff	sprintf@_val+1,___llmod@dividend+1
  3073  001046  C139  F0A1         	movff	sprintf@_val+2,___llmod@dividend+2
  3074  00104A  C13A  F0A2         	movff	sprintf@_val+3,___llmod@dividend+3
  3075  00104E  0101               	movlb	1	; () banked
  3076  001050  5143               	movf	sprintf@c& (0+255),w,b
  3077  001052  0D04               	mullw	4
  3078  001054  0E01               	movlw	low _dpowers
  3079  001056  24F3               	addwf	prodl,w,c
  3080  001058  6EF6               	movwf	tblptrl,c
  3081  00105A  0E06               	movlw	high _dpowers
  3082  00105C  20F4               	addwfc	prodh,w,c
  3083  00105E  6EF7               	movwf	tblptrh,c
  3084  001060                     	if	0	;There are less than 3 active tblptr bytes
  3085  001060                     	endif
  3086  001060  0009               	tblrd		*+
  3087  001062  FFFF               	dw	65535	; errata NOP
  3088  001064  0100               	movlb	0	; () banked
  3089  001066  CFF5 F0A3          	movff	tablat,___llmod@divisor
  3090  00106A  0009               	tblrd		*+
  3091  00106C  FFFF               	dw	65535	; errata NOP
  3092  00106E  0100               	movlb	0	; () banked
  3093  001070  CFF5 F0A4          	movff	tablat,___llmod@divisor+1
  3094  001074  0009               	tblrd		*+
  3095  001076  FFFF               	dw	65535	; errata NOP
  3096  001078  0100               	movlb	0	; () banked
  3097  00107A  CFF5 F0A5          	movff	tablat,___llmod@divisor+2
  3098  00107E  000A               	tblrd		*-
  3099  001080  FFFF               	dw	65535	; errata NOP
  3100  001082  0100               	movlb	0	; () banked
  3101  001084  CFF5 F0A6          	movff	tablat,___llmod@divisor+3
  3102  001088  EC46  F01D         	call	___llmod	;wreg free
  3103  00108C  C09F  F137         	movff	?___llmod,sprintf@_val
  3104  001090  C0A0  F138         	movff	?___llmod+1,sprintf@_val+1
  3105  001094  C0A1  F139         	movff	?___llmod+2,sprintf@_val+2
  3106  001098  C0A2  F13A         	movff	?___llmod+3,sprintf@_val+3
  3107  00109C                     l3457:
  3108  00109C  0101               	movlb	1	; () banked
  3109  00109E  0743               	decf	sprintf@c& (0+255),f,b
  3110  0010A0  0101               	movlb	1	; () banked
  3111  0010A2  2943               	incf	sprintf@c& (0+255),w,b
  3112  0010A4  B4D8               	btfsc	status,2,c
  3113  0010A6  D011               	goto	l3467
  3114  0010A8  D776               	goto	l263
  3115  0010AA                     l3459:
  3116                           
  3117                           ; BSR set to: 1
  3118                           ;doprnt.c: 1021: ((*sp++ = ('0')),(++ccnt));
  3119  0010AA  C109  FFD9         	movff	sprintf@sp,fsr2l
  3120  0010AE  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3121  0010B2  0E30               	movlw	48
  3122  0010B4  6EDF               	movwf	indf2,c
  3123                           
  3124                           ; BSR set to: 1
  3125  0010B6  0101               	movlb	1	; () banked
  3126  0010B8  4B09               	infsnz	sprintf@sp& (0+255),f,b
  3127  0010BA  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  3128                           
  3129                           ; BSR set to: 1
  3130  0010BC  0101               	movlb	1	; () banked
  3131  0010BE  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  3132  0010C0  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3133                           
  3134                           ; BSR set to: 1
  3135                           ;doprnt.c: 1022: prec--;
  3136  0010C2  0101               	movlb	1	; () banked
  3137  0010C4  0741               	decf	sprintf@prec& (0+255),f,b
  3138  0010C6  A0D8               	btfss	status,0,c
  3139  0010C8  0742               	decf	(sprintf@prec+1)& (0+255),f,b
  3140  0010CA                     l3467:
  3141                           
  3142                           ; BSR set to: 1
  3143  0010CA  0101               	movlb	1	; () banked
  3144  0010CC  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  3145  0010CE  1141               	iorwf	sprintf@prec& (0+255),w,b
  3146  0010D0  A4D8               	btfss	status,2,c
  3147  0010D2  D7EB               	goto	l3459
  3148  0010D4                     l3469:
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;doprnt.c: 1023: }
  3152                           ;doprnt.c: 1024: }
  3153                           ;doprnt.c: 1030: ((*sp++ = ('e')),(++ccnt));
  3154  0010D4  C109  FFD9         	movff	sprintf@sp,fsr2l
  3155  0010D8  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3156  0010DC  0E65               	movlw	101
  3157  0010DE  6EDF               	movwf	indf2,c
  3158                           
  3159                           ; BSR set to: 1
  3160  0010E0  0101               	movlb	1	; () banked
  3161  0010E2  4B09               	infsnz	sprintf@sp& (0+255),f,b
  3162  0010E4  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  3163                           
  3164                           ; BSR set to: 1
  3165  0010E6  0101               	movlb	1	; () banked
  3166  0010E8  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  3167  0010EA  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;doprnt.c: 1031: if(exp < 0) {
  3171  0010EC  0101               	movlb	1	; () banked
  3172  0010EE  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  3173  0010F0  0A80               	xorlw	128
  3174  0010F2  6EF3               	movwf	prodl,c
  3175  0010F4  0E80               	movlw	128
  3176  0010F6  5CF3               	subwf	prodl,w,c
  3177  0010F8  0E00               	movlw	0
  3178  0010FA  B4D8               	btfsc	status,2,c
  3179  0010FC  5D3C               	subwf	sprintf@exp& (0+255),w,b
  3180  0010FE  B0D8               	btfsc	status,0,c
  3181  001100  D00C               	goto	l3485
  3182                           
  3183                           ; BSR set to: 1
  3184                           ;doprnt.c: 1032: exp = -exp;
  3185  001102  0101               	movlb	1	; () banked
  3186  001104  6D3C               	negf	sprintf@exp& (0+255),b
  3187  001106  0101               	movlb	1	; () banked
  3188  001108  1F3D               	comf	(sprintf@exp+1)& (0+255),f,b
  3189  00110A  B0D8               	btfsc	status,0,c
  3190  00110C  2B3D               	incf	(sprintf@exp+1)& (0+255),f,b
  3191                           
  3192                           ; BSR set to: 1
  3193                           ;doprnt.c: 1033: ((*sp++ = ('-')),(++ccnt));
  3194  00110E  C109  FFD9         	movff	sprintf@sp,fsr2l
  3195  001112  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3196  001116  0E2D               	movlw	45
  3197  001118  D005               	goto	L3
  3198  00111A                     l3485:
  3199                           
  3200                           ; BSR set to: 1
  3201                           ;doprnt.c: 1035: ((*sp++ = ('+')),(++ccnt));
  3202  00111A  C109  FFD9         	movff	sprintf@sp,fsr2l
  3203  00111E  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3204  001122  0E2B               	movlw	43
  3205  001124                     L3:
  3206  001124  6EDF               	movwf	indf2,c
  3207                           
  3208                           ; BSR set to: 1
  3209  001126  0101               	movlb	1	; () banked
  3210  001128  4B09               	infsnz	sprintf@sp& (0+255),f,b
  3211  00112A  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  3212                           
  3213                           ; BSR set to: 1
  3214  00112C  0101               	movlb	1	; () banked
  3215  00112E  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  3216  001130  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3217                           
  3218                           ; BSR set to: 1
  3219                           ;doprnt.c: 1048: ((*sp++ = (exp / 10 + '0')),(++ccnt));
  3220                           
  3221                           ; BSR set to: 1
  3222  001132  C13C  F0A5         	movff	sprintf@exp,___awdiv@dividend
  3223  001136  C13D  F0A6         	movff	sprintf@exp+1,___awdiv@dividend+1
  3224  00113A  0E00               	movlw	0
  3225  00113C  0100               	movlb	0	; () banked
  3226  00113E  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  3227  001140  0E0A               	movlw	10
  3228  001142  0100               	movlb	0	; () banked
  3229  001144  6FA7               	movwf	___awdiv@divisor& (0+255),b
  3230  001146  ECD4  F01A         	call	___awdiv	;wreg free
  3231  00114A  0100               	movlb	0	; () banked
  3232  00114C  51A5               	movf	?___awdiv& (0+255),w,b
  3233  00114E  0F30               	addlw	48
  3234  001150  C109  FFD9         	movff	sprintf@sp,fsr2l
  3235  001154  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3236  001158  6EDF               	movwf	indf2,c
  3237                           
  3238                           ; BSR set to: 0
  3239  00115A  0101               	movlb	1	; () banked
  3240  00115C  4B09               	infsnz	sprintf@sp& (0+255),f,b
  3241  00115E  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  3242                           
  3243                           ; BSR set to: 1
  3244  001160  0101               	movlb	1	; () banked
  3245  001162  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  3246  001164  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3247                           
  3248                           ; BSR set to: 1
  3249                           ;doprnt.c: 1049: ((*sp++ = (exp % 10 + '0')),(++ccnt));
  3250  001166  C13C  F09F         	movff	sprintf@exp,___awmod@dividend
  3251  00116A  C13D  F0A0         	movff	sprintf@exp+1,___awmod@dividend+1
  3252  00116E  0E00               	movlw	0
  3253  001170  0100               	movlb	0	; () banked
  3254  001172  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  3255  001174  0E0A               	movlw	10
  3256  001176  0100               	movlb	0	; () banked
  3257  001178  6FA1               	movwf	___awmod@divisor& (0+255),b
  3258  00117A  EC8C  F01C         	call	___awmod	;wreg free
  3259  00117E  0100               	movlb	0	; () banked
  3260  001180  519F               	movf	?___awmod& (0+255),w,b
  3261  001182  0F30               	addlw	48
  3262  001184  C109  FFD9         	movff	sprintf@sp,fsr2l
  3263  001188  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3264  00118C  EF94  F00D         	goto	L4
  3265  001190                     l245:
  3266                           
  3267                           ; BSR set to: 1
  3268                           ;doprnt.c: 1057: }
  3269                           ;doprnt.c: 1096: if(flag & 0x200) {
  3270  001190  0101               	movlb	1	; () banked
  3271  001192  A336               	btfss	(sprintf@flag+1)& (0+255),1,b
  3272  001194  D120               	goto	l3541
  3273                           
  3274                           ; BSR set to: 1
  3275                           ;doprnt.c: 1097: if(exp < 0)
  3276  001196  0101               	movlb	1	; () banked
  3277  001198  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  3278  00119A  0A80               	xorlw	128
  3279  00119C  6EF3               	movwf	prodl,c
  3280  00119E  0E80               	movlw	128
  3281  0011A0  5CF3               	subwf	prodl,w,c
  3282  0011A2  0E00               	movlw	0
  3283  0011A4  B4D8               	btfsc	status,2,c
  3284  0011A6  5D3C               	subwf	sprintf@exp& (0+255),w,b
  3285  0011A8  B0D8               	btfsc	status,0,c
  3286  0011AA  D012               	goto	l3507
  3287                           
  3288                           ; BSR set to: 1
  3289                           ;doprnt.c: 1098: prec -= (exp+1);
  3290  0011AC  0E01               	movlw	1
  3291  0011AE  0101               	movlb	1	; () banked
  3292  0011B0  253C               	addwf	sprintf@exp& (0+255),w,b
  3293  0011B2  0101               	movlb	1	; () banked
  3294  0011B4  6F14               	movwf	??_sprintf& (0+255),b
  3295  0011B6  0E00               	movlw	0
  3296  0011B8  0101               	movlb	1	; () banked
  3297  0011BA  213D               	addwfc	(sprintf@exp+1)& (0+255),w,b
  3298  0011BC  0101               	movlb	1	; () banked
  3299  0011BE  6F15               	movwf	(??_sprintf+1)& (0+255),b
  3300  0011C0  0101               	movlb	1	; () banked
  3301  0011C2  5114               	movf	??_sprintf& (0+255),w,b
  3302  0011C4  0101               	movlb	1	; () banked
  3303  0011C6  5F41               	subwf	sprintf@prec& (0+255),f,b
  3304  0011C8  0101               	movlb	1	; () banked
  3305  0011CA  5115               	movf	(??_sprintf+1)& (0+255),w,b
  3306  0011CC  0101               	movlb	1	; () banked
  3307  0011CE  5B42               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3308  0011D0                     l3507:
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;doprnt.c: 1100: _val._val = (unsigned long)fval;
  3312  0011D0  C13E  F09F         	movff	sprintf@fval,___fttol@f1
  3313  0011D4  C13F  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
  3314  0011D8  C140  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
  3315  0011DC  EC79  F018         	call	___fttol	;wreg free
  3316  0011E0  C09F  F137         	movff	?___fttol,sprintf@_val
  3317  0011E4  C0A0  F138         	movff	?___fttol+1,sprintf@_val+1
  3318  0011E8  C0A1  F139         	movff	?___fttol+2,sprintf@_val+2
  3319  0011EC  C0A2  F13A         	movff	?___fttol+3,sprintf@_val+3
  3320                           
  3321                           ;doprnt.c: 1101: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3322  0011F0  0E00               	movlw	0
  3323  0011F2  0101               	movlb	1	; () banked
  3324  0011F4  6F43               	movwf	sprintf@c& (0+255),b
  3325  0011F6                     
  3326                           ; BSR set to: 1
  3327  0011F6  0101               	movlb	1	; () banked
  3328  0011F8  5143               	movf	sprintf@c& (0+255),w,b
  3329  0011FA  0A0A               	xorlw	10
  3330  0011FC  B4D8               	btfsc	status,2,c
  3331  0011FE  D022               	goto	l3523
  3332                           
  3333                           ; BSR set to: 1
  3334                           ;doprnt.c: 1102: if(_val._val < dpowers[c])
  3335                           
  3336                           ; BSR set to: 1
  3337                           
  3338                           ; BSR set to: 1
  3339  001200  0101               	movlb	1	; () banked
  3340  001202  5143               	movf	sprintf@c& (0+255),w,b
  3341  001204  0D04               	mullw	4
  3342  001206  0E01               	movlw	low _dpowers
  3343  001208  24F3               	addwf	prodl,w,c
  3344  00120A  6EF6               	movwf	tblptrl,c
  3345  00120C  0E06               	movlw	high _dpowers
  3346  00120E  20F4               	addwfc	prodh,w,c
  3347  001210  6EF7               	movwf	tblptrh,c
  3348  001212                     	if	0	;There are less than 3 active tblptr bytes
  3349  001212                     	endif
  3350  001212  0009               	tblrd		*+
  3351  001214  FFFF               	dw	65535	; errata NOP
  3352  001216  50F5               	movf	tablat,w,c
  3353  001218  0101               	movlb	1	; () banked
  3354  00121A  5D37               	subwf	sprintf@_val& (0+255),w,b
  3355  00121C  0009               	tblrd		*+
  3356  00121E  FFFF               	dw	65535	; errata NOP
  3357  001220  50F5               	movf	tablat,w,c
  3358  001222  0101               	movlb	1	; () banked
  3359  001224  5938               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3360  001226  0009               	tblrd		*+
  3361  001228  FFFF               	dw	65535	; errata NOP
  3362  00122A  50F5               	movf	tablat,w,c
  3363  00122C  0101               	movlb	1	; () banked
  3364  00122E  5939               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3365  001230  0009               	tblrd		*+
  3366  001232  FFFF               	dw	65535	; errata NOP
  3367  001234  50F5               	movf	tablat,w,c
  3368  001236  0101               	movlb	1	; () banked
  3369  001238  593A               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3370  00123A  A0D8               	btfss	status,0,c
  3371  00123C  D003               	goto	l3523
  3372                           
  3373                           ; BSR set to: 1
  3374                           
  3375                           ; BSR set to: 1
  3376                           
  3377                           ; BSR set to: 1
  3378                           ;doprnt.c: 1103: break;
  3379  00123E  0101               	movlb	1	; () banked
  3380  001240  2B43               	incf	sprintf@c& (0+255),f,b
  3381  001242  D7D9               	goto	L5
  3382  001244                     l3523:
  3383                           
  3384                           ; BSR set to: 1
  3385                           ;doprnt.c: 1104: prec -= c;
  3386  001244  0101               	movlb	1	; () banked
  3387  001246  5143               	movf	sprintf@c& (0+255),w,b
  3388  001248  0101               	movlb	1	; () banked
  3389  00124A  5F41               	subwf	sprintf@prec& (0+255),f,b
  3390  00124C  0E00               	movlw	0
  3391  00124E  0101               	movlb	1	; () banked
  3392  001250  BF43               	btfsc	sprintf@c& (0+255),7,b
  3393  001252  0EFF               	movlw	255
  3394  001254  0101               	movlb	1	; () banked
  3395  001256  5B42               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3396                           
  3397                           ; BSR set to: 1
  3398                           ;doprnt.c: 1105: if(prec <= 12)
  3399  001258  0101               	movlb	1	; () banked
  3400  00125A  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  3401  00125C  0A80               	xorlw	128
  3402  00125E  6EF3               	movwf	prodl,c
  3403  001260  0E80               	movlw	128
  3404  001262  5CF3               	subwf	prodl,w,c
  3405  001264  0E0D               	movlw	13
  3406  001266  B4D8               	btfsc	status,2,c
  3407  001268  5D41               	subwf	sprintf@prec& (0+255),w,b
  3408  00126A  B0D8               	btfsc	status,0,c
  3409  00126C  D018               	goto	l276
  3410                           
  3411                           ; BSR set to: 1
  3412                           ;doprnt.c: 1106: fval += fround(prec);
  3413  00126E  C13E  F0D3         	movff	sprintf@fval,___ftadd@f1
  3414  001272  C13F  F0D4         	movff	sprintf@fval+1,___ftadd@f1+1
  3415  001276  C140  F0D5         	movff	sprintf@fval+2,___ftadd@f1+2
  3416  00127A  0101               	movlb	1	; () banked
  3417  00127C  5141               	movf	sprintf@prec& (0+255),w,b
  3418  00127E  EC87  F010         	call	_fround
  3419  001282  C0C9  F0D6         	movff	?_fround,___ftadd@f2
  3420  001286  C0CA  F0D7         	movff	?_fround+1,___ftadd@f2+1
  3421  00128A  C0CB  F0D8         	movff	?_fround+2,___ftadd@f2+2
  3422  00128E  EC13  F012         	call	___ftadd	;wreg free
  3423  001292  C0D3  F13E         	movff	?___ftadd,sprintf@fval
  3424  001296  C0D4  F13F         	movff	?___ftadd+1,sprintf@fval+1
  3425  00129A  C0D5  F140         	movff	?___ftadd+2,sprintf@fval+2
  3426  00129E                     l276:
  3427                           
  3428                           ;doprnt.c: 1109: {
  3429                           ;doprnt.c: 1110: double temp;
  3430                           ;doprnt.c: 1111: temp = scale(prec);
  3431  00129E  0101               	movlb	1	; () banked
  3432  0012A0  5141               	movf	sprintf@prec& (0+255),w,b
  3433  0012A2  ECB9  F00D         	call	_scale
  3434  0012A6  C0C9  F129         	movff	?_scale,sprintf@temp
  3435  0012AA  C0CA  F12A         	movff	?_scale+1,sprintf@temp+1
  3436  0012AE  C0CB  F12B         	movff	?_scale+2,sprintf@temp+2
  3437                           
  3438                           ;doprnt.c: 1112: temp *= fval - (double)_val._val;
  3439  0012B2  C129  F0BA         	movff	sprintf@temp,___ftmul@f1
  3440  0012B6  C12A  F0BB         	movff	sprintf@temp+1,___ftmul@f1+1
  3441  0012BA  C12B  F0BC         	movff	sprintf@temp+2,___ftmul@f1+2
  3442  0012BE  C13E  F0D6         	movff	sprintf@fval,___ftadd@f2
  3443  0012C2  C13F  F0D7         	movff	sprintf@fval+1,___ftadd@f2+1
  3444  0012C6  C140  F0D8         	movff	sprintf@fval+2,___ftadd@f2+2
  3445  0012CA  C137  F0AE         	movff	sprintf@_val,___lltoft@c
  3446  0012CE  C138  F0AF         	movff	sprintf@_val+1,___lltoft@c+1
  3447  0012D2  C139  F0B0         	movff	sprintf@_val+2,___lltoft@c+2
  3448  0012D6  C13A  F0B1         	movff	sprintf@_val+3,___lltoft@c+3
  3449  0012DA  ECEE  F01D         	call	___lltoft	;wreg free
  3450  0012DE  C0AE  F0B7         	movff	?___lltoft,___ftneg@f1
  3451  0012E2  C0AF  F0B8         	movff	?___lltoft+1,___ftneg@f1+1
  3452  0012E6  C0B0  F0B9         	movff	?___lltoft+2,___ftneg@f1+2
  3453  0012EA  EC63  F01F         	call	___ftneg	;wreg free
  3454  0012EE  C0B7  F0D3         	movff	?___ftneg,___ftadd@f1
  3455  0012F2  C0B8  F0D4         	movff	?___ftneg+1,___ftadd@f1+1
  3456  0012F6  C0B9  F0D5         	movff	?___ftneg+2,___ftadd@f1+2
  3457  0012FA  EC13  F012         	call	___ftadd	;wreg free
  3458  0012FE  C0D3  F0BD         	movff	?___ftadd,___ftmul@f2
  3459  001302  C0D4  F0BE         	movff	?___ftadd+1,___ftmul@f2+1
  3460  001306  C0D5  F0BF         	movff	?___ftadd+2,___ftmul@f2+2
  3461  00130A  EC1B  F017         	call	___ftmul	;wreg free
  3462  00130E  C0BA  F129         	movff	?___ftmul,sprintf@temp
  3463  001312  C0BB  F12A         	movff	?___ftmul+1,sprintf@temp+1
  3464  001316  C0BC  F12B         	movff	?___ftmul+2,sprintf@temp+2
  3465                           
  3466                           ;doprnt.c: 1113: _val._val = (unsigned long)temp;
  3467  00131A  C129  F09F         	movff	sprintf@temp,___fttol@f1
  3468  00131E  C12A  F0A0         	movff	sprintf@temp+1,___fttol@f1+1
  3469  001322  C12B  F0A1         	movff	sprintf@temp+2,___fttol@f1+2
  3470  001326  EC79  F018         	call	___fttol	;wreg free
  3471  00132A  C09F  F137         	movff	?___fttol,sprintf@_val
  3472  00132E  C0A0  F138         	movff	?___fttol+1,sprintf@_val+1
  3473  001332  C0A1  F139         	movff	?___fttol+2,sprintf@_val+2
  3474  001336  C0A2  F13A         	movff	?___fttol+3,sprintf@_val+3
  3475                           
  3476                           ;doprnt.c: 1114: }
  3477                           ;doprnt.c: 1115: while(prec && _val._val % 10 == 0) {
  3478  00133A  D022               	goto	l3537
  3479  00133C                     l3533:
  3480                           
  3481                           ;doprnt.c: 1116: _val._val /= 10;
  3482  00133C  C137  F09F         	movff	sprintf@_val,___lldiv@dividend
  3483  001340  C138  F0A0         	movff	sprintf@_val+1,___lldiv@dividend+1
  3484  001344  C139  F0A1         	movff	sprintf@_val+2,___lldiv@dividend+2
  3485  001348  C13A  F0A2         	movff	sprintf@_val+3,___lldiv@dividend+3
  3486  00134C  0E0A               	movlw	10
  3487  00134E  0100               	movlb	0	; () banked
  3488  001350  6FA3               	movwf	___lldiv@divisor& (0+255),b
  3489  001352  0E00               	movlw	0
  3490  001354  0100               	movlb	0	; () banked
  3491  001356  6FA4               	movwf	(___lldiv@divisor+1)& (0+255),b
  3492  001358  0E00               	movlw	0
  3493  00135A  0100               	movlb	0	; () banked
  3494  00135C  6FA5               	movwf	(___lldiv@divisor+2)& (0+255),b
  3495  00135E  0E00               	movlw	0
  3496  001360  0100               	movlb	0	; () banked
  3497  001362  6FA6               	movwf	(___lldiv@divisor+3)& (0+255),b
  3498  001364  ECB4  F01B         	call	___lldiv	;wreg free
  3499  001368  C09F  F137         	movff	?___lldiv,sprintf@_val
  3500  00136C  C0A0  F138         	movff	?___lldiv+1,sprintf@_val+1
  3501  001370  C0A1  F139         	movff	?___lldiv+2,sprintf@_val+2
  3502  001374  C0A2  F13A         	movff	?___lldiv+3,sprintf@_val+3
  3503                           
  3504                           ;doprnt.c: 1117: prec--;
  3505  001378  0101               	movlb	1	; () banked
  3506  00137A  0741               	decf	sprintf@prec& (0+255),f,b
  3507  00137C  A0D8               	btfss	status,0,c
  3508  00137E  0742               	decf	(sprintf@prec+1)& (0+255),f,b
  3509  001380                     l3537:
  3510  001380  0101               	movlb	1	; () banked
  3511  001382  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  3512  001384  1141               	iorwf	sprintf@prec& (0+255),w,b
  3513  001386  B4D8               	btfsc	status,2,c
  3514  001388  D049               	goto	l3545
  3515                           
  3516                           ; BSR set to: 1
  3517  00138A  C137  F09F         	movff	sprintf@_val,___llmod@dividend
  3518  00138E  C138  F0A0         	movff	sprintf@_val+1,___llmod@dividend+1
  3519  001392  C139  F0A1         	movff	sprintf@_val+2,___llmod@dividend+2
  3520  001396  C13A  F0A2         	movff	sprintf@_val+3,___llmod@dividend+3
  3521  00139A  0E0A               	movlw	10
  3522  00139C  0100               	movlb	0	; () banked
  3523  00139E  6FA3               	movwf	___llmod@divisor& (0+255),b
  3524  0013A0  0E00               	movlw	0
  3525  0013A2  0100               	movlb	0	; () banked
  3526  0013A4  6FA4               	movwf	(___llmod@divisor+1)& (0+255),b
  3527  0013A6  0E00               	movlw	0
  3528  0013A8  0100               	movlb	0	; () banked
  3529  0013AA  6FA5               	movwf	(___llmod@divisor+2)& (0+255),b
  3530  0013AC  0E00               	movlw	0
  3531  0013AE  0100               	movlb	0	; () banked
  3532  0013B0  6FA6               	movwf	(___llmod@divisor+3)& (0+255),b
  3533  0013B2  EC46  F01D         	call	___llmod	;wreg free
  3534  0013B6  C09F  F114         	movff	?___llmod,??_sprintf
  3535  0013BA  C0A0  F115         	movff	?___llmod+1,??_sprintf+1
  3536  0013BE  C0A1  F116         	movff	?___llmod+2,??_sprintf+2
  3537  0013C2  C0A2  F117         	movff	?___llmod+3,??_sprintf+3
  3538  0013C6  0101               	movlb	1	; () banked
  3539  0013C8  5117               	movf	(??_sprintf+3)& (0+255),w,b
  3540  0013CA  1114               	iorwf	??_sprintf& (0+255),w,b
  3541  0013CC  1115               	iorwf	(??_sprintf+1)& (0+255),w,b
  3542  0013CE  1116               	iorwf	(??_sprintf+2)& (0+255),w,b
  3543  0013D0  A4D8               	btfss	status,2,c
  3544  0013D2  D024               	goto	l3545
  3545  0013D4  D7B3               	goto	l3533
  3546  0013D6                     l3541:
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;doprnt.c: 1121: if(prec <= 12)
  3550  0013D6  0101               	movlb	1	; () banked
  3551  0013D8  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  3552  0013DA  0A80               	xorlw	128
  3553  0013DC  6EF3               	movwf	prodl,c
  3554  0013DE  0E80               	movlw	128
  3555  0013E0  5CF3               	subwf	prodl,w,c
  3556  0013E2  0E0D               	movlw	13
  3557  0013E4  B4D8               	btfsc	status,2,c
  3558  0013E6  5D41               	subwf	sprintf@prec& (0+255),w,b
  3559  0013E8  B0D8               	btfsc	status,0,c
  3560  0013EA  D018               	goto	l3545
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;doprnt.c: 1122: fval += fround(prec);
  3564  0013EC  C13E  F0D3         	movff	sprintf@fval,___ftadd@f1
  3565  0013F0  C13F  F0D4         	movff	sprintf@fval+1,___ftadd@f1+1
  3566  0013F4  C140  F0D5         	movff	sprintf@fval+2,___ftadd@f1+2
  3567  0013F8  0101               	movlb	1	; () banked
  3568  0013FA  5141               	movf	sprintf@prec& (0+255),w,b
  3569  0013FC  EC87  F010         	call	_fround
  3570  001400  C0C9  F0D6         	movff	?_fround,___ftadd@f2
  3571  001404  C0CA  F0D7         	movff	?_fround+1,___ftadd@f2+1
  3572  001408  C0CB  F0D8         	movff	?_fround+2,___ftadd@f2+2
  3573  00140C  EC13  F012         	call	___ftadd	;wreg free
  3574  001410  C0D3  F13E         	movff	?___ftadd,sprintf@fval
  3575  001414  C0D4  F13F         	movff	?___ftadd+1,sprintf@fval+1
  3576  001418  C0D5  F140         	movff	?___ftadd+2,sprintf@fval+2
  3577  00141C                     l3545:
  3578                           
  3579                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3580  00141C  0101               	movlb	1	; () banked
  3581  00141E  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  3582  001420  0A80               	xorlw	128
  3583  001422  6EF3               	movwf	prodl,c
  3584  001424  0E80               	movlw	128
  3585  001426  5CF3               	subwf	prodl,w,c
  3586  001428  0E0A               	movlw	10
  3587  00142A  B4D8               	btfsc	status,2,c
  3588  00142C  5D3C               	subwf	sprintf@exp& (0+255),w,b
  3589  00142E  B0D8               	btfsc	status,0,c
  3590  001430  D029               	goto	l3553
  3591                           
  3592                           ; BSR set to: 1
  3593  001432  0E7F               	movlw	127
  3594  001434  0101               	movlb	1	; () banked
  3595  001436  1540               	andwf	(sprintf@fval+2)& (0+255),w,b
  3596  001438  0101               	movlb	1	; () banked
  3597  00143A  113F               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3598  00143C  0101               	movlb	1	; () banked
  3599  00143E  113E               	iorwf	sprintf@fval& (0+255),w,b
  3600  001440  B4D8               	btfsc	status,2,c
  3601  001442  D06F               	goto	l3569
  3602                           
  3603                           ; BSR set to: 1
  3604  001444  C13E  F09F         	movff	sprintf@fval,___fttol@f1
  3605  001448  C13F  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
  3606  00144C  C140  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
  3607  001450  EC79  F018         	call	___fttol	;wreg free
  3608  001454  C09F  F114         	movff	?___fttol,??_sprintf
  3609  001458  C0A0  F115         	movff	?___fttol+1,??_sprintf+1
  3610  00145C  C0A1  F116         	movff	?___fttol+2,??_sprintf+2
  3611  001460  C0A2  F117         	movff	?___fttol+3,??_sprintf+3
  3612  001464  0101               	movlb	1	; () banked
  3613  001466  5117               	movf	(??_sprintf+3)& (0+255),w,b
  3614  001468  1114               	iorwf	??_sprintf& (0+255),w,b
  3615  00146A  1115               	iorwf	(??_sprintf+1)& (0+255),w,b
  3616  00146C  1116               	iorwf	(??_sprintf+2)& (0+255),w,b
  3617  00146E  A4D8               	btfss	status,2,c
  3618  001470  D058               	goto	l3569
  3619                           
  3620                           ; BSR set to: 1
  3621  001472  0101               	movlb	1	; () banked
  3622  001474  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  3623  001476  0A80               	xorlw	128
  3624  001478  0F80               	addlw	-128
  3625  00147A  0E02               	movlw	2
  3626  00147C  B4D8               	btfsc	status,2,c
  3627  00147E  5D3C               	subwf	sprintf@exp& (0+255),w,b
  3628  001480  A0D8               	btfss	status,0,c
  3629  001482  D04F               	goto	l3569
  3630  001484                     l3553:
  3631                           
  3632                           ; BSR set to: 1
  3633                           ;doprnt.c: 1129: if(integ < 4.294967296){
  3634  001484  C130  F100         	movff	sprintf@integ,___ftge@ff1
  3635  001488  C131  F101         	movff	sprintf@integ+1,___ftge@ff1+1
  3636  00148C  C132  F102         	movff	sprintf@integ+2,___ftge@ff1+2
  3637  001490  0E70               	movlw	112
  3638  001492  0101               	movlb	1	; () banked
  3639  001494  6F03               	movwf	___ftge@ff2& (0+255),b
  3640  001496  0E89               	movlw	137
  3641  001498  0101               	movlb	1	; () banked
  3642  00149A  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  3643  00149C  0E40               	movlw	64
  3644  00149E  0101               	movlb	1	; () banked
  3645  0014A0  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  3646  0014A2  EC20  F01C         	call	___ftge	;wreg free
  3647  0014A6  B0D8               	btfsc	status,0,c
  3648  0014A8  D003               	goto	l3557
  3649                           
  3650                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3651  0014AA  0101               	movlb	1	; () banked
  3652  0014AC  0EF7               	movlw	247
  3653  0014AE  D002               	goto	L6
  3654  0014B0                     l3557:
  3655                           
  3656                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3657  0014B0  0101               	movlb	1	; () banked
  3658  0014B2  0EF8               	movlw	248
  3659  0014B4                     L6:
  3660  0014B4  0101               	movlb	1	; () banked
  3661  0014B6  273C               	addwf	sprintf@exp& (0+255),f,b
  3662  0014B8  0EFF               	movlw	255
  3663  0014BA  0101               	movlb	1	; () banked
  3664  0014BC  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3665                           
  3666                           ; BSR set to: 1
  3667                           ;doprnt.c: 1133: }
  3668                           ;doprnt.c: 1134: integ = scale(exp);
  3669                           
  3670                           ; BSR set to: 1
  3671  0014BE  0101               	movlb	1	; () banked
  3672  0014C0  513C               	movf	sprintf@exp& (0+255),w,b
  3673  0014C2  ECB9  F00D         	call	_scale
  3674  0014C6  C0C9  F130         	movff	?_scale,sprintf@integ
  3675  0014CA  C0CA  F131         	movff	?_scale+1,sprintf@integ+1
  3676  0014CE  C0CB  F132         	movff	?_scale+2,sprintf@integ+2
  3677                           
  3678                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  3679  0014D2  C13E  F09F         	movff	sprintf@fval,__tdiv_to_l_@f1
  3680  0014D6  C13F  F0A0         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  3681  0014DA  C140  F0A1         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  3682  0014DE  C130  F0A2         	movff	sprintf@integ,__tdiv_to_l_@f2
  3683  0014E2  C131  F0A3         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
  3684  0014E6  C132  F0A4         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
  3685  0014EA  EC4E  F016         	call	__tdiv_to_l_	;wreg free
  3686  0014EE  C09F  F11D         	movff	?__tdiv_to_l_,_sprintf$1138
  3687  0014F2  C0A0  F11E         	movff	?__tdiv_to_l_+1,_sprintf$1138+1
  3688  0014F6  C0A1  F11F         	movff	?__tdiv_to_l_+2,_sprintf$1138+2
  3689  0014FA  C0A2  F120         	movff	?__tdiv_to_l_+3,_sprintf$1138+3
  3690  0014FE  C11D  F137         	movff	_sprintf$1138,sprintf@_val
  3691  001502  C11E  F138         	movff	_sprintf$1138+1,sprintf@_val+1
  3692  001506  C11F  F139         	movff	_sprintf$1138+2,sprintf@_val+2
  3693  00150A  C120  F13A         	movff	_sprintf$1138+3,sprintf@_val+3
  3694                           
  3695                           ;doprnt.c: 1138: fval = 0.0;
  3696  00150E  0E00               	movlw	0
  3697  001510  0101               	movlb	1	; () banked
  3698  001512  6F3E               	movwf	sprintf@fval& (0+255),b
  3699  001514  0E00               	movlw	0
  3700  001516  0101               	movlb	1	; () banked
  3701  001518  6F3F               	movwf	(sprintf@fval+1)& (0+255),b
  3702  00151A  0E00               	movlw	0
  3703  00151C  0101               	movlb	1	; () banked
  3704  00151E  6F40               	movwf	(sprintf@fval+2)& (0+255),b
  3705                           
  3706                           ;doprnt.c: 1139: } else {
  3707  001520  D034               	goto	l3573
  3708  001522                     l3569:
  3709                           
  3710                           ; BSR set to: 1
  3711                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  3712  001522  C13E  F09F         	movff	sprintf@fval,___fttol@f1
  3713  001526  C13F  F0A0         	movff	sprintf@fval+1,___fttol@f1+1
  3714  00152A  C140  F0A1         	movff	sprintf@fval+2,___fttol@f1+2
  3715  00152E  EC79  F018         	call	___fttol	;wreg free
  3716  001532  C09F  F137         	movff	?___fttol,sprintf@_val
  3717  001536  C0A0  F138         	movff	?___fttol+1,sprintf@_val+1
  3718  00153A  C0A1  F139         	movff	?___fttol+2,sprintf@_val+2
  3719  00153E  C0A2  F13A         	movff	?___fttol+3,sprintf@_val+3
  3720                           
  3721                           ;doprnt.c: 1141: fval -= (double)_val._val;
  3722  001542  C13E  F100         	movff	sprintf@fval,___ftsub@f1
  3723  001546  C13F  F101         	movff	sprintf@fval+1,___ftsub@f1+1
  3724  00154A  C140  F102         	movff	sprintf@fval+2,___ftsub@f1+2
  3725  00154E  C137  F0AE         	movff	sprintf@_val,___lltoft@c
  3726  001552  C138  F0AF         	movff	sprintf@_val+1,___lltoft@c+1
  3727  001556  C139  F0B0         	movff	sprintf@_val+2,___lltoft@c+2
  3728  00155A  C13A  F0B1         	movff	sprintf@_val+3,___lltoft@c+3
  3729  00155E  ECEE  F01D         	call	___lltoft	;wreg free
  3730  001562  C0AE  F103         	movff	?___lltoft,___ftsub@f2
  3731  001566  C0AF  F104         	movff	?___lltoft+1,___ftsub@f2+1
  3732  00156A  C0B0  F105         	movff	?___lltoft+2,___ftsub@f2+2
  3733  00156E  ECAF  F01E         	call	___ftsub	;wreg free
  3734  001572  C100  F13E         	movff	?___ftsub,sprintf@fval
  3735  001576  C101  F13F         	movff	?___ftsub+1,sprintf@fval+1
  3736  00157A  C102  F140         	movff	?___ftsub+2,sprintf@fval+2
  3737                           
  3738                           ;doprnt.c: 1142: exp = 0;
  3739  00157E  0E00               	movlw	0
  3740  001580  0101               	movlb	1	; () banked
  3741  001582  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  3742  001584  0E00               	movlw	0
  3743  001586  0101               	movlb	1	; () banked
  3744  001588  6F3C               	movwf	sprintf@exp& (0+255),b
  3745  00158A                     l3573:
  3746                           
  3747                           ; BSR set to: 1
  3748                           ;doprnt.c: 1143: }
  3749                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3750  00158A  0E01               	movlw	1
  3751  00158C  0101               	movlb	1	; () banked
  3752  00158E  6F43               	movwf	sprintf@c& (0+255),b
  3753  001590                     
  3754                           ; BSR set to: 1
  3755  001590  0101               	movlb	1	; () banked
  3756  001592  5143               	movf	sprintf@c& (0+255),w,b
  3757  001594  0A0A               	xorlw	10
  3758  001596  B4D8               	btfsc	status,2,c
  3759  001598  D022               	goto	l3587
  3760                           
  3761                           ; BSR set to: 1
  3762                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  3763                           
  3764                           ; BSR set to: 1
  3765                           
  3766                           ; BSR set to: 1
  3767  00159A  0101               	movlb	1	; () banked
  3768  00159C  5143               	movf	sprintf@c& (0+255),w,b
  3769  00159E  0D04               	mullw	4
  3770  0015A0  0E01               	movlw	low _dpowers
  3771  0015A2  24F3               	addwf	prodl,w,c
  3772  0015A4  6EF6               	movwf	tblptrl,c
  3773  0015A6  0E06               	movlw	high _dpowers
  3774  0015A8  20F4               	addwfc	prodh,w,c
  3775  0015AA  6EF7               	movwf	tblptrh,c
  3776  0015AC                     	if	0	;There are less than 3 active tblptr bytes
  3777  0015AC                     	endif
  3778  0015AC  0009               	tblrd		*+
  3779  0015AE  FFFF               	dw	65535	; errata NOP
  3780  0015B0  50F5               	movf	tablat,w,c
  3781  0015B2  0101               	movlb	1	; () banked
  3782  0015B4  5D37               	subwf	sprintf@_val& (0+255),w,b
  3783  0015B6  0009               	tblrd		*+
  3784  0015B8  FFFF               	dw	65535	; errata NOP
  3785  0015BA  50F5               	movf	tablat,w,c
  3786  0015BC  0101               	movlb	1	; () banked
  3787  0015BE  5938               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3788  0015C0  0009               	tblrd		*+
  3789  0015C2  FFFF               	dw	65535	; errata NOP
  3790  0015C4  50F5               	movf	tablat,w,c
  3791  0015C6  0101               	movlb	1	; () banked
  3792  0015C8  5939               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3793  0015CA  0009               	tblrd		*+
  3794  0015CC  FFFF               	dw	65535	; errata NOP
  3795  0015CE  50F5               	movf	tablat,w,c
  3796  0015D0  0101               	movlb	1	; () banked
  3797  0015D2  593A               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3798  0015D4  A0D8               	btfss	status,0,c
  3799  0015D6  D003               	goto	l3587
  3800                           
  3801                           ; BSR set to: 1
  3802                           
  3803                           ; BSR set to: 1
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;doprnt.c: 1147: break;
  3807  0015D8  0101               	movlb	1	; () banked
  3808  0015DA  2B43               	incf	sprintf@c& (0+255),f,b
  3809  0015DC  D7D9               	goto	L7
  3810  0015DE                     l3587:
  3811                           
  3812                           ; BSR set to: 1
  3813                           ;doprnt.c: 1151: width -= prec + c + exp;
  3814  0015DE  0101               	movlb	1	; () banked
  3815  0015E0  C143  F114         	movff	sprintf@c,??_sprintf
  3816  0015E4  0101               	movlb	1	; () banked
  3817  0015E6  6B15               	clrf	(??_sprintf+1)& (0+255),b
  3818  0015E8  BF14               	btfsc	??_sprintf& (0+255),7,b
  3819  0015EA  0715               	decf	(??_sprintf+1)& (0+255),f,b
  3820  0015EC  0101               	movlb	1	; () banked
  3821  0015EE  5141               	movf	sprintf@prec& (0+255),w,b
  3822  0015F0  0101               	movlb	1	; () banked
  3823  0015F2  2714               	addwf	??_sprintf& (0+255),f,b
  3824  0015F4  0101               	movlb	1	; () banked
  3825  0015F6  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  3826  0015F8  0101               	movlb	1	; () banked
  3827  0015FA  2315               	addwfc	(??_sprintf+1)& (0+255),f,b
  3828  0015FC  0101               	movlb	1	; () banked
  3829  0015FE  513C               	movf	sprintf@exp& (0+255),w,b
  3830  001600  0101               	movlb	1	; () banked
  3831  001602  2714               	addwf	??_sprintf& (0+255),f,b
  3832  001604  0101               	movlb	1	; () banked
  3833  001606  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  3834  001608  0101               	movlb	1	; () banked
  3835  00160A  2315               	addwfc	(??_sprintf+1)& (0+255),f,b
  3836  00160C  0101               	movlb	1	; () banked
  3837  00160E  5114               	movf	??_sprintf& (0+255),w,b
  3838  001610  0101               	movlb	1	; () banked
  3839  001612  5F33               	subwf	sprintf@width& (0+255),f,b
  3840  001614  0101               	movlb	1	; () banked
  3841  001616  5115               	movf	(??_sprintf+1)& (0+255),w,b
  3842  001618  0101               	movlb	1	; () banked
  3843  00161A  5B34               	subwfb	(sprintf@width+1)& (0+255),f,b
  3844                           
  3845                           ;doprnt.c: 1152: if(
  3846                           ;doprnt.c: 1156: prec)
  3847  00161C  0101               	movlb	1	; () banked
  3848  00161E  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  3849  001620  1141               	iorwf	sprintf@prec& (0+255),w,b
  3850  001622  B4D8               	btfsc	status,2,c
  3851  001624  D004               	goto	l3591
  3852                           
  3853                           ; BSR set to: 1
  3854                           ;doprnt.c: 1157: width--;
  3855  001626  0101               	movlb	1	; () banked
  3856  001628  0733               	decf	sprintf@width& (0+255),f,b
  3857  00162A  A0D8               	btfss	status,0,c
  3858  00162C  0734               	decf	(sprintf@width+1)& (0+255),f,b
  3859  00162E                     l3591:
  3860                           
  3861                           ; BSR set to: 1
  3862                           ;doprnt.c: 1158: if(flag & 0x03)
  3863  00162E  0E03               	movlw	3
  3864  001630  0101               	movlb	1	; () banked
  3865  001632  1535               	andwf	sprintf@flag& (0+255),w,b
  3866  001634  0101               	movlb	1	; () banked
  3867  001636  6F14               	movwf	??_sprintf& (0+255),b
  3868  001638  0E00               	movlw	0
  3869  00163A  0101               	movlb	1	; () banked
  3870  00163C  1536               	andwf	(sprintf@flag+1)& (0+255),w,b
  3871  00163E  0101               	movlb	1	; () banked
  3872  001640  6F15               	movwf	(??_sprintf+1)& (0+255),b
  3873  001642  0101               	movlb	1	; () banked
  3874  001644  5115               	movf	(??_sprintf+1)& (0+255),w,b
  3875  001646  1114               	iorwf	??_sprintf& (0+255),w,b
  3876  001648  B4D8               	btfsc	status,2,c
  3877  00164A  D011               	goto	l3603
  3878  00164C  D00C               	goto	L8
  3879  00164E                     l3595:
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;doprnt.c: 1190: ((*sp++ = (' ')),(++ccnt));
  3883  00164E  C109  FFD9         	movff	sprintf@sp,fsr2l
  3884  001652  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3885  001656  0E20               	movlw	32
  3886  001658  6EDF               	movwf	indf2,c
  3887                           
  3888                           ; BSR set to: 1
  3889  00165A  0101               	movlb	1	; () banked
  3890  00165C  4B09               	infsnz	sprintf@sp& (0+255),f,b
  3891  00165E  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  3892                           
  3893                           ; BSR set to: 1
  3894  001660  0101               	movlb	1	; () banked
  3895  001662  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  3896  001664  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3897  001666                     L8:
  3898                           
  3899                           ; BSR set to: 1
  3900                           ;doprnt.c: 1191: width--;
  3901  001666  0101               	movlb	1	; () banked
  3902  001668  0733               	decf	sprintf@width& (0+255),f,b
  3903  00166A  A0D8               	btfss	status,0,c
  3904  00166C  0734               	decf	(sprintf@width+1)& (0+255),f,b
  3905  00166E                     l3603:
  3906                           
  3907                           ; BSR set to: 1
  3908  00166E  0101               	movlb	1	; () banked
  3909  001670  5134               	movf	(sprintf@width+1)& (0+255),w,b
  3910  001672  0A80               	xorlw	128
  3911  001674  6EF3               	movwf	prodl,c
  3912  001676  0E80               	movlw	128
  3913  001678  5CF3               	subwf	prodl,w,c
  3914  00167A  0E01               	movlw	1
  3915  00167C  B4D8               	btfsc	status,2,c
  3916  00167E  5D33               	subwf	sprintf@width& (0+255),w,b
  3917  001680  B0D8               	btfsc	status,0,c
  3918  001682  D7E5               	goto	l3595
  3919                           
  3920                           ; BSR set to: 1
  3921                           ;doprnt.c: 1192: }
  3922                           ;doprnt.c: 1197: if(flag & 0x03)
  3923                           
  3924                           ; BSR set to: 1
  3925  001684  0E03               	movlw	3
  3926  001686  0101               	movlb	1	; () banked
  3927  001688  1535               	andwf	sprintf@flag& (0+255),w,b
  3928  00168A  0101               	movlb	1	; () banked
  3929  00168C  6F14               	movwf	??_sprintf& (0+255),b
  3930  00168E  0E00               	movlw	0
  3931  001690  0101               	movlb	1	; () banked
  3932  001692  1536               	andwf	(sprintf@flag+1)& (0+255),w,b
  3933  001694  0101               	movlb	1	; () banked
  3934  001696  6F15               	movwf	(??_sprintf+1)& (0+255),b
  3935  001698  0101               	movlb	1	; () banked
  3936  00169A  5115               	movf	(??_sprintf+1)& (0+255),w,b
  3937  00169C  1114               	iorwf	??_sprintf& (0+255),w,b
  3938  00169E  B4D8               	btfsc	status,2,c
  3939  0016A0  D061               	goto	l3623
  3940                           
  3941                           ; BSR set to: 1
  3942                           ;doprnt.c: 1199: ((*sp++ = ('-')),(++ccnt));
  3943  0016A2  C109  FFD9         	movff	sprintf@sp,fsr2l
  3944  0016A6  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  3945  0016AA  0E2D               	movlw	45
  3946  0016AC  D054               	goto	L9
  3947  0016AE                     l3613:
  3948                           
  3949                           ; BSR set to: 1
  3950                           ;doprnt.c: 1209: {
  3951                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  3952  0016AE  C137  F09F         	movff	sprintf@_val,___lldiv@dividend
  3953  0016B2  C138  F0A0         	movff	sprintf@_val+1,___lldiv@dividend+1
  3954  0016B6  C139  F0A1         	movff	sprintf@_val+2,___lldiv@dividend+2
  3955  0016BA  C13A  F0A2         	movff	sprintf@_val+3,___lldiv@dividend+3
  3956  0016BE  0101               	movlb	1	; () banked
  3957  0016C0  5143               	movf	sprintf@c& (0+255),w,b
  3958  0016C2  0D04               	mullw	4
  3959  0016C4  0E01               	movlw	low _dpowers
  3960  0016C6  24F3               	addwf	prodl,w,c
  3961  0016C8  6EF6               	movwf	tblptrl,c
  3962  0016CA  0E06               	movlw	high _dpowers
  3963  0016CC  20F4               	addwfc	prodh,w,c
  3964  0016CE  6EF7               	movwf	tblptrh,c
  3965  0016D0                     	if	0	;There are less than 3 active tblptr bytes
  3966  0016D0                     	endif
  3967  0016D0  0009               	tblrd		*+
  3968  0016D2  FFFF               	dw	65535	; errata NOP
  3969  0016D4  0100               	movlb	0	; () banked
  3970  0016D6  CFF5 F0A3          	movff	tablat,___lldiv@divisor
  3971  0016DA  0009               	tblrd		*+
  3972  0016DC  FFFF               	dw	65535	; errata NOP
  3973  0016DE  0100               	movlb	0	; () banked
  3974  0016E0  CFF5 F0A4          	movff	tablat,___lldiv@divisor+1
  3975  0016E4  0009               	tblrd		*+
  3976  0016E6  FFFF               	dw	65535	; errata NOP
  3977  0016E8  0100               	movlb	0	; () banked
  3978  0016EA  CFF5 F0A5          	movff	tablat,___lldiv@divisor+2
  3979  0016EE  000A               	tblrd		*-
  3980  0016F0  FFFF               	dw	65535	; errata NOP
  3981  0016F2  0100               	movlb	0	; () banked
  3982  0016F4  CFF5 F0A6          	movff	tablat,___lldiv@divisor+3
  3983  0016F8  ECB4  F01B         	call	___lldiv	;wreg free
  3984  0016FC  C09F  F121         	movff	?___lldiv,sprintf@vd
  3985  001700  C0A0  F122         	movff	?___lldiv+1,sprintf@vd+1
  3986  001704  C0A1  F123         	movff	?___lldiv+2,sprintf@vd+2
  3987  001708  C0A2  F124         	movff	?___lldiv+3,sprintf@vd+3
  3988                           
  3989                           ;doprnt.c: 1211: vd %= 10;
  3990  00170C  C121  F09F         	movff	sprintf@vd,___llmod@dividend
  3991  001710  C122  F0A0         	movff	sprintf@vd+1,___llmod@dividend+1
  3992  001714  C123  F0A1         	movff	sprintf@vd+2,___llmod@dividend+2
  3993  001718  C124  F0A2         	movff	sprintf@vd+3,___llmod@dividend+3
  3994  00171C  0E0A               	movlw	10
  3995  00171E  0100               	movlb	0	; () banked
  3996  001720  6FA3               	movwf	___llmod@divisor& (0+255),b
  3997  001722  0E00               	movlw	0
  3998  001724  0100               	movlb	0	; () banked
  3999  001726  6FA4               	movwf	(___llmod@divisor+1)& (0+255),b
  4000  001728  0E00               	movlw	0
  4001  00172A  0100               	movlb	0	; () banked
  4002  00172C  6FA5               	movwf	(___llmod@divisor+2)& (0+255),b
  4003  00172E  0E00               	movlw	0
  4004  001730  0100               	movlb	0	; () banked
  4005  001732  6FA6               	movwf	(___llmod@divisor+3)& (0+255),b
  4006  001734  EC46  F01D         	call	___llmod	;wreg free
  4007  001738  C09F  F121         	movff	?___llmod,sprintf@vd
  4008  00173C  C0A0  F122         	movff	?___llmod+1,sprintf@vd+1
  4009  001740  C0A1  F123         	movff	?___llmod+2,sprintf@vd+2
  4010  001744  C0A2  F124         	movff	?___llmod+3,sprintf@vd+3
  4011                           
  4012                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)),(++ccnt));
  4013  001748  0101               	movlb	1	; () banked
  4014  00174A  5121               	movf	sprintf@vd& (0+255),w,b
  4015  00174C  0F30               	addlw	48
  4016  00174E  C109  FFD9         	movff	sprintf@sp,fsr2l
  4017  001752  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  4018  001756                     L9:
  4019  001756  6EDF               	movwf	indf2,c
  4020                           
  4021                           ; BSR set to: 1
  4022  001758  0101               	movlb	1	; () banked
  4023  00175A  4B09               	infsnz	sprintf@sp& (0+255),f,b
  4024  00175C  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  4025                           
  4026                           ; BSR set to: 1
  4027  00175E  0101               	movlb	1	; () banked
  4028  001760  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  4029  001762  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4030  001764                     l3623:
  4031                           
  4032                           ; BSR set to: 1
  4033  001764  0101               	movlb	1	; () banked
  4034  001766  0743               	decf	sprintf@c& (0+255),f,b
  4035  001768  0101               	movlb	1	; () banked
  4036  00176A  2943               	incf	sprintf@c& (0+255),w,b
  4037  00176C  B4D8               	btfsc	status,2,c
  4038  00176E  D011               	goto	l3633
  4039  001770  D79E               	goto	l3613
  4040  001772                     l3625:
  4041                           
  4042                           ; BSR set to: 1
  4043                           ;doprnt.c: 1217: ((*sp++ = ('0')),(++ccnt));
  4044  001772  C109  FFD9         	movff	sprintf@sp,fsr2l
  4045  001776  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  4046  00177A  0E30               	movlw	48
  4047  00177C  6EDF               	movwf	indf2,c
  4048                           
  4049                           ; BSR set to: 1
  4050  00177E  0101               	movlb	1	; () banked
  4051  001780  4B09               	infsnz	sprintf@sp& (0+255),f,b
  4052  001782  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  4053                           
  4054                           ; BSR set to: 1
  4055  001784  0101               	movlb	1	; () banked
  4056  001786  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  4057  001788  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4058                           
  4059                           ; BSR set to: 1
  4060                           ;doprnt.c: 1218: exp--;
  4061  00178A  0101               	movlb	1	; () banked
  4062  00178C  073C               	decf	sprintf@exp& (0+255),f,b
  4063  00178E  A0D8               	btfss	status,0,c
  4064  001790  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  4065  001792                     l3633:
  4066                           
  4067                           ; BSR set to: 1
  4068  001792  0101               	movlb	1	; () banked
  4069  001794  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  4070  001796  0A80               	xorlw	128
  4071  001798  6EF3               	movwf	prodl,c
  4072  00179A  0E80               	movlw	128
  4073  00179C  5CF3               	subwf	prodl,w,c
  4074  00179E  0E01               	movlw	1
  4075  0017A0  B4D8               	btfsc	status,2,c
  4076  0017A2  5D3C               	subwf	sprintf@exp& (0+255),w,b
  4077  0017A4  B0D8               	btfsc	status,0,c
  4078  0017A6  D7E5               	goto	l3625
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;doprnt.c: 1219: }
  4082                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4083                           
  4084                           ; BSR set to: 1
  4085  0017A8  0101               	movlb	1	; () banked
  4086  0017AA  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  4087  0017AC  0A80               	xorlw	128
  4088  0017AE  0F80               	addlw	-128
  4089  0017B0  0E09               	movlw	9
  4090  0017B2  B4D8               	btfsc	status,2,c
  4091  0017B4  5D41               	subwf	sprintf@prec& (0+255),w,b
  4092  0017B6  A0D8               	btfss	status,0,c
  4093  0017B8  D004               	goto	l309
  4094                           
  4095                           ; BSR set to: 1
  4096                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4097  0017BA  0E08               	movlw	8
  4098  0017BC  0101               	movlb	1	; () banked
  4099  0017BE  6F43               	movwf	sprintf@c& (0+255),b
  4100  0017C0  D002               	goto	l3639
  4101  0017C2                     l309:
  4102                           
  4103                           ; BSR set to: 1
  4104                           ;doprnt.c: 1222: else
  4105                           ;doprnt.c: 1223: c = prec;
  4106  0017C2  C141  F143         	movff	sprintf@prec,sprintf@c
  4107  0017C6                     l3639:
  4108                           
  4109                           ; BSR set to: 1
  4110                           ;doprnt.c: 1224: prec -= c;
  4111  0017C6  0101               	movlb	1	; () banked
  4112  0017C8  5143               	movf	sprintf@c& (0+255),w,b
  4113  0017CA  0101               	movlb	1	; () banked
  4114  0017CC  5F41               	subwf	sprintf@prec& (0+255),f,b
  4115  0017CE  0E00               	movlw	0
  4116  0017D0  0101               	movlb	1	; () banked
  4117  0017D2  BF43               	btfsc	sprintf@c& (0+255),7,b
  4118  0017D4  0EFF               	movlw	255
  4119  0017D6  0101               	movlb	1	; () banked
  4120  0017D8  5B42               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4121                           
  4122                           ; BSR set to: 1
  4123                           ;doprnt.c: 1228: if(c)
  4124  0017DA  0101               	movlb	1	; () banked
  4125  0017DC  5143               	movf	sprintf@c& (0+255),w,b
  4126  0017DE  B4D8               	btfsc	status,2,c
  4127  0017E0  D00C               	goto	l3649
  4128                           
  4129                           ; BSR set to: 1
  4130                           ;doprnt.c: 1230: ((*sp++ = ('.')),(++ccnt));
  4131  0017E2  C109  FFD9         	movff	sprintf@sp,fsr2l
  4132  0017E6  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  4133  0017EA  0E2E               	movlw	46
  4134  0017EC  6EDF               	movwf	indf2,c
  4135                           
  4136                           ; BSR set to: 1
  4137  0017EE  0101               	movlb	1	; () banked
  4138  0017F0  4B09               	infsnz	sprintf@sp& (0+255),f,b
  4139  0017F2  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  4140                           
  4141                           ; BSR set to: 1
  4142  0017F4  0101               	movlb	1	; () banked
  4143  0017F6  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  4144  0017F8  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4145  0017FA                     l3649:
  4146                           
  4147                           ; BSR set to: 1
  4148                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  4149  0017FA  0101               	movlb	1	; () banked
  4150  0017FC  5143               	movf	sprintf@c& (0+255),w,b
  4151  0017FE  ECB9  F00D         	call	_scale
  4152  001802  C0C9  F11A         	movff	?_scale,_sprintf$1748
  4153  001806  C0CA  F11B         	movff	?_scale+1,_sprintf$1748+1
  4154  00180A  C0CB  F11C         	movff	?_scale+2,_sprintf$1748+2
  4155                           
  4156                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  4157  00180E  C13E  F0BD         	movff	sprintf@fval,___ftmul@f2
  4158  001812  C13F  F0BE         	movff	sprintf@fval+1,___ftmul@f2+1
  4159  001816  C140  F0BF         	movff	sprintf@fval+2,___ftmul@f2+2
  4160  00181A  C11A  F0BA         	movff	_sprintf$1748,___ftmul@f1
  4161  00181E  C11B  F0BB         	movff	_sprintf$1748+1,___ftmul@f1+1
  4162  001822  C11C  F0BC         	movff	_sprintf$1748+2,___ftmul@f1+2
  4163  001826  EC1B  F017         	call	___ftmul	;wreg free
  4164  00182A  C0BA  F09F         	movff	?___ftmul,___fttol@f1
  4165  00182E  C0BB  F0A0         	movff	?___ftmul+1,___fttol@f1+1
  4166  001832  C0BC  F0A1         	movff	?___ftmul+2,___fttol@f1+2
  4167  001836  EC79  F018         	call	___fttol	;wreg free
  4168  00183A  C09F  F137         	movff	?___fttol,sprintf@_val
  4169  00183E  C0A0  F138         	movff	?___fttol+1,sprintf@_val+1
  4170  001842  C0A1  F139         	movff	?___fttol+2,sprintf@_val+2
  4171  001846  C0A2  F13A         	movff	?___fttol+3,sprintf@_val+3
  4172                           
  4173                           ;doprnt.c: 1237: while(c--) {
  4174  00184A  D08A               	goto	l3665
  4175  00184C                     l3653:
  4176                           
  4177                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  4178  00184C  C137  F09F         	movff	sprintf@_val,___lldiv@dividend
  4179  001850  C138  F0A0         	movff	sprintf@_val+1,___lldiv@dividend+1
  4180  001854  C139  F0A1         	movff	sprintf@_val+2,___lldiv@dividend+2
  4181  001858  C13A  F0A2         	movff	sprintf@_val+3,___lldiv@dividend+3
  4182  00185C  0101               	movlb	1	; () banked
  4183  00185E  5143               	movf	sprintf@c& (0+255),w,b
  4184  001860  0D04               	mullw	4
  4185  001862  0E01               	movlw	low _dpowers
  4186  001864  24F3               	addwf	prodl,w,c
  4187  001866  6EF6               	movwf	tblptrl,c
  4188  001868  0E06               	movlw	high _dpowers
  4189  00186A  20F4               	addwfc	prodh,w,c
  4190  00186C  6EF7               	movwf	tblptrh,c
  4191  00186E                     	if	0	;There are less than 3 active tblptr bytes
  4192  00186E                     	endif
  4193  00186E  0009               	tblrd		*+
  4194  001870  FFFF               	dw	65535	; errata NOP
  4195  001872  0100               	movlb	0	; () banked
  4196  001874  CFF5 F0A3          	movff	tablat,___lldiv@divisor
  4197  001878  0009               	tblrd		*+
  4198  00187A  FFFF               	dw	65535	; errata NOP
  4199  00187C  0100               	movlb	0	; () banked
  4200  00187E  CFF5 F0A4          	movff	tablat,___lldiv@divisor+1
  4201  001882  0009               	tblrd		*+
  4202  001884  FFFF               	dw	65535	; errata NOP
  4203  001886  0100               	movlb	0	; () banked
  4204  001888  CFF5 F0A5          	movff	tablat,___lldiv@divisor+2
  4205  00188C  000A               	tblrd		*-
  4206  00188E  FFFF               	dw	65535	; errata NOP
  4207  001890  0100               	movlb	0	; () banked
  4208  001892  CFF5 F0A6          	movff	tablat,___lldiv@divisor+3
  4209  001896  ECB4  F01B         	call	___lldiv	;wreg free
  4210  00189A  C09F  F125         	movff	?___lldiv,sprintf@vd_1140
  4211  00189E  C0A0  F126         	movff	?___lldiv+1,sprintf@vd_1140+1
  4212  0018A2  C0A1  F127         	movff	?___lldiv+2,sprintf@vd_1140+2
  4213  0018A6  C0A2  F128         	movff	?___lldiv+3,sprintf@vd_1140+3
  4214                           
  4215                           ;doprnt.c: 1239: vd %= 10;
  4216  0018AA  C125  F09F         	movff	sprintf@vd_1140,___llmod@dividend
  4217  0018AE  C126  F0A0         	movff	sprintf@vd_1140+1,___llmod@dividend+1
  4218  0018B2  C127  F0A1         	movff	sprintf@vd_1140+2,___llmod@dividend+2
  4219  0018B6  C128  F0A2         	movff	sprintf@vd_1140+3,___llmod@dividend+3
  4220  0018BA  0E0A               	movlw	10
  4221  0018BC  0100               	movlb	0	; () banked
  4222  0018BE  6FA3               	movwf	___llmod@divisor& (0+255),b
  4223  0018C0  0E00               	movlw	0
  4224  0018C2  0100               	movlb	0	; () banked
  4225  0018C4  6FA4               	movwf	(___llmod@divisor+1)& (0+255),b
  4226  0018C6  0E00               	movlw	0
  4227  0018C8  0100               	movlb	0	; () banked
  4228  0018CA  6FA5               	movwf	(___llmod@divisor+2)& (0+255),b
  4229  0018CC  0E00               	movlw	0
  4230  0018CE  0100               	movlb	0	; () banked
  4231  0018D0  6FA6               	movwf	(___llmod@divisor+3)& (0+255),b
  4232  0018D2  EC46  F01D         	call	___llmod	;wreg free
  4233  0018D6  C09F  F125         	movff	?___llmod,sprintf@vd_1140
  4234  0018DA  C0A0  F126         	movff	?___llmod+1,sprintf@vd_1140+1
  4235  0018DE  C0A1  F127         	movff	?___llmod+2,sprintf@vd_1140+2
  4236  0018E2  C0A2  F128         	movff	?___llmod+3,sprintf@vd_1140+3
  4237                           
  4238                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)),(++ccnt));
  4239  0018E6  0101               	movlb	1	; () banked
  4240  0018E8  5125               	movf	sprintf@vd_1140& (0+255),w,b
  4241  0018EA  0F30               	addlw	48
  4242  0018EC  C109  FFD9         	movff	sprintf@sp,fsr2l
  4243  0018F0  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  4244  0018F4  6EDF               	movwf	indf2,c
  4245                           
  4246                           ; BSR set to: 1
  4247  0018F6  0101               	movlb	1	; () banked
  4248  0018F8  4B09               	infsnz	sprintf@sp& (0+255),f,b
  4249  0018FA  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  4250                           
  4251                           ; BSR set to: 1
  4252  0018FC  0101               	movlb	1	; () banked
  4253  0018FE  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  4254  001900  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  4258  001902  C137  F09F         	movff	sprintf@_val,___llmod@dividend
  4259  001906  C138  F0A0         	movff	sprintf@_val+1,___llmod@dividend+1
  4260  00190A  C139  F0A1         	movff	sprintf@_val+2,___llmod@dividend+2
  4261  00190E  C13A  F0A2         	movff	sprintf@_val+3,___llmod@dividend+3
  4262  001912  0101               	movlb	1	; () banked
  4263  001914  5143               	movf	sprintf@c& (0+255),w,b
  4264  001916  0D04               	mullw	4
  4265  001918  0E01               	movlw	low _dpowers
  4266  00191A  24F3               	addwf	prodl,w,c
  4267  00191C  6EF6               	movwf	tblptrl,c
  4268  00191E  0E06               	movlw	high _dpowers
  4269  001920  20F4               	addwfc	prodh,w,c
  4270  001922  6EF7               	movwf	tblptrh,c
  4271  001924                     	if	0	;There are less than 3 active tblptr bytes
  4272  001924                     	endif
  4273  001924  0009               	tblrd		*+
  4274  001926  FFFF               	dw	65535	; errata NOP
  4275  001928  0100               	movlb	0	; () banked
  4276  00192A  CFF5 F0A3          	movff	tablat,___llmod@divisor
  4277  00192E  0009               	tblrd		*+
  4278  001930  FFFF               	dw	65535	; errata NOP
  4279  001932  0100               	movlb	0	; () banked
  4280  001934  CFF5 F0A4          	movff	tablat,___llmod@divisor+1
  4281  001938  0009               	tblrd		*+
  4282  00193A  FFFF               	dw	65535	; errata NOP
  4283  00193C  0100               	movlb	0	; () banked
  4284  00193E  CFF5 F0A5          	movff	tablat,___llmod@divisor+2
  4285  001942  000A               	tblrd		*-
  4286  001944  FFFF               	dw	65535	; errata NOP
  4287  001946  0100               	movlb	0	; () banked
  4288  001948  CFF5 F0A6          	movff	tablat,___llmod@divisor+3
  4289  00194C  EC46  F01D         	call	___llmod	;wreg free
  4290  001950  C09F  F137         	movff	?___llmod,sprintf@_val
  4291  001954  C0A0  F138         	movff	?___llmod+1,sprintf@_val+1
  4292  001958  C0A1  F139         	movff	?___llmod+2,sprintf@_val+2
  4293  00195C  C0A2  F13A         	movff	?___llmod+3,sprintf@_val+3
  4294  001960                     l3665:
  4295  001960  0101               	movlb	1	; () banked
  4296  001962  0743               	decf	sprintf@c& (0+255),f,b
  4297  001964  0101               	movlb	1	; () banked
  4298  001966  2943               	incf	sprintf@c& (0+255),w,b
  4299  001968  B4D8               	btfsc	status,2,c
  4300  00196A  D011               	goto	l3675
  4301  00196C  D76F               	goto	l3653
  4302  00196E                     l3667:
  4303                           
  4304                           ; BSR set to: 1
  4305                           ;doprnt.c: 1245: ((*sp++ = ('0')),(++ccnt));
  4306  00196E  C109  FFD9         	movff	sprintf@sp,fsr2l
  4307  001972  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  4308  001976  0E30               	movlw	48
  4309  001978  6EDF               	movwf	indf2,c
  4310                           
  4311                           ; BSR set to: 1
  4312  00197A  0101               	movlb	1	; () banked
  4313  00197C  4B09               	infsnz	sprintf@sp& (0+255),f,b
  4314  00197E  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  4315                           
  4316                           ; BSR set to: 1
  4317  001980  0101               	movlb	1	; () banked
  4318  001982  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  4319  001984  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4320                           
  4321                           ; BSR set to: 1
  4322                           ;doprnt.c: 1246: prec--;
  4323  001986  0101               	movlb	1	; () banked
  4324  001988  0741               	decf	sprintf@prec& (0+255),f,b
  4325  00198A  A0D8               	btfss	status,0,c
  4326  00198C  0742               	decf	(sprintf@prec+1)& (0+255),f,b
  4327  00198E                     l3675:
  4328                           
  4329                           ; BSR set to: 1
  4330  00198E  0101               	movlb	1	; () banked
  4331  001990  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  4332  001992  1141               	iorwf	sprintf@prec& (0+255),w,b
  4333  001994  B4D8               	btfsc	status,2,c
  4334  001996  D0CF               	goto	l3729
  4335  001998  D7EA               	goto	l3667
  4336  00199A                     l3677:
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;doprnt.c: 1255: }
  4340                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  4341  00199A  0101               	movlb	1	; () banked
  4342  00199C  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  4343  00199E  1141               	iorwf	sprintf@prec& (0+255),w,b
  4344  0019A0  A4D8               	btfss	status,2,c
  4345  0019A2  D00A               	goto	l3683
  4346                           
  4347                           ; BSR set to: 1
  4348  0019A4  0101               	movlb	1	; () banked
  4349  0019A6  513A               	movf	(sprintf@_val+3)& (0+255),w,b
  4350  0019A8  1137               	iorwf	sprintf@_val& (0+255),w,b
  4351  0019AA  1138               	iorwf	(sprintf@_val+1)& (0+255),w,b
  4352  0019AC  1139               	iorwf	(sprintf@_val+2)& (0+255),w,b
  4353  0019AE  A4D8               	btfss	status,2,c
  4354  0019B0  D003               	goto	l3683
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;doprnt.c: 1300: prec++;
  4358  0019B2  0101               	movlb	1	; () banked
  4359  0019B4  4B41               	infsnz	sprintf@prec& (0+255),f,b
  4360  0019B6  2B42               	incf	(sprintf@prec+1)& (0+255),f,b
  4361  0019B8                     l3683:
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;doprnt.c: 1348: if(c < prec)
  4365  0019B8  0E80               	movlw	128
  4366  0019BA  0101               	movlb	1	; () banked
  4367  0019BC  BF43               	btfsc	sprintf@c& (0+255),7,b
  4368  0019BE  0E7F               	movlw	127
  4369  0019C0  0101               	movlb	1	; () banked
  4370  0019C2  6F14               	movwf	??_sprintf& (0+255),b
  4371  0019C4  0101               	movlb	1	; () banked
  4372  0019C6  5141               	movf	sprintf@prec& (0+255),w,b
  4373  0019C8  0101               	movlb	1	; () banked
  4374  0019CA  5D43               	subwf	sprintf@c& (0+255),w,b
  4375  0019CC  0101               	movlb	1	; () banked
  4376  0019CE  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  4377  0019D0  0A80               	xorlw	128
  4378  0019D2  0101               	movlb	1	; () banked
  4379  0019D4  5914               	subwfb	??_sprintf& (0+255),w,b
  4380  0019D6  B0D8               	btfsc	status,0,c
  4381  0019D8  D003               	goto	l3687
  4382                           
  4383                           ; BSR set to: 1
  4384                           ;doprnt.c: 1349: c = prec;
  4385  0019DA  C141  F143         	movff	sprintf@prec,sprintf@c
  4386  0019DE  D01A               	goto	l3691
  4387  0019E0                     l3687:
  4388                           
  4389                           ; BSR set to: 1
  4390                           ;doprnt.c: 1350: else if(prec < c)
  4391  0019E0  0101               	movlb	1	; () banked
  4392  0019E2  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  4393  0019E4  0A80               	xorlw	128
  4394  0019E6  0101               	movlb	1	; () banked
  4395  0019E8  6F14               	movwf	??_sprintf& (0+255),b
  4396  0019EA  0101               	movlb	1	; () banked
  4397  0019EC  5143               	movf	sprintf@c& (0+255),w,b
  4398  0019EE  0101               	movlb	1	; () banked
  4399  0019F0  5D41               	subwf	sprintf@prec& (0+255),w,b
  4400  0019F2  0E80               	movlw	128
  4401  0019F4  0101               	movlb	1	; () banked
  4402  0019F6  BF43               	btfsc	sprintf@c& (0+255),7,b
  4403  0019F8  0E7F               	movlw	127
  4404  0019FA  0101               	movlb	1	; () banked
  4405  0019FC  5914               	subwfb	??_sprintf& (0+255),w,b
  4406  0019FE  B0D8               	btfsc	status,0,c
  4407  001A00  D009               	goto	l3691
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;doprnt.c: 1351: prec = c;
  4411  001A02  0101               	movlb	1	; () banked
  4412  001A04  5143               	movf	sprintf@c& (0+255),w,b
  4413  001A06  0101               	movlb	1	; () banked
  4414  001A08  6F41               	movwf	sprintf@prec& (0+255),b
  4415  001A0A  0101               	movlb	1	; () banked
  4416  001A0C  6B42               	clrf	(sprintf@prec+1)& (0+255),b
  4417  001A0E  0101               	movlb	1	; () banked
  4418  001A10  BF41               	btfsc	sprintf@prec& (0+255),7,b
  4419  001A12  0742               	decf	(sprintf@prec+1)& (0+255),f,b
  4420  001A14                     l3691:
  4421                           
  4422                           ; BSR set to: 1
  4423                           ;doprnt.c: 1354: if(width && flag & 0x03)
  4424  001A14  0101               	movlb	1	; () banked
  4425  001A16  5134               	movf	(sprintf@width+1)& (0+255),w,b
  4426  001A18  1133               	iorwf	sprintf@width& (0+255),w,b
  4427  001A1A  B4D8               	btfsc	status,2,c
  4428  001A1C  D013               	goto	l3697
  4429                           
  4430                           ; BSR set to: 1
  4431  001A1E  0E03               	movlw	3
  4432  001A20  0101               	movlb	1	; () banked
  4433  001A22  1535               	andwf	sprintf@flag& (0+255),w,b
  4434  001A24  0101               	movlb	1	; () banked
  4435  001A26  6F14               	movwf	??_sprintf& (0+255),b
  4436  001A28  0E00               	movlw	0
  4437  001A2A  0101               	movlb	1	; () banked
  4438  001A2C  1536               	andwf	(sprintf@flag+1)& (0+255),w,b
  4439  001A2E  0101               	movlb	1	; () banked
  4440  001A30  6F15               	movwf	(??_sprintf+1)& (0+255),b
  4441  001A32  0101               	movlb	1	; () banked
  4442  001A34  5115               	movf	(??_sprintf+1)& (0+255),w,b
  4443  001A36  1114               	iorwf	??_sprintf& (0+255),w,b
  4444  001A38  B4D8               	btfsc	status,2,c
  4445  001A3A  D004               	goto	l3697
  4446                           
  4447                           ; BSR set to: 1
  4448                           ;doprnt.c: 1355: width--;
  4449  001A3C  0101               	movlb	1	; () banked
  4450  001A3E  0733               	decf	sprintf@width& (0+255),f,b
  4451  001A40  A0D8               	btfss	status,0,c
  4452  001A42  0734               	decf	(sprintf@width+1)& (0+255),f,b
  4453  001A44                     l3697:
  4454                           
  4455                           ; BSR set to: 1
  4456                           ;doprnt.c: 1357: if(flag & 0x4000) {
  4457  001A44  0101               	movlb	1	; () banked
  4458  001A46  AD36               	btfss	(sprintf@flag+1)& (0+255),6,b
  4459  001A48  D01F               	goto	l3705
  4460                           
  4461                           ; BSR set to: 1
  4462                           ;doprnt.c: 1358: if(width > prec)
  4463  001A4A  0101               	movlb	1	; () banked
  4464  001A4C  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  4465  001A4E  0A80               	xorlw	128
  4466  001A50  0101               	movlb	1	; () banked
  4467  001A52  6F14               	movwf	??_sprintf& (0+255),b
  4468  001A54  0101               	movlb	1	; () banked
  4469  001A56  5133               	movf	sprintf@width& (0+255),w,b
  4470  001A58  0101               	movlb	1	; () banked
  4471  001A5A  5D41               	subwf	sprintf@prec& (0+255),w,b
  4472  001A5C  0101               	movlb	1	; () banked
  4473  001A5E  5134               	movf	(sprintf@width+1)& (0+255),w,b
  4474  001A60  0A80               	xorlw	128
  4475  001A62  0101               	movlb	1	; () banked
  4476  001A64  5914               	subwfb	??_sprintf& (0+255),w,b
  4477  001A66  B0D8               	btfsc	status,0,c
  4478  001A68  D009               	goto	l3703
  4479                           
  4480                           ; BSR set to: 1
  4481                           ;doprnt.c: 1359: width -= prec;
  4482  001A6A  0101               	movlb	1	; () banked
  4483  001A6C  5141               	movf	sprintf@prec& (0+255),w,b
  4484  001A6E  0101               	movlb	1	; () banked
  4485  001A70  5F33               	subwf	sprintf@width& (0+255),f,b
  4486  001A72  0101               	movlb	1	; () banked
  4487  001A74  5142               	movf	(sprintf@prec+1)& (0+255),w,b
  4488  001A76  0101               	movlb	1	; () banked
  4489  001A78  5B34               	subwfb	(sprintf@width+1)& (0+255),f,b
  4490  001A7A  D006               	goto	l3705
  4491  001A7C                     l3703:
  4492                           
  4493                           ; BSR set to: 1
  4494                           ;doprnt.c: 1360: else
  4495                           ;doprnt.c: 1361: width = 0;
  4496  001A7C  0E00               	movlw	0
  4497  001A7E  0101               	movlb	1	; () banked
  4498  001A80  6F34               	movwf	(sprintf@width+1)& (0+255),b
  4499  001A82  0E00               	movlw	0
  4500  001A84  0101               	movlb	1	; () banked
  4501  001A86  6F33               	movwf	sprintf@width& (0+255),b
  4502  001A88                     l3705:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;doprnt.c: 1362: }
  4506                           ;doprnt.c: 1390: if(width > c)
  4507  001A88  0E80               	movlw	128
  4508  001A8A  0101               	movlb	1	; () banked
  4509  001A8C  BF43               	btfsc	sprintf@c& (0+255),7,b
  4510  001A8E  0E7F               	movlw	127
  4511  001A90  0101               	movlb	1	; () banked
  4512  001A92  6F14               	movwf	??_sprintf& (0+255),b
  4513  001A94  0101               	movlb	1	; () banked
  4514  001A96  5133               	movf	sprintf@width& (0+255),w,b
  4515  001A98  0101               	movlb	1	; () banked
  4516  001A9A  5D43               	subwf	sprintf@c& (0+255),w,b
  4517  001A9C  0101               	movlb	1	; () banked
  4518  001A9E  5134               	movf	(sprintf@width+1)& (0+255),w,b
  4519  001AA0  0A80               	xorlw	128
  4520  001AA2  0101               	movlb	1	; () banked
  4521  001AA4  5914               	subwfb	??_sprintf& (0+255),w,b
  4522  001AA6  B0D8               	btfsc	status,0,c
  4523  001AA8  D00B               	goto	l3709
  4524                           
  4525                           ; BSR set to: 1
  4526                           ;doprnt.c: 1391: width -= c;
  4527  001AAA  0101               	movlb	1	; () banked
  4528  001AAC  5143               	movf	sprintf@c& (0+255),w,b
  4529  001AAE  0101               	movlb	1	; () banked
  4530  001AB0  5F33               	subwf	sprintf@width& (0+255),f,b
  4531  001AB2  0E00               	movlw	0
  4532  001AB4  0101               	movlb	1	; () banked
  4533  001AB6  BF43               	btfsc	sprintf@c& (0+255),7,b
  4534  001AB8  0EFF               	movlw	255
  4535  001ABA  0101               	movlb	1	; () banked
  4536  001ABC  5B34               	subwfb	(sprintf@width+1)& (0+255),f,b
  4537  001ABE  D006               	goto	l3711
  4538  001AC0                     l3709:
  4539                           
  4540                           ; BSR set to: 1
  4541                           ;doprnt.c: 1392: else
  4542                           ;doprnt.c: 1393: width = 0;
  4543  001AC0  0E00               	movlw	0
  4544  001AC2  0101               	movlb	1	; () banked
  4545  001AC4  6F34               	movwf	(sprintf@width+1)& (0+255),b
  4546  001AC6  0E00               	movlw	0
  4547  001AC8  0101               	movlb	1	; () banked
  4548  001ACA  6F33               	movwf	sprintf@width& (0+255),b
  4549  001ACC                     l3711:
  4550                           
  4551                           ; BSR set to: 1
  4552                           ;doprnt.c: 1431: {
  4553                           ;doprnt.c: 1433: if(width
  4554                           ;doprnt.c: 1437: )
  4555  001ACC  0101               	movlb	1	; () banked
  4556  001ACE  5134               	movf	(sprintf@width+1)& (0+255),w,b
  4557  001AD0  1133               	iorwf	sprintf@width& (0+255),w,b
  4558  001AD2  B4D8               	btfsc	status,2,c
  4559  001AD4  D015               	goto	l3721
  4560  001AD6                     l3713:
  4561                           
  4562                           ; BSR set to: 1
  4563                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
  4564  001AD6  C109  FFD9         	movff	sprintf@sp,fsr2l
  4565  001ADA  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  4566  001ADE  0E20               	movlw	32
  4567  001AE0  6EDF               	movwf	indf2,c
  4568                           
  4569                           ; BSR set to: 1
  4570  001AE2  0101               	movlb	1	; () banked
  4571  001AE4  4B09               	infsnz	sprintf@sp& (0+255),f,b
  4572  001AE6  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  4573                           
  4574                           ; BSR set to: 1
  4575  001AE8  0101               	movlb	1	; () banked
  4576  001AEA  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  4577  001AEC  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4578                           
  4579                           ; BSR set to: 1
  4580                           ;doprnt.c: 1440: while(--width);
  4581  001AEE  0101               	movlb	1	; () banked
  4582  001AF0  0733               	decf	sprintf@width& (0+255),f,b
  4583  001AF2  A0D8               	btfss	status,0,c
  4584  001AF4  0734               	decf	(sprintf@width+1)& (0+255),f,b
  4585  001AF6  0101               	movlb	1	; () banked
  4586  001AF8  5134               	movf	(sprintf@width+1)& (0+255),w,b
  4587  001AFA  1133               	iorwf	sprintf@width& (0+255),w,b
  4588  001AFC  A4D8               	btfss	status,2,c
  4589  001AFE  D7EB               	goto	l3713
  4590  001B00                     l3721:
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;doprnt.c: 1447: if(flag & 0x03)
  4594  001B00  0E03               	movlw	3
  4595  001B02  0101               	movlb	1	; () banked
  4596  001B04  1535               	andwf	sprintf@flag& (0+255),w,b
  4597  001B06  0101               	movlb	1	; () banked
  4598  001B08  6F14               	movwf	??_sprintf& (0+255),b
  4599  001B0A  0E00               	movlw	0
  4600  001B0C  0101               	movlb	1	; () banked
  4601  001B0E  1536               	andwf	(sprintf@flag+1)& (0+255),w,b
  4602  001B10  0101               	movlb	1	; () banked
  4603  001B12  6F15               	movwf	(??_sprintf+1)& (0+255),b
  4604  001B14  0101               	movlb	1	; () banked
  4605  001B16  5115               	movf	(??_sprintf+1)& (0+255),w,b
  4606  001B18  1114               	iorwf	??_sprintf& (0+255),w,b
  4607  001B1A  B4D8               	btfsc	status,2,c
  4608  001B1C  D00C               	goto	l3729
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
  4612  001B1E  C109  FFD9         	movff	sprintf@sp,fsr2l
  4613  001B22  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  4614  001B26  0E2D               	movlw	45
  4615  001B28                     L4:
  4616  001B28  6EDF               	movwf	indf2,c
  4617  001B2A                     L10:
  4618                           
  4619                           ; BSR set to: 1
  4620  001B2A  0101               	movlb	1	; () banked
  4621  001B2C  4B09               	infsnz	sprintf@sp& (0+255),f,b
  4622  001B2E  2B0A               	incf	(sprintf@sp+1)& (0+255),f,b
  4623                           
  4624                           ; BSR set to: 1
  4625  001B30  0101               	movlb	1	; () banked
  4626  001B32  4B2E               	infsnz	sprintf@ccnt& (0+255),f,b
  4627  001B34  2B2F               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4628  001B36                     l3729:
  4629                           
  4630                           ; BSR set to: 1
  4631  001B36  0101               	movlb	1	; () banked
  4632  001B38  C10B  FFF6         	movff	sprintf@f,tblptrl
  4633  001B3C  0101               	movlb	1	; () banked
  4634  001B3E  C10C  FFF7         	movff	sprintf@f+1,tblptrh
  4635  001B42  0101               	movlb	1	; () banked
  4636  001B44  4B0B               	infsnz	sprintf@f& (0+255),f,b
  4637  001B46  2B0C               	incf	(sprintf@f+1)& (0+255),f,b
  4638  001B48                     	if	0	;tblptru may be non-zero
  4639  001B48                     	endif
  4640  001B48                     	if	0	;tblptru may be non-zero
  4641  001B48                     	endif
  4642  001B48  0008               	tblrd		*
  4643  001B4A  FFFF               	dw	65535	; errata NOP
  4644  001B4C  0101               	movlb	1	; () banked
  4645  001B4E  CFF5 F143          	movff	tablat,sprintf@c
  4646  001B52  0101               	movlb	1	; () banked
  4647  001B54  6743               	tstfsz	sprintf@c& (0+255),b
  4648  001B56  EF62  F003         	goto	l3259
  4649  001B5A                     l3731:
  4650                           
  4651                           ; BSR set to: 1
  4652                           ;doprnt.c: 1547: *sp = 0;
  4653  001B5A  C109  FFD9         	movff	sprintf@sp,fsr2l
  4654  001B5E  C10A  FFDA         	movff	sprintf@sp+1,fsr2h
  4655  001B62  0E00               	movlw	0
  4656  001B64  6EDF               	movwf	indf2,c
  4657                           
  4658                           ; BSR set to: 1
  4659                           ;doprnt.c: 1549: return ccnt;
  4660  001B66  C12E  F109         	movff	sprintf@ccnt,?_sprintf
  4661  001B6A  C12F  F10A         	movff	sprintf@ccnt+1,?_sprintf+1
  4662                           
  4663                           ; BSR set to: 1
  4664                           
  4665                           ; BSR set to: 1
  4666  001B6E  0012               	return	
  4667  001B70  FFFF               	dw	65535	; errata NOP
  4668  001B72                     __end_of_sprintf:
  4669                           	opt stack 0
  4670                           tblptru	equ	0xFF8
  4671                           tblptrh	equ	0xFF7
  4672                           tblptrl	equ	0xFF6
  4673                           tablat	equ	0xFF5
  4674                           prodh	equ	0xFF4
  4675                           prodl	equ	0xFF3
  4676                           postinc0	equ	0xFEE
  4677                           wreg	equ	0xFE8
  4678                           postinc1	equ	0xFE6
  4679                           postdec1	equ	0xFE5
  4680                           fsr1l	equ	0xFE1
  4681                           indf2	equ	0xFDF
  4682                           postinc2	equ	0xFDE
  4683                           postdec2	equ	0xFDD
  4684                           fsr2h	equ	0xFDA
  4685                           fsr2l	equ	0xFD9
  4686                           status	equ	0xFD8
  4687                           
  4688 ;; *************** function _scale *****************
  4689 ;; Defined at:
  4690 ;;		line 425 in file "/Applications/microchip/xc8/v1.33/sources/common/doprnt.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  scl             1    wreg     char 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  scl             1   79[BANK0 ] char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  3   73[BANK0 ] char 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4704 ;;      Params:         0       3       0       0       0       0       0
  4705 ;;      Locals:         0       4       0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0
  4707 ;;      Totals:         0       7       0       0       0       0       0
  4708 ;;Total ram usage:        7 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    8
  4711 ;; This function calls:
  4712 ;;		___awdiv
  4713 ;;		___awmod
  4714 ;;		___ftmul
  4715 ;;		___wmul
  4716 ;; This function is called by:
  4717 ;;		_sprintf
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text4
  4722  001B72                     __ptext4:
  4723                           	opt stack 0
  4724  001B72                     _scale:
  4725                           	opt stack 19
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;incstack = 0
  4729  001B72  FFFF               	dw	65535
  4730                           
  4731                           ;scale@scl stored from wreg
  4732  001B74  0100               	movlb	0	; () banked
  4733  001B76  6FCF               	movwf	scale@scl& (0+255),b
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;doprnt.c: 428: if(scl < 0) {
  4737  001B78  0100               	movlb	0	; () banked
  4738  001B7A  AFCF               	btfss	scale@scl& (0+255),7,b
  4739  001B7C  D160               	goto	l2813
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;doprnt.c: 429: scl = -scl;
  4743  001B7E  0100               	movlb	0	; () banked
  4744  001B80  6DCF               	negf	scale@scl& (0+255),b
  4745                           
  4746                           ;doprnt.c: 430: if(scl>=110)
  4747  001B82  0100               	movlb	0	; () banked
  4748  001B84  51CF               	movf	scale@scl& (0+255),w,b
  4749  001B86  0A80               	xorlw	128
  4750  001B88  0F12               	addlw	-238
  4751  001B8A  A0D8               	btfss	status,0,c
  4752  001B8C  D0C9               	goto	l2803
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4756  001B8E  0E00               	movlw	0
  4757  001B90  0100               	movlb	0	; () banked
  4758  001B92  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4759  001B94  0E03               	movlw	3
  4760  001B96  0100               	movlb	0	; () banked
  4761  001B98  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4762  001B9A  0E00               	movlw	0
  4763  001B9C  0100               	movlb	0	; () banked
  4764  001B9E  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  4765  001BA0  0E0A               	movlw	10
  4766  001BA2  0100               	movlb	0	; () banked
  4767  001BA4  6FA7               	movwf	___awdiv@divisor& (0+255),b
  4768  001BA6  0E00               	movlw	0
  4769  001BA8  0100               	movlb	0	; () banked
  4770  001BAA  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  4771  001BAC  0E64               	movlw	100
  4772  001BAE  0100               	movlb	0	; () banked
  4773  001BB0  6FA1               	movwf	___awmod@divisor& (0+255),b
  4774  001BB2  0100               	movlb	0	; () banked
  4775  001BB4  51CF               	movf	scale@scl& (0+255),w,b
  4776  001BB6  0100               	movlb	0	; () banked
  4777  001BB8  6F9F               	movwf	___awmod@dividend& (0+255),b
  4778  001BBA  0100               	movlb	0	; () banked
  4779  001BBC  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  4780  001BBE  0100               	movlb	0	; () banked
  4781  001BC0  BF9F               	btfsc	___awmod@dividend& (0+255),7,b
  4782  001BC2  07A0               	decf	(___awmod@dividend+1)& (0+255),f,b
  4783  001BC4  EC8C  F01C         	call	___awmod	;wreg free
  4784  001BC8  0100               	movlb	0	; () banked
  4785  001BCA  C09F  F0A5         	movff	?___awmod,___awdiv@dividend
  4786  001BCE  0100               	movlb	0	; () banked
  4787  001BD0  C0A0  F0A6         	movff	?___awmod+1,___awdiv@dividend+1
  4788  001BD4  ECD4  F01A         	call	___awdiv	;wreg free
  4789  001BD8  0E09               	movlw	9
  4790  001BDA  0100               	movlb	0	; () banked
  4791  001BDC  25A5               	addwf	?___awdiv& (0+255),w,b
  4792  001BDE  0100               	movlb	0	; () banked
  4793  001BE0  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4794  001BE2  0E00               	movlw	0
  4795  001BE4  0100               	movlb	0	; () banked
  4796  001BE6  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  4797  001BE8  0100               	movlb	0	; () banked
  4798  001BEA  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4799  001BEC  EC0C  F01F         	call	___wmul	;wreg free
  4800  001BF0  0E29               	movlw	low __npowers_
  4801  001BF2  0100               	movlb	0	; () banked
  4802  001BF4  25AD               	addwf	?___wmul& (0+255),w,b
  4803  001BF6  6EF6               	movwf	tblptrl,c
  4804  001BF8  0E06               	movlw	high __npowers_
  4805  001BFA  0100               	movlb	0	; () banked
  4806  001BFC  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4807  001BFE  6EF7               	movwf	tblptrh,c
  4808  001C00                     	if	0	;There are less than 3 active tblptr bytes
  4809  001C00                     	endif
  4810  001C00  0009               	tblrd		*+
  4811  001C02  FFFF               	dw	65535	; errata NOP
  4812  001C04  0100               	movlb	0	; () banked
  4813  001C06  CFF5 F0BD          	movff	tablat,___ftmul@f2
  4814  001C0A  0009               	tblrd		*+
  4815  001C0C  FFFF               	dw	65535	; errata NOP
  4816  001C0E  0100               	movlb	0	; () banked
  4817  001C10  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  4818  001C14  000A               	tblrd		*-
  4819  001C16  FFFF               	dw	65535	; errata NOP
  4820  001C18  0100               	movlb	0	; () banked
  4821  001C1A  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  4822  001C1E  0E00               	movlw	0
  4823  001C20  0100               	movlb	0	; () banked
  4824  001C22  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  4825  001C24  0E64               	movlw	100
  4826  001C26  0100               	movlb	0	; () banked
  4827  001C28  6FA7               	movwf	___awdiv@divisor& (0+255),b
  4828  001C2A  0100               	movlb	0	; () banked
  4829  001C2C  51CF               	movf	scale@scl& (0+255),w,b
  4830  001C2E  0100               	movlb	0	; () banked
  4831  001C30  6FA5               	movwf	___awdiv@dividend& (0+255),b
  4832  001C32  0100               	movlb	0	; () banked
  4833  001C34  6BA6               	clrf	(___awdiv@dividend+1)& (0+255),b
  4834  001C36  0100               	movlb	0	; () banked
  4835  001C38  BFA5               	btfsc	___awdiv@dividend& (0+255),7,b
  4836  001C3A  07A6               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4837  001C3C  ECD4  F01A         	call	___awdiv	;wreg free
  4838  001C40  0E12               	movlw	18
  4839  001C42  0100               	movlb	0	; () banked
  4840  001C44  25A5               	addwf	?___awdiv& (0+255),w,b
  4841  001C46  0100               	movlb	0	; () banked
  4842  001C48  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4843  001C4A  0E00               	movlw	0
  4844  001C4C  0100               	movlb	0	; () banked
  4845  001C4E  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  4846  001C50  0100               	movlb	0	; () banked
  4847  001C52  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4848  001C54  0E00               	movlw	0
  4849  001C56  0100               	movlb	0	; () banked
  4850  001C58  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4851  001C5A  0E03               	movlw	3
  4852  001C5C  0100               	movlb	0	; () banked
  4853  001C5E  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4854  001C60  EC0C  F01F         	call	___wmul	;wreg free
  4855  001C64  0E29               	movlw	low __npowers_
  4856  001C66  0100               	movlb	0	; () banked
  4857  001C68  25AD               	addwf	?___wmul& (0+255),w,b
  4858  001C6A  6EF6               	movwf	tblptrl,c
  4859  001C6C  0E06               	movlw	high __npowers_
  4860  001C6E  0100               	movlb	0	; () banked
  4861  001C70  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4862  001C72  6EF7               	movwf	tblptrh,c
  4863  001C74                     	if	0	;There are less than 3 active tblptr bytes
  4864  001C74                     	endif
  4865  001C74  0009               	tblrd		*+
  4866  001C76  FFFF               	dw	65535	; errata NOP
  4867  001C78  0100               	movlb	0	; () banked
  4868  001C7A  CFF5 F0BA          	movff	tablat,___ftmul@f1
  4869  001C7E  0009               	tblrd		*+
  4870  001C80  FFFF               	dw	65535	; errata NOP
  4871  001C82  0100               	movlb	0	; () banked
  4872  001C84  CFF5 F0BB          	movff	tablat,___ftmul@f1+1
  4873  001C88  000A               	tblrd		*-
  4874  001C8A  FFFF               	dw	65535	; errata NOP
  4875  001C8C  0100               	movlb	0	; () banked
  4876  001C8E  CFF5 F0BC          	movff	tablat,___ftmul@f1+2
  4877  001C92  EC1B  F017         	call	___ftmul	;wreg free
  4878  001C96  C0BA  F0CC         	movff	?___ftmul,_scale$1747
  4879  001C9A  C0BB  F0CD         	movff	?___ftmul+1,_scale$1747+1
  4880  001C9E  C0BC  F0CE         	movff	?___ftmul+2,_scale$1747+2
  4881                           
  4882                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4883  001CA2  C0CC  F0BA         	movff	_scale$1747,___ftmul@f1
  4884  001CA6  C0CD  F0BB         	movff	_scale$1747+1,___ftmul@f1+1
  4885  001CAA  C0CE  F0BC         	movff	_scale$1747+2,___ftmul@f1+2
  4886  001CAE  0E00               	movlw	0
  4887  001CB0  0100               	movlb	0	; () banked
  4888  001CB2  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4889  001CB4  0E03               	movlw	3
  4890  001CB6  0100               	movlb	0	; () banked
  4891  001CB8  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4892  001CBA  0E00               	movlw	0
  4893  001CBC  0100               	movlb	0	; () banked
  4894  001CBE  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  4895  001CC0  0E0A               	movlw	10
  4896  001CC2  0100               	movlb	0	; () banked
  4897  001CC4  6FA1               	movwf	___awmod@divisor& (0+255),b
  4898  001CC6  0100               	movlb	0	; () banked
  4899  001CC8  51CF               	movf	scale@scl& (0+255),w,b
  4900  001CCA  0100               	movlb	0	; () banked
  4901  001CCC  6F9F               	movwf	___awmod@dividend& (0+255),b
  4902  001CCE  0100               	movlb	0	; () banked
  4903  001CD0  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  4904  001CD2  0100               	movlb	0	; () banked
  4905  001CD4  BF9F               	btfsc	___awmod@dividend& (0+255),7,b
  4906  001CD6  07A0               	decf	(___awmod@dividend+1)& (0+255),f,b
  4907  001CD8  EC8C  F01C         	call	___awmod	;wreg free
  4908  001CDC  0100               	movlb	0	; () banked
  4909  001CDE  C09F  F0AD         	movff	?___awmod,___wmul@multiplier
  4910  001CE2  0100               	movlb	0	; () banked
  4911  001CE4  C0A0  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  4912  001CE8  EC0C  F01F         	call	___wmul	;wreg free
  4913  001CEC  0E29               	movlw	low __npowers_
  4914  001CEE  0100               	movlb	0	; () banked
  4915  001CF0  25AD               	addwf	?___wmul& (0+255),w,b
  4916  001CF2  6EF6               	movwf	tblptrl,c
  4917  001CF4  0E06               	movlw	high __npowers_
  4918  001CF6  0100               	movlb	0	; () banked
  4919  001CF8  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4920  001CFA  6EF7               	movwf	tblptrh,c
  4921  001CFC                     	if	0	;There are less than 3 active tblptr bytes
  4922  001CFC                     	endif
  4923  001CFC  0009               	tblrd		*+
  4924  001CFE  FFFF               	dw	65535	; errata NOP
  4925  001D00  0100               	movlb	0	; () banked
  4926  001D02  CFF5 F0BD          	movff	tablat,___ftmul@f2
  4927  001D06  0009               	tblrd		*+
  4928  001D08  FFFF               	dw	65535	; errata NOP
  4929  001D0A  0100               	movlb	0	; () banked
  4930  001D0C  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  4931  001D10  000A               	tblrd		*-
  4932  001D12  FFFF               	dw	65535	; errata NOP
  4933  001D14  0100               	movlb	0	; () banked
  4934  001D16  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  4935  001D1A  EC1B  F017         	call	___ftmul	;wreg free
  4936  001D1E  D1D6               	goto	L14
  4937  001D20                     l2803:
  4938                           
  4939                           ;doprnt.c: 432: else if(scl > 10)
  4940  001D20  0100               	movlb	0	; () banked
  4941  001D22  51CF               	movf	scale@scl& (0+255),w,b
  4942  001D24  0A80               	xorlw	128
  4943  001D26  0F75               	addlw	-139
  4944  001D28  A0D8               	btfss	status,0,c
  4945  001D2A  D073               	goto	l2809
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4949  001D2C  0E00               	movlw	0
  4950  001D2E  0100               	movlb	0	; () banked
  4951  001D30  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  4952  001D32  0E0A               	movlw	10
  4953  001D34  0100               	movlb	0	; () banked
  4954  001D36  6FA7               	movwf	___awdiv@divisor& (0+255),b
  4955  001D38  0100               	movlb	0	; () banked
  4956  001D3A  51CF               	movf	scale@scl& (0+255),w,b
  4957  001D3C  0100               	movlb	0	; () banked
  4958  001D3E  6FA5               	movwf	___awdiv@dividend& (0+255),b
  4959  001D40  0100               	movlb	0	; () banked
  4960  001D42  6BA6               	clrf	(___awdiv@dividend+1)& (0+255),b
  4961  001D44  0100               	movlb	0	; () banked
  4962  001D46  BFA5               	btfsc	___awdiv@dividend& (0+255),7,b
  4963  001D48  07A6               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4964  001D4A  ECD4  F01A         	call	___awdiv	;wreg free
  4965  001D4E  0E09               	movlw	9
  4966  001D50  0100               	movlb	0	; () banked
  4967  001D52  25A5               	addwf	?___awdiv& (0+255),w,b
  4968  001D54  0100               	movlb	0	; () banked
  4969  001D56  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4970  001D58  0E00               	movlw	0
  4971  001D5A  0100               	movlb	0	; () banked
  4972  001D5C  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  4973  001D5E  0100               	movlb	0	; () banked
  4974  001D60  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4975  001D62  0E00               	movlw	0
  4976  001D64  0100               	movlb	0	; () banked
  4977  001D66  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4978  001D68  0E03               	movlw	3
  4979  001D6A  0100               	movlb	0	; () banked
  4980  001D6C  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4981  001D6E  EC0C  F01F         	call	___wmul	;wreg free
  4982  001D72  0E29               	movlw	low __npowers_
  4983  001D74  0100               	movlb	0	; () banked
  4984  001D76  25AD               	addwf	?___wmul& (0+255),w,b
  4985  001D78  6EF6               	movwf	tblptrl,c
  4986  001D7A  0E06               	movlw	high __npowers_
  4987  001D7C  0100               	movlb	0	; () banked
  4988  001D7E  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4989  001D80  6EF7               	movwf	tblptrh,c
  4990  001D82                     	if	0	;There are less than 3 active tblptr bytes
  4991  001D82                     	endif
  4992  001D82  0009               	tblrd		*+
  4993  001D84  FFFF               	dw	65535	; errata NOP
  4994  001D86  0100               	movlb	0	; () banked
  4995  001D88  CFF5 F0BA          	movff	tablat,___ftmul@f1
  4996  001D8C  0009               	tblrd		*+
  4997  001D8E  FFFF               	dw	65535	; errata NOP
  4998  001D90  0100               	movlb	0	; () banked
  4999  001D92  CFF5 F0BB          	movff	tablat,___ftmul@f1+1
  5000  001D96  000A               	tblrd		*-
  5001  001D98  FFFF               	dw	65535	; errata NOP
  5002  001D9A  0100               	movlb	0	; () banked
  5003  001D9C  CFF5 F0BC          	movff	tablat,___ftmul@f1+2
  5004  001DA0  0E00               	movlw	0
  5005  001DA2  0100               	movlb	0	; () banked
  5006  001DA4  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5007  001DA6  0E03               	movlw	3
  5008  001DA8  0100               	movlb	0	; () banked
  5009  001DAA  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5010  001DAC  0E00               	movlw	0
  5011  001DAE  0100               	movlb	0	; () banked
  5012  001DB0  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  5013  001DB2  0E0A               	movlw	10
  5014  001DB4  0100               	movlb	0	; () banked
  5015  001DB6  6FA1               	movwf	___awmod@divisor& (0+255),b
  5016  001DB8  0100               	movlb	0	; () banked
  5017  001DBA  51CF               	movf	scale@scl& (0+255),w,b
  5018  001DBC  0100               	movlb	0	; () banked
  5019  001DBE  6F9F               	movwf	___awmod@dividend& (0+255),b
  5020  001DC0  0100               	movlb	0	; () banked
  5021  001DC2  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  5022  001DC4  0100               	movlb	0	; () banked
  5023  001DC6  BF9F               	btfsc	___awmod@dividend& (0+255),7,b
  5024  001DC8  07A0               	decf	(___awmod@dividend+1)& (0+255),f,b
  5025  001DCA  EC8C  F01C         	call	___awmod	;wreg free
  5026  001DCE  0100               	movlb	0	; () banked
  5027  001DD0  C09F  F0AD         	movff	?___awmod,___wmul@multiplier
  5028  001DD4  0100               	movlb	0	; () banked
  5029  001DD6  C0A0  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  5030  001DDA  EC0C  F01F         	call	___wmul	;wreg free
  5031  001DDE  0E29               	movlw	low __npowers_
  5032  001DE0  0100               	movlb	0	; () banked
  5033  001DE2  25AD               	addwf	?___wmul& (0+255),w,b
  5034  001DE4  6EF6               	movwf	tblptrl,c
  5035  001DE6  0E06               	movlw	high __npowers_
  5036  001DE8  0100               	movlb	0	; () banked
  5037  001DEA  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5038  001DEC  6EF7               	movwf	tblptrh,c
  5039  001DEE                     	if	0	;There are less than 3 active tblptr bytes
  5040  001DEE                     	endif
  5041  001DEE  0009               	tblrd		*+
  5042  001DF0  FFFF               	dw	65535	; errata NOP
  5043  001DF2  0100               	movlb	0	; () banked
  5044  001DF4  CFF5 F0BD          	movff	tablat,___ftmul@f2
  5045  001DF8  0009               	tblrd		*+
  5046  001DFA  FFFF               	dw	65535	; errata NOP
  5047  001DFC  0100               	movlb	0	; () banked
  5048  001DFE  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  5049  001E02  000A               	tblrd		*-
  5050  001E04  FFFF               	dw	65535	; errata NOP
  5051  001E06  0100               	movlb	0	; () banked
  5052  001E08  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  5053  001E0C  EC1B  F017         	call	___ftmul	;wreg free
  5054  001E10  D15D               	goto	L14
  5055  001E12                     l2809:
  5056                           
  5057                           ;doprnt.c: 434: return _npowers_[scl];
  5058  001E12  0100               	movlb	0	; () banked
  5059  001E14  51CF               	movf	scale@scl& (0+255),w,b
  5060  001E16  0D03               	mullw	3
  5061  001E18  0E29               	movlw	low __npowers_
  5062  001E1A  24F3               	addwf	prodl,w,c
  5063  001E1C  6EF6               	movwf	tblptrl,c
  5064  001E1E  0E06               	movlw	high __npowers_
  5065  001E20  20F4               	addwfc	prodh,w,c
  5066  001E22  6EF7               	movwf	tblptrh,c
  5067  001E24                     	if	0	;There are less than 3 active tblptr bytes
  5068  001E24                     	endif
  5069  001E24  0009               	tblrd		*+
  5070  001E26  FFFF               	dw	65535	; errata NOP
  5071  001E28  0100               	movlb	0	; () banked
  5072  001E2A  CFF5 F0C9          	movff	tablat,?_scale
  5073  001E2E  0009               	tblrd		*+
  5074  001E30  FFFF               	dw	65535	; errata NOP
  5075  001E32  0100               	movlb	0	; () banked
  5076  001E34  CFF5 F0CA          	movff	tablat,?_scale+1
  5077  001E38  000A               	tblrd		*-
  5078  001E3A  FFFF               	dw	65535	; errata NOP
  5079  001E3C  D163               	goto	L13
  5080  001E3E                     l2813:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;doprnt.c: 435: }
  5084                           ;doprnt.c: 436: if(scl>=110)
  5085  001E3E  0100               	movlb	0	; () banked
  5086  001E40  51CF               	movf	scale@scl& (0+255),w,b
  5087  001E42  0A80               	xorlw	128
  5088  001E44  0F12               	addlw	-238
  5089  001E46  A0D8               	btfss	status,0,c
  5090  001E48  D0C9               	goto	l2821
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5094  001E4A  0E00               	movlw	0
  5095  001E4C  0100               	movlb	0	; () banked
  5096  001E4E  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5097  001E50  0E03               	movlw	3
  5098  001E52  0100               	movlb	0	; () banked
  5099  001E54  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5100  001E56  0E00               	movlw	0
  5101  001E58  0100               	movlb	0	; () banked
  5102  001E5A  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  5103  001E5C  0E0A               	movlw	10
  5104  001E5E  0100               	movlb	0	; () banked
  5105  001E60  6FA7               	movwf	___awdiv@divisor& (0+255),b
  5106  001E62  0E00               	movlw	0
  5107  001E64  0100               	movlb	0	; () banked
  5108  001E66  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  5109  001E68  0E64               	movlw	100
  5110  001E6A  0100               	movlb	0	; () banked
  5111  001E6C  6FA1               	movwf	___awmod@divisor& (0+255),b
  5112  001E6E  0100               	movlb	0	; () banked
  5113  001E70  51CF               	movf	scale@scl& (0+255),w,b
  5114  001E72  0100               	movlb	0	; () banked
  5115  001E74  6F9F               	movwf	___awmod@dividend& (0+255),b
  5116  001E76  0100               	movlb	0	; () banked
  5117  001E78  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  5118  001E7A  0100               	movlb	0	; () banked
  5119  001E7C  BF9F               	btfsc	___awmod@dividend& (0+255),7,b
  5120  001E7E  07A0               	decf	(___awmod@dividend+1)& (0+255),f,b
  5121  001E80  EC8C  F01C         	call	___awmod	;wreg free
  5122  001E84  0100               	movlb	0	; () banked
  5123  001E86  C09F  F0A5         	movff	?___awmod,___awdiv@dividend
  5124  001E8A  0100               	movlb	0	; () banked
  5125  001E8C  C0A0  F0A6         	movff	?___awmod+1,___awdiv@dividend+1
  5126  001E90  ECD4  F01A         	call	___awdiv	;wreg free
  5127  001E94  0E09               	movlw	9
  5128  001E96  0100               	movlb	0	; () banked
  5129  001E98  25A5               	addwf	?___awdiv& (0+255),w,b
  5130  001E9A  0100               	movlb	0	; () banked
  5131  001E9C  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5132  001E9E  0E00               	movlw	0
  5133  001EA0  0100               	movlb	0	; () banked
  5134  001EA2  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  5135  001EA4  0100               	movlb	0	; () banked
  5136  001EA6  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5137  001EA8  EC0C  F01F         	call	___wmul	;wreg free
  5138  001EAC  0E50               	movlw	low __powers_
  5139  001EAE  0100               	movlb	0	; () banked
  5140  001EB0  25AD               	addwf	?___wmul& (0+255),w,b
  5141  001EB2  6EF6               	movwf	tblptrl,c
  5142  001EB4  0E06               	movlw	high __powers_
  5143  001EB6  0100               	movlb	0	; () banked
  5144  001EB8  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5145  001EBA  6EF7               	movwf	tblptrh,c
  5146  001EBC                     	if	0	;There are less than 3 active tblptr bytes
  5147  001EBC                     	endif
  5148  001EBC  0009               	tblrd		*+
  5149  001EBE  FFFF               	dw	65535	; errata NOP
  5150  001EC0  0100               	movlb	0	; () banked
  5151  001EC2  CFF5 F0BD          	movff	tablat,___ftmul@f2
  5152  001EC6  0009               	tblrd		*+
  5153  001EC8  FFFF               	dw	65535	; errata NOP
  5154  001ECA  0100               	movlb	0	; () banked
  5155  001ECC  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  5156  001ED0  000A               	tblrd		*-
  5157  001ED2  FFFF               	dw	65535	; errata NOP
  5158  001ED4  0100               	movlb	0	; () banked
  5159  001ED6  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  5160  001EDA  0E00               	movlw	0
  5161  001EDC  0100               	movlb	0	; () banked
  5162  001EDE  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  5163  001EE0  0E64               	movlw	100
  5164  001EE2  0100               	movlb	0	; () banked
  5165  001EE4  6FA7               	movwf	___awdiv@divisor& (0+255),b
  5166  001EE6  0100               	movlb	0	; () banked
  5167  001EE8  51CF               	movf	scale@scl& (0+255),w,b
  5168  001EEA  0100               	movlb	0	; () banked
  5169  001EEC  6FA5               	movwf	___awdiv@dividend& (0+255),b
  5170  001EEE  0100               	movlb	0	; () banked
  5171  001EF0  6BA6               	clrf	(___awdiv@dividend+1)& (0+255),b
  5172  001EF2  0100               	movlb	0	; () banked
  5173  001EF4  BFA5               	btfsc	___awdiv@dividend& (0+255),7,b
  5174  001EF6  07A6               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5175  001EF8  ECD4  F01A         	call	___awdiv	;wreg free
  5176  001EFC  0E12               	movlw	18
  5177  001EFE  0100               	movlb	0	; () banked
  5178  001F00  25A5               	addwf	?___awdiv& (0+255),w,b
  5179  001F02  0100               	movlb	0	; () banked
  5180  001F04  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5181  001F06  0E00               	movlw	0
  5182  001F08  0100               	movlb	0	; () banked
  5183  001F0A  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  5184  001F0C  0100               	movlb	0	; () banked
  5185  001F0E  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5186  001F10  0E00               	movlw	0
  5187  001F12  0100               	movlb	0	; () banked
  5188  001F14  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5189  001F16  0E03               	movlw	3
  5190  001F18  0100               	movlb	0	; () banked
  5191  001F1A  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5192  001F1C  EC0C  F01F         	call	___wmul	;wreg free
  5193  001F20  0E50               	movlw	low __powers_
  5194  001F22  0100               	movlb	0	; () banked
  5195  001F24  25AD               	addwf	?___wmul& (0+255),w,b
  5196  001F26  6EF6               	movwf	tblptrl,c
  5197  001F28  0E06               	movlw	high __powers_
  5198  001F2A  0100               	movlb	0	; () banked
  5199  001F2C  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5200  001F2E  6EF7               	movwf	tblptrh,c
  5201  001F30                     	if	0	;There are less than 3 active tblptr bytes
  5202  001F30                     	endif
  5203  001F30  0009               	tblrd		*+
  5204  001F32  FFFF               	dw	65535	; errata NOP
  5205  001F34  0100               	movlb	0	; () banked
  5206  001F36  CFF5 F0BA          	movff	tablat,___ftmul@f1
  5207  001F3A  0009               	tblrd		*+
  5208  001F3C  FFFF               	dw	65535	; errata NOP
  5209  001F3E  0100               	movlb	0	; () banked
  5210  001F40  CFF5 F0BB          	movff	tablat,___ftmul@f1+1
  5211  001F44  000A               	tblrd		*-
  5212  001F46  FFFF               	dw	65535	; errata NOP
  5213  001F48  0100               	movlb	0	; () banked
  5214  001F4A  CFF5 F0BC          	movff	tablat,___ftmul@f1+2
  5215  001F4E  EC1B  F017         	call	___ftmul	;wreg free
  5216  001F52  C0BA  F0CC         	movff	?___ftmul,_scale$1747
  5217  001F56  C0BB  F0CD         	movff	?___ftmul+1,_scale$1747+1
  5218  001F5A  C0BC  F0CE         	movff	?___ftmul+2,_scale$1747+2
  5219                           
  5220                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5221  001F5E  C0CC  F0BA         	movff	_scale$1747,___ftmul@f1
  5222  001F62  C0CD  F0BB         	movff	_scale$1747+1,___ftmul@f1+1
  5223  001F66  C0CE  F0BC         	movff	_scale$1747+2,___ftmul@f1+2
  5224  001F6A  0E00               	movlw	0
  5225  001F6C  0100               	movlb	0	; () banked
  5226  001F6E  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5227  001F70  0E03               	movlw	3
  5228  001F72  0100               	movlb	0	; () banked
  5229  001F74  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5230  001F76  0E00               	movlw	0
  5231  001F78  0100               	movlb	0	; () banked
  5232  001F7A  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  5233  001F7C  0E0A               	movlw	10
  5234  001F7E  0100               	movlb	0	; () banked
  5235  001F80  6FA1               	movwf	___awmod@divisor& (0+255),b
  5236  001F82  0100               	movlb	0	; () banked
  5237  001F84  51CF               	movf	scale@scl& (0+255),w,b
  5238  001F86  0100               	movlb	0	; () banked
  5239  001F88  6F9F               	movwf	___awmod@dividend& (0+255),b
  5240  001F8A  0100               	movlb	0	; () banked
  5241  001F8C  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  5242  001F8E  0100               	movlb	0	; () banked
  5243  001F90  BF9F               	btfsc	___awmod@dividend& (0+255),7,b
  5244  001F92  07A0               	decf	(___awmod@dividend+1)& (0+255),f,b
  5245  001F94  EC8C  F01C         	call	___awmod	;wreg free
  5246  001F98  0100               	movlb	0	; () banked
  5247  001F9A  C09F  F0AD         	movff	?___awmod,___wmul@multiplier
  5248  001F9E  0100               	movlb	0	; () banked
  5249  001FA0  C0A0  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  5250  001FA4  EC0C  F01F         	call	___wmul	;wreg free
  5251  001FA8  0E50               	movlw	low __powers_
  5252  001FAA  0100               	movlb	0	; () banked
  5253  001FAC  25AD               	addwf	?___wmul& (0+255),w,b
  5254  001FAE  6EF6               	movwf	tblptrl,c
  5255  001FB0  0E06               	movlw	high __powers_
  5256  001FB2  0100               	movlb	0	; () banked
  5257  001FB4  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5258  001FB6  6EF7               	movwf	tblptrh,c
  5259  001FB8                     	if	0	;There are less than 3 active tblptr bytes
  5260  001FB8                     	endif
  5261  001FB8  0009               	tblrd		*+
  5262  001FBA  FFFF               	dw	65535	; errata NOP
  5263  001FBC  0100               	movlb	0	; () banked
  5264  001FBE  CFF5 F0BD          	movff	tablat,___ftmul@f2
  5265  001FC2  0009               	tblrd		*+
  5266  001FC4  FFFF               	dw	65535	; errata NOP
  5267  001FC6  0100               	movlb	0	; () banked
  5268  001FC8  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  5269  001FCC  000A               	tblrd		*-
  5270  001FCE  FFFF               	dw	65535	; errata NOP
  5271  001FD0  0100               	movlb	0	; () banked
  5272  001FD2  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  5273  001FD6  EC1B  F017         	call	___ftmul	;wreg free
  5274  001FDA  D078               	goto	L14
  5275  001FDC                     l2821:
  5276                           
  5277                           ;doprnt.c: 438: else if(scl > 10)
  5278  001FDC  0100               	movlb	0	; () banked
  5279  001FDE  51CF               	movf	scale@scl& (0+255),w,b
  5280  001FE0  0A80               	xorlw	128
  5281  001FE2  0F75               	addlw	-139
  5282  001FE4  A0D8               	btfss	status,0,c
  5283  001FE6  D079               	goto	l2827
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5287  001FE8  0E00               	movlw	0
  5288  001FEA  0100               	movlb	0	; () banked
  5289  001FEC  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  5290  001FEE  0E0A               	movlw	10
  5291  001FF0  0100               	movlb	0	; () banked
  5292  001FF2  6FA7               	movwf	___awdiv@divisor& (0+255),b
  5293  001FF4  0100               	movlb	0	; () banked
  5294  001FF6  51CF               	movf	scale@scl& (0+255),w,b
  5295  001FF8  0100               	movlb	0	; () banked
  5296  001FFA  6FA5               	movwf	___awdiv@dividend& (0+255),b
  5297  001FFC  0100               	movlb	0	; () banked
  5298  001FFE  6BA6               	clrf	(___awdiv@dividend+1)& (0+255),b
  5299  002000  0100               	movlb	0	; () banked
  5300  002002  BFA5               	btfsc	___awdiv@dividend& (0+255),7,b
  5301  002004  07A6               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5302  002006  ECD4  F01A         	call	___awdiv	;wreg free
  5303  00200A  0E09               	movlw	9
  5304  00200C  0100               	movlb	0	; () banked
  5305  00200E  25A5               	addwf	?___awdiv& (0+255),w,b
  5306  002010  0100               	movlb	0	; () banked
  5307  002012  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5308  002014  0E00               	movlw	0
  5309  002016  0100               	movlb	0	; () banked
  5310  002018  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  5311  00201A  0100               	movlb	0	; () banked
  5312  00201C  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5313  00201E  0E00               	movlw	0
  5314  002020  0100               	movlb	0	; () banked
  5315  002022  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5316  002024  0E03               	movlw	3
  5317  002026  0100               	movlb	0	; () banked
  5318  002028  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5319  00202A  EC0C  F01F         	call	___wmul	;wreg free
  5320  00202E  0E50               	movlw	low __powers_
  5321  002030  0100               	movlb	0	; () banked
  5322  002032  25AD               	addwf	?___wmul& (0+255),w,b
  5323  002034  6EF6               	movwf	tblptrl,c
  5324  002036  0E06               	movlw	high __powers_
  5325  002038  0100               	movlb	0	; () banked
  5326  00203A  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5327  00203C  6EF7               	movwf	tblptrh,c
  5328  00203E                     	if	0	;There are less than 3 active tblptr bytes
  5329  00203E                     	endif
  5330  00203E  0009               	tblrd		*+
  5331  002040  FFFF               	dw	65535	; errata NOP
  5332  002042  0100               	movlb	0	; () banked
  5333  002044  CFF5 F0BA          	movff	tablat,___ftmul@f1
  5334  002048  0009               	tblrd		*+
  5335  00204A  FFFF               	dw	65535	; errata NOP
  5336  00204C  0100               	movlb	0	; () banked
  5337  00204E  CFF5 F0BB          	movff	tablat,___ftmul@f1+1
  5338  002052  000A               	tblrd		*-
  5339  002054  FFFF               	dw	65535	; errata NOP
  5340  002056  0100               	movlb	0	; () banked
  5341  002058  CFF5 F0BC          	movff	tablat,___ftmul@f1+2
  5342  00205C  0E00               	movlw	0
  5343  00205E  0100               	movlb	0	; () banked
  5344  002060  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5345  002062  0E03               	movlw	3
  5346  002064  0100               	movlb	0	; () banked
  5347  002066  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5348  002068  0E00               	movlw	0
  5349  00206A  0100               	movlb	0	; () banked
  5350  00206C  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  5351  00206E  0E0A               	movlw	10
  5352  002070  0100               	movlb	0	; () banked
  5353  002072  6FA1               	movwf	___awmod@divisor& (0+255),b
  5354  002074  0100               	movlb	0	; () banked
  5355  002076  51CF               	movf	scale@scl& (0+255),w,b
  5356  002078  0100               	movlb	0	; () banked
  5357  00207A  6F9F               	movwf	___awmod@dividend& (0+255),b
  5358  00207C  0100               	movlb	0	; () banked
  5359  00207E  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  5360  002080  0100               	movlb	0	; () banked
  5361  002082  BF9F               	btfsc	___awmod@dividend& (0+255),7,b
  5362  002084  07A0               	decf	(___awmod@dividend+1)& (0+255),f,b
  5363  002086  EC8C  F01C         	call	___awmod	;wreg free
  5364  00208A  0100               	movlb	0	; () banked
  5365  00208C  C09F  F0AD         	movff	?___awmod,___wmul@multiplier
  5366  002090  0100               	movlb	0	; () banked
  5367  002092  C0A0  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  5368  002096  EC0C  F01F         	call	___wmul	;wreg free
  5369  00209A  0E50               	movlw	low __powers_
  5370  00209C  0100               	movlb	0	; () banked
  5371  00209E  25AD               	addwf	?___wmul& (0+255),w,b
  5372  0020A0  6EF6               	movwf	tblptrl,c
  5373  0020A2  0E06               	movlw	high __powers_
  5374  0020A4  0100               	movlb	0	; () banked
  5375  0020A6  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5376  0020A8  6EF7               	movwf	tblptrh,c
  5377  0020AA                     	if	0	;There are less than 3 active tblptr bytes
  5378  0020AA                     	endif
  5379  0020AA  0009               	tblrd		*+
  5380  0020AC  FFFF               	dw	65535	; errata NOP
  5381  0020AE  0100               	movlb	0	; () banked
  5382  0020B0  CFF5 F0BD          	movff	tablat,___ftmul@f2
  5383  0020B4  0009               	tblrd		*+
  5384  0020B6  FFFF               	dw	65535	; errata NOP
  5385  0020B8  0100               	movlb	0	; () banked
  5386  0020BA  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  5387  0020BE  000A               	tblrd		*-
  5388  0020C0  FFFF               	dw	65535	; errata NOP
  5389  0020C2  0100               	movlb	0	; () banked
  5390  0020C4  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  5391  0020C8  EC1B  F017         	call	___ftmul	;wreg free
  5392  0020CC                     L14:
  5393  0020CC  C0BA  F0C9         	movff	?___ftmul,?_scale
  5394  0020D0  C0BB  F0CA         	movff	?___ftmul+1,?_scale+1
  5395  0020D4  C0BC  F0CB         	movff	?___ftmul+2,?_scale+2
  5396  0020D8  D018               	goto	l206
  5397  0020DA                     l2827:
  5398                           
  5399                           ;doprnt.c: 440: return _powers_[scl];
  5400  0020DA  0100               	movlb	0	; () banked
  5401  0020DC  51CF               	movf	scale@scl& (0+255),w,b
  5402  0020DE  0D03               	mullw	3
  5403  0020E0  0E50               	movlw	low __powers_
  5404  0020E2  24F3               	addwf	prodl,w,c
  5405  0020E4  6EF6               	movwf	tblptrl,c
  5406  0020E6  0E06               	movlw	high __powers_
  5407  0020E8  20F4               	addwfc	prodh,w,c
  5408  0020EA  6EF7               	movwf	tblptrh,c
  5409  0020EC                     	if	0	;There are less than 3 active tblptr bytes
  5410  0020EC                     	endif
  5411  0020EC  0009               	tblrd		*+
  5412  0020EE  FFFF               	dw	65535	; errata NOP
  5413  0020F0  0100               	movlb	0	; () banked
  5414  0020F2  CFF5 F0C9          	movff	tablat,?_scale
  5415  0020F6  0009               	tblrd		*+
  5416  0020F8  FFFF               	dw	65535	; errata NOP
  5417  0020FA  0100               	movlb	0	; () banked
  5418  0020FC  CFF5 F0CA          	movff	tablat,?_scale+1
  5419  002100  000A               	tblrd		*-
  5420  002102  FFFF               	dw	65535	; errata NOP
  5421  002104                     L13:
  5422  002104  0100               	movlb	0	; () banked
  5423  002106  CFF5 F0CB          	movff	tablat,?_scale+2
  5424  00210A                     l206:
  5425  00210A  0012               	return	
  5426  00210C  FFFF               	dw	65535	; errata NOP
  5427  00210E                     __end_of_scale:
  5428                           	opt stack 0
  5429                           tblptru	equ	0xFF8
  5430                           tblptrh	equ	0xFF7
  5431                           tblptrl	equ	0xFF6
  5432                           tablat	equ	0xFF5
  5433                           prodh	equ	0xFF4
  5434                           prodl	equ	0xFF3
  5435                           postinc0	equ	0xFEE
  5436                           wreg	equ	0xFE8
  5437                           postinc1	equ	0xFE6
  5438                           postdec1	equ	0xFE5
  5439                           fsr1l	equ	0xFE1
  5440                           indf2	equ	0xFDF
  5441                           postinc2	equ	0xFDE
  5442                           postdec2	equ	0xFDD
  5443                           fsr2h	equ	0xFDA
  5444                           fsr2l	equ	0xFD9
  5445                           status	equ	0xFD8
  5446                           
  5447 ;; *************** function _isdigit *****************
  5448 ;; Defined at:
  5449 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/isdigit.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  c               1    wreg     unsigned char 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  c               1   33[BANK0 ] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;		None               void
  5456 ;; Registers used:
  5457 ;;		wreg, status,2, status,0
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5463 ;;      Params:         0       0       0       0       0       0       0
  5464 ;;      Locals:         0       2       0       0       0       0       0
  5465 ;;      Temps:          0       1       0       0       0       0       0
  5466 ;;      Totals:         0       3       0       0       0       0       0
  5467 ;;Total ram usage:        3 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    6
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_sprintf
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text5
  5478  003EFC                     __ptext5:
  5479                           	opt stack 0
  5480  003EFC                     _isdigit:
  5481                           	opt stack 21
  5482                           
  5483                           ;incstack = 0
  5484  003EFC  FFFF               	dw	65535
  5485                           
  5486                           ;isdigit@c stored from wreg
  5487  003EFE  0100               	movlb	0	; () banked
  5488  003F00  6FA1               	movwf	isdigit@c& (0+255),b
  5489                           
  5490                           ; BSR set to: 0
  5491  003F02  0E00               	movlw	0
  5492  003F04  0100               	movlb	0	; () banked
  5493  003F06  6FA0               	movwf	_isdigit$1512& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496  003F08  0E3A               	movlw	58
  5497  003F0A  0100               	movlb	0	; () banked
  5498  003F0C  5DA1               	subwf	isdigit@c& (0+255),w,b
  5499  003F0E  B0D8               	btfsc	status,0,c
  5500  003F10  D007               	goto	l2839
  5501                           
  5502                           ; BSR set to: 0
  5503  003F12  0E2F               	movlw	47
  5504  003F14  0100               	movlb	0	; () banked
  5505  003F16  65A1               	cpfsgt	isdigit@c& (0+255),b
  5506  003F18  D003               	goto	l2839
  5507                           
  5508                           ; BSR set to: 0
  5509  003F1A  0E01               	movlw	1
  5510  003F1C  0100               	movlb	0	; () banked
  5511  003F1E  6FA0               	movwf	_isdigit$1512& (0+255),b
  5512  003F20                     l2839:
  5513                           
  5514                           ; BSR set to: 0
  5515  003F20  C0A0  F09F         	movff	_isdigit$1512,??_isdigit
  5516  003F24  0100               	movlb	0	; () banked
  5517  003F26  319F               	rrcf	??_isdigit& (0+255),w,b
  5518                           
  5519                           ; BSR set to: 0
  5520                           
  5521                           ; BSR set to: 0
  5522  003F28  0012               	return	
  5523  003F2A  FFFF               	dw	65535	; errata NOP
  5524  003F2C                     __end_of_isdigit:
  5525                           	opt stack 0
  5526                           tblptru	equ	0xFF8
  5527                           tblptrh	equ	0xFF7
  5528                           tblptrl	equ	0xFF6
  5529                           tablat	equ	0xFF5
  5530                           prodh	equ	0xFF4
  5531                           prodl	equ	0xFF3
  5532                           postinc0	equ	0xFEE
  5533                           wreg	equ	0xFE8
  5534                           postinc1	equ	0xFE6
  5535                           postdec1	equ	0xFE5
  5536                           fsr1l	equ	0xFE1
  5537                           indf2	equ	0xFDF
  5538                           postinc2	equ	0xFDE
  5539                           postdec2	equ	0xFDD
  5540                           fsr2h	equ	0xFDA
  5541                           fsr2l	equ	0xFD9
  5542                           status	equ	0xFD8
  5543                           
  5544 ;; *************** function _fround *****************
  5545 ;; Defined at:
  5546 ;;		line 409 in file "/Applications/microchip/xc8/v1.33/sources/common/doprnt.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  prec            1    wreg     unsigned char 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  prec            1   82[BANK0 ] unsigned char 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  3   73[BANK0 ] unsigned char 
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5560 ;;      Params:         0       3       0       0       0       0       0
  5561 ;;      Locals:         0       7       0       0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0
  5563 ;;      Totals:         0      10       0       0       0       0       0
  5564 ;;Total ram usage:       10 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    8
  5567 ;; This function calls:
  5568 ;;		___awdiv
  5569 ;;		___awmod
  5570 ;;		___ftmul
  5571 ;;		___wmul
  5572 ;; This function is called by:
  5573 ;;		_sprintf
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text6
  5578  00210E                     __ptext6:
  5579                           	opt stack 0
  5580  00210E                     _fround:
  5581                           	opt stack 19
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;incstack = 0
  5585  00210E  FFFF               	dw	65535
  5586                           
  5587                           ;fround@prec stored from wreg
  5588  002110  0100               	movlb	0	; () banked
  5589  002112  6FD2               	movwf	fround@prec& (0+255),b
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;doprnt.c: 413: if(prec>=110)
  5593  002114  0E6D               	movlw	109
  5594  002116  0100               	movlb	0	; () banked
  5595  002118  65D2               	cpfsgt	fround@prec& (0+255),b
  5596  00211A  D0D4               	goto	l2781
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5600  00211C  0E00               	movlw	0
  5601  00211E  0100               	movlb	0	; () banked
  5602  002120  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5603  002122  0E03               	movlw	3
  5604  002124  0100               	movlb	0	; () banked
  5605  002126  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5606  002128  0E00               	movlw	0
  5607  00212A  0100               	movlb	0	; () banked
  5608  00212C  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  5609  00212E  0E0A               	movlw	10
  5610  002130  0100               	movlb	0	; () banked
  5611  002132  6FA7               	movwf	___awdiv@divisor& (0+255),b
  5612  002134  0E00               	movlw	0
  5613  002136  0100               	movlb	0	; () banked
  5614  002138  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  5615  00213A  0E64               	movlw	100
  5616  00213C  0100               	movlb	0	; () banked
  5617  00213E  6FA1               	movwf	___awmod@divisor& (0+255),b
  5618  002140  0100               	movlb	0	; () banked
  5619  002142  C0D2  F09F         	movff	fround@prec,___awmod@dividend
  5620  002146  0100               	movlb	0	; () banked
  5621  002148  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  5622  00214A  EC8C  F01C         	call	___awmod	;wreg free
  5623  00214E  0100               	movlb	0	; () banked
  5624  002150  C09F  F0A5         	movff	?___awmod,___awdiv@dividend
  5625  002154  0100               	movlb	0	; () banked
  5626  002156  C0A0  F0A6         	movff	?___awmod+1,___awdiv@dividend+1
  5627  00215A  ECD4  F01A         	call	___awdiv	;wreg free
  5628  00215E  0E09               	movlw	9
  5629  002160  0100               	movlb	0	; () banked
  5630  002162  25A5               	addwf	?___awdiv& (0+255),w,b
  5631  002164  0100               	movlb	0	; () banked
  5632  002166  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5633  002168  0E00               	movlw	0
  5634  00216A  0100               	movlb	0	; () banked
  5635  00216C  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  5636  00216E  0100               	movlb	0	; () banked
  5637  002170  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5638  002172  EC0C  F01F         	call	___wmul	;wreg free
  5639  002176  0E29               	movlw	low __npowers_
  5640  002178  0100               	movlb	0	; () banked
  5641  00217A  25AD               	addwf	?___wmul& (0+255),w,b
  5642  00217C  6EF6               	movwf	tblptrl,c
  5643  00217E  0E06               	movlw	high __npowers_
  5644  002180  0100               	movlb	0	; () banked
  5645  002182  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5646  002184  6EF7               	movwf	tblptrh,c
  5647  002186                     	if	0	;There are less than 3 active tblptr bytes
  5648  002186                     	endif
  5649  002186  0009               	tblrd		*+
  5650  002188  FFFF               	dw	65535	; errata NOP
  5651  00218A  0100               	movlb	0	; () banked
  5652  00218C  CFF5 F0BD          	movff	tablat,___ftmul@f2
  5653  002190  0009               	tblrd		*+
  5654  002192  FFFF               	dw	65535	; errata NOP
  5655  002194  0100               	movlb	0	; () banked
  5656  002196  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  5657  00219A  000A               	tblrd		*-
  5658  00219C  FFFF               	dw	65535	; errata NOP
  5659  00219E  0100               	movlb	0	; () banked
  5660  0021A0  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  5661  0021A4  0E00               	movlw	0
  5662  0021A6  0100               	movlb	0	; () banked
  5663  0021A8  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  5664  0021AA  0E64               	movlw	100
  5665  0021AC  0100               	movlb	0	; () banked
  5666  0021AE  6FA7               	movwf	___awdiv@divisor& (0+255),b
  5667  0021B0  0100               	movlb	0	; () banked
  5668  0021B2  C0D2  F0A5         	movff	fround@prec,___awdiv@dividend
  5669  0021B6  0100               	movlb	0	; () banked
  5670  0021B8  6BA6               	clrf	(___awdiv@dividend+1)& (0+255),b
  5671  0021BA  ECD4  F01A         	call	___awdiv	;wreg free
  5672  0021BE  0E12               	movlw	18
  5673  0021C0  0100               	movlb	0	; () banked
  5674  0021C2  25A5               	addwf	?___awdiv& (0+255),w,b
  5675  0021C4  0100               	movlb	0	; () banked
  5676  0021C6  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5677  0021C8  0E00               	movlw	0
  5678  0021CA  0100               	movlb	0	; () banked
  5679  0021CC  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  5680  0021CE  0100               	movlb	0	; () banked
  5681  0021D0  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5682  0021D2  0E00               	movlw	0
  5683  0021D4  0100               	movlb	0	; () banked
  5684  0021D6  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5685  0021D8  0E03               	movlw	3
  5686  0021DA  0100               	movlb	0	; () banked
  5687  0021DC  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5688  0021DE  EC0C  F01F         	call	___wmul	;wreg free
  5689  0021E2  0E29               	movlw	low __npowers_
  5690  0021E4  0100               	movlb	0	; () banked
  5691  0021E6  25AD               	addwf	?___wmul& (0+255),w,b
  5692  0021E8  6EF6               	movwf	tblptrl,c
  5693  0021EA  0E06               	movlw	high __npowers_
  5694  0021EC  0100               	movlb	0	; () banked
  5695  0021EE  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5696  0021F0  6EF7               	movwf	tblptrh,c
  5697  0021F2                     	if	0	;There are less than 3 active tblptr bytes
  5698  0021F2                     	endif
  5699  0021F2  0009               	tblrd		*+
  5700  0021F4  FFFF               	dw	65535	; errata NOP
  5701  0021F6  0100               	movlb	0	; () banked
  5702  0021F8  CFF5 F0BA          	movff	tablat,___ftmul@f1
  5703  0021FC  0009               	tblrd		*+
  5704  0021FE  FFFF               	dw	65535	; errata NOP
  5705  002200  0100               	movlb	0	; () banked
  5706  002202  CFF5 F0BB          	movff	tablat,___ftmul@f1+1
  5707  002206  000A               	tblrd		*-
  5708  002208  FFFF               	dw	65535	; errata NOP
  5709  00220A  0100               	movlb	0	; () banked
  5710  00220C  CFF5 F0BC          	movff	tablat,___ftmul@f1+2
  5711  002210  EC1B  F017         	call	___ftmul	;wreg free
  5712  002214  C0BA  F0CF         	movff	?___ftmul,_fround$1745
  5713  002218  C0BB  F0D0         	movff	?___ftmul+1,_fround$1745+1
  5714  00221C  C0BC  F0D1         	movff	?___ftmul+2,_fround$1745+2
  5715                           
  5716                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5717  002220  0E00               	movlw	0
  5718  002222  0100               	movlb	0	; () banked
  5719  002224  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5720  002226  0E03               	movlw	3
  5721  002228  0100               	movlb	0	; () banked
  5722  00222A  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5723  00222C  0E00               	movlw	0
  5724  00222E  0100               	movlb	0	; () banked
  5725  002230  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  5726  002232  0E0A               	movlw	10
  5727  002234  0100               	movlb	0	; () banked
  5728  002236  6FA1               	movwf	___awmod@divisor& (0+255),b
  5729  002238  0100               	movlb	0	; () banked
  5730  00223A  C0D2  F09F         	movff	fround@prec,___awmod@dividend
  5731  00223E  0100               	movlb	0	; () banked
  5732  002240  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  5733  002242  EC8C  F01C         	call	___awmod	;wreg free
  5734  002246  0100               	movlb	0	; () banked
  5735  002248  C09F  F0AD         	movff	?___awmod,___wmul@multiplier
  5736  00224C  0100               	movlb	0	; () banked
  5737  00224E  C0A0  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  5738  002252  EC0C  F01F         	call	___wmul	;wreg free
  5739  002256  0E29               	movlw	low __npowers_
  5740  002258  0100               	movlb	0	; () banked
  5741  00225A  25AD               	addwf	?___wmul& (0+255),w,b
  5742  00225C  6EF6               	movwf	tblptrl,c
  5743  00225E  0E06               	movlw	high __npowers_
  5744  002260  0100               	movlb	0	; () banked
  5745  002262  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5746  002264  6EF7               	movwf	tblptrh,c
  5747  002266                     	if	0	;There are less than 3 active tblptr bytes
  5748  002266                     	endif
  5749  002266  0009               	tblrd		*+
  5750  002268  FFFF               	dw	65535	; errata NOP
  5751  00226A  0100               	movlb	0	; () banked
  5752  00226C  CFF5 F0BD          	movff	tablat,___ftmul@f2
  5753  002270  0009               	tblrd		*+
  5754  002272  FFFF               	dw	65535	; errata NOP
  5755  002274  0100               	movlb	0	; () banked
  5756  002276  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  5757  00227A  000A               	tblrd		*-
  5758  00227C  FFFF               	dw	65535	; errata NOP
  5759  00227E  0100               	movlb	0	; () banked
  5760  002280  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  5761  002284  C0CF  F0BA         	movff	_fround$1745,___ftmul@f1
  5762  002288  C0D0  F0BB         	movff	_fround$1745+1,___ftmul@f1+1
  5763  00228C  C0D1  F0BC         	movff	_fround$1745+2,___ftmul@f1+2
  5764  002290  EC1B  F017         	call	___ftmul	;wreg free
  5765  002294  C0BA  F0CC         	movff	?___ftmul,_fround$1746
  5766  002298  C0BB  F0CD         	movff	?___ftmul+1,_fround$1746+1
  5767  00229C  C0BC  F0CE         	movff	?___ftmul+2,_fround$1746+2
  5768                           
  5769                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5770  0022A0  C0CC  F0BA         	movff	_fround$1746,___ftmul@f1
  5771  0022A4  C0CD  F0BB         	movff	_fround$1746+1,___ftmul@f1+1
  5772  0022A8  C0CE  F0BC         	movff	_fround$1746+2,___ftmul@f1+2
  5773  0022AC  0E00               	movlw	0
  5774  0022AE  0100               	movlb	0	; () banked
  5775  0022B0  6FBD               	movwf	___ftmul@f2& (0+255),b
  5776  0022B2  0E00               	movlw	0
  5777  0022B4  0100               	movlb	0	; () banked
  5778  0022B6  6FBE               	movwf	(___ftmul@f2+1)& (0+255),b
  5779  0022B8  0E3F               	movlw	63
  5780  0022BA  0100               	movlb	0	; () banked
  5781  0022BC  6FBF               	movwf	(___ftmul@f2+2)& (0+255),b
  5782  0022BE  EC1B  F017         	call	___ftmul	;wreg free
  5783  0022C2  D0A9               	goto	L16
  5784  0022C4                     l2781:
  5785                           
  5786                           ;doprnt.c: 415: else if(prec > 10)
  5787  0022C4  0E0A               	movlw	10
  5788  0022C6  0100               	movlb	0	; () banked
  5789  0022C8  65D2               	cpfsgt	fround@prec& (0+255),b
  5790  0022CA  D082               	goto	l2789
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5794  0022CC  0E00               	movlw	0
  5795  0022CE  0100               	movlb	0	; () banked
  5796  0022D0  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5797  0022D2  0E03               	movlw	3
  5798  0022D4  0100               	movlb	0	; () banked
  5799  0022D6  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5800  0022D8  0E00               	movlw	0
  5801  0022DA  0100               	movlb	0	; () banked
  5802  0022DC  6FA2               	movwf	(___awmod@divisor+1)& (0+255),b
  5803  0022DE  0E0A               	movlw	10
  5804  0022E0  0100               	movlb	0	; () banked
  5805  0022E2  6FA1               	movwf	___awmod@divisor& (0+255),b
  5806  0022E4  0100               	movlb	0	; () banked
  5807  0022E6  C0D2  F09F         	movff	fround@prec,___awmod@dividend
  5808  0022EA  0100               	movlb	0	; () banked
  5809  0022EC  6BA0               	clrf	(___awmod@dividend+1)& (0+255),b
  5810  0022EE  EC8C  F01C         	call	___awmod	;wreg free
  5811  0022F2  0100               	movlb	0	; () banked
  5812  0022F4  C09F  F0AD         	movff	?___awmod,___wmul@multiplier
  5813  0022F8  0100               	movlb	0	; () banked
  5814  0022FA  C0A0  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  5815  0022FE  EC0C  F01F         	call	___wmul	;wreg free
  5816  002302  0E29               	movlw	low __npowers_
  5817  002304  0100               	movlb	0	; () banked
  5818  002306  25AD               	addwf	?___wmul& (0+255),w,b
  5819  002308  6EF6               	movwf	tblptrl,c
  5820  00230A  0E06               	movlw	high __npowers_
  5821  00230C  0100               	movlb	0	; () banked
  5822  00230E  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5823  002310  6EF7               	movwf	tblptrh,c
  5824  002312                     	if	0	;There are less than 3 active tblptr bytes
  5825  002312                     	endif
  5826  002312  0009               	tblrd		*+
  5827  002314  FFFF               	dw	65535	; errata NOP
  5828  002316  0100               	movlb	0	; () banked
  5829  002318  CFF5 F0BD          	movff	tablat,___ftmul@f2
  5830  00231C  0009               	tblrd		*+
  5831  00231E  FFFF               	dw	65535	; errata NOP
  5832  002320  0100               	movlb	0	; () banked
  5833  002322  CFF5 F0BE          	movff	tablat,___ftmul@f2+1
  5834  002326  000A               	tblrd		*-
  5835  002328  FFFF               	dw	65535	; errata NOP
  5836  00232A  0100               	movlb	0	; () banked
  5837  00232C  CFF5 F0BF          	movff	tablat,___ftmul@f2+2
  5838  002330  0E00               	movlw	0
  5839  002332  0100               	movlb	0	; () banked
  5840  002334  6FA8               	movwf	(___awdiv@divisor+1)& (0+255),b
  5841  002336  0E0A               	movlw	10
  5842  002338  0100               	movlb	0	; () banked
  5843  00233A  6FA7               	movwf	___awdiv@divisor& (0+255),b
  5844  00233C  0100               	movlb	0	; () banked
  5845  00233E  C0D2  F0A5         	movff	fround@prec,___awdiv@dividend
  5846  002342  0100               	movlb	0	; () banked
  5847  002344  6BA6               	clrf	(___awdiv@dividend+1)& (0+255),b
  5848  002346  ECD4  F01A         	call	___awdiv	;wreg free
  5849  00234A  0E09               	movlw	9
  5850  00234C  0100               	movlb	0	; () banked
  5851  00234E  25A5               	addwf	?___awdiv& (0+255),w,b
  5852  002350  0100               	movlb	0	; () banked
  5853  002352  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5854  002354  0E00               	movlw	0
  5855  002356  0100               	movlb	0	; () banked
  5856  002358  21A6               	addwfc	(?___awdiv+1)& (0+255),w,b
  5857  00235A  0100               	movlb	0	; () banked
  5858  00235C  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5859  00235E  0E00               	movlw	0
  5860  002360  0100               	movlb	0	; () banked
  5861  002362  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5862  002364  0E03               	movlw	3
  5863  002366  0100               	movlb	0	; () banked
  5864  002368  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5865  00236A  EC0C  F01F         	call	___wmul	;wreg free
  5866  00236E  0E29               	movlw	low __npowers_
  5867  002370  0100               	movlb	0	; () banked
  5868  002372  25AD               	addwf	?___wmul& (0+255),w,b
  5869  002374  6EF6               	movwf	tblptrl,c
  5870  002376  0E06               	movlw	high __npowers_
  5871  002378  0100               	movlb	0	; () banked
  5872  00237A  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5873  00237C  6EF7               	movwf	tblptrh,c
  5874  00237E                     	if	0	;There are less than 3 active tblptr bytes
  5875  00237E                     	endif
  5876  00237E  0009               	tblrd		*+
  5877  002380  FFFF               	dw	65535	; errata NOP
  5878  002382  0100               	movlb	0	; () banked
  5879  002384  CFF5 F0BA          	movff	tablat,___ftmul@f1
  5880  002388  0009               	tblrd		*+
  5881  00238A  FFFF               	dw	65535	; errata NOP
  5882  00238C  0100               	movlb	0	; () banked
  5883  00238E  CFF5 F0BB          	movff	tablat,___ftmul@f1+1
  5884  002392  000A               	tblrd		*-
  5885  002394  FFFF               	dw	65535	; errata NOP
  5886  002396  0100               	movlb	0	; () banked
  5887  002398  CFF5 F0BC          	movff	tablat,___ftmul@f1+2
  5888  00239C  EC1B  F017         	call	___ftmul	;wreg free
  5889  0023A0  C0BA  F0CF         	movff	?___ftmul,_fround$1745
  5890  0023A4  C0BB  F0D0         	movff	?___ftmul+1,_fround$1745+1
  5891  0023A8  C0BC  F0D1         	movff	?___ftmul+2,_fround$1745+2
  5892                           
  5893                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5894  0023AC  C0CF  F0BA         	movff	_fround$1745,___ftmul@f1
  5895  0023B0  C0D0  F0BB         	movff	_fround$1745+1,___ftmul@f1+1
  5896  0023B4  C0D1  F0BC         	movff	_fround$1745+2,___ftmul@f1+2
  5897  0023B8  0E00               	movlw	0
  5898  0023BA  0100               	movlb	0	; () banked
  5899  0023BC  6FBD               	movwf	___ftmul@f2& (0+255),b
  5900  0023BE  0E00               	movlw	0
  5901  0023C0  0100               	movlb	0	; () banked
  5902  0023C2  6FBE               	movwf	(___ftmul@f2+1)& (0+255),b
  5903  0023C4  0E3F               	movlw	63
  5904  0023C6  0100               	movlb	0	; () banked
  5905  0023C8  6FBF               	movwf	(___ftmul@f2+2)& (0+255),b
  5906  0023CA  EC1B  F017         	call	___ftmul	;wreg free
  5907  0023CE  D023               	goto	L16
  5908  0023D0                     l2789:
  5909                           
  5910                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5911  0023D0  0100               	movlb	0	; () banked
  5912  0023D2  51D2               	movf	fround@prec& (0+255),w,b
  5913  0023D4  0D03               	mullw	3
  5914  0023D6  0E29               	movlw	low __npowers_
  5915  0023D8  24F3               	addwf	prodl,w,c
  5916  0023DA  6EF6               	movwf	tblptrl,c
  5917  0023DC  0E06               	movlw	high __npowers_
  5918  0023DE  20F4               	addwfc	prodh,w,c
  5919  0023E0  6EF7               	movwf	tblptrh,c
  5920  0023E2                     	if	0	;There are less than 3 active tblptr bytes
  5921  0023E2                     	endif
  5922  0023E2  0009               	tblrd		*+
  5923  0023E4  FFFF               	dw	65535	; errata NOP
  5924  0023E6  0100               	movlb	0	; () banked
  5925  0023E8  CFF5 F0BA          	movff	tablat,___ftmul@f1
  5926  0023EC  0009               	tblrd		*+
  5927  0023EE  FFFF               	dw	65535	; errata NOP
  5928  0023F0  0100               	movlb	0	; () banked
  5929  0023F2  CFF5 F0BB          	movff	tablat,___ftmul@f1+1
  5930  0023F6  000A               	tblrd		*-
  5931  0023F8  FFFF               	dw	65535	; errata NOP
  5932  0023FA  0100               	movlb	0	; () banked
  5933  0023FC  CFF5 F0BC          	movff	tablat,___ftmul@f1+2
  5934  002400  0E00               	movlw	0
  5935  002402  0100               	movlb	0	; () banked
  5936  002404  6FBD               	movwf	___ftmul@f2& (0+255),b
  5937  002406  0E00               	movlw	0
  5938  002408  0100               	movlb	0	; () banked
  5939  00240A  6FBE               	movwf	(___ftmul@f2+1)& (0+255),b
  5940  00240C  0E3F               	movlw	63
  5941  00240E  0100               	movlb	0	; () banked
  5942  002410  6FBF               	movwf	(___ftmul@f2+2)& (0+255),b
  5943  002412  EC1B  F017         	call	___ftmul	;wreg free
  5944  002416                     L16:
  5945  002416  C0BA  F0C9         	movff	?___ftmul,?_fround
  5946  00241A  C0BB  F0CA         	movff	?___ftmul+1,?_fround+1
  5947  00241E  C0BC  F0CB         	movff	?___ftmul+2,?_fround+2
  5948  002422  0012               	return	
  5949  002424  FFFF               	dw	65535	; errata NOP
  5950  002426                     __end_of_fround:
  5951                           	opt stack 0
  5952                           tblptru	equ	0xFF8
  5953                           tblptrh	equ	0xFF7
  5954                           tblptrl	equ	0xFF6
  5955                           tablat	equ	0xFF5
  5956                           prodh	equ	0xFF4
  5957                           prodl	equ	0xFF3
  5958                           postinc0	equ	0xFEE
  5959                           wreg	equ	0xFE8
  5960                           postinc1	equ	0xFE6
  5961                           postdec1	equ	0xFE5
  5962                           fsr1l	equ	0xFE1
  5963                           indf2	equ	0xFDF
  5964                           postinc2	equ	0xFDE
  5965                           postdec2	equ	0xFDD
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function ___wmul *****************
  5971 ;; Defined at:
  5972 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul16.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  multiplier      2   45[BANK0 ] unsigned int 
  5975 ;;  multiplicand    2   47[BANK0 ] unsigned int 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  product         2   49[BANK0 ] unsigned int 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  2   45[BANK0 ] unsigned int 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0, prodl, prodh
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5987 ;;      Params:         0       4       0       0       0       0       0
  5988 ;;      Locals:         0       2       0       0       0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0
  5990 ;;      Totals:         0       6       0       0       0       0       0
  5991 ;;Total ram usage:        6 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    6
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_fround
  5998 ;;		_scale
  5999 ;;		_sprintf
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text7
  6004  003E18                     __ptext7:
  6005                           	opt stack 0
  6006  003E18                     ___wmul:
  6007                           	opt stack 20
  6008                           
  6009                           ;incstack = 0
  6010  003E18  FFFF               	dw	65535
  6011  003E1A  0100               	movlb	0	; () banked
  6012  003E1C  51AD               	movf	___wmul@multiplier& (0+255),w,b
  6013  003E1E  0100               	movlb	0	; () banked
  6014  003E20  03AF               	mulwf	___wmul@multiplicand& (0+255),b
  6015  003E22  CFF3 F0B1          	movff	prodl,___wmul@product
  6016  003E26  CFF4 F0B2          	movff	prodh,___wmul@product+1
  6017  003E2A  0100               	movlb	0	; () banked
  6018  003E2C  51AD               	movf	___wmul@multiplier& (0+255),w,b
  6019  003E2E  0100               	movlb	0	; () banked
  6020  003E30  03B0               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6021  003E32  50F3               	movf	prodl,w,c
  6022  003E34  0100               	movlb	0	; () banked
  6023  003E36  27B2               	addwf	(___wmul@product+1)& (0+255),f,b
  6024  003E38  0100               	movlb	0	; () banked
  6025  003E3A  51AE               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6026  003E3C  0100               	movlb	0	; () banked
  6027  003E3E  03AF               	mulwf	___wmul@multiplicand& (0+255),b
  6028  003E40  50F3               	movf	prodl,w,c
  6029  003E42  0100               	movlb	0	; () banked
  6030  003E44  27B2               	addwf	(___wmul@product+1)& (0+255),f,b
  6031                           
  6032                           ; BSR set to: 0
  6033  003E46  C0B1  F0AD         	movff	___wmul@product,?___wmul
  6034  003E4A  C0B2  F0AE         	movff	___wmul@product+1,?___wmul+1
  6035                           
  6036                           ; BSR set to: 0
  6037                           
  6038                           ; BSR set to: 0
  6039  003E4E  0012               	return	
  6040  003E50  FFFF               	dw	65535	; errata NOP
  6041  003E52                     __end_of___wmul:
  6042                           	opt stack 0
  6043                           tblptru	equ	0xFF8
  6044                           tblptrh	equ	0xFF7
  6045                           tblptrl	equ	0xFF6
  6046                           tablat	equ	0xFF5
  6047                           prodh	equ	0xFF4
  6048                           prodl	equ	0xFF3
  6049                           postinc0	equ	0xFEE
  6050                           wreg	equ	0xFE8
  6051                           postinc1	equ	0xFE6
  6052                           postdec1	equ	0xFE5
  6053                           fsr1l	equ	0xFE1
  6054                           indf2	equ	0xFDF
  6055                           postinc2	equ	0xFDE
  6056                           postdec2	equ	0xFDD
  6057                           fsr2h	equ	0xFDA
  6058                           fsr2l	equ	0xFD9
  6059                           status	equ	0xFD8
  6060                           
  6061 ;; *************** function ___ftmul *****************
  6062 ;; Defined at:
  6063 ;;		line 62 in file "/Applications/microchip/xc8/v1.33/sources/common/ftmul.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  f1              3   58[BANK0 ] float 
  6066 ;;  f2              3   61[BANK0 ] float 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  f3_as_produc    3   68[BANK0 ] unsigned um
  6069 ;;  sign            1   72[BANK0 ] unsigned char 
  6070 ;;  cntr            1   71[BANK0 ] unsigned char 
  6071 ;;  exp             1   67[BANK0 ] unsigned char 
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  3   58[BANK0 ] float 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6081 ;;      Params:         0       6       0       0       0       0       0
  6082 ;;      Locals:         0       6       0       0       0       0       0
  6083 ;;      Temps:          0       3       0       0       0       0       0
  6084 ;;      Totals:         0      15       0       0       0       0       0
  6085 ;;Total ram usage:       15 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    7
  6088 ;; This function calls:
  6089 ;;		___ftpack
  6090 ;; This function is called by:
  6091 ;;		_fround
  6092 ;;		_scale
  6093 ;;		_sprintf
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text8
  6098  002E36                     __ptext8:
  6099                           	opt stack 0
  6100  002E36                     ___ftmul:
  6101                           	opt stack 19
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;incstack = 0
  6105  002E36  FFFF               	dw	65535
  6106  002E38  0100               	movlb	0	; () banked
  6107  002E3A  C0BC  F0C0         	movff	___ftmul@f1+2,??___ftmul
  6108  002E3E  0100               	movlb	0	; () banked
  6109  002E40  6BC1               	clrf	(??___ftmul+1)& (0+255),b
  6110  002E42  6BC2               	clrf	(??___ftmul+2)& (0+255),b
  6111  002E44  0100               	movlb	0	; () banked
  6112  002E46  35BB               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6113  002E48  0100               	movlb	0	; () banked
  6114  002E4A  37C0               	rlcf	??___ftmul& (0+255),f,b
  6115  002E4C  E301               	bnc	u2581
  6116  002E4E  81C1               	bsf	(??___ftmul+1)& (0+255),0,b
  6117  002E50                     u2581:
  6118  002E50  0100               	movlb	0	; () banked
  6119  002E52  51C0               	movf	??___ftmul& (0+255),w,b
  6120  002E54  0100               	movlb	0	; () banked
  6121  002E56  6FC3               	movwf	___ftmul@exp& (0+255),b
  6122  002E58  0100               	movlb	0	; () banked
  6123  002E5A  67C3               	tstfsz	___ftmul@exp& (0+255),b
  6124  002E5C  D001               	goto	l2603
  6125  002E5E  D013               	goto	u2610
  6126  002E60                     l2603:
  6127                           
  6128                           ; BSR set to: 0
  6129  002E60  0100               	movlb	0	; () banked
  6130  002E62  C0BF  F0C0         	movff	___ftmul@f2+2,??___ftmul
  6131  002E66  0100               	movlb	0	; () banked
  6132  002E68  6BC1               	clrf	(??___ftmul+1)& (0+255),b
  6133  002E6A  6BC2               	clrf	(??___ftmul+2)& (0+255),b
  6134  002E6C  0100               	movlb	0	; () banked
  6135  002E6E  35BE               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6136  002E70  0100               	movlb	0	; () banked
  6137  002E72  37C0               	rlcf	??___ftmul& (0+255),f,b
  6138  002E74  E301               	bnc	u2601
  6139  002E76  81C1               	bsf	(??___ftmul+1)& (0+255),0,b
  6140  002E78                     u2601:
  6141  002E78  0100               	movlb	0	; () banked
  6142  002E7A  51C0               	movf	??___ftmul& (0+255),w,b
  6143  002E7C  0100               	movlb	0	; () banked
  6144  002E7E  6FC8               	movwf	___ftmul@sign& (0+255),b
  6145  002E80  0100               	movlb	0	; () banked
  6146  002E82  67C8               	tstfsz	___ftmul@sign& (0+255),b
  6147  002E84  D00A               	goto	l2609
  6148  002E86                     u2610:
  6149                           
  6150                           ; BSR set to: 0
  6151  002E86  0E00               	movlw	0
  6152  002E88  0100               	movlb	0	; () banked
  6153  002E8A  6FBA               	movwf	?___ftmul& (0+255),b
  6154  002E8C  0E00               	movlw	0
  6155  002E8E  0100               	movlb	0	; () banked
  6156  002E90  6FBB               	movwf	(?___ftmul+1)& (0+255),b
  6157  002E92  0E00               	movlw	0
  6158  002E94  0100               	movlb	0	; () banked
  6159  002E96  6FBC               	movwf	(?___ftmul+2)& (0+255),b
  6160  002E98  D080               	goto	l799
  6161  002E9A                     l2609:
  6162                           
  6163                           ; BSR set to: 0
  6164  002E9A  0100               	movlb	0	; () banked
  6165  002E9C  51C8               	movf	___ftmul@sign& (0+255),w,b
  6166  002E9E  0F7B               	addlw	123
  6167  002EA0  0100               	movlb	0	; () banked
  6168  002EA2  27C3               	addwf	___ftmul@exp& (0+255),f,b
  6169                           
  6170                           ; BSR set to: 0
  6171  002EA4  C0BC  F0C8         	movff	___ftmul@f1+2,___ftmul@sign
  6172  002EA8  0100               	movlb	0	; () banked
  6173  002EAA  51BF               	movf	(___ftmul@f2+2)& (0+255),w,b
  6174  002EAC  0100               	movlb	0	; () banked
  6175  002EAE  1BC8               	xorwf	___ftmul@sign& (0+255),f,b
  6176  002EB0  0E80               	movlw	128
  6177  002EB2  0100               	movlb	0	; () banked
  6178  002EB4  17C8               	andwf	___ftmul@sign& (0+255),f,b
  6179                           
  6180                           ; BSR set to: 0
  6181  002EB6  0100               	movlb	0	; () banked
  6182  002EB8  8FBB               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6183                           
  6184                           ; BSR set to: 0
  6185  002EBA  0100               	movlb	0	; () banked
  6186  002EBC  8FBE               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6187                           
  6188                           ; BSR set to: 0
  6189  002EBE  0EFF               	movlw	255
  6190  002EC0  0100               	movlb	0	; () banked
  6191  002EC2  17BD               	andwf	___ftmul@f2& (0+255),f,b
  6192  002EC4  0EFF               	movlw	255
  6193  002EC6  0100               	movlb	0	; () banked
  6194  002EC8  17BE               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6195  002ECA  0E00               	movlw	0
  6196  002ECC  0100               	movlb	0	; () banked
  6197  002ECE  17BF               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6198                           
  6199                           ; BSR set to: 0
  6200  002ED0  0E00               	movlw	0
  6201  002ED2  0100               	movlb	0	; () banked
  6202  002ED4  6FC4               	movwf	___ftmul@f3_as_product& (0+255),b
  6203  002ED6  0E00               	movlw	0
  6204  002ED8  0100               	movlb	0	; () banked
  6205  002EDA  6FC5               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6206  002EDC  0E00               	movlw	0
  6207  002EDE  0100               	movlb	0	; () banked
  6208  002EE0  6FC6               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6209                           
  6210                           ; BSR set to: 0
  6211  002EE2  0E07               	movlw	7
  6212  002EE4  0100               	movlb	0	; () banked
  6213  002EE6  6FC7               	movwf	___ftmul@cntr& (0+255),b
  6214  002EE8                     l2623:
  6215                           
  6216                           ; BSR set to: 0
  6217  002EE8  0100               	movlb	0	; () banked
  6218  002EEA  A1BA               	btfss	___ftmul@f1& (0+255),0,b
  6219  002EEC  D00C               	goto	l2627
  6220                           
  6221                           ; BSR set to: 0
  6222  002EEE  0100               	movlb	0	; () banked
  6223  002EF0  51BD               	movf	___ftmul@f2& (0+255),w,b
  6224  002EF2  0100               	movlb	0	; () banked
  6225  002EF4  27C4               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6226  002EF6  0100               	movlb	0	; () banked
  6227  002EF8  51BE               	movf	(___ftmul@f2+1)& (0+255),w,b
  6228  002EFA  0100               	movlb	0	; () banked
  6229  002EFC  23C5               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6230  002EFE  0100               	movlb	0	; () banked
  6231  002F00  51BF               	movf	(___ftmul@f2+2)& (0+255),w,b
  6232  002F02  0100               	movlb	0	; () banked
  6233  002F04  23C6               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6234  002F06                     l2627:
  6235                           
  6236                           ; BSR set to: 0
  6237  002F06  0100               	movlb	0	; () banked
  6238  002F08  90D8               	bcf	status,0,c
  6239  002F0A  0100               	movlb	0	; () banked
  6240  002F0C  33BC               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6241  002F0E  0100               	movlb	0	; () banked
  6242  002F10  33BB               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6243  002F12  0100               	movlb	0	; () banked
  6244  002F14  33BA               	rrcf	___ftmul@f1& (0+255),f,b
  6245  002F16  0100               	movlb	0	; () banked
  6246  002F18  90D8               	bcf	status,0,c
  6247  002F1A  0100               	movlb	0	; () banked
  6248  002F1C  37BD               	rlcf	___ftmul@f2& (0+255),f,b
  6249  002F1E  0100               	movlb	0	; () banked
  6250  002F20  37BE               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6251  002F22  0100               	movlb	0	; () banked
  6252  002F24  37BF               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6253                           
  6254                           ; BSR set to: 0
  6255  002F26  0100               	movlb	0	; () banked
  6256  002F28  2FC7               	decfsz	___ftmul@cntr& (0+255),f,b
  6257  002F2A  D7DE               	goto	l2623
  6258                           
  6259                           ; BSR set to: 0
  6260                           
  6261                           ; BSR set to: 0
  6262  002F2C  0E09               	movlw	9
  6263  002F2E  0100               	movlb	0	; () banked
  6264  002F30  6FC7               	movwf	___ftmul@cntr& (0+255),b
  6265  002F32                     l2633:
  6266                           
  6267                           ; BSR set to: 0
  6268  002F32  0100               	movlb	0	; () banked
  6269  002F34  A1BA               	btfss	___ftmul@f1& (0+255),0,b
  6270  002F36  D00C               	goto	l2637
  6271                           
  6272                           ; BSR set to: 0
  6273  002F38  0100               	movlb	0	; () banked
  6274  002F3A  51BD               	movf	___ftmul@f2& (0+255),w,b
  6275  002F3C  0100               	movlb	0	; () banked
  6276  002F3E  27C4               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6277  002F40  0100               	movlb	0	; () banked
  6278  002F42  51BE               	movf	(___ftmul@f2+1)& (0+255),w,b
  6279  002F44  0100               	movlb	0	; () banked
  6280  002F46  23C5               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6281  002F48  0100               	movlb	0	; () banked
  6282  002F4A  51BF               	movf	(___ftmul@f2+2)& (0+255),w,b
  6283  002F4C  0100               	movlb	0	; () banked
  6284  002F4E  23C6               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6285  002F50                     l2637:
  6286                           
  6287                           ; BSR set to: 0
  6288  002F50  0100               	movlb	0	; () banked
  6289  002F52  90D8               	bcf	status,0,c
  6290  002F54  0100               	movlb	0	; () banked
  6291  002F56  33BC               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6292  002F58  0100               	movlb	0	; () banked
  6293  002F5A  33BB               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6294  002F5C  0100               	movlb	0	; () banked
  6295  002F5E  33BA               	rrcf	___ftmul@f1& (0+255),f,b
  6296  002F60  0100               	movlb	0	; () banked
  6297  002F62  90D8               	bcf	status,0,c
  6298  002F64  0100               	movlb	0	; () banked
  6299  002F66  33C6               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6300  002F68  0100               	movlb	0	; () banked
  6301  002F6A  33C5               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6302  002F6C  0100               	movlb	0	; () banked
  6303  002F6E  33C4               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6304                           
  6305                           ; BSR set to: 0
  6306  002F70  0100               	movlb	0	; () banked
  6307  002F72  2FC7               	decfsz	___ftmul@cntr& (0+255),f,b
  6308  002F74  D7DE               	goto	l2633
  6309                           
  6310                           ; BSR set to: 0
  6311                           
  6312                           ; BSR set to: 0
  6313  002F76  C0C4  F09F         	movff	___ftmul@f3_as_product,___ftpack@arg
  6314  002F7A  C0C5  F0A0         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6315  002F7E  C0C6  F0A1         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6316  002F82  C0C3  F0A2         	movff	___ftmul@exp,___ftpack@exp
  6317  002F86  C0C8  F0A3         	movff	___ftmul@sign,___ftpack@sign
  6318  002F8A  EC4D  F01A         	call	___ftpack	;wreg free
  6319  002F8E  C09F  F0BA         	movff	?___ftpack,?___ftmul
  6320  002F92  C0A0  F0BB         	movff	?___ftpack+1,?___ftmul+1
  6321  002F96  C0A1  F0BC         	movff	?___ftpack+2,?___ftmul+2
  6322  002F9A                     l799:
  6323  002F9A  0012               	return	
  6324  002F9C  FFFF               	dw	65535	; errata NOP
  6325  002F9E                     __end_of___ftmul:
  6326                           	opt stack 0
  6327                           tblptru	equ	0xFF8
  6328                           tblptrh	equ	0xFF7
  6329                           tblptrl	equ	0xFF6
  6330                           tablat	equ	0xFF5
  6331                           prodh	equ	0xFF4
  6332                           prodl	equ	0xFF3
  6333                           postinc0	equ	0xFEE
  6334                           wreg	equ	0xFE8
  6335                           postinc1	equ	0xFE6
  6336                           postdec1	equ	0xFE5
  6337                           fsr1l	equ	0xFE1
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function ___awmod *****************
  6346 ;; Defined at:
  6347 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/awmod.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  dividend        2   31[BANK0 ] int 
  6350 ;;  divisor         2   33[BANK0 ] int 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  sign            1   36[BANK0 ] unsigned char 
  6353 ;;  counter         1   35[BANK0 ] unsigned char 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  2   31[BANK0 ] int 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0, prodl
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6363 ;;      Params:         0       4       0       0       0       0       0
  6364 ;;      Locals:         0       2       0       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0
  6366 ;;      Totals:         0       6       0       0       0       0       0
  6367 ;;Total ram usage:        6 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    6
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_fround
  6374 ;;		_scale
  6375 ;;		_sprintf
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text9
  6380  003918                     __ptext9:
  6381                           	opt stack 0
  6382  003918                     ___awmod:
  6383                           	opt stack 20
  6384                           
  6385                           ;incstack = 0
  6386  003918  FFFF               	dw	65535
  6387  00391A  0E00               	movlw	0
  6388  00391C  0100               	movlb	0	; () banked
  6389  00391E  6FA4               	movwf	___awmod@sign& (0+255),b
  6390                           
  6391                           ; BSR set to: 0
  6392  003920  0100               	movlb	0	; () banked
  6393  003922  51A0               	movf	(___awmod@dividend+1)& (0+255),w,b
  6394  003924  0A80               	xorlw	128
  6395  003926  6EF3               	movwf	prodl,c
  6396  003928  0E80               	movlw	128
  6397  00392A  5CF3               	subwf	prodl,w,c
  6398  00392C  0E00               	movlw	0
  6399  00392E  B4D8               	btfsc	status,2,c
  6400  003930  5D9F               	subwf	___awmod@dividend& (0+255),w,b
  6401  003932  B0D8               	btfsc	status,0,c
  6402  003934  D009               	goto	l2697
  6403                           
  6404                           ; BSR set to: 0
  6405  003936  0100               	movlb	0	; () banked
  6406  003938  6D9F               	negf	___awmod@dividend& (0+255),b
  6407  00393A  0100               	movlb	0	; () banked
  6408  00393C  1FA0               	comf	(___awmod@dividend+1)& (0+255),f,b
  6409  00393E  B0D8               	btfsc	status,0,c
  6410  003940  2BA0               	incf	(___awmod@dividend+1)& (0+255),f,b
  6411                           
  6412                           ; BSR set to: 0
  6413  003942  0E01               	movlw	1
  6414  003944  0100               	movlb	0	; () banked
  6415  003946  6FA4               	movwf	___awmod@sign& (0+255),b
  6416  003948                     l2697:
  6417                           
  6418                           ; BSR set to: 0
  6419  003948  0100               	movlb	0	; () banked
  6420  00394A  51A2               	movf	(___awmod@divisor+1)& (0+255),w,b
  6421  00394C  0A80               	xorlw	128
  6422  00394E  6EF3               	movwf	prodl,c
  6423  003950  0E80               	movlw	128
  6424  003952  5CF3               	subwf	prodl,w,c
  6425  003954  0E00               	movlw	0
  6426  003956  B4D8               	btfsc	status,2,c
  6427  003958  5DA1               	subwf	___awmod@divisor& (0+255),w,b
  6428  00395A  B0D8               	btfsc	status,0,c
  6429  00395C  D006               	goto	l2701
  6430                           
  6431                           ; BSR set to: 0
  6432  00395E  0100               	movlb	0	; () banked
  6433  003960  6DA1               	negf	___awmod@divisor& (0+255),b
  6434  003962  0100               	movlb	0	; () banked
  6435  003964  1FA2               	comf	(___awmod@divisor+1)& (0+255),f,b
  6436  003966  B0D8               	btfsc	status,0,c
  6437  003968  2BA2               	incf	(___awmod@divisor+1)& (0+255),f,b
  6438  00396A                     l2701:
  6439                           
  6440                           ; BSR set to: 0
  6441  00396A  0100               	movlb	0	; () banked
  6442  00396C  51A2               	movf	(___awmod@divisor+1)& (0+255),w,b
  6443  00396E  11A1               	iorwf	___awmod@divisor& (0+255),w,b
  6444  003970  B4D8               	btfsc	status,2,c
  6445  003972  D026               	goto	l2717
  6446                           
  6447                           ; BSR set to: 0
  6448  003974  0E01               	movlw	1
  6449  003976  0100               	movlb	0	; () banked
  6450  003978  6FA3               	movwf	___awmod@counter& (0+255),b
  6451  00397A  D006               	goto	l2707
  6452  00397C                     l2705:
  6453                           
  6454                           ; BSR set to: 0
  6455  00397C  0100               	movlb	0	; () banked
  6456  00397E  90D8               	bcf	status,0,c
  6457  003980  37A1               	rlcf	___awmod@divisor& (0+255),f,b
  6458  003982  37A2               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6459  003984  0100               	movlb	0	; () banked
  6460  003986  2BA3               	incf	___awmod@counter& (0+255),f,b
  6461  003988                     l2707:
  6462                           
  6463                           ; BSR set to: 0
  6464  003988  0100               	movlb	0	; () banked
  6465  00398A  AFA2               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6466  00398C  D7F7               	goto	l2705
  6467  00398E                     l2709:
  6468                           
  6469                           ; BSR set to: 0
  6470  00398E  0100               	movlb	0	; () banked
  6471  003990  51A1               	movf	___awmod@divisor& (0+255),w,b
  6472  003992  0100               	movlb	0	; () banked
  6473  003994  5D9F               	subwf	___awmod@dividend& (0+255),w,b
  6474  003996  0100               	movlb	0	; () banked
  6475  003998  51A2               	movf	(___awmod@divisor+1)& (0+255),w,b
  6476  00399A  0100               	movlb	0	; () banked
  6477  00399C  59A0               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6478  00399E  A0D8               	btfss	status,0,c
  6479  0039A0  D008               	goto	l2713
  6480                           
  6481                           ; BSR set to: 0
  6482  0039A2  0100               	movlb	0	; () banked
  6483  0039A4  51A1               	movf	___awmod@divisor& (0+255),w,b
  6484  0039A6  0100               	movlb	0	; () banked
  6485  0039A8  5F9F               	subwf	___awmod@dividend& (0+255),f,b
  6486  0039AA  0100               	movlb	0	; () banked
  6487  0039AC  51A2               	movf	(___awmod@divisor+1)& (0+255),w,b
  6488  0039AE  0100               	movlb	0	; () banked
  6489  0039B0  5BA0               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6490  0039B2                     l2713:
  6491                           
  6492                           ; BSR set to: 0
  6493  0039B2  0100               	movlb	0	; () banked
  6494  0039B4  90D8               	bcf	status,0,c
  6495  0039B6  33A2               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6496  0039B8  33A1               	rrcf	___awmod@divisor& (0+255),f,b
  6497                           
  6498                           ; BSR set to: 0
  6499  0039BA  0100               	movlb	0	; () banked
  6500  0039BC  2FA3               	decfsz	___awmod@counter& (0+255),f,b
  6501  0039BE  D7E7               	goto	l2709
  6502  0039C0                     l2717:
  6503                           
  6504                           ; BSR set to: 0
  6505  0039C0  0100               	movlb	0	; () banked
  6506  0039C2  51A4               	movf	___awmod@sign& (0+255),w,b
  6507  0039C4  B4D8               	btfsc	status,2,c
  6508  0039C6  D006               	goto	l2721
  6509                           
  6510                           ; BSR set to: 0
  6511  0039C8  0100               	movlb	0	; () banked
  6512  0039CA  6D9F               	negf	___awmod@dividend& (0+255),b
  6513  0039CC  0100               	movlb	0	; () banked
  6514  0039CE  1FA0               	comf	(___awmod@dividend+1)& (0+255),f,b
  6515  0039D0  B0D8               	btfsc	status,0,c
  6516  0039D2  2BA0               	incf	(___awmod@dividend+1)& (0+255),f,b
  6517  0039D4                     l2721:
  6518                           
  6519                           ; BSR set to: 0
  6520  0039D4  C09F  F09F         	movff	___awmod@dividend,?___awmod
  6521  0039D8  C0A0  F0A0         	movff	___awmod@dividend+1,?___awmod+1
  6522                           
  6523                           ; BSR set to: 0
  6524                           
  6525                           ; BSR set to: 0
  6526  0039DC  0012               	return	
  6527  0039DE  FFFF               	dw	65535	; errata NOP
  6528  0039E0                     __end_of___awmod:
  6529                           	opt stack 0
  6530                           tblptru	equ	0xFF8
  6531                           tblptrh	equ	0xFF7
  6532                           tblptrl	equ	0xFF6
  6533                           tablat	equ	0xFF5
  6534                           prodh	equ	0xFF4
  6535                           prodl	equ	0xFF3
  6536                           postinc0	equ	0xFEE
  6537                           wreg	equ	0xFE8
  6538                           postinc1	equ	0xFE6
  6539                           postdec1	equ	0xFE5
  6540                           fsr1l	equ	0xFE1
  6541                           indf2	equ	0xFDF
  6542                           postinc2	equ	0xFDE
  6543                           postdec2	equ	0xFDD
  6544                           fsr2h	equ	0xFDA
  6545                           fsr2l	equ	0xFD9
  6546                           status	equ	0xFD8
  6547                           
  6548 ;; *************** function ___awdiv *****************
  6549 ;; Defined at:
  6550 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/awdiv.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  dividend        2   37[BANK0 ] int 
  6553 ;;  divisor         2   39[BANK0 ] int 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  quotient        2   43[BANK0 ] int 
  6556 ;;  sign            1   42[BANK0 ] unsigned char 
  6557 ;;  counter         1   41[BANK0 ] unsigned char 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  2   37[BANK0 ] int 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0, prodl
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6567 ;;      Params:         0       4       0       0       0       0       0
  6568 ;;      Locals:         0       4       0       0       0       0       0
  6569 ;;      Temps:          0       0       0       0       0       0       0
  6570 ;;      Totals:         0       8       0       0       0       0       0
  6571 ;;Total ram usage:        8 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    6
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_fround
  6578 ;;		_scale
  6579 ;;		_sprintf
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text10
  6584  0035A8                     __ptext10:
  6585                           	opt stack 0
  6586  0035A8                     ___awdiv:
  6587                           	opt stack 20
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;incstack = 0
  6591  0035A8  FFFF               	dw	65535
  6592  0035AA  0E00               	movlw	0
  6593  0035AC  0100               	movlb	0	; () banked
  6594  0035AE  6FAA               	movwf	___awdiv@sign& (0+255),b
  6595                           
  6596                           ; BSR set to: 0
  6597  0035B0  0100               	movlb	0	; () banked
  6598  0035B2  51A8               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6599  0035B4  0A80               	xorlw	128
  6600  0035B6  6EF3               	movwf	prodl,c
  6601  0035B8  0E80               	movlw	128
  6602  0035BA  5CF3               	subwf	prodl,w,c
  6603  0035BC  0E00               	movlw	0
  6604  0035BE  B4D8               	btfsc	status,2,c
  6605  0035C0  5DA7               	subwf	___awdiv@divisor& (0+255),w,b
  6606  0035C2  B0D8               	btfsc	status,0,c
  6607  0035C4  D009               	goto	l2653
  6608                           
  6609                           ; BSR set to: 0
  6610  0035C6  0100               	movlb	0	; () banked
  6611  0035C8  6DA7               	negf	___awdiv@divisor& (0+255),b
  6612  0035CA  0100               	movlb	0	; () banked
  6613  0035CC  1FA8               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6614  0035CE  B0D8               	btfsc	status,0,c
  6615  0035D0  2BA8               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6616                           
  6617                           ; BSR set to: 0
  6618  0035D2  0E01               	movlw	1
  6619  0035D4  0100               	movlb	0	; () banked
  6620  0035D6  6FAA               	movwf	___awdiv@sign& (0+255),b
  6621  0035D8                     l2653:
  6622                           
  6623                           ; BSR set to: 0
  6624  0035D8  0100               	movlb	0	; () banked
  6625  0035DA  51A6               	movf	(___awdiv@dividend+1)& (0+255),w,b
  6626  0035DC  0A80               	xorlw	128
  6627  0035DE  6EF3               	movwf	prodl,c
  6628  0035E0  0E80               	movlw	128
  6629  0035E2  5CF3               	subwf	prodl,w,c
  6630  0035E4  0E00               	movlw	0
  6631  0035E6  B4D8               	btfsc	status,2,c
  6632  0035E8  5DA5               	subwf	___awdiv@dividend& (0+255),w,b
  6633  0035EA  B0D8               	btfsc	status,0,c
  6634  0035EC  D009               	goto	l2659
  6635                           
  6636                           ; BSR set to: 0
  6637  0035EE  0100               	movlb	0	; () banked
  6638  0035F0  6DA5               	negf	___awdiv@dividend& (0+255),b
  6639  0035F2  0100               	movlb	0	; () banked
  6640  0035F4  1FA6               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6641  0035F6  B0D8               	btfsc	status,0,c
  6642  0035F8  2BA6               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6643                           
  6644                           ; BSR set to: 0
  6645  0035FA  0E01               	movlw	1
  6646  0035FC  0100               	movlb	0	; () banked
  6647  0035FE  1BAA               	xorwf	___awdiv@sign& (0+255),f,b
  6648  003600                     l2659:
  6649                           
  6650                           ; BSR set to: 0
  6651  003600  0E00               	movlw	0
  6652  003602  0100               	movlb	0	; () banked
  6653  003604  6FAC               	movwf	(___awdiv@quotient+1)& (0+255),b
  6654  003606  0E00               	movlw	0
  6655  003608  0100               	movlb	0	; () banked
  6656  00360A  6FAB               	movwf	___awdiv@quotient& (0+255),b
  6657                           
  6658                           ; BSR set to: 0
  6659  00360C  0100               	movlb	0	; () banked
  6660  00360E  51A8               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6661  003610  11A7               	iorwf	___awdiv@divisor& (0+255),w,b
  6662  003612  B4D8               	btfsc	status,2,c
  6663  003614  D02C               	goto	l2681
  6664                           
  6665                           ; BSR set to: 0
  6666  003616  0E01               	movlw	1
  6667  003618  0100               	movlb	0	; () banked
  6668  00361A  6FA9               	movwf	___awdiv@counter& (0+255),b
  6669  00361C  D006               	goto	l2667
  6670  00361E                     l2665:
  6671                           
  6672                           ; BSR set to: 0
  6673  00361E  0100               	movlb	0	; () banked
  6674  003620  90D8               	bcf	status,0,c
  6675  003622  37A7               	rlcf	___awdiv@divisor& (0+255),f,b
  6676  003624  37A8               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6677  003626  0100               	movlb	0	; () banked
  6678  003628  2BA9               	incf	___awdiv@counter& (0+255),f,b
  6679  00362A                     l2667:
  6680                           
  6681                           ; BSR set to: 0
  6682  00362A  0100               	movlb	0	; () banked
  6683  00362C  AFA8               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6684  00362E  D7F7               	goto	l2665
  6685  003630                     l2669:
  6686                           
  6687                           ; BSR set to: 0
  6688  003630  0100               	movlb	0	; () banked
  6689  003632  90D8               	bcf	status,0,c
  6690  003634  37AB               	rlcf	___awdiv@quotient& (0+255),f,b
  6691  003636  37AC               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6692                           
  6693                           ; BSR set to: 0
  6694  003638  0100               	movlb	0	; () banked
  6695  00363A  51A7               	movf	___awdiv@divisor& (0+255),w,b
  6696  00363C  0100               	movlb	0	; () banked
  6697  00363E  5DA5               	subwf	___awdiv@dividend& (0+255),w,b
  6698  003640  0100               	movlb	0	; () banked
  6699  003642  51A8               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6700  003644  0100               	movlb	0	; () banked
  6701  003646  59A6               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6702  003648  A0D8               	btfss	status,0,c
  6703  00364A  D00A               	goto	l2677
  6704                           
  6705                           ; BSR set to: 0
  6706  00364C  0100               	movlb	0	; () banked
  6707  00364E  51A7               	movf	___awdiv@divisor& (0+255),w,b
  6708  003650  0100               	movlb	0	; () banked
  6709  003652  5FA5               	subwf	___awdiv@dividend& (0+255),f,b
  6710  003654  0100               	movlb	0	; () banked
  6711  003656  51A8               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6712  003658  0100               	movlb	0	; () banked
  6713  00365A  5BA6               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6714                           
  6715                           ; BSR set to: 0
  6716  00365C  0100               	movlb	0	; () banked
  6717  00365E  81AB               	bsf	___awdiv@quotient& (0+255),0,b
  6718  003660                     l2677:
  6719                           
  6720                           ; BSR set to: 0
  6721  003660  0100               	movlb	0	; () banked
  6722  003662  90D8               	bcf	status,0,c
  6723  003664  33A8               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6724  003666  33A7               	rrcf	___awdiv@divisor& (0+255),f,b
  6725                           
  6726                           ; BSR set to: 0
  6727  003668  0100               	movlb	0	; () banked
  6728  00366A  2FA9               	decfsz	___awdiv@counter& (0+255),f,b
  6729  00366C  D7E1               	goto	l2669
  6730  00366E                     l2681:
  6731                           
  6732                           ; BSR set to: 0
  6733  00366E  0100               	movlb	0	; () banked
  6734  003670  51AA               	movf	___awdiv@sign& (0+255),w,b
  6735  003672  B4D8               	btfsc	status,2,c
  6736  003674  D006               	goto	l2685
  6737                           
  6738                           ; BSR set to: 0
  6739  003676  0100               	movlb	0	; () banked
  6740  003678  6DAB               	negf	___awdiv@quotient& (0+255),b
  6741  00367A  0100               	movlb	0	; () banked
  6742  00367C  1FAC               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6743  00367E  B0D8               	btfsc	status,0,c
  6744  003680  2BAC               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6745  003682                     l2685:
  6746                           
  6747                           ; BSR set to: 0
  6748  003682  C0AB  F0A5         	movff	___awdiv@quotient,?___awdiv
  6749  003686  C0AC  F0A6         	movff	___awdiv@quotient+1,?___awdiv+1
  6750                           
  6751                           ; BSR set to: 0
  6752                           
  6753                           ; BSR set to: 0
  6754  00368A  0012               	return	
  6755  00368C  FFFF               	dw	65535	; errata NOP
  6756  00368E                     __end_of___awdiv:
  6757                           	opt stack 0
  6758                           tblptru	equ	0xFF8
  6759                           tblptrh	equ	0xFF7
  6760                           tblptrl	equ	0xFF6
  6761                           tablat	equ	0xFF5
  6762                           prodh	equ	0xFF4
  6763                           prodl	equ	0xFF3
  6764                           postinc0	equ	0xFEE
  6765                           wreg	equ	0xFE8
  6766                           postinc1	equ	0xFE6
  6767                           postdec1	equ	0xFE5
  6768                           fsr1l	equ	0xFE1
  6769                           indf2	equ	0xFDF
  6770                           postinc2	equ	0xFDE
  6771                           postdec2	equ	0xFDD
  6772                           fsr2h	equ	0xFDA
  6773                           fsr2l	equ	0xFD9
  6774                           status	equ	0xFD8
  6775                           
  6776 ;; *************** function __tdiv_to_l_ *****************
  6777 ;; Defined at:
  6778 ;;		line 60 in file "/Applications/microchip/xc8/v1.33/sources/common/ftdivl.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  f1              3   31[BANK0 ] float 
  6781 ;;  f2              3   34[BANK0 ] float 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  quot            4   40[BANK0 ] unsigned long 
  6784 ;;  exp1            1   45[BANK0 ] unsigned char 
  6785 ;;  cntr            1   44[BANK0 ] unsigned char 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  4   31[BANK0 ] unsigned long 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6795 ;;      Params:         0       6       0       0       0       0       0
  6796 ;;      Locals:         0       6       0       0       0       0       0
  6797 ;;      Temps:          0       3       0       0       0       0       0
  6798 ;;      Totals:         0      15       0       0       0       0       0
  6799 ;;Total ram usage:       15 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    6
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_sprintf
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text11
  6810  002C9C                     __ptext11:
  6811                           	opt stack 0
  6812  002C9C                     __tdiv_to_l_:
  6813                           	opt stack 21
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;incstack = 0
  6817  002C9C  FFFF               	dw	65535
  6818  002C9E  0100               	movlb	0	; () banked
  6819  002CA0  C0A1  F0A5         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6820  002CA4  0100               	movlb	0	; () banked
  6821  002CA6  6BA6               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6822  002CA8  6BA7               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6823  002CAA  0100               	movlb	0	; () banked
  6824  002CAC  35A0               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6825  002CAE  0100               	movlb	0	; () banked
  6826  002CB0  37A5               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6827  002CB2  E301               	bnc	u2921
  6828  002CB4  81A6               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6829  002CB6                     u2921:
  6830  002CB6  0100               	movlb	0	; () banked
  6831  002CB8  51A5               	movf	??__tdiv_to_l_& (0+255),w,b
  6832  002CBA  0100               	movlb	0	; () banked
  6833  002CBC  6FAD               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6834  002CBE  0100               	movlb	0	; () banked
  6835  002CC0  67AD               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  6836  002CC2  D001               	goto	l2849
  6837  002CC4  D092               	goto	u2990
  6838  002CC6                     l2849:
  6839                           
  6840                           ; BSR set to: 0
  6841  002CC6  0100               	movlb	0	; () banked
  6842  002CC8  C0A4  F0A5         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6843  002CCC  0100               	movlb	0	; () banked
  6844  002CCE  6BA6               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6845  002CD0  6BA7               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6846  002CD2  0100               	movlb	0	; () banked
  6847  002CD4  35A3               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6848  002CD6  0100               	movlb	0	; () banked
  6849  002CD8  37A5               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6850  002CDA  E301               	bnc	u2941
  6851  002CDC  81A6               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6852  002CDE                     u2941:
  6853  002CDE  0100               	movlb	0	; () banked
  6854  002CE0  51A5               	movf	??__tdiv_to_l_& (0+255),w,b
  6855  002CE2  0100               	movlb	0	; () banked
  6856  002CE4  6FAC               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6857  002CE6  0100               	movlb	0	; () banked
  6858  002CE8  67AC               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  6859  002CEA  D001               	goto	l2855
  6860  002CEC  D07E               	goto	u2990
  6861  002CEE                     l2855:
  6862                           
  6863                           ; BSR set to: 0
  6864  002CEE  0100               	movlb	0	; () banked
  6865  002CF0  8FA0               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6866                           
  6867                           ; BSR set to: 0
  6868  002CF2  0EFF               	movlw	255
  6869  002CF4  0100               	movlb	0	; () banked
  6870  002CF6  179F               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6871  002CF8  0EFF               	movlw	255
  6872  002CFA  0100               	movlb	0	; () banked
  6873  002CFC  17A0               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6874  002CFE  0E00               	movlw	0
  6875  002D00  0100               	movlb	0	; () banked
  6876  002D02  17A1               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6877  002D04  0100               	movlb	0	; () banked
  6878  002D06  8FA3               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6879                           
  6880                           ; BSR set to: 0
  6881  002D08  0EFF               	movlw	255
  6882  002D0A  0100               	movlb	0	; () banked
  6883  002D0C  17A2               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6884  002D0E  0EFF               	movlw	255
  6885  002D10  0100               	movlb	0	; () banked
  6886  002D12  17A3               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6887  002D14  0E00               	movlw	0
  6888  002D16  0100               	movlb	0	; () banked
  6889  002D18  17A4               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6890                           
  6891                           ; BSR set to: 0
  6892  002D1A  0E00               	movlw	0
  6893  002D1C  0100               	movlb	0	; () banked
  6894  002D1E  6FA8               	movwf	__tdiv_to_l_@quot& (0+255),b
  6895  002D20  0E00               	movlw	0
  6896  002D22  0100               	movlb	0	; () banked
  6897  002D24  6FA9               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6898  002D26  0E00               	movlw	0
  6899  002D28  0100               	movlb	0	; () banked
  6900  002D2A  6FAA               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6901  002D2C  0E00               	movlw	0
  6902  002D2E  0100               	movlb	0	; () banked
  6903  002D30  6FAB               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6904                           
  6905                           ; BSR set to: 0
  6906  002D32  0E7F               	movlw	127
  6907  002D34  0100               	movlb	0	; () banked
  6908  002D36  5FAD               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6909                           
  6910                           ; BSR set to: 0
  6911  002D38  0100               	movlb	0	; () banked
  6912  002D3A  51AC               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6913  002D3C  0F98               	addlw	152
  6914  002D3E  0100               	movlb	0	; () banked
  6915  002D40  5FAD               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6916                           
  6917                           ; BSR set to: 0
  6918  002D42  0E18               	movlw	24
  6919  002D44  0100               	movlb	0	; () banked
  6920  002D46  6FAC               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6921  002D48                     l777:
  6922                           
  6923                           ; BSR set to: 0
  6924  002D48  0100               	movlb	0	; () banked
  6925  002D4A  90D8               	bcf	status,0,c
  6926  002D4C  0100               	movlb	0	; () banked
  6927  002D4E  37A8               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6928  002D50  0100               	movlb	0	; () banked
  6929  002D52  37A9               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6930  002D54  0100               	movlb	0	; () banked
  6931  002D56  37AA               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6932  002D58  0100               	movlb	0	; () banked
  6933  002D5A  37AB               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6934                           
  6935                           ; BSR set to: 0
  6936  002D5C  0100               	movlb	0	; () banked
  6937  002D5E  51A2               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6938  002D60  0100               	movlb	0	; () banked
  6939  002D62  5D9F               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6940  002D64  0100               	movlb	0	; () banked
  6941  002D66  51A3               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6942  002D68  0100               	movlb	0	; () banked
  6943  002D6A  59A0               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6944  002D6C  0100               	movlb	0	; () banked
  6945  002D6E  51A4               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6946  002D70  0100               	movlb	0	; () banked
  6947  002D72  59A1               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6948  002D74  A0D8               	btfss	status,0,c
  6949  002D76  D00E               	goto	l778
  6950                           
  6951                           ; BSR set to: 0
  6952  002D78  0100               	movlb	0	; () banked
  6953  002D7A  51A2               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6954  002D7C  0100               	movlb	0	; () banked
  6955  002D7E  5F9F               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6956  002D80  0100               	movlb	0	; () banked
  6957  002D82  51A3               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6958  002D84  0100               	movlb	0	; () banked
  6959  002D86  5BA0               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6960  002D88  0100               	movlb	0	; () banked
  6961  002D8A  51A4               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6962  002D8C  0100               	movlb	0	; () banked
  6963  002D8E  5BA1               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6964                           
  6965                           ; BSR set to: 0
  6966  002D90  0100               	movlb	0	; () banked
  6967  002D92  81A8               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6968  002D94                     l778:
  6969                           
  6970                           ; BSR set to: 0
  6971  002D94  0100               	movlb	0	; () banked
  6972  002D96  90D8               	bcf	status,0,c
  6973  002D98  0100               	movlb	0	; () banked
  6974  002D9A  379F               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6975  002D9C  0100               	movlb	0	; () banked
  6976  002D9E  37A0               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6977  002DA0  0100               	movlb	0	; () banked
  6978  002DA2  37A1               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6979                           
  6980                           ; BSR set to: 0
  6981  002DA4  0100               	movlb	0	; () banked
  6982  002DA6  2FAC               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6983  002DA8  D7CF               	goto	l777
  6984                           
  6985                           ; BSR set to: 0
  6986  002DAA  0100               	movlb	0	; () banked
  6987  002DAC  AFAD               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6988  002DAE  D019               	goto	l2887
  6989                           
  6990                           ; BSR set to: 0
  6991  002DB0  0100               	movlb	0	; () banked
  6992  002DB2  51AD               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6993  002DB4  0A80               	xorlw	128
  6994  002DB6  0100               	movlb	0	; () banked
  6995  002DB8  6FA5               	movwf	??__tdiv_to_l_& (0+255),b
  6996  002DBA  0EE9               	movlw	233
  6997  002DBC  0A80               	xorlw	128
  6998  002DBE  0100               	movlb	0	; () banked
  6999  002DC0  5DA5               	subwf	??__tdiv_to_l_& (0+255),w,b
  7000  002DC2  A0D8               	btfss	status,0,c
  7001  002DC4  D012               	goto	u2990
  7002  002DC6                     l2883:
  7003                           
  7004                           ; BSR set to: 0
  7005  002DC6  0100               	movlb	0	; () banked
  7006  002DC8  90D8               	bcf	status,0,c
  7007  002DCA  0100               	movlb	0	; () banked
  7008  002DCC  33AB               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7009  002DCE  0100               	movlb	0	; () banked
  7010  002DD0  33AA               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7011  002DD2  0100               	movlb	0	; () banked
  7012  002DD4  33A9               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7013  002DD6  0100               	movlb	0	; () banked
  7014  002DD8  33A8               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7015                           
  7016                           ; BSR set to: 0
  7017  002DDA  0100               	movlb	0	; () banked
  7018  002DDC  3FAD               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7019  002DDE  D7F3               	goto	l2883
  7020  002DE0  D020               	goto	l784
  7021  002DE2                     l2887:
  7022                           
  7023                           ; BSR set to: 0
  7024  002DE2  0E17               	movlw	23
  7025  002DE4  0100               	movlb	0	; () banked
  7026  002DE6  65AD               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7027  002DE8  D019               	goto	l2895
  7028  002DEA                     u2990:
  7029                           
  7030                           ; BSR set to: 0
  7031  002DEA  0E00               	movlw	0
  7032  002DEC  0100               	movlb	0	; () banked
  7033  002DEE  6F9F               	movwf	?__tdiv_to_l_& (0+255),b
  7034  002DF0  0E00               	movlw	0
  7035  002DF2  0100               	movlb	0	; () banked
  7036  002DF4  6FA0               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7037  002DF6  0E00               	movlw	0
  7038  002DF8  0100               	movlb	0	; () banked
  7039  002DFA  6FA1               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7040  002DFC  0E00               	movlw	0
  7041  002DFE  0100               	movlb	0	; () banked
  7042  002E00  6FA2               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7043  002E02  D017               	goto	l775
  7044  002E04                     l2893:
  7045                           
  7046                           ; BSR set to: 0
  7047  002E04  0100               	movlb	0	; () banked
  7048  002E06  90D8               	bcf	status,0,c
  7049  002E08  0100               	movlb	0	; () banked
  7050  002E0A  37A8               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7051  002E0C  0100               	movlb	0	; () banked
  7052  002E0E  37A9               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7053  002E10  0100               	movlb	0	; () banked
  7054  002E12  37AA               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7055  002E14  0100               	movlb	0	; () banked
  7056  002E16  37AB               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7057  002E18  0100               	movlb	0	; () banked
  7058  002E1A  07AD               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7059  002E1C                     l2895:
  7060                           
  7061                           ; BSR set to: 0
  7062  002E1C  0100               	movlb	0	; () banked
  7063  002E1E  67AD               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  7064  002E20  D7F1               	goto	l2893
  7065  002E22                     l784:
  7066                           
  7067                           ; BSR set to: 0
  7068  002E22  C0A8  F09F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7069  002E26  C0A9  F0A0         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7070  002E2A  C0AA  F0A1         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7071  002E2E  C0AB  F0A2         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7072  002E32                     l775:
  7073                           
  7074                           ; BSR set to: 0
  7075  002E32  0012               	return	
  7076  002E34  FFFF               	dw	65535	; errata NOP
  7077  002E36                     __end_of__tdiv_to_l_:
  7078                           	opt stack 0
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           prodh	equ	0xFF4
  7084                           prodl	equ	0xFF3
  7085                           postinc0	equ	0xFEE
  7086                           wreg	equ	0xFE8
  7087                           postinc1	equ	0xFE6
  7088                           postdec1	equ	0xFE5
  7089                           fsr1l	equ	0xFE1
  7090                           indf2	equ	0xFDF
  7091                           postinc2	equ	0xFDE
  7092                           postdec2	equ	0xFDD
  7093                           fsr2h	equ	0xFDA
  7094                           fsr2l	equ	0xFD9
  7095                           status	equ	0xFD8
  7096                           
  7097 ;; *************** function __div_to_l_ *****************
  7098 ;; Defined at:
  7099 ;;		line 60 in file "/Applications/microchip/xc8/v1.33/sources/common/fldivl.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  f1              3   31[BANK0 ] unsigned long 
  7102 ;;  f2              3   34[BANK0 ] unsigned long 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  quot            4   41[BANK0 ] unsigned long 
  7105 ;;  exp1            1   46[BANK0 ] unsigned char 
  7106 ;;  cntr            1   45[BANK0 ] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  4   31[BANK0 ] unsigned long 
  7109 ;; Registers used:
  7110 ;;		wreg, status,2, status,0
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7116 ;;      Params:         0       6       0       0       0       0       0
  7117 ;;      Locals:         0       6       0       0       0       0       0
  7118 ;;      Temps:          0       4       0       0       0       0       0
  7119 ;;      Totals:         0      16       0       0       0       0       0
  7120 ;;Total ram usage:       16 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    6
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_sprintf
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text12
  7131  00290A                     __ptext12:
  7132                           	opt stack 0
  7133  00290A                     __div_to_l_:
  7134                           	opt stack 21
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;incstack = 0
  7138  00290A  FFFF               	dw	65535
  7139  00290C  0100               	movlb	0	; () banked
  7140  00290E  C09F  F0A5         	movff	__div_to_l_@f1,??__div_to_l_
  7141  002912  0100               	movlb	0	; () banked
  7142  002914  C0A0  F0A6         	movff	__div_to_l_@f1+1,??__div_to_l_+1
  7143  002918  0100               	movlb	0	; () banked
  7144  00291A  C0A1  F0A7         	movff	__div_to_l_@f1+2,??__div_to_l_+2
  7145  00291E  0100               	movlb	0	; () banked
  7146  002920  C0A2  F0A8         	movff	__div_to_l_@f1+3,??__div_to_l_+3
  7147  002924  0E18               	movlw	24
  7148  002926  D006               	goto	u3010
  7149  002928                     u3015:
  7150  002928  0100               	movlb	0	; () banked
  7151  00292A  90D8               	bcf	status,0,c
  7152  00292C  33A8               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  7153  00292E  33A7               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  7154  002930  33A6               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  7155  002932  33A5               	rrcf	??__div_to_l_& (0+255),f,b
  7156  002934                     u3010:
  7157  002934  2EE8               	decfsz	wreg,f,c
  7158  002936  D7F8               	goto	u3015
  7159  002938  0100               	movlb	0	; () banked
  7160  00293A  51A5               	movf	??__div_to_l_& (0+255),w,b
  7161  00293C  0100               	movlb	0	; () banked
  7162  00293E  6FAE               	movwf	__div_to_l_@exp1& (0+255),b
  7163  002940  0100               	movlb	0	; () banked
  7164  002942  67AE               	tstfsz	__div_to_l_@exp1& (0+255),b
  7165  002944  D001               	goto	l2903
  7166  002946  D0AC               	goto	u3080
  7167  002948                     l2903:
  7168                           
  7169                           ; BSR set to: 0
  7170  002948  0100               	movlb	0	; () banked
  7171  00294A  C0A2  F0A5         	movff	__div_to_l_@f2,??__div_to_l_
  7172  00294E  0100               	movlb	0	; () banked
  7173  002950  C0A3  F0A6         	movff	__div_to_l_@f2+1,??__div_to_l_+1
  7174  002954  0100               	movlb	0	; () banked
  7175  002956  C0A4  F0A7         	movff	__div_to_l_@f2+2,??__div_to_l_+2
  7176  00295A  0100               	movlb	0	; () banked
  7177  00295C  C0A5  F0A8         	movff	__div_to_l_@f2+3,??__div_to_l_+3
  7178  002960  0E18               	movlw	24
  7179  002962  D006               	goto	u3030
  7180  002964                     u3035:
  7181  002964  0100               	movlb	0	; () banked
  7182  002966  90D8               	bcf	status,0,c
  7183  002968  33A8               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  7184  00296A  33A7               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  7185  00296C  33A6               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  7186  00296E  33A5               	rrcf	??__div_to_l_& (0+255),f,b
  7187  002970                     u3030:
  7188  002970  2EE8               	decfsz	wreg,f,c
  7189  002972  D7F8               	goto	u3035
  7190  002974  0100               	movlb	0	; () banked
  7191  002976  51A5               	movf	??__div_to_l_& (0+255),w,b
  7192  002978  0100               	movlb	0	; () banked
  7193  00297A  6FAD               	movwf	__div_to_l_@cntr& (0+255),b
  7194  00297C  0100               	movlb	0	; () banked
  7195  00297E  67AD               	tstfsz	__div_to_l_@cntr& (0+255),b
  7196  002980  D001               	goto	l2909
  7197  002982  D08E               	goto	u3080
  7198  002984                     l2909:
  7199                           
  7200                           ; BSR set to: 0
  7201  002984  0100               	movlb	0	; () banked
  7202  002986  8FA1               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7203                           
  7204                           ; BSR set to: 0
  7205  002988  0EFF               	movlw	255
  7206  00298A  0100               	movlb	0	; () banked
  7207  00298C  179F               	andwf	__div_to_l_@f1& (0+255),f,b
  7208  00298E  0EFF               	movlw	255
  7209  002990  0100               	movlb	0	; () banked
  7210  002992  17A0               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7211  002994  0EFF               	movlw	255
  7212  002996  0100               	movlb	0	; () banked
  7213  002998  17A1               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7214  00299A  0E00               	movlw	0
  7215  00299C  0100               	movlb	0	; () banked
  7216  00299E  17A2               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7217                           
  7218                           ; BSR set to: 0
  7219  0029A0  0100               	movlb	0	; () banked
  7220  0029A2  8FA4               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7221  0029A4  0EFF               	movlw	255
  7222  0029A6  0100               	movlb	0	; () banked
  7223  0029A8  17A2               	andwf	__div_to_l_@f2& (0+255),f,b
  7224  0029AA  0EFF               	movlw	255
  7225  0029AC  0100               	movlb	0	; () banked
  7226  0029AE  17A3               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7227  0029B0  0EFF               	movlw	255
  7228  0029B2  0100               	movlb	0	; () banked
  7229  0029B4  17A4               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7230  0029B6  0E00               	movlw	0
  7231  0029B8  0100               	movlb	0	; () banked
  7232  0029BA  17A5               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7233                           
  7234                           ; BSR set to: 0
  7235  0029BC  0E00               	movlw	0
  7236  0029BE  0100               	movlb	0	; () banked
  7237  0029C0  6FA9               	movwf	__div_to_l_@quot& (0+255),b
  7238  0029C2  0E00               	movlw	0
  7239  0029C4  0100               	movlb	0	; () banked
  7240  0029C6  6FAA               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7241  0029C8  0E00               	movlw	0
  7242  0029CA  0100               	movlb	0	; () banked
  7243  0029CC  6FAB               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7244  0029CE  0E00               	movlw	0
  7245  0029D0  0100               	movlb	0	; () banked
  7246  0029D2  6FAC               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7247                           
  7248                           ; BSR set to: 0
  7249  0029D4  0E7F               	movlw	127
  7250  0029D6  0100               	movlb	0	; () banked
  7251  0029D8  5FAE               	subwf	__div_to_l_@exp1& (0+255),f,b
  7252                           
  7253                           ; BSR set to: 0
  7254  0029DA  0100               	movlb	0	; () banked
  7255  0029DC  51AD               	movf	__div_to_l_@cntr& (0+255),w,b
  7256  0029DE  0FA0               	addlw	160
  7257  0029E0  0100               	movlb	0	; () banked
  7258  0029E2  5FAE               	subwf	__div_to_l_@exp1& (0+255),f,b
  7259                           
  7260                           ; BSR set to: 0
  7261  0029E4  0E20               	movlw	32
  7262  0029E6  0100               	movlb	0	; () banked
  7263  0029E8  6FAD               	movwf	__div_to_l_@cntr& (0+255),b
  7264  0029EA                     l2923:
  7265                           
  7266                           ; BSR set to: 0
  7267  0029EA  0100               	movlb	0	; () banked
  7268  0029EC  90D8               	bcf	status,0,c
  7269  0029EE  0100               	movlb	0	; () banked
  7270  0029F0  37A9               	rlcf	__div_to_l_@quot& (0+255),f,b
  7271  0029F2  0100               	movlb	0	; () banked
  7272  0029F4  37AA               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7273  0029F6  0100               	movlb	0	; () banked
  7274  0029F8  37AB               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7275  0029FA  0100               	movlb	0	; () banked
  7276  0029FC  37AC               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7277                           
  7278                           ; BSR set to: 0
  7279  0029FE  0100               	movlb	0	; () banked
  7280  002A00  51A2               	movf	__div_to_l_@f2& (0+255),w,b
  7281  002A02  0100               	movlb	0	; () banked
  7282  002A04  5D9F               	subwf	__div_to_l_@f1& (0+255),w,b
  7283  002A06  0100               	movlb	0	; () banked
  7284  002A08  51A3               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7285  002A0A  0100               	movlb	0	; () banked
  7286  002A0C  59A0               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7287  002A0E  0100               	movlb	0	; () banked
  7288  002A10  51A4               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7289  002A12  0100               	movlb	0	; () banked
  7290  002A14  59A1               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7291  002A16  0100               	movlb	0	; () banked
  7292  002A18  51A5               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7293  002A1A  0100               	movlb	0	; () banked
  7294  002A1C  59A2               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7295  002A1E  A0D8               	btfss	status,0,c
  7296  002A20  D012               	goto	l2931
  7297                           
  7298                           ; BSR set to: 0
  7299  002A22  0100               	movlb	0	; () banked
  7300  002A24  51A2               	movf	__div_to_l_@f2& (0+255),w,b
  7301  002A26  0100               	movlb	0	; () banked
  7302  002A28  5F9F               	subwf	__div_to_l_@f1& (0+255),f,b
  7303  002A2A  0100               	movlb	0	; () banked
  7304  002A2C  51A3               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7305  002A2E  0100               	movlb	0	; () banked
  7306  002A30  5BA0               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7307  002A32  0100               	movlb	0	; () banked
  7308  002A34  51A4               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7309  002A36  0100               	movlb	0	; () banked
  7310  002A38  5BA1               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7311  002A3A  0100               	movlb	0	; () banked
  7312  002A3C  51A5               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7313  002A3E  0100               	movlb	0	; () banked
  7314  002A40  5BA2               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7315                           
  7316                           ; BSR set to: 0
  7317  002A42  0100               	movlb	0	; () banked
  7318  002A44  81A9               	bsf	__div_to_l_@quot& (0+255),0,b
  7319  002A46                     l2931:
  7320                           
  7321                           ; BSR set to: 0
  7322  002A46  0100               	movlb	0	; () banked
  7323  002A48  90D8               	bcf	status,0,c
  7324  002A4A  0100               	movlb	0	; () banked
  7325  002A4C  379F               	rlcf	__div_to_l_@f1& (0+255),f,b
  7326  002A4E  0100               	movlb	0	; () banked
  7327  002A50  37A0               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7328  002A52  0100               	movlb	0	; () banked
  7329  002A54  37A1               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7330  002A56  0100               	movlb	0	; () banked
  7331  002A58  37A2               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7332                           
  7333                           ; BSR set to: 0
  7334  002A5A  0100               	movlb	0	; () banked
  7335  002A5C  2FAD               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7336  002A5E  D7C5               	goto	l2923
  7337                           
  7338                           ; BSR set to: 0
  7339  002A60  0100               	movlb	0	; () banked
  7340  002A62  AFAE               	btfss	__div_to_l_@exp1& (0+255),7,b
  7341  002A64  D019               	goto	l2945
  7342                           
  7343                           ; BSR set to: 0
  7344  002A66  0100               	movlb	0	; () banked
  7345  002A68  51AE               	movf	__div_to_l_@exp1& (0+255),w,b
  7346  002A6A  0A80               	xorlw	128
  7347  002A6C  0100               	movlb	0	; () banked
  7348  002A6E  6FA5               	movwf	??__div_to_l_& (0+255),b
  7349  002A70  0EE1               	movlw	225
  7350  002A72  0A80               	xorlw	128
  7351  002A74  0100               	movlb	0	; () banked
  7352  002A76  5DA5               	subwf	??__div_to_l_& (0+255),w,b
  7353  002A78  A0D8               	btfss	status,0,c
  7354  002A7A  D012               	goto	u3080
  7355  002A7C                     l2941:
  7356                           
  7357                           ; BSR set to: 0
  7358  002A7C  0100               	movlb	0	; () banked
  7359  002A7E  90D8               	bcf	status,0,c
  7360  002A80  0100               	movlb	0	; () banked
  7361  002A82  33AC               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7362  002A84  0100               	movlb	0	; () banked
  7363  002A86  33AB               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7364  002A88  0100               	movlb	0	; () banked
  7365  002A8A  33AA               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7366  002A8C  0100               	movlb	0	; () banked
  7367  002A8E  33A9               	rrcf	__div_to_l_@quot& (0+255),f,b
  7368                           
  7369                           ; BSR set to: 0
  7370  002A90  0100               	movlb	0	; () banked
  7371  002A92  3FAE               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7372  002A94  D7F3               	goto	l2941
  7373  002A96  D020               	goto	l666
  7374  002A98                     l2945:
  7375                           
  7376                           ; BSR set to: 0
  7377  002A98  0E1F               	movlw	31
  7378  002A9A  0100               	movlb	0	; () banked
  7379  002A9C  65AE               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7380  002A9E  D019               	goto	l2953
  7381  002AA0                     u3080:
  7382                           
  7383                           ; BSR set to: 0
  7384  002AA0  0E00               	movlw	0
  7385  002AA2  0100               	movlb	0	; () banked
  7386  002AA4  6F9F               	movwf	?__div_to_l_& (0+255),b
  7387  002AA6  0E00               	movlw	0
  7388  002AA8  0100               	movlb	0	; () banked
  7389  002AAA  6FA0               	movwf	(?__div_to_l_+1)& (0+255),b
  7390  002AAC  0E00               	movlw	0
  7391  002AAE  0100               	movlb	0	; () banked
  7392  002AB0  6FA1               	movwf	(?__div_to_l_+2)& (0+255),b
  7393  002AB2  0E00               	movlw	0
  7394  002AB4  0100               	movlb	0	; () banked
  7395  002AB6  6FA2               	movwf	(?__div_to_l_+3)& (0+255),b
  7396  002AB8  D017               	goto	l657
  7397  002ABA                     l2951:
  7398                           
  7399                           ; BSR set to: 0
  7400  002ABA  0100               	movlb	0	; () banked
  7401  002ABC  90D8               	bcf	status,0,c
  7402  002ABE  0100               	movlb	0	; () banked
  7403  002AC0  37A9               	rlcf	__div_to_l_@quot& (0+255),f,b
  7404  002AC2  0100               	movlb	0	; () banked
  7405  002AC4  37AA               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7406  002AC6  0100               	movlb	0	; () banked
  7407  002AC8  37AB               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7408  002ACA  0100               	movlb	0	; () banked
  7409  002ACC  37AC               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7410  002ACE  0100               	movlb	0	; () banked
  7411  002AD0  07AE               	decf	__div_to_l_@exp1& (0+255),f,b
  7412  002AD2                     l2953:
  7413                           
  7414                           ; BSR set to: 0
  7415  002AD2  0100               	movlb	0	; () banked
  7416  002AD4  67AE               	tstfsz	__div_to_l_@exp1& (0+255),b
  7417  002AD6  D7F1               	goto	l2951
  7418  002AD8                     l666:
  7419                           
  7420                           ; BSR set to: 0
  7421  002AD8  C0A9  F09F         	movff	__div_to_l_@quot,?__div_to_l_
  7422  002ADC  C0AA  F0A0         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7423  002AE0  C0AB  F0A1         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7424  002AE4  C0AC  F0A2         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7425  002AE8                     l657:
  7426                           
  7427                           ; BSR set to: 0
  7428  002AE8  0012               	return	
  7429  002AEA  FFFF               	dw	65535	; errata NOP
  7430  002AEC                     __end_of__div_to_l_:
  7431                           	opt stack 0
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           postinc0	equ	0xFEE
  7439                           wreg	equ	0xFE8
  7440                           postinc1	equ	0xFE6
  7441                           postdec1	equ	0xFE5
  7442                           fsr1l	equ	0xFE1
  7443                           indf2	equ	0xFDF
  7444                           postinc2	equ	0xFDE
  7445                           postdec2	equ	0xFDD
  7446                           fsr2h	equ	0xFDA
  7447                           fsr2l	equ	0xFD9
  7448                           status	equ	0xFD8
  7449                           
  7450 ;; *************** function ___lltoft *****************
  7451 ;; Defined at:
  7452 ;;		line 35 in file "/Applications/microchip/xc8/v1.33/sources/common/lltoft.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  c               4   46[BANK0 ] unsigned long 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  exp             1   54[BANK0 ] unsigned char 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  3   46[BANK0 ] float 
  7459 ;; Registers used:
  7460 ;;		wreg, status,2, status,0, cstack
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7466 ;;      Params:         0       4       0       0       0       0       0
  7467 ;;      Locals:         0       1       0       0       0       0       0
  7468 ;;      Temps:          0       4       0       0       0       0       0
  7469 ;;      Totals:         0       9       0       0       0       0       0
  7470 ;;Total ram usage:        9 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    7
  7473 ;; This function calls:
  7474 ;;		___ftpack
  7475 ;; This function is called by:
  7476 ;;		_sprintf
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           	psect	text13
  7481  003BDC                     __ptext13:
  7482                           	opt stack 0
  7483  003BDC                     ___lltoft:
  7484                           	opt stack 20
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;incstack = 0
  7488  003BDC  FFFF               	dw	65535
  7489  003BDE  0E8E               	movlw	142
  7490  003BE0  0100               	movlb	0	; () banked
  7491  003BE2  6FB6               	movwf	___lltoft@exp& (0+255),b
  7492  003BE4  D00C               	goto	l3117
  7493  003BE6                     l3115:
  7494                           
  7495                           ; BSR set to: 0
  7496  003BE6  0100               	movlb	0	; () banked
  7497  003BE8  90D8               	bcf	status,0,c
  7498  003BEA  0100               	movlb	0	; () banked
  7499  003BEC  33B1               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7500  003BEE  0100               	movlb	0	; () banked
  7501  003BF0  33B0               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7502  003BF2  0100               	movlb	0	; () banked
  7503  003BF4  33AF               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7504  003BF6  0100               	movlb	0	; () banked
  7505  003BF8  33AE               	rrcf	___lltoft@c& (0+255),f,b
  7506  003BFA  0100               	movlb	0	; () banked
  7507  003BFC  2BB6               	incf	___lltoft@exp& (0+255),f,b
  7508  003BFE                     l3117:
  7509                           
  7510                           ; BSR set to: 0
  7511  003BFE  0E00               	movlw	0
  7512  003C00  0100               	movlb	0	; () banked
  7513  003C02  15AE               	andwf	___lltoft@c& (0+255),w,b
  7514  003C04  0100               	movlb	0	; () banked
  7515  003C06  6FB2               	movwf	??___lltoft& (0+255),b
  7516  003C08  0E00               	movlw	0
  7517  003C0A  0100               	movlb	0	; () banked
  7518  003C0C  15AF               	andwf	(___lltoft@c+1)& (0+255),w,b
  7519  003C0E  0100               	movlb	0	; () banked
  7520  003C10  6FB3               	movwf	(??___lltoft+1)& (0+255),b
  7521  003C12  0E00               	movlw	0
  7522  003C14  0100               	movlb	0	; () banked
  7523  003C16  15B0               	andwf	(___lltoft@c+2)& (0+255),w,b
  7524  003C18  0100               	movlb	0	; () banked
  7525  003C1A  6FB4               	movwf	(??___lltoft+2)& (0+255),b
  7526  003C1C  0EFF               	movlw	255
  7527  003C1E  0100               	movlb	0	; () banked
  7528  003C20  15B1               	andwf	(___lltoft@c+3)& (0+255),w,b
  7529  003C22  0100               	movlb	0	; () banked
  7530  003C24  6FB5               	movwf	(??___lltoft+3)& (0+255),b
  7531  003C26  0100               	movlb	0	; () banked
  7532  003C28  51B5               	movf	(??___lltoft+3)& (0+255),w,b
  7533  003C2A  11B2               	iorwf	??___lltoft& (0+255),w,b
  7534  003C2C  11B3               	iorwf	(??___lltoft+1)& (0+255),w,b
  7535  003C2E  11B4               	iorwf	(??___lltoft+2)& (0+255),w,b
  7536  003C30  A4D8               	btfss	status,2,c
  7537  003C32  D7D9               	goto	l3115
  7538                           
  7539                           ; BSR set to: 0
  7540                           
  7541                           ; BSR set to: 0
  7542  003C34  C0AE  F09F         	movff	___lltoft@c,___ftpack@arg
  7543  003C38  C0AF  F0A0         	movff	___lltoft@c+1,___ftpack@arg+1
  7544  003C3C  C0B0  F0A1         	movff	___lltoft@c+2,___ftpack@arg+2
  7545  003C40  C0B6  F0A2         	movff	___lltoft@exp,___ftpack@exp
  7546  003C44  0E00               	movlw	0
  7547  003C46  0100               	movlb	0	; () banked
  7548  003C48  6FA3               	movwf	___ftpack@sign& (0+255),b
  7549  003C4A  EC4D  F01A         	call	___ftpack	;wreg free
  7550  003C4E  C09F  F0AE         	movff	?___ftpack,?___lltoft
  7551  003C52  C0A0  F0AF         	movff	?___ftpack+1,?___lltoft+1
  7552  003C56  C0A1  F0B0         	movff	?___ftpack+2,?___lltoft+2
  7553  003C5A  0012               	return	
  7554  003C5C  FFFF               	dw	65535	; errata NOP
  7555  003C5E                     __end_of___lltoft:
  7556                           	opt stack 0
  7557                           tblptru	equ	0xFF8
  7558                           tblptrh	equ	0xFF7
  7559                           tblptrl	equ	0xFF6
  7560                           tablat	equ	0xFF5
  7561                           prodh	equ	0xFF4
  7562                           prodl	equ	0xFF3
  7563                           postinc0	equ	0xFEE
  7564                           wreg	equ	0xFE8
  7565                           postinc1	equ	0xFE6
  7566                           postdec1	equ	0xFE5
  7567                           fsr1l	equ	0xFE1
  7568                           indf2	equ	0xFDF
  7569                           postinc2	equ	0xFDE
  7570                           postdec2	equ	0xFDD
  7571                           fsr2h	equ	0xFDA
  7572                           fsr2l	equ	0xFD9
  7573                           status	equ	0xFD8
  7574                           
  7575 ;; *************** function ___llmod *****************
  7576 ;; Defined at:
  7577 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/llmod.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  dividend        4   31[BANK0 ] unsigned long 
  7580 ;;  divisor         4   35[BANK0 ] unsigned long 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  counter         1   39[BANK0 ] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  4   31[BANK0 ] unsigned long 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7592 ;;      Params:         0       8       0       0       0       0       0
  7593 ;;      Locals:         0       1       0       0       0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0
  7595 ;;      Totals:         0       9       0       0       0       0       0
  7596 ;;Total ram usage:        9 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    6
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_sprintf
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text14
  7607  003A8C                     __ptext14:
  7608                           	opt stack 0
  7609  003A8C                     ___llmod:
  7610                           	opt stack 21
  7611                           
  7612                           ;incstack = 0
  7613  003A8C  FFFF               	dw	65535
  7614  003A8E  0100               	movlb	0	; () banked
  7615  003A90  51A6               	movf	(___llmod@divisor+3)& (0+255),w,b
  7616  003A92  11A3               	iorwf	___llmod@divisor& (0+255),w,b
  7617  003A94  11A4               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7618  003A96  11A5               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7619  003A98  B4D8               	btfsc	status,2,c
  7620  003A9A  D042               	goto	l873
  7621                           
  7622                           ; BSR set to: 0
  7623  003A9C  0E01               	movlw	1
  7624  003A9E  0100               	movlb	0	; () banked
  7625  003AA0  6FA7               	movwf	___llmod@counter& (0+255),b
  7626  003AA2  D00C               	goto	l3103
  7627  003AA4                     l3101:
  7628                           
  7629                           ; BSR set to: 0
  7630  003AA4  0100               	movlb	0	; () banked
  7631  003AA6  90D8               	bcf	status,0,c
  7632  003AA8  0100               	movlb	0	; () banked
  7633  003AAA  37A3               	rlcf	___llmod@divisor& (0+255),f,b
  7634  003AAC  0100               	movlb	0	; () banked
  7635  003AAE  37A4               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7636  003AB0  0100               	movlb	0	; () banked
  7637  003AB2  37A5               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7638  003AB4  0100               	movlb	0	; () banked
  7639  003AB6  37A6               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7640  003AB8  0100               	movlb	0	; () banked
  7641  003ABA  2BA7               	incf	___llmod@counter& (0+255),f,b
  7642  003ABC                     l3103:
  7643                           
  7644                           ; BSR set to: 0
  7645  003ABC  0100               	movlb	0	; () banked
  7646  003ABE  AFA6               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7647  003AC0  D7F1               	goto	l3101
  7648  003AC2                     l3105:
  7649                           
  7650                           ; BSR set to: 0
  7651  003AC2  0100               	movlb	0	; () banked
  7652  003AC4  51A3               	movf	___llmod@divisor& (0+255),w,b
  7653  003AC6  0100               	movlb	0	; () banked
  7654  003AC8  5D9F               	subwf	___llmod@dividend& (0+255),w,b
  7655  003ACA  0100               	movlb	0	; () banked
  7656  003ACC  51A4               	movf	(___llmod@divisor+1)& (0+255),w,b
  7657  003ACE  0100               	movlb	0	; () banked
  7658  003AD0  59A0               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7659  003AD2  0100               	movlb	0	; () banked
  7660  003AD4  51A5               	movf	(___llmod@divisor+2)& (0+255),w,b
  7661  003AD6  0100               	movlb	0	; () banked
  7662  003AD8  59A1               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7663  003ADA  0100               	movlb	0	; () banked
  7664  003ADC  51A6               	movf	(___llmod@divisor+3)& (0+255),w,b
  7665  003ADE  0100               	movlb	0	; () banked
  7666  003AE0  59A2               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7667  003AE2  A0D8               	btfss	status,0,c
  7668  003AE4  D010               	goto	l3109
  7669                           
  7670                           ; BSR set to: 0
  7671  003AE6  0100               	movlb	0	; () banked
  7672  003AE8  51A3               	movf	___llmod@divisor& (0+255),w,b
  7673  003AEA  0100               	movlb	0	; () banked
  7674  003AEC  5F9F               	subwf	___llmod@dividend& (0+255),f,b
  7675  003AEE  0100               	movlb	0	; () banked
  7676  003AF0  51A4               	movf	(___llmod@divisor+1)& (0+255),w,b
  7677  003AF2  0100               	movlb	0	; () banked
  7678  003AF4  5BA0               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7679  003AF6  0100               	movlb	0	; () banked
  7680  003AF8  51A5               	movf	(___llmod@divisor+2)& (0+255),w,b
  7681  003AFA  0100               	movlb	0	; () banked
  7682  003AFC  5BA1               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7683  003AFE  0100               	movlb	0	; () banked
  7684  003B00  51A6               	movf	(___llmod@divisor+3)& (0+255),w,b
  7685  003B02  0100               	movlb	0	; () banked
  7686  003B04  5BA2               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7687  003B06                     l3109:
  7688                           
  7689                           ; BSR set to: 0
  7690  003B06  0100               	movlb	0	; () banked
  7691  003B08  90D8               	bcf	status,0,c
  7692  003B0A  0100               	movlb	0	; () banked
  7693  003B0C  33A6               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7694  003B0E  0100               	movlb	0	; () banked
  7695  003B10  33A5               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7696  003B12  0100               	movlb	0	; () banked
  7697  003B14  33A4               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7698  003B16  0100               	movlb	0	; () banked
  7699  003B18  33A3               	rrcf	___llmod@divisor& (0+255),f,b
  7700                           
  7701                           ; BSR set to: 0
  7702  003B1A  0100               	movlb	0	; () banked
  7703  003B1C  2FA7               	decfsz	___llmod@counter& (0+255),f,b
  7704  003B1E  D7D1               	goto	l3105
  7705  003B20                     l873:
  7706                           
  7707                           ; BSR set to: 0
  7708  003B20  C09F  F09F         	movff	___llmod@dividend,?___llmod
  7709  003B24  C0A0  F0A0         	movff	___llmod@dividend+1,?___llmod+1
  7710  003B28  C0A1  F0A1         	movff	___llmod@dividend+2,?___llmod+2
  7711  003B2C  C0A2  F0A2         	movff	___llmod@dividend+3,?___llmod+3
  7712                           
  7713                           ; BSR set to: 0
  7714  003B30  0012               	return	
  7715  003B32  FFFF               	dw	65535	; errata NOP
  7716  003B34                     __end_of___llmod:
  7717                           	opt stack 0
  7718                           tblptru	equ	0xFF8
  7719                           tblptrh	equ	0xFF7
  7720                           tblptrl	equ	0xFF6
  7721                           tablat	equ	0xFF5
  7722                           prodh	equ	0xFF4
  7723                           prodl	equ	0xFF3
  7724                           postinc0	equ	0xFEE
  7725                           wreg	equ	0xFE8
  7726                           postinc1	equ	0xFE6
  7727                           postdec1	equ	0xFE5
  7728                           fsr1l	equ	0xFE1
  7729                           indf2	equ	0xFDF
  7730                           postinc2	equ	0xFDE
  7731                           postdec2	equ	0xFDD
  7732                           fsr2h	equ	0xFDA
  7733                           fsr2l	equ	0xFD9
  7734                           status	equ	0xFD8
  7735                           
  7736 ;; *************** function ___lldiv *****************
  7737 ;; Defined at:
  7738 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/lldiv.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  dividend        4   31[BANK0 ] unsigned long 
  7741 ;;  divisor         4   35[BANK0 ] unsigned long 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  quotient        4   39[BANK0 ] unsigned long 
  7744 ;;  counter         1   43[BANK0 ] unsigned char 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  4   31[BANK0 ] unsigned long 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7754 ;;      Params:         0       8       0       0       0       0       0
  7755 ;;      Locals:         0       5       0       0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0
  7757 ;;      Totals:         0      13       0       0       0       0       0
  7758 ;;Total ram usage:       13 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    6
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_sprintf
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text15
  7769  003768                     __ptext15:
  7770                           	opt stack 0
  7771  003768                     ___lldiv:
  7772                           	opt stack 21
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;incstack = 0
  7776  003768  FFFF               	dw	65535
  7777  00376A  0E00               	movlw	0
  7778  00376C  0100               	movlb	0	; () banked
  7779  00376E  6FA7               	movwf	___lldiv@quotient& (0+255),b
  7780  003770  0E00               	movlw	0
  7781  003772  0100               	movlb	0	; () banked
  7782  003774  6FA8               	movwf	(___lldiv@quotient+1)& (0+255),b
  7783  003776  0E00               	movlw	0
  7784  003778  0100               	movlb	0	; () banked
  7785  00377A  6FA9               	movwf	(___lldiv@quotient+2)& (0+255),b
  7786  00377C  0E00               	movlw	0
  7787  00377E  0100               	movlb	0	; () banked
  7788  003780  6FAA               	movwf	(___lldiv@quotient+3)& (0+255),b
  7789                           
  7790                           ; BSR set to: 0
  7791  003782  0100               	movlb	0	; () banked
  7792  003784  51A6               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7793  003786  11A3               	iorwf	___lldiv@divisor& (0+255),w,b
  7794  003788  11A4               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7795  00378A  11A5               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7796  00378C  B4D8               	btfsc	status,2,c
  7797  00378E  D04E               	goto	l863
  7798                           
  7799                           ; BSR set to: 0
  7800  003790  0E01               	movlw	1
  7801  003792  0100               	movlb	0	; () banked
  7802  003794  6FAB               	movwf	___lldiv@counter& (0+255),b
  7803  003796  D00C               	goto	l3083
  7804  003798                     l3081:
  7805                           
  7806                           ; BSR set to: 0
  7807  003798  0100               	movlb	0	; () banked
  7808  00379A  90D8               	bcf	status,0,c
  7809  00379C  0100               	movlb	0	; () banked
  7810  00379E  37A3               	rlcf	___lldiv@divisor& (0+255),f,b
  7811  0037A0  0100               	movlb	0	; () banked
  7812  0037A2  37A4               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7813  0037A4  0100               	movlb	0	; () banked
  7814  0037A6  37A5               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7815  0037A8  0100               	movlb	0	; () banked
  7816  0037AA  37A6               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7817  0037AC  0100               	movlb	0	; () banked
  7818  0037AE  2BAB               	incf	___lldiv@counter& (0+255),f,b
  7819  0037B0                     l3083:
  7820                           
  7821                           ; BSR set to: 0
  7822  0037B0  0100               	movlb	0	; () banked
  7823  0037B2  AFA6               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7824  0037B4  D7F1               	goto	l3081
  7825  0037B6                     l3085:
  7826                           
  7827                           ; BSR set to: 0
  7828  0037B6  0100               	movlb	0	; () banked
  7829  0037B8  90D8               	bcf	status,0,c
  7830  0037BA  0100               	movlb	0	; () banked
  7831  0037BC  37A7               	rlcf	___lldiv@quotient& (0+255),f,b
  7832  0037BE  0100               	movlb	0	; () banked
  7833  0037C0  37A8               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7834  0037C2  0100               	movlb	0	; () banked
  7835  0037C4  37A9               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7836  0037C6  0100               	movlb	0	; () banked
  7837  0037C8  37AA               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7838                           
  7839                           ; BSR set to: 0
  7840  0037CA  0100               	movlb	0	; () banked
  7841  0037CC  51A3               	movf	___lldiv@divisor& (0+255),w,b
  7842  0037CE  0100               	movlb	0	; () banked
  7843  0037D0  5D9F               	subwf	___lldiv@dividend& (0+255),w,b
  7844  0037D2  0100               	movlb	0	; () banked
  7845  0037D4  51A4               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7846  0037D6  0100               	movlb	0	; () banked
  7847  0037D8  59A0               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7848  0037DA  0100               	movlb	0	; () banked
  7849  0037DC  51A5               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7850  0037DE  0100               	movlb	0	; () banked
  7851  0037E0  59A1               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7852  0037E2  0100               	movlb	0	; () banked
  7853  0037E4  51A6               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7854  0037E6  0100               	movlb	0	; () banked
  7855  0037E8  59A2               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7856  0037EA  A0D8               	btfss	status,0,c
  7857  0037EC  D012               	goto	l3093
  7858                           
  7859                           ; BSR set to: 0
  7860  0037EE  0100               	movlb	0	; () banked
  7861  0037F0  51A3               	movf	___lldiv@divisor& (0+255),w,b
  7862  0037F2  0100               	movlb	0	; () banked
  7863  0037F4  5F9F               	subwf	___lldiv@dividend& (0+255),f,b
  7864  0037F6  0100               	movlb	0	; () banked
  7865  0037F8  51A4               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7866  0037FA  0100               	movlb	0	; () banked
  7867  0037FC  5BA0               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7868  0037FE  0100               	movlb	0	; () banked
  7869  003800  51A5               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7870  003802  0100               	movlb	0	; () banked
  7871  003804  5BA1               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7872  003806  0100               	movlb	0	; () banked
  7873  003808  51A6               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7874  00380A  0100               	movlb	0	; () banked
  7875  00380C  5BA2               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7876                           
  7877                           ; BSR set to: 0
  7878  00380E  0100               	movlb	0	; () banked
  7879  003810  81A7               	bsf	___lldiv@quotient& (0+255),0,b
  7880  003812                     l3093:
  7881                           
  7882                           ; BSR set to: 0
  7883  003812  0100               	movlb	0	; () banked
  7884  003814  90D8               	bcf	status,0,c
  7885  003816  0100               	movlb	0	; () banked
  7886  003818  33A6               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7887  00381A  0100               	movlb	0	; () banked
  7888  00381C  33A5               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7889  00381E  0100               	movlb	0	; () banked
  7890  003820  33A4               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7891  003822  0100               	movlb	0	; () banked
  7892  003824  33A3               	rrcf	___lldiv@divisor& (0+255),f,b
  7893                           
  7894                           ; BSR set to: 0
  7895  003826  0100               	movlb	0	; () banked
  7896  003828  2FAB               	decfsz	___lldiv@counter& (0+255),f,b
  7897  00382A  D7C5               	goto	l3085
  7898  00382C                     l863:
  7899                           
  7900                           ; BSR set to: 0
  7901  00382C  C0A7  F09F         	movff	___lldiv@quotient,?___lldiv
  7902  003830  C0A8  F0A0         	movff	___lldiv@quotient+1,?___lldiv+1
  7903  003834  C0A9  F0A1         	movff	___lldiv@quotient+2,?___lldiv+2
  7904  003838  C0AA  F0A2         	movff	___lldiv@quotient+3,?___lldiv+3
  7905                           
  7906                           ; BSR set to: 0
  7907  00383C  0012               	return	
  7908  00383E  FFFF               	dw	65535	; errata NOP
  7909  003840                     __end_of___lldiv:
  7910                           	opt stack 0
  7911                           tblptru	equ	0xFF8
  7912                           tblptrh	equ	0xFF7
  7913                           tblptrl	equ	0xFF6
  7914                           tablat	equ	0xFF5
  7915                           prodh	equ	0xFF4
  7916                           prodl	equ	0xFF3
  7917                           postinc0	equ	0xFEE
  7918                           wreg	equ	0xFE8
  7919                           postinc1	equ	0xFE6
  7920                           postdec1	equ	0xFE5
  7921                           fsr1l	equ	0xFE1
  7922                           indf2	equ	0xFDF
  7923                           postinc2	equ	0xFDE
  7924                           postdec2	equ	0xFDD
  7925                           fsr2h	equ	0xFDA
  7926                           fsr2l	equ	0xFD9
  7927                           status	equ	0xFD8
  7928                           
  7929 ;; *************** function ___fttol *****************
  7930 ;; Defined at:
  7931 ;;		line 44 in file "/Applications/microchip/xc8/v1.33/sources/common/fttol.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  f1              3   31[BANK0 ] float 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  lval            4   41[BANK0 ] unsigned long 
  7936 ;;  exp1            1   45[BANK0 ] unsigned char 
  7937 ;;  sign1           1   40[BANK0 ] unsigned char 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  4   31[BANK0 ] long 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7947 ;;      Params:         0       4       0       0       0       0       0
  7948 ;;      Locals:         0       6       0       0       0       0       0
  7949 ;;      Temps:          0       5       0       0       0       0       0
  7950 ;;      Totals:         0      15       0       0       0       0       0
  7951 ;;Total ram usage:       15 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    6
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_sprintf
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text16
  7962  0030F2                     __ptext16:
  7963                           	opt stack 0
  7964  0030F2                     ___fttol:
  7965                           	opt stack 21
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;incstack = 0
  7969  0030F2  FFFF               	dw	65535
  7970  0030F4  0100               	movlb	0	; () banked
  7971  0030F6  C0A1  F0A3         	movff	___fttol@f1+2,??___fttol
  7972  0030FA  0100               	movlb	0	; () banked
  7973  0030FC  6BA4               	clrf	(??___fttol+1)& (0+255),b
  7974  0030FE  6BA5               	clrf	(??___fttol+2)& (0+255),b
  7975  003100  0100               	movlb	0	; () banked
  7976  003102  35A0               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7977  003104  0100               	movlb	0	; () banked
  7978  003106  37A3               	rlcf	??___fttol& (0+255),f,b
  7979  003108  E301               	bnc	u3191
  7980  00310A  81A4               	bsf	(??___fttol+1)& (0+255),0,b
  7981  00310C                     u3191:
  7982  00310C  0100               	movlb	0	; () banked
  7983  00310E  51A3               	movf	??___fttol& (0+255),w,b
  7984  003110  0100               	movlb	0	; () banked
  7985  003112  6FAD               	movwf	___fttol@exp1& (0+255),b
  7986  003114  0100               	movlb	0	; () banked
  7987  003116  67AD               	tstfsz	___fttol@exp1& (0+255),b
  7988  003118  D001               	goto	l3035
  7989  00311A  D059               	goto	u3240
  7990  00311C                     l3035:
  7991                           
  7992                           ; BSR set to: 0
  7993  00311C  0E17               	movlw	23
  7994  00311E  0100               	movlb	0	; () banked
  7995  003120  6FA3               	movwf	??___fttol& (0+255),b
  7996  003122  0100               	movlb	0	; () banked
  7997  003124  C09F  F0A4         	movff	___fttol@f1,??___fttol+1
  7998  003128  0100               	movlb	0	; () banked
  7999  00312A  C0A0  F0A5         	movff	___fttol@f1+1,??___fttol+2
  8000  00312E  0100               	movlb	0	; () banked
  8001  003130  C0A1  F0A6         	movff	___fttol@f1+2,??___fttol+3
  8002  003134  0100               	movlb	0	; () banked
  8003  003136  29A3               	incf	??___fttol& (0+255),w,b
  8004  003138  0100               	movlb	0	; () banked
  8005  00313A  6FA7               	movwf	(??___fttol+4)& (0+255),b
  8006  00313C  D005               	goto	u3210
  8007  00313E                     u3215:
  8008  00313E  0100               	movlb	0	; () banked
  8009  003140  90D8               	bcf	status,0,c
  8010  003142  33A6               	rrcf	(??___fttol+3)& (0+255),f,b
  8011  003144  33A5               	rrcf	(??___fttol+2)& (0+255),f,b
  8012  003146  33A4               	rrcf	(??___fttol+1)& (0+255),f,b
  8013  003148                     u3210:
  8014  003148  0100               	movlb	0	; () banked
  8015  00314A  2FA7               	decfsz	(??___fttol+4)& (0+255),f,b
  8016  00314C  D7F8               	goto	u3215
  8017  00314E  0100               	movlb	0	; () banked
  8018  003150  51A4               	movf	(??___fttol+1)& (0+255),w,b
  8019  003152  0100               	movlb	0	; () banked
  8020  003154  6FA8               	movwf	___fttol@sign1& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023  003156  0100               	movlb	0	; () banked
  8024  003158  8FA0               	bsf	(___fttol@f1+1)& (0+255),7,b
  8025                           
  8026                           ; BSR set to: 0
  8027  00315A  0EFF               	movlw	255
  8028  00315C  0100               	movlb	0	; () banked
  8029  00315E  179F               	andwf	___fttol@f1& (0+255),f,b
  8030  003160  0EFF               	movlw	255
  8031  003162  0100               	movlb	0	; () banked
  8032  003164  17A0               	andwf	(___fttol@f1+1)& (0+255),f,b
  8033  003166  0E00               	movlw	0
  8034  003168  0100               	movlb	0	; () banked
  8035  00316A  17A1               	andwf	(___fttol@f1+2)& (0+255),f,b
  8036                           
  8037                           ; BSR set to: 0
  8038  00316C  0100               	movlb	0	; () banked
  8039  00316E  519F               	movf	___fttol@f1& (0+255),w,b
  8040  003170  0100               	movlb	0	; () banked
  8041  003172  6FA9               	movwf	___fttol@lval& (0+255),b
  8042  003174  0100               	movlb	0	; () banked
  8043  003176  51A0               	movf	(___fttol@f1+1)& (0+255),w,b
  8044  003178  0100               	movlb	0	; () banked
  8045  00317A  6FAA               	movwf	(___fttol@lval+1)& (0+255),b
  8046  00317C  0100               	movlb	0	; () banked
  8047  00317E  51A1               	movf	(___fttol@f1+2)& (0+255),w,b
  8048  003180  0100               	movlb	0	; () banked
  8049  003182  6FAB               	movwf	(___fttol@lval+2)& (0+255),b
  8050  003184  0100               	movlb	0	; () banked
  8051  003186  6BAC               	clrf	(___fttol@lval+3)& (0+255),b
  8052                           
  8053                           ; BSR set to: 0
  8054  003188  0E8E               	movlw	142
  8055  00318A  0100               	movlb	0	; () banked
  8056  00318C  5FAD               	subwf	___fttol@exp1& (0+255),f,b
  8057                           
  8058                           ; BSR set to: 0
  8059  00318E  0100               	movlb	0	; () banked
  8060  003190  AFAD               	btfss	___fttol@exp1& (0+255),7,b
  8061  003192  D019               	goto	l3057
  8062                           
  8063                           ; BSR set to: 0
  8064  003194  0100               	movlb	0	; () banked
  8065  003196  51AD               	movf	___fttol@exp1& (0+255),w,b
  8066  003198  0A80               	xorlw	128
  8067  00319A  0100               	movlb	0	; () banked
  8068  00319C  6FA3               	movwf	??___fttol& (0+255),b
  8069  00319E  0EF1               	movlw	241
  8070  0031A0  0A80               	xorlw	128
  8071  0031A2  0100               	movlb	0	; () banked
  8072  0031A4  5DA3               	subwf	??___fttol& (0+255),w,b
  8073  0031A6  A0D8               	btfss	status,0,c
  8074  0031A8  D012               	goto	u3240
  8075  0031AA                     l3053:
  8076                           
  8077                           ; BSR set to: 0
  8078  0031AA  0100               	movlb	0	; () banked
  8079  0031AC  90D8               	bcf	status,0,c
  8080  0031AE  0100               	movlb	0	; () banked
  8081  0031B0  33AC               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8082  0031B2  0100               	movlb	0	; () banked
  8083  0031B4  33AB               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8084  0031B6  0100               	movlb	0	; () banked
  8085  0031B8  33AA               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8086  0031BA  0100               	movlb	0	; () banked
  8087  0031BC  33A9               	rrcf	___fttol@lval& (0+255),f,b
  8088                           
  8089                           ; BSR set to: 0
  8090  0031BE  0100               	movlb	0	; () banked
  8091  0031C0  3FAD               	incfsz	___fttol@exp1& (0+255),f,b
  8092  0031C2  D7F3               	goto	l3053
  8093  0031C4  D020               	goto	l3067
  8094  0031C6                     l3057:
  8095                           
  8096                           ; BSR set to: 0
  8097  0031C6  0E17               	movlw	23
  8098  0031C8  0100               	movlb	0	; () banked
  8099  0031CA  65AD               	cpfsgt	___fttol@exp1& (0+255),b
  8100  0031CC  D019               	goto	l3065
  8101  0031CE                     u3240:
  8102                           
  8103                           ; BSR set to: 0
  8104  0031CE  0E00               	movlw	0
  8105  0031D0  0100               	movlb	0	; () banked
  8106  0031D2  6F9F               	movwf	?___fttol& (0+255),b
  8107  0031D4  0E00               	movlw	0
  8108  0031D6  0100               	movlb	0	; () banked
  8109  0031D8  6FA0               	movwf	(?___fttol+1)& (0+255),b
  8110  0031DA  0E00               	movlw	0
  8111  0031DC  0100               	movlb	0	; () banked
  8112  0031DE  6FA1               	movwf	(?___fttol+2)& (0+255),b
  8113  0031E0  0E00               	movlw	0
  8114  0031E2  0100               	movlb	0	; () banked
  8115  0031E4  6FA2               	movwf	(?___fttol+3)& (0+255),b
  8116  0031E6  D02A               	goto	l819
  8117  0031E8                     l3063:
  8118                           
  8119                           ; BSR set to: 0
  8120  0031E8  0100               	movlb	0	; () banked
  8121  0031EA  90D8               	bcf	status,0,c
  8122  0031EC  0100               	movlb	0	; () banked
  8123  0031EE  37A9               	rlcf	___fttol@lval& (0+255),f,b
  8124  0031F0  0100               	movlb	0	; () banked
  8125  0031F2  37AA               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8126  0031F4  0100               	movlb	0	; () banked
  8127  0031F6  37AB               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8128  0031F8  0100               	movlb	0	; () banked
  8129  0031FA  37AC               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8130  0031FC  0100               	movlb	0	; () banked
  8131  0031FE  07AD               	decf	___fttol@exp1& (0+255),f,b
  8132  003200                     l3065:
  8133                           
  8134                           ; BSR set to: 0
  8135  003200  0100               	movlb	0	; () banked
  8136  003202  67AD               	tstfsz	___fttol@exp1& (0+255),b
  8137  003204  D7F1               	goto	l3063
  8138  003206                     l3067:
  8139                           
  8140                           ; BSR set to: 0
  8141  003206  0100               	movlb	0	; () banked
  8142  003208  51A8               	movf	___fttol@sign1& (0+255),w,b
  8143  00320A  B4D8               	btfsc	status,2,c
  8144  00320C  D00F               	goto	l3071
  8145                           
  8146                           ; BSR set to: 0
  8147  00320E  0100               	movlb	0	; () banked
  8148  003210  1FAC               	comf	(___fttol@lval+3)& (0+255),f,b
  8149  003212  0100               	movlb	0	; () banked
  8150  003214  1FAB               	comf	(___fttol@lval+2)& (0+255),f,b
  8151  003216  0100               	movlb	0	; () banked
  8152  003218  1FAA               	comf	(___fttol@lval+1)& (0+255),f,b
  8153  00321A  0100               	movlb	0	; () banked
  8154  00321C  6DA9               	negf	___fttol@lval& (0+255),b
  8155  00321E  0E00               	movlw	0
  8156  003220  0100               	movlb	0	; () banked
  8157  003222  23AA               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8158  003224  0100               	movlb	0	; () banked
  8159  003226  23AB               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8160  003228  0100               	movlb	0	; () banked
  8161  00322A  23AC               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8162  00322C                     l3071:
  8163                           
  8164                           ; BSR set to: 0
  8165  00322C  C0A9  F09F         	movff	___fttol@lval,?___fttol
  8166  003230  C0AA  F0A0         	movff	___fttol@lval+1,?___fttol+1
  8167  003234  C0AB  F0A1         	movff	___fttol@lval+2,?___fttol+2
  8168  003238  C0AC  F0A2         	movff	___fttol@lval+3,?___fttol+3
  8169  00323C                     l819:
  8170                           
  8171                           ; BSR set to: 0
  8172  00323C  0012               	return	
  8173  00323E  FFFF               	dw	65535	; errata NOP
  8174  003240                     __end_of___fttol:
  8175                           	opt stack 0
  8176                           tblptru	equ	0xFF8
  8177                           tblptrh	equ	0xFF7
  8178                           tblptrl	equ	0xFF6
  8179                           tablat	equ	0xFF5
  8180                           prodh	equ	0xFF4
  8181                           prodl	equ	0xFF3
  8182                           postinc0	equ	0xFEE
  8183                           wreg	equ	0xFE8
  8184                           postinc1	equ	0xFE6
  8185                           postdec1	equ	0xFE5
  8186                           fsr1l	equ	0xFE1
  8187                           indf2	equ	0xFDF
  8188                           postinc2	equ	0xFDE
  8189                           postdec2	equ	0xFDD
  8190                           fsr2h	equ	0xFDA
  8191                           fsr2l	equ	0xFD9
  8192                           status	equ	0xFD8
  8193                           
  8194 ;; *************** function ___ftsub *****************
  8195 ;; Defined at:
  8196 ;;		line 20 in file "/Applications/microchip/xc8/v1.33/sources/common/ftsub.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  f1              3    0[BANK1 ] float 
  8199 ;;  f2              3    3[BANK1 ] float 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  3    0[BANK1 ] float 
  8204 ;; Registers used:
  8205 ;;		wreg, status,2, status,0, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8211 ;;      Params:         0       0       6       0       0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0
  8214 ;;      Totals:         0       0       6       0       0       0       0
  8215 ;;Total ram usage:        6 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; Hardware stack levels required when called:    8
  8218 ;; This function calls:
  8219 ;;		___ftadd
  8220 ;; This function is called by:
  8221 ;;		_sprintf
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text17
  8226  003D5E                     __ptext17:
  8227                           	opt stack 0
  8228  003D5E                     ___ftsub:
  8229                           	opt stack 19
  8230                           
  8231                           ; BSR set to: 0
  8232                           ;incstack = 0
  8233  003D5E  FFFF               	dw	65535
  8234  003D60  0E00               	movlw	0
  8235  003D62  0101               	movlb	1	; () banked
  8236  003D64  1B03               	xorwf	___ftsub@f2& (0+255),f,b
  8237  003D66  0E00               	movlw	0
  8238  003D68  0101               	movlb	1	; () banked
  8239  003D6A  1B04               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8240  003D6C  0E80               	movlw	128
  8241  003D6E  0101               	movlb	1	; () banked
  8242  003D70  1B05               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8243                           
  8244                           ; BSR set to: 1
  8245  003D72  C100  F0D3         	movff	___ftsub@f1,___ftadd@f1
  8246  003D76  C101  F0D4         	movff	___ftsub@f1+1,___ftadd@f1+1
  8247  003D7A  C102  F0D5         	movff	___ftsub@f1+2,___ftadd@f1+2
  8248  003D7E  C103  F0D6         	movff	___ftsub@f2,___ftadd@f2
  8249  003D82  C104  F0D7         	movff	___ftsub@f2+1,___ftadd@f2+1
  8250  003D86  C105  F0D8         	movff	___ftsub@f2+2,___ftadd@f2+2
  8251  003D8A  EC13  F012         	call	___ftadd	;wreg free
  8252  003D8E  C0D3  F100         	movff	?___ftadd,?___ftsub
  8253  003D92  C0D4  F101         	movff	?___ftadd+1,?___ftsub+1
  8254  003D96  C0D5  F102         	movff	?___ftadd+2,?___ftsub+2
  8255  003D9A  0012               	return	
  8256  003D9C  FFFF               	dw	65535	; errata NOP
  8257  003D9E                     __end_of___ftsub:
  8258                           	opt stack 0
  8259                           tblptru	equ	0xFF8
  8260                           tblptrh	equ	0xFF7
  8261                           tblptrl	equ	0xFF6
  8262                           tablat	equ	0xFF5
  8263                           prodh	equ	0xFF4
  8264                           prodl	equ	0xFF3
  8265                           postinc0	equ	0xFEE
  8266                           wreg	equ	0xFE8
  8267                           postinc1	equ	0xFE6
  8268                           postdec1	equ	0xFE5
  8269                           fsr1l	equ	0xFE1
  8270                           indf2	equ	0xFDF
  8271                           postinc2	equ	0xFDE
  8272                           postdec2	equ	0xFDD
  8273                           fsr2h	equ	0xFDA
  8274                           fsr2l	equ	0xFD9
  8275                           status	equ	0xFD8
  8276                           
  8277 ;; *************** function ___ftadd *****************
  8278 ;; Defined at:
  8279 ;;		line 86 in file "/Applications/microchip/xc8/v1.33/sources/common/ftadd.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  f1              3   83[BANK0 ] float 
  8282 ;;  f2              3   86[BANK0 ] float 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  exp1            1   94[BANK0 ] unsigned char 
  8285 ;;  exp2            1   93[BANK0 ] unsigned char 
  8286 ;;  sign            1   92[BANK0 ] unsigned char 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  3   83[BANK0 ] float 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0, cstack
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8296 ;;      Params:         0       6       0       0       0       0       0
  8297 ;;      Locals:         0       3       0       0       0       0       0
  8298 ;;      Temps:          0       3       0       0       0       0       0
  8299 ;;      Totals:         0      12       0       0       0       0       0
  8300 ;;Total ram usage:       12 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    7
  8303 ;; This function calls:
  8304 ;;		___ftpack
  8305 ;; This function is called by:
  8306 ;;		_sprintf
  8307 ;;		___ftsub
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text18
  8312  002426                     __ptext18:
  8313                           	opt stack 0
  8314  002426                     ___ftadd:
  8315                           	opt stack 19
  8316                           
  8317                           ;incstack = 0
  8318  002426  FFFF               	dw	65535
  8319  002428  0100               	movlb	0	; () banked
  8320  00242A  C0D5  F0D9         	movff	___ftadd@f1+2,??___ftadd
  8321  00242E  0100               	movlb	0	; () banked
  8322  002430  6BDA               	clrf	(??___ftadd+1)& (0+255),b
  8323  002432  6BDB               	clrf	(??___ftadd+2)& (0+255),b
  8324  002434  0100               	movlb	0	; () banked
  8325  002436  35D4               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8326  002438  0100               	movlb	0	; () banked
  8327  00243A  37D9               	rlcf	??___ftadd& (0+255),f,b
  8328  00243C  E301               	bnc	u2371
  8329  00243E  81DA               	bsf	(??___ftadd+1)& (0+255),0,b
  8330  002440                     u2371:
  8331  002440  0100               	movlb	0	; () banked
  8332  002442  51D9               	movf	??___ftadd& (0+255),w,b
  8333  002444  0100               	movlb	0	; () banked
  8334  002446  6FDE               	movwf	___ftadd@exp1& (0+255),b
  8335  002448  0100               	movlb	0	; () banked
  8336  00244A  C0D8  F0D9         	movff	___ftadd@f2+2,??___ftadd
  8337  00244E  0100               	movlb	0	; () banked
  8338  002450  6BDA               	clrf	(??___ftadd+1)& (0+255),b
  8339  002452  6BDB               	clrf	(??___ftadd+2)& (0+255),b
  8340  002454  0100               	movlb	0	; () banked
  8341  002456  35D7               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8342  002458  0100               	movlb	0	; () banked
  8343  00245A  37D9               	rlcf	??___ftadd& (0+255),f,b
  8344  00245C  E301               	bnc	u2381
  8345  00245E  81DA               	bsf	(??___ftadd+1)& (0+255),0,b
  8346  002460                     u2381:
  8347  002460  0100               	movlb	0	; () banked
  8348  002462  51D9               	movf	??___ftadd& (0+255),w,b
  8349  002464  0100               	movlb	0	; () banked
  8350  002466  6FDD               	movwf	___ftadd@exp2& (0+255),b
  8351                           
  8352                           ; BSR set to: 0
  8353  002468  0100               	movlb	0	; () banked
  8354  00246A  51DE               	movf	___ftadd@exp1& (0+255),w,b
  8355  00246C  B4D8               	btfsc	status,2,c
  8356  00246E  D012               	goto	l735
  8357                           
  8358                           ; BSR set to: 0
  8359  002470  0100               	movlb	0	; () banked
  8360  002472  51DD               	movf	___ftadd@exp2& (0+255),w,b
  8361  002474  0100               	movlb	0	; () banked
  8362  002476  5DDE               	subwf	___ftadd@exp1& (0+255),w,b
  8363  002478  B0D8               	btfsc	status,0,c
  8364  00247A  D013               	goto	l2535
  8365                           
  8366                           ; BSR set to: 0
  8367  00247C  0100               	movlb	0	; () banked
  8368  00247E  51DE               	movf	___ftadd@exp1& (0+255),w,b
  8369  002480  0800               	sublw	0
  8370  002482  0100               	movlb	0	; () banked
  8371  002484  25DD               	addwf	___ftadd@exp2& (0+255),w,b
  8372  002486  0100               	movlb	0	; () banked
  8373  002488  6FD9               	movwf	??___ftadd& (0+255),b
  8374  00248A  0E19               	movlw	25
  8375  00248C  0100               	movlb	0	; () banked
  8376  00248E  5DD9               	subwf	??___ftadd& (0+255),w,b
  8377  002490  A0D8               	btfss	status,0,c
  8378  002492  D007               	goto	l2535
  8379  002494                     l735:
  8380                           
  8381                           ; BSR set to: 0
  8382  002494  C0D6  F0D3         	movff	___ftadd@f2,?___ftadd
  8383  002498  C0D7  F0D4         	movff	___ftadd@f2+1,?___ftadd+1
  8384  00249C  C0D8  F0D5         	movff	___ftadd@f2+2,?___ftadd+2
  8385  0024A0  D102               	goto	l736
  8386  0024A2                     l2535:
  8387                           
  8388                           ; BSR set to: 0
  8389  0024A2  0100               	movlb	0	; () banked
  8390  0024A4  51DD               	movf	___ftadd@exp2& (0+255),w,b
  8391  0024A6  B4D8               	btfsc	status,2,c
  8392  0024A8  D012               	goto	l739
  8393                           
  8394                           ; BSR set to: 0
  8395  0024AA  0100               	movlb	0	; () banked
  8396  0024AC  51DE               	movf	___ftadd@exp1& (0+255),w,b
  8397  0024AE  0100               	movlb	0	; () banked
  8398  0024B0  5DDD               	subwf	___ftadd@exp2& (0+255),w,b
  8399  0024B2  B0D8               	btfsc	status,0,c
  8400  0024B4  D013               	goto	l2541
  8401                           
  8402                           ; BSR set to: 0
  8403  0024B6  0100               	movlb	0	; () banked
  8404  0024B8  51DD               	movf	___ftadd@exp2& (0+255),w,b
  8405  0024BA  0800               	sublw	0
  8406  0024BC  0100               	movlb	0	; () banked
  8407  0024BE  25DE               	addwf	___ftadd@exp1& (0+255),w,b
  8408  0024C0  0100               	movlb	0	; () banked
  8409  0024C2  6FD9               	movwf	??___ftadd& (0+255),b
  8410  0024C4  0E19               	movlw	25
  8411  0024C6  0100               	movlb	0	; () banked
  8412  0024C8  5DD9               	subwf	??___ftadd& (0+255),w,b
  8413  0024CA  A0D8               	btfss	status,0,c
  8414  0024CC  D007               	goto	l2541
  8415  0024CE                     l739:
  8416                           
  8417                           ; BSR set to: 0
  8418  0024CE  C0D3  F0D3         	movff	___ftadd@f1,?___ftadd
  8419  0024D2  C0D4  F0D4         	movff	___ftadd@f1+1,?___ftadd+1
  8420  0024D6  C0D5  F0D5         	movff	___ftadd@f1+2,?___ftadd+2
  8421  0024DA  D0E5               	goto	l736
  8422  0024DC                     l2541:
  8423                           
  8424                           ; BSR set to: 0
  8425  0024DC  0E06               	movlw	6
  8426  0024DE  0100               	movlb	0	; () banked
  8427  0024E0  6FDC               	movwf	___ftadd@sign& (0+255),b
  8428                           
  8429                           ; BSR set to: 0
  8430  0024E2  0100               	movlb	0	; () banked
  8431  0024E4  AFD5               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8432  0024E6  D002               	goto	l2547
  8433                           
  8434                           ; BSR set to: 0
  8435  0024E8  0100               	movlb	0	; () banked
  8436  0024EA  8FDC               	bsf	___ftadd@sign& (0+255),7,b
  8437  0024EC                     l2547:
  8438                           
  8439                           ; BSR set to: 0
  8440  0024EC  0100               	movlb	0	; () banked
  8441  0024EE  AFD8               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8442  0024F0  D002               	goto	l741
  8443                           
  8444                           ; BSR set to: 0
  8445  0024F2  0100               	movlb	0	; () banked
  8446  0024F4  8DDC               	bsf	___ftadd@sign& (0+255),6,b
  8447  0024F6                     l741:
  8448                           
  8449                           ; BSR set to: 0
  8450  0024F6  0100               	movlb	0	; () banked
  8451  0024F8  8FD4               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8452                           
  8453                           ; BSR set to: 0
  8454  0024FA  0EFF               	movlw	255
  8455  0024FC  0100               	movlb	0	; () banked
  8456  0024FE  17D3               	andwf	___ftadd@f1& (0+255),f,b
  8457  002500  0EFF               	movlw	255
  8458  002502  0100               	movlb	0	; () banked
  8459  002504  17D4               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8460  002506  0E00               	movlw	0
  8461  002508  0100               	movlb	0	; () banked
  8462  00250A  17D5               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8463  00250C  0100               	movlb	0	; () banked
  8464  00250E  8FD7               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8465                           
  8466                           ; BSR set to: 0
  8467  002510  0EFF               	movlw	255
  8468  002512  0100               	movlb	0	; () banked
  8469  002514  17D6               	andwf	___ftadd@f2& (0+255),f,b
  8470  002516  0EFF               	movlw	255
  8471  002518  0100               	movlb	0	; () banked
  8472  00251A  17D7               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8473  00251C  0E00               	movlw	0
  8474  00251E  0100               	movlb	0	; () banked
  8475  002520  17D8               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8476                           
  8477                           ; BSR set to: 0
  8478  002522  0100               	movlb	0	; () banked
  8479  002524  51DD               	movf	___ftadd@exp2& (0+255),w,b
  8480  002526  0100               	movlb	0	; () banked
  8481  002528  5DDE               	subwf	___ftadd@exp1& (0+255),w,b
  8482  00252A  B0D8               	btfsc	status,0,c
  8483  00252C  D02A               	goto	l2567
  8484  00252E                     l2557:
  8485                           
  8486                           ; BSR set to: 0
  8487  00252E  0100               	movlb	0	; () banked
  8488  002530  90D8               	bcf	status,0,c
  8489  002532  0100               	movlb	0	; () banked
  8490  002534  37D6               	rlcf	___ftadd@f2& (0+255),f,b
  8491  002536  0100               	movlb	0	; () banked
  8492  002538  37D7               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8493  00253A  0100               	movlb	0	; () banked
  8494  00253C  37D8               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8495  00253E  0100               	movlb	0	; () banked
  8496  002540  07DD               	decf	___ftadd@exp2& (0+255),f,b
  8497                           
  8498                           ; BSR set to: 0
  8499  002542  0100               	movlb	0	; () banked
  8500  002544  51DD               	movf	___ftadd@exp2& (0+255),w,b
  8501  002546  0100               	movlb	0	; () banked
  8502  002548  19DE               	xorwf	___ftadd@exp1& (0+255),w,b
  8503  00254A  B4D8               	btfsc	status,2,c
  8504  00254C  D014               	goto	l2565
  8505                           
  8506                           ; BSR set to: 0
  8507  00254E  0100               	movlb	0	; () banked
  8508  002550  07DC               	decf	___ftadd@sign& (0+255),f,b
  8509  002552  C0DC  F0D9         	movff	___ftadd@sign,??___ftadd
  8510  002556  0E07               	movlw	7
  8511  002558  0100               	movlb	0	; () banked
  8512  00255A  17D9               	andwf	??___ftadd& (0+255),f,b
  8513  00255C  B4D8               	btfsc	status,2,c
  8514  00255E  D00B               	goto	l2565
  8515  002560  D7E6               	goto	l2557
  8516  002562                     l2563:
  8517                           
  8518                           ; BSR set to: 0
  8519  002562  0100               	movlb	0	; () banked
  8520  002564  90D8               	bcf	status,0,c
  8521  002566  0100               	movlb	0	; () banked
  8522  002568  33D5               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8523  00256A  0100               	movlb	0	; () banked
  8524  00256C  33D4               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8525  00256E  0100               	movlb	0	; () banked
  8526  002570  33D3               	rrcf	___ftadd@f1& (0+255),f,b
  8527  002572  0100               	movlb	0	; () banked
  8528  002574  2BDE               	incf	___ftadd@exp1& (0+255),f,b
  8529  002576                     l2565:
  8530                           
  8531                           ; BSR set to: 0
  8532  002576  0100               	movlb	0	; () banked
  8533  002578  51DD               	movf	___ftadd@exp2& (0+255),w,b
  8534  00257A  0100               	movlb	0	; () banked
  8535  00257C  63DE               	cpfseq	___ftadd@exp1& (0+255),b
  8536  00257E  D7F1               	goto	l2563
  8537  002580  D02F               	goto	l750
  8538  002582                     l2567:
  8539                           
  8540                           ; BSR set to: 0
  8541  002582  0100               	movlb	0	; () banked
  8542  002584  51DE               	movf	___ftadd@exp1& (0+255),w,b
  8543  002586  0100               	movlb	0	; () banked
  8544  002588  5DDD               	subwf	___ftadd@exp2& (0+255),w,b
  8545  00258A  B0D8               	btfsc	status,0,c
  8546  00258C  D029               	goto	l750
  8547  00258E                     l2569:
  8548                           
  8549                           ; BSR set to: 0
  8550  00258E  0100               	movlb	0	; () banked
  8551  002590  90D8               	bcf	status,0,c
  8552  002592  0100               	movlb	0	; () banked
  8553  002594  37D3               	rlcf	___ftadd@f1& (0+255),f,b
  8554  002596  0100               	movlb	0	; () banked
  8555  002598  37D4               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8556  00259A  0100               	movlb	0	; () banked
  8557  00259C  37D5               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8558  00259E  0100               	movlb	0	; () banked
  8559  0025A0  07DE               	decf	___ftadd@exp1& (0+255),f,b
  8560                           
  8561                           ; BSR set to: 0
  8562  0025A2  0100               	movlb	0	; () banked
  8563  0025A4  51DD               	movf	___ftadd@exp2& (0+255),w,b
  8564  0025A6  0100               	movlb	0	; () banked
  8565  0025A8  19DE               	xorwf	___ftadd@exp1& (0+255),w,b
  8566  0025AA  B4D8               	btfsc	status,2,c
  8567  0025AC  D014               	goto	l2577
  8568                           
  8569                           ; BSR set to: 0
  8570  0025AE  0100               	movlb	0	; () banked
  8571  0025B0  07DC               	decf	___ftadd@sign& (0+255),f,b
  8572  0025B2  C0DC  F0D9         	movff	___ftadd@sign,??___ftadd
  8573  0025B6  0E07               	movlw	7
  8574  0025B8  0100               	movlb	0	; () banked
  8575  0025BA  17D9               	andwf	??___ftadd& (0+255),f,b
  8576  0025BC  B4D8               	btfsc	status,2,c
  8577  0025BE  D00B               	goto	l2577
  8578  0025C0  D7E6               	goto	l2569
  8579  0025C2                     l2575:
  8580                           
  8581                           ; BSR set to: 0
  8582  0025C2  0100               	movlb	0	; () banked
  8583  0025C4  90D8               	bcf	status,0,c
  8584  0025C6  0100               	movlb	0	; () banked
  8585  0025C8  33D8               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8586  0025CA  0100               	movlb	0	; () banked
  8587  0025CC  33D7               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8588  0025CE  0100               	movlb	0	; () banked
  8589  0025D0  33D6               	rrcf	___ftadd@f2& (0+255),f,b
  8590  0025D2  0100               	movlb	0	; () banked
  8591  0025D4  2BDD               	incf	___ftadd@exp2& (0+255),f,b
  8592  0025D6                     l2577:
  8593                           
  8594                           ; BSR set to: 0
  8595  0025D6  0100               	movlb	0	; () banked
  8596  0025D8  51DD               	movf	___ftadd@exp2& (0+255),w,b
  8597  0025DA  0100               	movlb	0	; () banked
  8598  0025DC  63DE               	cpfseq	___ftadd@exp1& (0+255),b
  8599  0025DE  D7F1               	goto	l2575
  8600  0025E0                     l750:
  8601                           
  8602                           ; BSR set to: 0
  8603  0025E0  0100               	movlb	0	; () banked
  8604  0025E2  AFDC               	btfss	___ftadd@sign& (0+255),7,b
  8605  0025E4  D012               	goto	l759
  8606                           
  8607                           ; BSR set to: 0
  8608  0025E6  0EFF               	movlw	255
  8609  0025E8  0100               	movlb	0	; () banked
  8610  0025EA  1BD3               	xorwf	___ftadd@f1& (0+255),f,b
  8611  0025EC  0EFF               	movlw	255
  8612  0025EE  0100               	movlb	0	; () banked
  8613  0025F0  1BD4               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8614  0025F2  0EFF               	movlw	255
  8615  0025F4  0100               	movlb	0	; () banked
  8616  0025F6  1BD5               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8617  0025F8  0E01               	movlw	1
  8618  0025FA  0100               	movlb	0	; () banked
  8619  0025FC  27D3               	addwf	___ftadd@f1& (0+255),f,b
  8620  0025FE  0E00               	movlw	0
  8621  002600  0100               	movlb	0	; () banked
  8622  002602  23D4               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8623  002604  0E00               	movlw	0
  8624  002606  0100               	movlb	0	; () banked
  8625  002608  23D5               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8626  00260A                     l759:
  8627                           
  8628                           ; BSR set to: 0
  8629  00260A  0100               	movlb	0	; () banked
  8630  00260C  ADDC               	btfss	___ftadd@sign& (0+255),6,b
  8631  00260E  D012               	goto	l2583
  8632                           
  8633                           ; BSR set to: 0
  8634  002610  0EFF               	movlw	255
  8635  002612  0100               	movlb	0	; () banked
  8636  002614  1BD6               	xorwf	___ftadd@f2& (0+255),f,b
  8637  002616  0EFF               	movlw	255
  8638  002618  0100               	movlb	0	; () banked
  8639  00261A  1BD7               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8640  00261C  0EFF               	movlw	255
  8641  00261E  0100               	movlb	0	; () banked
  8642  002620  1BD8               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8643  002622  0E01               	movlw	1
  8644  002624  0100               	movlb	0	; () banked
  8645  002626  27D6               	addwf	___ftadd@f2& (0+255),f,b
  8646  002628  0E00               	movlw	0
  8647  00262A  0100               	movlb	0	; () banked
  8648  00262C  23D7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8649  00262E  0E00               	movlw	0
  8650  002630  0100               	movlb	0	; () banked
  8651  002632  23D8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8652  002634                     l2583:
  8653                           
  8654                           ; BSR set to: 0
  8655  002634  0E00               	movlw	0
  8656  002636  0100               	movlb	0	; () banked
  8657  002638  6FDC               	movwf	___ftadd@sign& (0+255),b
  8658                           
  8659                           ; BSR set to: 0
  8660  00263A  0100               	movlb	0	; () banked
  8661  00263C  51D3               	movf	___ftadd@f1& (0+255),w,b
  8662  00263E  0100               	movlb	0	; () banked
  8663  002640  27D6               	addwf	___ftadd@f2& (0+255),f,b
  8664  002642  0100               	movlb	0	; () banked
  8665  002644  51D4               	movf	(___ftadd@f1+1)& (0+255),w,b
  8666  002646  0100               	movlb	0	; () banked
  8667  002648  23D7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8668  00264A  0100               	movlb	0	; () banked
  8669  00264C  51D5               	movf	(___ftadd@f1+2)& (0+255),w,b
  8670  00264E  0100               	movlb	0	; () banked
  8671  002650  23D8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8672                           
  8673                           ; BSR set to: 0
  8674  002652  0100               	movlb	0	; () banked
  8675  002654  AFD8               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8676  002656  D015               	goto	l2593
  8677                           
  8678                           ; BSR set to: 0
  8679  002658  0EFF               	movlw	255
  8680  00265A  0100               	movlb	0	; () banked
  8681  00265C  1BD6               	xorwf	___ftadd@f2& (0+255),f,b
  8682  00265E  0EFF               	movlw	255
  8683  002660  0100               	movlb	0	; () banked
  8684  002662  1BD7               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8685  002664  0EFF               	movlw	255
  8686  002666  0100               	movlb	0	; () banked
  8687  002668  1BD8               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8688  00266A  0E01               	movlw	1
  8689  00266C  0100               	movlb	0	; () banked
  8690  00266E  27D6               	addwf	___ftadd@f2& (0+255),f,b
  8691  002670  0E00               	movlw	0
  8692  002672  0100               	movlb	0	; () banked
  8693  002674  23D7               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8694  002676  0E00               	movlw	0
  8695  002678  0100               	movlb	0	; () banked
  8696  00267A  23D8               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8697                           
  8698                           ; BSR set to: 0
  8699  00267C  0E01               	movlw	1
  8700  00267E  0100               	movlb	0	; () banked
  8701  002680  6FDC               	movwf	___ftadd@sign& (0+255),b
  8702  002682                     l2593:
  8703                           
  8704                           ; BSR set to: 0
  8705  002682  C0D6  F09F         	movff	___ftadd@f2,___ftpack@arg
  8706  002686  C0D7  F0A0         	movff	___ftadd@f2+1,___ftpack@arg+1
  8707  00268A  C0D8  F0A1         	movff	___ftadd@f2+2,___ftpack@arg+2
  8708  00268E  C0DE  F0A2         	movff	___ftadd@exp1,___ftpack@exp
  8709  002692  C0DC  F0A3         	movff	___ftadd@sign,___ftpack@sign
  8710  002696  EC4D  F01A         	call	___ftpack	;wreg free
  8711  00269A  C09F  F0D3         	movff	?___ftpack,?___ftadd
  8712  00269E  C0A0  F0D4         	movff	?___ftpack+1,?___ftadd+1
  8713  0026A2  C0A1  F0D5         	movff	?___ftpack+2,?___ftadd+2
  8714  0026A6                     l736:
  8715  0026A6  0012               	return	
  8716  0026A8  FFFF               	dw	65535	; errata NOP
  8717  0026AA                     __end_of___ftadd:
  8718                           	opt stack 0
  8719                           tblptru	equ	0xFF8
  8720                           tblptrh	equ	0xFF7
  8721                           tblptrl	equ	0xFF6
  8722                           tablat	equ	0xFF5
  8723                           prodh	equ	0xFF4
  8724                           prodl	equ	0xFF3
  8725                           postinc0	equ	0xFEE
  8726                           wreg	equ	0xFE8
  8727                           postinc1	equ	0xFE6
  8728                           postdec1	equ	0xFE5
  8729                           fsr1l	equ	0xFE1
  8730                           indf2	equ	0xFDF
  8731                           postinc2	equ	0xFDE
  8732                           postdec2	equ	0xFDD
  8733                           fsr2h	equ	0xFDA
  8734                           fsr2l	equ	0xFD9
  8735                           status	equ	0xFD8
  8736                           
  8737 ;; *************** function ___ftneg *****************
  8738 ;; Defined at:
  8739 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/ftneg.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  f1              3   55[BANK0 ] float 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  3   55[BANK0 ] float 
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8753 ;;      Params:         0       3       0       0       0       0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0
  8755 ;;      Temps:          0       0       0       0       0       0       0
  8756 ;;      Totals:         0       3       0       0       0       0       0
  8757 ;;Total ram usage:        3 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    6
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_sprintf
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text19
  8768  003EC6                     __ptext19:
  8769                           	opt stack 0
  8770  003EC6                     ___ftneg:
  8771                           	opt stack 21
  8772                           
  8773                           ;incstack = 0
  8774  003EC6  FFFF               	dw	65535
  8775  003EC8  0E7F               	movlw	127
  8776  003ECA  0100               	movlb	0	; () banked
  8777  003ECC  15B9               	andwf	(___ftneg@f1+2)& (0+255),w,b
  8778  003ECE  0100               	movlb	0	; () banked
  8779  003ED0  11B8               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8780  003ED2  0100               	movlb	0	; () banked
  8781  003ED4  11B7               	iorwf	___ftneg@f1& (0+255),w,b
  8782  003ED6  B4D8               	btfsc	status,2,c
  8783  003ED8  D009               	goto	l809
  8784                           
  8785                           ; BSR set to: 0
  8786  003EDA  0E00               	movlw	0
  8787  003EDC  0100               	movlb	0	; () banked
  8788  003EDE  1BB7               	xorwf	___ftneg@f1& (0+255),f,b
  8789  003EE0  0E00               	movlw	0
  8790  003EE2  0100               	movlb	0	; () banked
  8791  003EE4  1BB8               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8792  003EE6  0E80               	movlw	128
  8793  003EE8  0100               	movlb	0	; () banked
  8794  003EEA  1BB9               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8795  003EEC                     l809:
  8796                           
  8797                           ; BSR set to: 0
  8798  003EEC  C0B7  F0B7         	movff	___ftneg@f1,?___ftneg
  8799  003EF0  C0B8  F0B8         	movff	___ftneg@f1+1,?___ftneg+1
  8800  003EF4  C0B9  F0B9         	movff	___ftneg@f1+2,?___ftneg+2
  8801                           
  8802                           ; BSR set to: 0
  8803  003EF8  0012               	return	
  8804  003EFA  FFFF               	dw	65535	; errata NOP
  8805  003EFC                     __end_of___ftneg:
  8806                           	opt stack 0
  8807                           tblptru	equ	0xFF8
  8808                           tblptrh	equ	0xFF7
  8809                           tblptrl	equ	0xFF6
  8810                           tablat	equ	0xFF5
  8811                           prodh	equ	0xFF4
  8812                           prodl	equ	0xFF3
  8813                           postinc0	equ	0xFEE
  8814                           wreg	equ	0xFE8
  8815                           postinc1	equ	0xFE6
  8816                           postdec1	equ	0xFE5
  8817                           fsr1l	equ	0xFE1
  8818                           indf2	equ	0xFDF
  8819                           postinc2	equ	0xFDE
  8820                           postdec2	equ	0xFDD
  8821                           fsr2h	equ	0xFDA
  8822                           fsr2l	equ	0xFD9
  8823                           status	equ	0xFD8
  8824                           
  8825 ;; *************** function ___ftge *****************
  8826 ;; Defined at:
  8827 ;;		line 4 in file "/Applications/microchip/xc8/v1.33/sources/common/ftge.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  ff1             3    0[BANK1 ] float 
  8830 ;;  ff2             3    3[BANK1 ] float 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;		None               void
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8842 ;;      Params:         0       0       6       0       0       0       0
  8843 ;;      Locals:         0       0       0       0       0       0       0
  8844 ;;      Temps:          0       0       3       0       0       0       0
  8845 ;;      Totals:         0       0       9       0       0       0       0
  8846 ;;Total ram usage:        9 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    6
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_sprintf
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text20
  8857  003840                     __ptext20:
  8858                           	opt stack 0
  8859  003840                     ___ftge:
  8860                           	opt stack 21
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;incstack = 0
  8864  003840  FFFF               	dw	65535
  8865  003842  0101               	movlb	1	; () banked
  8866  003844  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8867  003846  D020               	goto	l3011
  8868                           
  8869                           ; BSR set to: 1
  8870  003848  0101               	movlb	1	; () banked
  8871  00384A  C100  F106         	movff	___ftge@ff1,??___ftge
  8872  00384E  0101               	movlb	1	; () banked
  8873  003850  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  8874  003854  0101               	movlb	1	; () banked
  8875  003856  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  8876  00385A  0101               	movlb	1	; () banked
  8877  00385C  1F06               	comf	??___ftge& (0+255),f,b
  8878  00385E  1F07               	comf	(??___ftge+1)& (0+255),f,b
  8879  003860  1F08               	comf	(??___ftge+2)& (0+255),f,b
  8880  003862  2B06               	incf	??___ftge& (0+255),f,b
  8881  003864  0E00               	movlw	0
  8882  003866  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  8883  003868  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  8884  00386A  0E00               	movlw	0
  8885  00386C  0101               	movlb	1	; () banked
  8886  00386E  2506               	addwf	??___ftge& (0+255),w,b
  8887  003870  0101               	movlb	1	; () banked
  8888  003872  6F00               	movwf	___ftge@ff1& (0+255),b
  8889  003874  0E00               	movlw	0
  8890  003876  0101               	movlb	1	; () banked
  8891  003878  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  8892  00387A  0101               	movlb	1	; () banked
  8893  00387C  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  8894  00387E  0E80               	movlw	128
  8895  003880  0101               	movlb	1	; () banked
  8896  003882  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  8897  003884  0101               	movlb	1	; () banked
  8898  003886  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  8899  003888                     l3011:
  8900                           
  8901                           ; BSR set to: 1
  8902  003888  0101               	movlb	1	; () banked
  8903  00388A  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8904  00388C  D020               	goto	l3015
  8905                           
  8906                           ; BSR set to: 1
  8907  00388E  0101               	movlb	1	; () banked
  8908  003890  C103  F106         	movff	___ftge@ff2,??___ftge
  8909  003894  0101               	movlb	1	; () banked
  8910  003896  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  8911  00389A  0101               	movlb	1	; () banked
  8912  00389C  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  8913  0038A0  0101               	movlb	1	; () banked
  8914  0038A2  1F06               	comf	??___ftge& (0+255),f,b
  8915  0038A4  1F07               	comf	(??___ftge+1)& (0+255),f,b
  8916  0038A6  1F08               	comf	(??___ftge+2)& (0+255),f,b
  8917  0038A8  2B06               	incf	??___ftge& (0+255),f,b
  8918  0038AA  0E00               	movlw	0
  8919  0038AC  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  8920  0038AE  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  8921  0038B0  0E00               	movlw	0
  8922  0038B2  0101               	movlb	1	; () banked
  8923  0038B4  2506               	addwf	??___ftge& (0+255),w,b
  8924  0038B6  0101               	movlb	1	; () banked
  8925  0038B8  6F03               	movwf	___ftge@ff2& (0+255),b
  8926  0038BA  0E00               	movlw	0
  8927  0038BC  0101               	movlb	1	; () banked
  8928  0038BE  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  8929  0038C0  0101               	movlb	1	; () banked
  8930  0038C2  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  8931  0038C4  0E80               	movlw	128
  8932  0038C6  0101               	movlb	1	; () banked
  8933  0038C8  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  8934  0038CA  0101               	movlb	1	; () banked
  8935  0038CC  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  8936  0038CE                     l3015:
  8937                           
  8938                           ; BSR set to: 1
  8939  0038CE  0E00               	movlw	0
  8940  0038D0  0101               	movlb	1	; () banked
  8941  0038D2  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  8942  0038D4  0E00               	movlw	0
  8943  0038D6  0101               	movlb	1	; () banked
  8944  0038D8  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8945  0038DA  0E80               	movlw	128
  8946  0038DC  0101               	movlb	1	; () banked
  8947  0038DE  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8948                           
  8949                           ; BSR set to: 1
  8950  0038E0  0E00               	movlw	0
  8951  0038E2  0101               	movlb	1	; () banked
  8952  0038E4  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  8953  0038E6  0E00               	movlw	0
  8954  0038E8  0101               	movlb	1	; () banked
  8955  0038EA  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8956  0038EC  0E80               	movlw	128
  8957  0038EE  0101               	movlb	1	; () banked
  8958  0038F0  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8959  0038F2  0101               	movlb	1	; () banked
  8960  0038F4  5103               	movf	___ftge@ff2& (0+255),w,b
  8961  0038F6  0101               	movlb	1	; () banked
  8962  0038F8  5D00               	subwf	___ftge@ff1& (0+255),w,b
  8963  0038FA  0101               	movlb	1	; () banked
  8964  0038FC  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  8965  0038FE  0101               	movlb	1	; () banked
  8966  003900  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8967  003902  0101               	movlb	1	; () banked
  8968  003904  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  8969  003906  0101               	movlb	1	; () banked
  8970  003908  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8971  00390A  B0D8               	btfsc	status,0,c
  8972  00390C  D002               	goto	l3021
  8973                           
  8974                           ; BSR set to: 1
  8975  00390E  90D8               	bcf	status,0,c
  8976  003910  D001               	goto	l793
  8977  003912                     l3021:
  8978                           
  8979                           ; BSR set to: 1
  8980  003912  80D8               	bsf	status,0,c
  8981  003914                     l793:
  8982                           
  8983                           ; BSR set to: 1
  8984  003914  0012               	return	
  8985  003916  FFFF               	dw	65535	; errata NOP
  8986  003918                     __end_of___ftge:
  8987                           	opt stack 0
  8988                           tblptru	equ	0xFF8
  8989                           tblptrh	equ	0xFF7
  8990                           tblptrl	equ	0xFF6
  8991                           tablat	equ	0xFF5
  8992                           prodh	equ	0xFF4
  8993                           prodl	equ	0xFF3
  8994                           postinc0	equ	0xFEE
  8995                           wreg	equ	0xFE8
  8996                           postinc1	equ	0xFE6
  8997                           postdec1	equ	0xFE5
  8998                           fsr1l	equ	0xFE1
  8999                           indf2	equ	0xFDF
  9000                           postinc2	equ	0xFDE
  9001                           postdec2	equ	0xFDD
  9002                           fsr2h	equ	0xFDA
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8
  9005                           
  9006 ;; *************** function ___ftdiv *****************
  9007 ;; Defined at:
  9008 ;;		line 49 in file "/Applications/microchip/xc8/v1.33/sources/common/ftdiv.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  f1              3   80[BANK0 ] float 
  9011 ;;  f2              3   83[BANK0 ] float 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  f3              3   90[BANK0 ] float 
  9014 ;;  sign            1   94[BANK0 ] unsigned char 
  9015 ;;  exp             1   93[BANK0 ] unsigned char 
  9016 ;;  cntr            1   89[BANK0 ] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  3   80[BANK0 ] float 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9026 ;;      Params:         0       6       0       0       0       0       0
  9027 ;;      Locals:         0       6       0       0       0       0       0
  9028 ;;      Temps:          0       3       0       0       0       0       0
  9029 ;;      Totals:         0      15       0       0       0       0       0
  9030 ;;Total ram usage:       15 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    7
  9033 ;; This function calls:
  9034 ;;		___ftpack
  9035 ;; This function is called by:
  9036 ;;		_sprintf
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text21
  9041  003240                     __ptext21:
  9042                           	opt stack 0
  9043  003240                     ___ftdiv:
  9044                           	opt stack 20
  9045                           
  9046                           ; BSR set to: 1
  9047                           ;incstack = 0
  9048  003240  FFFF               	dw	65535
  9049  003242  0100               	movlb	0	; () banked
  9050  003244  C0D2  F0D6         	movff	___ftdiv@f1+2,??___ftdiv
  9051  003248  0100               	movlb	0	; () banked
  9052  00324A  6BD7               	clrf	(??___ftdiv+1)& (0+255),b
  9053  00324C  6BD8               	clrf	(??___ftdiv+2)& (0+255),b
  9054  00324E  0100               	movlb	0	; () banked
  9055  003250  35D1               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9056  003252  0100               	movlb	0	; () banked
  9057  003254  37D6               	rlcf	??___ftdiv& (0+255),f,b
  9058  003256  E301               	bnc	u3101
  9059  003258  81D7               	bsf	(??___ftdiv+1)& (0+255),0,b
  9060  00325A                     u3101:
  9061  00325A  0100               	movlb	0	; () banked
  9062  00325C  51D6               	movf	??___ftdiv& (0+255),w,b
  9063  00325E  0100               	movlb	0	; () banked
  9064  003260  6FDD               	movwf	___ftdiv@exp& (0+255),b
  9065  003262  0100               	movlb	0	; () banked
  9066  003264  67DD               	tstfsz	___ftdiv@exp& (0+255),b
  9067  003266  D001               	goto	l2961
  9068  003268  D013               	goto	u3130
  9069  00326A                     l2961:
  9070                           
  9071                           ; BSR set to: 0
  9072  00326A  0100               	movlb	0	; () banked
  9073  00326C  C0D5  F0D6         	movff	___ftdiv@f2+2,??___ftdiv
  9074  003270  0100               	movlb	0	; () banked
  9075  003272  6BD7               	clrf	(??___ftdiv+1)& (0+255),b
  9076  003274  6BD8               	clrf	(??___ftdiv+2)& (0+255),b
  9077  003276  0100               	movlb	0	; () banked
  9078  003278  35D4               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9079  00327A  0100               	movlb	0	; () banked
  9080  00327C  37D6               	rlcf	??___ftdiv& (0+255),f,b
  9081  00327E  E301               	bnc	u3121
  9082  003280  81D7               	bsf	(??___ftdiv+1)& (0+255),0,b
  9083  003282                     u3121:
  9084  003282  0100               	movlb	0	; () banked
  9085  003284  51D6               	movf	??___ftdiv& (0+255),w,b
  9086  003286  0100               	movlb	0	; () banked
  9087  003288  6FDE               	movwf	___ftdiv@sign& (0+255),b
  9088  00328A  0100               	movlb	0	; () banked
  9089  00328C  67DE               	tstfsz	___ftdiv@sign& (0+255),b
  9090  00328E  D00A               	goto	l2967
  9091  003290                     u3130:
  9092                           
  9093                           ; BSR set to: 0
  9094  003290  0E00               	movlw	0
  9095  003292  0100               	movlb	0	; () banked
  9096  003294  6FD0               	movwf	?___ftdiv& (0+255),b
  9097  003296  0E00               	movlw	0
  9098  003298  0100               	movlb	0	; () banked
  9099  00329A  6FD1               	movwf	(?___ftdiv+1)& (0+255),b
  9100  00329C  0E00               	movlw	0
  9101  00329E  0100               	movlb	0	; () banked
  9102  0032A0  6FD2               	movwf	(?___ftdiv+2)& (0+255),b
  9103  0032A2  D071               	goto	l767
  9104  0032A4                     l2967:
  9105                           
  9106                           ; BSR set to: 0
  9107  0032A4  0E00               	movlw	0
  9108  0032A6  0100               	movlb	0	; () banked
  9109  0032A8  6FDA               	movwf	___ftdiv@f3& (0+255),b
  9110  0032AA  0E00               	movlw	0
  9111  0032AC  0100               	movlb	0	; () banked
  9112  0032AE  6FDB               	movwf	(___ftdiv@f3+1)& (0+255),b
  9113  0032B0  0E00               	movlw	0
  9114  0032B2  0100               	movlb	0	; () banked
  9115  0032B4  6FDC               	movwf	(___ftdiv@f3+2)& (0+255),b
  9116                           
  9117                           ; BSR set to: 0
  9118  0032B6  0100               	movlb	0	; () banked
  9119  0032B8  51DE               	movf	___ftdiv@sign& (0+255),w,b
  9120  0032BA  0F89               	addlw	137
  9121  0032BC  0100               	movlb	0	; () banked
  9122  0032BE  5FDD               	subwf	___ftdiv@exp& (0+255),f,b
  9123                           
  9124                           ; BSR set to: 0
  9125  0032C0  C0D2  F0DE         	movff	___ftdiv@f1+2,___ftdiv@sign
  9126                           
  9127                           ; BSR set to: 0
  9128  0032C4  0100               	movlb	0	; () banked
  9129  0032C6  51D5               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9130  0032C8  0100               	movlb	0	; () banked
  9131  0032CA  1BDE               	xorwf	___ftdiv@sign& (0+255),f,b
  9132                           
  9133                           ; BSR set to: 0
  9134  0032CC  0E80               	movlw	128
  9135  0032CE  0100               	movlb	0	; () banked
  9136  0032D0  17DE               	andwf	___ftdiv@sign& (0+255),f,b
  9137                           
  9138                           ; BSR set to: 0
  9139  0032D2  0100               	movlb	0	; () banked
  9140  0032D4  8FD1               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9141                           
  9142                           ; BSR set to: 0
  9143  0032D6  0EFF               	movlw	255
  9144  0032D8  0100               	movlb	0	; () banked
  9145  0032DA  17D0               	andwf	___ftdiv@f1& (0+255),f,b
  9146  0032DC  0EFF               	movlw	255
  9147  0032DE  0100               	movlb	0	; () banked
  9148  0032E0  17D1               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9149  0032E2  0E00               	movlw	0
  9150  0032E4  0100               	movlb	0	; () banked
  9151  0032E6  17D2               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9152                           
  9153                           ; BSR set to: 0
  9154  0032E8  0100               	movlb	0	; () banked
  9155  0032EA  8FD4               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9156                           
  9157                           ; BSR set to: 0
  9158  0032EC  0EFF               	movlw	255
  9159  0032EE  0100               	movlb	0	; () banked
  9160  0032F0  17D3               	andwf	___ftdiv@f2& (0+255),f,b
  9161  0032F2  0EFF               	movlw	255
  9162  0032F4  0100               	movlb	0	; () banked
  9163  0032F6  17D4               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9164  0032F8  0E00               	movlw	0
  9165  0032FA  0100               	movlb	0	; () banked
  9166  0032FC  17D5               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9167                           
  9168                           ; BSR set to: 0
  9169  0032FE  0E18               	movlw	24
  9170  003300  0100               	movlb	0	; () banked
  9171  003302  6FD9               	movwf	___ftdiv@cntr& (0+255),b
  9172  003304                     l2987:
  9173                           
  9174                           ; BSR set to: 0
  9175  003304  0100               	movlb	0	; () banked
  9176  003306  90D8               	bcf	status,0,c
  9177  003308  0100               	movlb	0	; () banked
  9178  00330A  37DA               	rlcf	___ftdiv@f3& (0+255),f,b
  9179  00330C  0100               	movlb	0	; () banked
  9180  00330E  37DB               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9181  003310  0100               	movlb	0	; () banked
  9182  003312  37DC               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9183                           
  9184                           ; BSR set to: 0
  9185  003314  0100               	movlb	0	; () banked
  9186  003316  51D3               	movf	___ftdiv@f2& (0+255),w,b
  9187  003318  0100               	movlb	0	; () banked
  9188  00331A  5DD0               	subwf	___ftdiv@f1& (0+255),w,b
  9189  00331C  0100               	movlb	0	; () banked
  9190  00331E  51D4               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9191  003320  0100               	movlb	0	; () banked
  9192  003322  59D1               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9193  003324  0100               	movlb	0	; () banked
  9194  003326  51D5               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9195  003328  0100               	movlb	0	; () banked
  9196  00332A  59D2               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9197  00332C  A0D8               	btfss	status,0,c
  9198  00332E  D00E               	goto	l770
  9199                           
  9200                           ; BSR set to: 0
  9201  003330  0100               	movlb	0	; () banked
  9202  003332  51D3               	movf	___ftdiv@f2& (0+255),w,b
  9203  003334  0100               	movlb	0	; () banked
  9204  003336  5FD0               	subwf	___ftdiv@f1& (0+255),f,b
  9205  003338  0100               	movlb	0	; () banked
  9206  00333A  51D4               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9207  00333C  0100               	movlb	0	; () banked
  9208  00333E  5BD1               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9209  003340  0100               	movlb	0	; () banked
  9210  003342  51D5               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9211  003344  0100               	movlb	0	; () banked
  9212  003346  5BD2               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9213                           
  9214                           ; BSR set to: 0
  9215  003348  0100               	movlb	0	; () banked
  9216  00334A  81DA               	bsf	___ftdiv@f3& (0+255),0,b
  9217  00334C                     l770:
  9218                           
  9219                           ; BSR set to: 0
  9220  00334C  0100               	movlb	0	; () banked
  9221  00334E  90D8               	bcf	status,0,c
  9222  003350  0100               	movlb	0	; () banked
  9223  003352  37D0               	rlcf	___ftdiv@f1& (0+255),f,b
  9224  003354  0100               	movlb	0	; () banked
  9225  003356  37D1               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9226  003358  0100               	movlb	0	; () banked
  9227  00335A  37D2               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9228                           
  9229                           ; BSR set to: 0
  9230  00335C  0100               	movlb	0	; () banked
  9231  00335E  2FD9               	decfsz	___ftdiv@cntr& (0+255),f,b
  9232  003360  D7D1               	goto	l2987
  9233                           
  9234                           ; BSR set to: 0
  9235                           
  9236                           ; BSR set to: 0
  9237  003362  C0DA  F09F         	movff	___ftdiv@f3,___ftpack@arg
  9238  003366  C0DB  F0A0         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9239  00336A  C0DC  F0A1         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9240  00336E  C0DD  F0A2         	movff	___ftdiv@exp,___ftpack@exp
  9241  003372  C0DE  F0A3         	movff	___ftdiv@sign,___ftpack@sign
  9242  003376  EC4D  F01A         	call	___ftpack	;wreg free
  9243  00337A  C09F  F0D0         	movff	?___ftpack,?___ftdiv
  9244  00337E  C0A0  F0D1         	movff	?___ftpack+1,?___ftdiv+1
  9245  003382  C0A1  F0D2         	movff	?___ftpack+2,?___ftdiv+2
  9246  003386                     l767:
  9247  003386  0012               	return	
  9248  003388  FFFF               	dw	65535	; errata NOP
  9249  00338A                     __end_of___ftdiv:
  9250                           	opt stack 0
  9251                           tblptru	equ	0xFF8
  9252                           tblptrh	equ	0xFF7
  9253                           tblptrl	equ	0xFF6
  9254                           tablat	equ	0xFF5
  9255                           prodh	equ	0xFF4
  9256                           prodl	equ	0xFF3
  9257                           postinc0	equ	0xFEE
  9258                           wreg	equ	0xFE8
  9259                           postinc1	equ	0xFE6
  9260                           postdec1	equ	0xFE5
  9261                           fsr1l	equ	0xFE1
  9262                           indf2	equ	0xFDF
  9263                           postinc2	equ	0xFDE
  9264                           postdec2	equ	0xFDD
  9265                           fsr2h	equ	0xFDA
  9266                           fsr2l	equ	0xFD9
  9267                           status	equ	0xFD8
  9268                           
  9269 ;; *************** function ___ftpack *****************
  9270 ;; Defined at:
  9271 ;;		line 62 in file "/Applications/microchip/xc8/v1.33/sources/common/float.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  arg             3   31[BANK0 ] unsigned um
  9274 ;;  exp             1   34[BANK0 ] unsigned char 
  9275 ;;  sign            1   35[BANK0 ] unsigned char 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;		None
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  3   31[BANK0 ] float 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2, status,0
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9287 ;;      Params:         0       5       0       0       0       0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0
  9289 ;;      Temps:          0       3       0       0       0       0       0
  9290 ;;      Totals:         0       8       0       0       0       0       0
  9291 ;;Total ram usage:        8 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    6
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		___ftadd
  9298 ;;		___ftdiv
  9299 ;;		___ftmul
  9300 ;;		___lltoft
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text22
  9305  00349A                     __ptext22:
  9306                           	opt stack 0
  9307  00349A                     ___ftpack:
  9308                           	opt stack 19
  9309                           
  9310                           ;incstack = 0
  9311  00349A  FFFF               	dw	65535
  9312  00349C  0100               	movlb	0	; () banked
  9313  00349E  51A2               	movf	___ftpack@exp& (0+255),w,b
  9314  0034A0  B4D8               	btfsc	status,2,c
  9315  0034A2  D008               	goto	l2491
  9316                           
  9317                           ; BSR set to: 0
  9318  0034A4  0100               	movlb	0	; () banked
  9319  0034A6  519F               	movf	___ftpack@arg& (0+255),w,b
  9320  0034A8  0100               	movlb	0	; () banked
  9321  0034AA  11A0               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9322  0034AC  0100               	movlb	0	; () banked
  9323  0034AE  11A1               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9324  0034B0  A4D8               	btfss	status,2,c
  9325  0034B2  D014               	goto	l2497
  9326  0034B4                     l2491:
  9327                           
  9328                           ; BSR set to: 0
  9329  0034B4  0E00               	movlw	0
  9330  0034B6  0100               	movlb	0	; () banked
  9331  0034B8  6F9F               	movwf	?___ftpack& (0+255),b
  9332  0034BA  0E00               	movlw	0
  9333  0034BC  0100               	movlb	0	; () banked
  9334  0034BE  6FA0               	movwf	(?___ftpack+1)& (0+255),b
  9335  0034C0  0E00               	movlw	0
  9336  0034C2  0100               	movlb	0	; () banked
  9337  0034C4  6FA1               	movwf	(?___ftpack+2)& (0+255),b
  9338  0034C6  D06E               	goto	l698
  9339  0034C8                     l2495:
  9340                           
  9341                           ; BSR set to: 0
  9342  0034C8  0100               	movlb	0	; () banked
  9343  0034CA  2BA2               	incf	___ftpack@exp& (0+255),f,b
  9344  0034CC  0100               	movlb	0	; () banked
  9345  0034CE  90D8               	bcf	status,0,c
  9346  0034D0  0100               	movlb	0	; () banked
  9347  0034D2  33A1               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9348  0034D4  0100               	movlb	0	; () banked
  9349  0034D6  33A0               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9350  0034D8  0100               	movlb	0	; () banked
  9351  0034DA  339F               	rrcf	___ftpack@arg& (0+255),f,b
  9352  0034DC                     l2497:
  9353                           
  9354                           ; BSR set to: 0
  9355  0034DC  0E00               	movlw	0
  9356  0034DE  0100               	movlb	0	; () banked
  9357  0034E0  159F               	andwf	___ftpack@arg& (0+255),w,b
  9358  0034E2  0100               	movlb	0	; () banked
  9359  0034E4  6FA4               	movwf	??___ftpack& (0+255),b
  9360  0034E6  0E00               	movlw	0
  9361  0034E8  0100               	movlb	0	; () banked
  9362  0034EA  15A0               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9363  0034EC  0100               	movlb	0	; () banked
  9364  0034EE  6FA5               	movwf	(??___ftpack+1)& (0+255),b
  9365  0034F0  0EFE               	movlw	254
  9366  0034F2  0100               	movlb	0	; () banked
  9367  0034F4  15A1               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9368  0034F6  0100               	movlb	0	; () banked
  9369  0034F8  6FA6               	movwf	(??___ftpack+2)& (0+255),b
  9370  0034FA  0100               	movlb	0	; () banked
  9371  0034FC  51A4               	movf	??___ftpack& (0+255),w,b
  9372  0034FE  11A5               	iorwf	(??___ftpack+1)& (0+255),w,b
  9373  003500  11A6               	iorwf	(??___ftpack+2)& (0+255),w,b
  9374  003502  B4D8               	btfsc	status,2,c
  9375  003504  D014               	goto	l2503
  9376  003506  D7E0               	goto	l2495
  9377  003508                     l2499:
  9378                           
  9379                           ; BSR set to: 0
  9380  003508  0100               	movlb	0	; () banked
  9381  00350A  2BA2               	incf	___ftpack@exp& (0+255),f,b
  9382                           
  9383                           ; BSR set to: 0
  9384  00350C  0E01               	movlw	1
  9385  00350E  0100               	movlb	0	; () banked
  9386  003510  279F               	addwf	___ftpack@arg& (0+255),f,b
  9387  003512  0E00               	movlw	0
  9388  003514  0100               	movlb	0	; () banked
  9389  003516  23A0               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9390  003518  0E00               	movlw	0
  9391  00351A  0100               	movlb	0	; () banked
  9392  00351C  23A1               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9393  00351E  0100               	movlb	0	; () banked
  9394  003520  90D8               	bcf	status,0,c
  9395  003522  0100               	movlb	0	; () banked
  9396  003524  33A1               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9397  003526  0100               	movlb	0	; () banked
  9398  003528  33A0               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9399  00352A  0100               	movlb	0	; () banked
  9400  00352C  339F               	rrcf	___ftpack@arg& (0+255),f,b
  9401  00352E                     l2503:
  9402                           
  9403                           ; BSR set to: 0
  9404  00352E  0E00               	movlw	0
  9405  003530  0100               	movlb	0	; () banked
  9406  003532  159F               	andwf	___ftpack@arg& (0+255),w,b
  9407  003534  0100               	movlb	0	; () banked
  9408  003536  6FA4               	movwf	??___ftpack& (0+255),b
  9409  003538  0E00               	movlw	0
  9410  00353A  0100               	movlb	0	; () banked
  9411  00353C  15A0               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9412  00353E  0100               	movlb	0	; () banked
  9413  003540  6FA5               	movwf	(??___ftpack+1)& (0+255),b
  9414  003542  0EFF               	movlw	255
  9415  003544  0100               	movlb	0	; () banked
  9416  003546  15A1               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9417  003548  0100               	movlb	0	; () banked
  9418  00354A  6FA6               	movwf	(??___ftpack+2)& (0+255),b
  9419  00354C  0100               	movlb	0	; () banked
  9420  00354E  51A4               	movf	??___ftpack& (0+255),w,b
  9421  003550  11A5               	iorwf	(??___ftpack+1)& (0+255),w,b
  9422  003552  11A6               	iorwf	(??___ftpack+2)& (0+255),w,b
  9423  003554  B4D8               	btfsc	status,2,c
  9424  003556  D00B               	goto	l2507
  9425  003558  D7D7               	goto	l2499
  9426  00355A                     l2505:
  9427                           
  9428                           ; BSR set to: 0
  9429  00355A  0100               	movlb	0	; () banked
  9430  00355C  07A2               	decf	___ftpack@exp& (0+255),f,b
  9431  00355E  0100               	movlb	0	; () banked
  9432  003560  90D8               	bcf	status,0,c
  9433  003562  0100               	movlb	0	; () banked
  9434  003564  379F               	rlcf	___ftpack@arg& (0+255),f,b
  9435  003566  0100               	movlb	0	; () banked
  9436  003568  37A0               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9437  00356A  0100               	movlb	0	; () banked
  9438  00356C  37A1               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9439  00356E                     l2507:
  9440                           
  9441                           ; BSR set to: 0
  9442  00356E  0100               	movlb	0	; () banked
  9443  003570  AFA0               	btfss	(___ftpack@arg+1)& (0+255),7,b
  9444  003572  D7F3               	goto	l2505
  9445                           
  9446                           ; BSR set to: 0
  9447  003574  0100               	movlb	0	; () banked
  9448  003576  B1A2               	btfsc	___ftpack@exp& (0+255),0,b
  9449  003578  D002               	goto	l2511
  9450                           
  9451                           ; BSR set to: 0
  9452  00357A  0100               	movlb	0	; () banked
  9453  00357C  9FA0               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9454  00357E                     l2511:
  9455                           
  9456                           ; BSR set to: 0
  9457  00357E  0100               	movlb	0	; () banked
  9458  003580  90D8               	bcf	status,0,c
  9459  003582  33A2               	rrcf	___ftpack@exp& (0+255),f,b
  9460  003584  0100               	movlb	0	; () banked
  9461  003586  51A2               	movf	___ftpack@exp& (0+255),w,b
  9462  003588  0100               	movlb	0	; () banked
  9463  00358A  13A1               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9464                           
  9465                           ; BSR set to: 0
  9466  00358C  0100               	movlb	0	; () banked
  9467  00358E  51A3               	movf	___ftpack@sign& (0+255),w,b
  9468  003590  B4D8               	btfsc	status,2,c
  9469  003592  D002               	goto	l2517
  9470                           
  9471                           ; BSR set to: 0
  9472  003594  0100               	movlb	0	; () banked
  9473  003596  8FA1               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9474  003598                     l2517:
  9475                           
  9476                           ; BSR set to: 0
  9477  003598  C09F  F09F         	movff	___ftpack@arg,?___ftpack
  9478  00359C  C0A0  F0A0         	movff	___ftpack@arg+1,?___ftpack+1
  9479  0035A0  C0A1  F0A1         	movff	___ftpack@arg+2,?___ftpack+2
  9480  0035A4                     l698:
  9481                           
  9482                           ; BSR set to: 0
  9483  0035A4  0012               	return	
  9484  0035A6  FFFF               	dw	65535	; errata NOP
  9485  0035A8                     __end_of___ftpack:
  9486                           	opt stack 0
  9487                           tblptru	equ	0xFF8
  9488                           tblptrh	equ	0xFF7
  9489                           tblptrl	equ	0xFF6
  9490                           tablat	equ	0xFF5
  9491                           prodh	equ	0xFF4
  9492                           prodl	equ	0xFF3
  9493                           postinc0	equ	0xFEE
  9494                           wreg	equ	0xFE8
  9495                           postinc1	equ	0xFE6
  9496                           postdec1	equ	0xFE5
  9497                           fsr1l	equ	0xFE1
  9498                           indf2	equ	0xFDF
  9499                           postinc2	equ	0xFDE
  9500                           postdec2	equ	0xFDD
  9501                           fsr2h	equ	0xFDA
  9502                           fsr2l	equ	0xFD9
  9503                           status	equ	0xFD8
  9504                           
  9505 ;; *************** function _DisplayLCD *****************
  9506 ;; Defined at:
  9507 ;;		line 75 in file "user.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  tempPtr         2   32[BANK0 ] PTR unsigned char 
  9510 ;;		 -> main@Msg3(10), main@Msg2(5), main@Msg1(6), main@LCDinit(7), 
  9511 ;;  init            2   34[BANK0 ] int 
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;  currentChar     1   36[BANK0 ] unsigned char 
  9514 ;; Return value:  Size  Location     Type
  9515 ;;		None               void
  9516 ;; Registers used:
  9517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9523 ;;      Params:         0       4       0       0       0       0       0
  9524 ;;      Locals:         0       1       0       0       0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0
  9526 ;;      Totals:         0       5       0       0       0       0       0
  9527 ;;Total ram usage:        5 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    7
  9530 ;; This function calls:
  9531 ;;		_Delay100TCYx
  9532 ;;		_Delay10TCYx
  9533 ;;		_Delay1KTCYx
  9534 ;; This function is called by:
  9535 ;;		_main
  9536 ;;		_WriteLCD
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540                           	psect	text23
  9541  003B34                     __ptext23:
  9542                           	opt stack 0
  9543  003B34                     _DisplayLCD:
  9544                           	opt stack 21
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;incstack = 0
  9548  003B34  FFFF               	dw	65535
  9549                           
  9550                           ;user.c: 77: char currentChar;
  9551                           ;user.c: 81: if (init == 1)
  9552  003B36  0100               	movlb	0	; () banked
  9553  003B38  05A2               	decf	DisplayLCD@init& (0+255),w,b
  9554  003B3A  11A3               	iorwf	(DisplayLCD@init+1)& (0+255),w,b
  9555  003B3C  A4D8               	btfss	status,2,c
  9556  003B3E  D029               	goto	l143
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;user.c: 82: {
  9560                           ;user.c: 83: Delay1KTCYx(250);
  9561  003B40  0EFA               	movlw	250
  9562  003B42  ECE5  F01F         	call	_Delay1KTCYx
  9563                           
  9564                           ;user.c: 84: PORTEbits.RE0 = 0;
  9565  003B46  9084               	bcf	3972,0,c	;volatile
  9566                           
  9567                           ;user.c: 85: while (*tempPtr != 0)
  9568  003B48  D01C               	goto	l3221
  9569  003B4A                     l3199:
  9570                           
  9571                           ;user.c: 86: {
  9572                           ;user.c: 87: currentChar = *tempPtr;
  9573  003B4A  C0A0  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
  9574  003B4E  C0A1  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
  9575  003B52  50DF               	movf	indf2,w,c
  9576  003B54  0100               	movlb	0	; () banked
  9577  003B56  6FA4               	movwf	DisplayLCD@currentChar& (0+255),b
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;user.c: 88: PORTEbits.RE1 = 1;
  9581  003B58  8284               	bsf	3972,1,c	;volatile
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;user.c: 89: PORTD = currentChar;
  9585  003B5A  C0A4  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;user.c: 90: PORTEbits.RE1 = 0;
  9589  003B5E  9284               	bcf	3972,1,c	;volatile
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;user.c: 91: Delay100TCYx(250);
  9593  003B60  0EFA               	movlw	250
  9594  003B62  ECDA  F01F         	call	_Delay100TCYx
  9595                           
  9596                           ;user.c: 92: currentChar <<= 4;
  9597  003B66  0100               	movlb	0	; () banked
  9598  003B68  3BA4               	swapf	DisplayLCD@currentChar& (0+255),f,b
  9599  003B6A  0EF0               	movlw	240
  9600  003B6C  17A4               	andwf	DisplayLCD@currentChar& (0+255),f,b
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;user.c: 93: PORTEbits.RE1 = 1;
  9604  003B6E  8284               	bsf	3972,1,c	;volatile
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;user.c: 94: PORTD = currentChar;
  9608  003B70  C0A4  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;user.c: 95: PORTEbits.RE1 = 0;
  9612  003B74  9284               	bcf	3972,1,c	;volatile
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;user.c: 96: Delay100TCYx(250);
  9616  003B76  0EFA               	movlw	250
  9617  003B78  ECDA  F01F         	call	_Delay100TCYx
  9618                           
  9619                           ;user.c: 97: tempPtr++;
  9620  003B7C  0100               	movlb	0	; () banked
  9621  003B7E  4BA0               	infsnz	DisplayLCD@tempPtr& (0+255),f,b
  9622  003B80  2BA1               	incf	(DisplayLCD@tempPtr+1)& (0+255),f,b
  9623  003B82                     l3221:
  9624  003B82  C0A0  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
  9625  003B86  C0A1  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
  9626  003B8A  50DF               	movf	indf2,w,c
  9627  003B8C  B4D8               	btfsc	status,2,c
  9628  003B8E  D024               	goto	l151
  9629  003B90  D7DC               	goto	l3199
  9630  003B92                     l143:
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;user.c: 100: else
  9634                           ;user.c: 101: {
  9635                           ;user.c: 102: PORTEbits.RE0 = 0;
  9636  003B92  9084               	bcf	3972,0,c	;volatile
  9637                           
  9638                           ;user.c: 103: while (*tempPtr)
  9639  003B94  D01A               	goto	l3245
  9640  003B96                     l3223:
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;user.c: 104: {
  9644                           ;user.c: 105: currentChar = *tempPtr;
  9645  003B96  C0A0  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
  9646  003B9A  C0A1  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
  9647  003B9E  50DF               	movf	indf2,w,c
  9648  003BA0  0100               	movlb	0	; () banked
  9649  003BA2  6FA4               	movwf	DisplayLCD@currentChar& (0+255),b
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;user.c: 106: PORTEbits.RE1 = 1;
  9653  003BA4  8284               	bsf	3972,1,c	;volatile
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;user.c: 107: PORTD = currentChar;
  9657  003BA6  C0A4  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;user.c: 108: PORTEbits.RE1 = 0;
  9661  003BAA  9284               	bcf	3972,1,c	;volatile
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;user.c: 109: currentChar <<= 4;
  9665  003BAC  0100               	movlb	0	; () banked
  9666  003BAE  3BA4               	swapf	DisplayLCD@currentChar& (0+255),f,b
  9667  003BB0  0EF0               	movlw	240
  9668  003BB2  17A4               	andwf	DisplayLCD@currentChar& (0+255),f,b
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;user.c: 110: PORTEbits.RE1 = 1;
  9672  003BB4  8284               	bsf	3972,1,c	;volatile
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;user.c: 111: PORTD = currentChar;
  9676  003BB6  C0A4  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;user.c: 112: PORTEbits.RE1 = 0;
  9680  003BBA  9284               	bcf	3972,1,c	;volatile
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;user.c: 113: Delay10TCYx(10);
  9684  003BBC  0E0A               	movlw	10
  9685  003BBE  ECC3  F01F         	call	_Delay10TCYx
  9686                           
  9687                           ;user.c: 114: PORTEbits.RE0 = 1;
  9688  003BC2  8084               	bsf	3972,0,c	;volatile
  9689                           
  9690                           ;user.c: 115: tempPtr++;
  9691  003BC4  0100               	movlb	0	; () banked
  9692  003BC6  4BA0               	infsnz	DisplayLCD@tempPtr& (0+255),f,b
  9693  003BC8  2BA1               	incf	(DisplayLCD@tempPtr+1)& (0+255),f,b
  9694  003BCA                     l3245:
  9695                           
  9696                           ; BSR set to: 0
  9697  003BCA  C0A0  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
  9698  003BCE  C0A1  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
  9699  003BD2  50DF               	movf	indf2,w,c
  9700  003BD4  A4D8               	btfss	status,2,c
  9701  003BD6  D7DF               	goto	l3223
  9702  003BD8                     l151:
  9703  003BD8  0012               	return	
  9704  003BDA  FFFF               	dw	65535	; errata NOP
  9705  003BDC                     __end_of_DisplayLCD:
  9706                           	opt stack 0
  9707                           tblptru	equ	0xFF8
  9708                           tblptrh	equ	0xFF7
  9709                           tblptrl	equ	0xFF6
  9710                           tablat	equ	0xFF5
  9711                           prodh	equ	0xFF4
  9712                           prodl	equ	0xFF3
  9713                           postinc0	equ	0xFEE
  9714                           wreg	equ	0xFE8
  9715                           postinc1	equ	0xFE6
  9716                           postdec1	equ	0xFE5
  9717                           fsr1l	equ	0xFE1
  9718                           indf2	equ	0xFDF
  9719                           postinc2	equ	0xFDE
  9720                           postdec2	equ	0xFDD
  9721                           fsr2h	equ	0xFDA
  9722                           fsr2l	equ	0xFD9
  9723                           status	equ	0xFD8
  9724                           
  9725 ;; *************** function _Delay10TCYx *****************
  9726 ;; Defined at:
  9727 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d10tcyx.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;  unit            1    wreg     unsigned char 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;  unit            1   31[BANK0 ] unsigned char 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;		None               void
  9734 ;; Registers used:
  9735 ;;		wreg
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9741 ;;      Params:         0       0       0       0       0       0       0
  9742 ;;      Locals:         0       1       0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0
  9744 ;;      Totals:         0       1       0       0       0       0       0
  9745 ;;Total ram usage:        1 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    6
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_DisplayLCD
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text24
  9756  003F86                     __ptext24:
  9757                           	opt stack 0
  9758  003F86                     _Delay10TCYx:
  9759                           	opt stack 21
  9760                           
  9761                           ;incstack = 0
  9762  003F86  FFFF               	dw	65535
  9763                           
  9764                           ;Delay10TCYx@unit stored from wreg
  9765  003F88  0100               	movlb	0	; () banked
  9766  003F8A  6F9F               	movwf	Delay10TCYx@unit& (0+255),b
  9767  003F8C                     l580:
  9768                           
  9769                           ; BSR set to: 0
  9770                           
  9771                           ; BSR set to: 0
  9772  003F8C  0E02               	movlw	2
  9773  003F8E                     u4597:
  9774  003F8E  F000               	nop	
  9775  003F90  2EE8               	decfsz	wreg,f,c
  9776  003F92  D7FD               	goto	u4597
  9777  003F94  0100               	movlb	0	; () banked
  9778  003F96  2F9F               	decfsz	Delay10TCYx@unit& (0+255),f,b
  9779  003F98  D7F9               	goto	l580
  9780                           
  9781                           ; BSR set to: 0
  9782                           
  9783                           ; BSR set to: 0
  9784  003F9A  0012               	return	
  9785  003F9C  FFFF               	dw	65535	; errata NOP
  9786  003F9E                     __end_of_Delay10TCYx:
  9787                           	opt stack 0
  9788                           tblptru	equ	0xFF8
  9789                           tblptrh	equ	0xFF7
  9790                           tblptrl	equ	0xFF6
  9791                           tablat	equ	0xFF5
  9792                           prodh	equ	0xFF4
  9793                           prodl	equ	0xFF3
  9794                           postinc0	equ	0xFEE
  9795                           wreg	equ	0xFE8
  9796                           postinc1	equ	0xFE6
  9797                           postdec1	equ	0xFE5
  9798                           fsr1l	equ	0xFE1
  9799                           indf2	equ	0xFDF
  9800                           postinc2	equ	0xFDE
  9801                           postdec2	equ	0xFDD
  9802                           fsr2h	equ	0xFDA
  9803                           fsr2l	equ	0xFD9
  9804                           status	equ	0xFD8
  9805                           
  9806 ;; *************** function _Delay100TCYx *****************
  9807 ;; Defined at:
  9808 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d100tcyx.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;  unit            1    wreg     unsigned char 
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;  unit            1   31[BANK0 ] unsigned char 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;		None               void
  9815 ;; Registers used:
  9816 ;;		wreg
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9822 ;;      Params:         0       0       0       0       0       0       0
  9823 ;;      Locals:         0       1       0       0       0       0       0
  9824 ;;      Temps:          0       0       0       0       0       0       0
  9825 ;;      Totals:         0       1       0       0       0       0       0
  9826 ;;Total ram usage:        1 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    6
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_DisplayLCD
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text25
  9837  003FB4                     __ptext25:
  9838                           	opt stack 0
  9839  003FB4                     _Delay100TCYx:
  9840                           	opt stack 21
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;incstack = 0
  9844  003FB4  FFFF               	dw	65535
  9845                           
  9846                           ;Delay100TCYx@unit stored from wreg
  9847  003FB6  0100               	movlb	0	; () banked
  9848  003FB8  6F9F               	movwf	Delay100TCYx@unit& (0+255),b
  9849  003FBA                     l573:
  9850                           
  9851                           ; BSR set to: 0
  9852                           
  9853                           ; BSR set to: 0
  9854  003FBA  0E19               	movlw	25
  9855  003FBC                     u4607:
  9856  003FBC  2EE8               	decfsz	wreg,f,c
  9857  003FBE  D7FE               	goto	u4607
  9858  003FC0  0100               	movlb	0	; () banked
  9859  003FC2  2F9F               	decfsz	Delay100TCYx@unit& (0+255),f,b
  9860  003FC4  D7FA               	goto	l573
  9861                           
  9862                           ; BSR set to: 0
  9863                           
  9864                           ; BSR set to: 0
  9865  003FC6  0012               	return	
  9866  003FC8  FFFF               	dw	65535	; errata NOP
  9867  003FCA                     __end_of_Delay100TCYx:
  9868                           	opt stack 0
  9869                           tblptru	equ	0xFF8
  9870                           tblptrh	equ	0xFF7
  9871                           tblptrl	equ	0xFF6
  9872                           tablat	equ	0xFF5
  9873                           prodh	equ	0xFF4
  9874                           prodl	equ	0xFF3
  9875                           postinc0	equ	0xFEE
  9876                           wreg	equ	0xFE8
  9877                           postinc1	equ	0xFE6
  9878                           postdec1	equ	0xFE5
  9879                           fsr1l	equ	0xFE1
  9880                           indf2	equ	0xFDF
  9881                           postinc2	equ	0xFDE
  9882                           postdec2	equ	0xFDD
  9883                           fsr2h	equ	0xFDA
  9884                           fsr2l	equ	0xFD9
  9885                           status	equ	0xFD8
  9886                           
  9887 ;; *************** function _InitInterrupts *****************
  9888 ;; Defined at:
  9889 ;;		line 129 in file "user.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;		None
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;		None
  9894 ;; Return value:  Size  Location     Type
  9895 ;;		None               void
  9896 ;; Registers used:
  9897 ;;		None
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9903 ;;      Params:         0       0       0       0       0       0       0
  9904 ;;      Locals:         0       0       0       0       0       0       0
  9905 ;;      Temps:          0       0       0       0       0       0       0
  9906 ;;      Totals:         0       0       0       0       0       0       0
  9907 ;;Total ram usage:        0 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; Hardware stack levels required when called:    6
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_main
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text26
  9918  003F2C                     __ptext26:
  9919                           	opt stack 0
  9920  003F2C                     _InitInterrupts:
  9921                           	opt stack 23
  9922                           
  9923                           ; BSR set to: 0
  9924                           ;incstack = 0
  9925  003F2C  FFFF               	dw	65535
  9926                           
  9927                           ;user.c: 133: RCONbits.IPEN = 1;
  9928  003F2E  8ED0               	bsf	4048,7,c	;volatile
  9929                           
  9930                           ;user.c: 134: INTCONbits.GIEH = 1;
  9931  003F30  8EF2               	bsf	intcon,7,c	;volatile
  9932                           
  9933                           ;user.c: 135: INTCONbits.GIEL = 1;
  9934  003F32  8CF2               	bsf	intcon,6,c	;volatile
  9935                           
  9936                           ;user.c: 139: INTCON2bits.NOT_RBPU = 0;
  9937  003F34  9EF1               	bcf	intcon2,7,c	;volatile
  9938                           
  9939                           ;user.c: 140: INTCON2bits.RBIP = 0;
  9940  003F36  90F1               	bcf	intcon2,0,c	;volatile
  9941                           
  9942                           ;user.c: 141: INTCONbits.RBIF = 0;
  9943  003F38  90F2               	bcf	intcon,0,c	;volatile
  9944                           
  9945                           ;user.c: 142: INTCONbits.RBIE = 1;
  9946  003F3A  86F2               	bsf	intcon,3,c	;volatile
  9947                           
  9948                           ;user.c: 146: CCP1CONbits.CCP1M3 = 1;
  9949  003F3C  86BD               	bsf	4029,3,c	;volatile
  9950                           
  9951                           ;user.c: 147: CCP1CONbits.CCP1M2 = 1;
  9952  003F3E  84BD               	bsf	4029,2,c	;volatile
  9953                           
  9954                           ;user.c: 148: CCP1CONbits.CCP1M1 = 0;
  9955  003F40  92BD               	bcf	4029,1,c	;volatile
  9956                           
  9957                           ;user.c: 149: CCP1CONbits.CCP1M0 = 0;
  9958  003F42  90BD               	bcf	4029,0,c	;volatile
  9959                           
  9960                           ;user.c: 153: INTCONbits.TMR0IF = 0;
  9961  003F44  94F2               	bcf	intcon,2,c	;volatile
  9962                           
  9963                           ;user.c: 154: INTCON2bits.TMR0IP = 0;
  9964  003F46  94F1               	bcf	intcon2,2,c	;volatile
  9965                           
  9966                           ;user.c: 155: INTCONbits.TMR0IE = 1;
  9967  003F48  8AF2               	bsf	intcon,5,c	;volatile
  9968                           
  9969                           ;user.c: 159: T0CONbits.T08BIT = 0;
  9970  003F4A  9CD5               	bcf	4053,6,c	;volatile
  9971                           
  9972                           ;user.c: 160: T0CONbits.T0CS = 0;
  9973  003F4C  9AD5               	bcf	4053,5,c	;volatile
  9974                           
  9975                           ;user.c: 161: T0CONbits.PSA = 1;
  9976  003F4E  86D5               	bsf	4053,3,c	;volatile
  9977                           
  9978                           ;user.c: 162: T0CONbits.TMR0ON = 1;
  9979  003F50  8ED5               	bsf	4053,7,c	;volatile
  9980                           
  9981                           ;user.c: 166: T2CONbits.T2CKPS1 = 1;
  9982  003F52  82CA               	bsf	4042,1,c	;volatile
  9983                           
  9984                           ;user.c: 167: T2CONbits.T2CKPS0 = 1;
  9985  003F54  80CA               	bsf	4042,0,c	;volatile
  9986                           
  9987                           ;user.c: 168: T2CONbits.TMR2ON = 1;
  9988  003F56  84CA               	bsf	4042,2,c	;volatile
  9989  003F58  0012               	return	
  9990  003F5A  FFFF               	dw	65535	; errata NOP
  9991  003F5C                     __end_of_InitInterrupts:
  9992                           	opt stack 0
  9993                           tblptru	equ	0xFF8
  9994                           tblptrh	equ	0xFF7
  9995                           tblptrl	equ	0xFF6
  9996                           tablat	equ	0xFF5
  9997                           prodh	equ	0xFF4
  9998                           prodl	equ	0xFF3
  9999                           intcon	equ	0xFF2
 10000                           intcon2	equ	0xFF1
 10001                           postinc0	equ	0xFEE
 10002                           wreg	equ	0xFE8
 10003                           postinc1	equ	0xFE6
 10004                           postdec1	equ	0xFE5
 10005                           fsr1l	equ	0xFE1
 10006                           indf2	equ	0xFDF
 10007                           postinc2	equ	0xFDE
 10008                           postdec2	equ	0xFDD
 10009                           fsr2h	equ	0xFDA
 10010                           fsr2l	equ	0xFD9
 10011                           status	equ	0xFD8
 10012                           
 10013 ;; *************** function _InitApp *****************
 10014 ;; Defined at:
 10015 ;;		line 22 in file "user.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;		None
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;		None               void
 10022 ;; Registers used:
 10023 ;;		wreg, status,2, status,0, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10029 ;;      Params:         0       0       0       0       0       0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0
 10032 ;;      Totals:         0       0       0       0       0       0       0
 10033 ;;Total ram usage:        0 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:    8
 10036 ;; This function calls:
 10037 ;;		_WaitHalfSec
 10038 ;; This function is called by:
 10039 ;;		_main
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           	psect	text27
 10044  003DDC                     __ptext27:
 10045                           	opt stack 0
 10046  003DDC                     _InitApp:
 10047                           	opt stack 21
 10048                           
 10049                           ;incstack = 0
 10050  003DDC  FFFF               	dw	65535
 10051                           
 10052                           ;user.c: 26: TRISA = 0b11100001;
 10053  003DDE  0EE1               	movlw	225
 10054  003DE0  6E92               	movwf	3986,c	;volatile
 10055                           
 10056                           ;user.c: 27: TRISBbits.RB4 = 1;
 10057  003DE2  8893               	bsf	3987,4,c	;volatile
 10058                           
 10059                           ;user.c: 28: TRISBbits.RB5 = 1;
 10060  003DE4  8A93               	bsf	3987,5,c	;volatile
 10061                           
 10062                           ;user.c: 29: TRISBbits.RB1 = 0;
 10063  003DE6  9293               	bcf	3987,1,c	;volatile
 10064                           
 10065                           ;user.c: 30: PORTBbits.RB1 = 1;
 10066  003DE8  8281               	bsf	3969,1,c	;volatile
 10067                           
 10068                           ;user.c: 31: TRISCbits.RC2 = 0;
 10069  003DEA  9494               	bcf	3988,2,c	;volatile
 10070                           
 10071                           ;user.c: 32: TRISD = 0b00001111;
 10072  003DEC  0E0F               	movlw	15
 10073  003DEE  6E95               	movwf	3989,c	;volatile
 10074                           
 10075                           ;user.c: 33: TRISE = 0b00000100;
 10076  003DF0  0E04               	movlw	4
 10077  003DF2  6E96               	movwf	3990,c	;volatile
 10078                           
 10079                           ;user.c: 34: ADCON1 = 0b10000111;
 10080  003DF4  0E87               	movlw	135
 10081  003DF6  6EC1               	movwf	4033,c	;volatile
 10082                           
 10083                           ;user.c: 38: PORTA = 0b00010000;
 10084  003DF8  0E10               	movlw	16
 10085  003DFA  6E80               	movwf	3968,c	;volatile
 10086                           
 10087                           ;user.c: 39: PORTAbits.RA3 = 1;
 10088  003DFC  8680               	bsf	3968,3,c	;volatile
 10089                           
 10090                           ;user.c: 40: WaitHalfSec();
 10091  003DFE  EC29  F01F         	call	_WaitHalfSec	;wreg free
 10092                           
 10093                           ;user.c: 41: PORTAbits.RA3 = 0;
 10094  003E02  9680               	bcf	3968,3,c	;volatile
 10095                           
 10096                           ;user.c: 42: PORTAbits.RA2 = 1;
 10097  003E04  8480               	bsf	3968,2,c	;volatile
 10098                           
 10099                           ;user.c: 43: WaitHalfSec();
 10100  003E06  EC29  F01F         	call	_WaitHalfSec	;wreg free
 10101                           
 10102                           ;user.c: 44: PORTAbits.RA2 = 0;
 10103  003E0A  9480               	bcf	3968,2,c	;volatile
 10104                           
 10105                           ;user.c: 45: PORTAbits.RA1 = 1;
 10106  003E0C  8280               	bsf	3968,1,c	;volatile
 10107                           
 10108                           ;user.c: 46: WaitHalfSec();
 10109  003E0E  EC29  F01F         	call	_WaitHalfSec	;wreg free
 10110                           
 10111                           ;user.c: 47: PORTAbits.RA1 = 0;
 10112  003E12  9280               	bcf	3968,1,c	;volatile
 10113  003E14  0012               	return	
 10114  003E16  FFFF               	dw	65535	; errata NOP
 10115  003E18                     __end_of_InitApp:
 10116                           	opt stack 0
 10117                           tblptru	equ	0xFF8
 10118                           tblptrh	equ	0xFF7
 10119                           tblptrl	equ	0xFF6
 10120                           tablat	equ	0xFF5
 10121                           prodh	equ	0xFF4
 10122                           prodl	equ	0xFF3
 10123                           intcon	equ	0xFF2
 10124                           intcon2	equ	0xFF1
 10125                           postinc0	equ	0xFEE
 10126                           wreg	equ	0xFE8
 10127                           postinc1	equ	0xFE6
 10128                           postdec1	equ	0xFE5
 10129                           fsr1l	equ	0xFE1
 10130                           indf2	equ	0xFDF
 10131                           postinc2	equ	0xFDE
 10132                           postdec2	equ	0xFDD
 10133                           fsr2h	equ	0xFDA
 10134                           fsr2l	equ	0xFD9
 10135                           status	equ	0xFD8
 10136                           
 10137 ;; *************** function _WaitHalfSec *****************
 10138 ;; Defined at:
 10139 ;;		line 54 in file "user.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;		None
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;  Halfcount       2   32[BANK0 ] int 
 10144 ;; Return value:  Size  Location     Type
 10145 ;;		None               void
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10153 ;;      Params:         0       0       0       0       0       0       0
 10154 ;;      Locals:         0       2       0       0       0       0       0
 10155 ;;      Temps:          0       0       0       0       0       0       0
 10156 ;;      Totals:         0       2       0       0       0       0       0
 10157 ;;Total ram usage:        2 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:    7
 10160 ;; This function calls:
 10161 ;;		_Delay1KTCYx
 10162 ;; This function is called by:
 10163 ;;		_main
 10164 ;;		_InitApp
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           	psect	text28
 10169  003E52                     __ptext28:
 10170                           	opt stack 0
 10171  003E52                     _WaitHalfSec:
 10172                           	opt stack 22
 10173                           
 10174                           ;incstack = 0
 10175  003E52  FFFF               	dw	65535
 10176                           
 10177                           ;user.c: 56: int Halfcount = 50;
 10178  003E54  0E00               	movlw	0
 10179  003E56  0100               	movlb	0	; () banked
 10180  003E58  6FA1               	movwf	(WaitHalfSec@Halfcount+1)& (0+255),b
 10181  003E5A  0E32               	movlw	50
 10182  003E5C  0100               	movlb	0	; () banked
 10183  003E5E  6FA0               	movwf	WaitHalfSec@Halfcount& (0+255),b
 10184                           
 10185                           ;user.c: 57: while (Halfcount != 0)
 10186  003E60  D00D               	goto	l3253
 10187  003E62                     l3249:
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;user.c: 58: {
 10191                           ;user.c: 59: Delay1KTCYx(25);
 10192  003E62  0E19               	movlw	25
 10193  003E64  ECE5  F01F         	call	_Delay1KTCYx
 10194                           
 10195                           ;user.c: 60: Halfcount = Halfcount-1;
 10196  003E68  0EFF               	movlw	255
 10197  003E6A  0100               	movlb	0	; () banked
 10198  003E6C  25A0               	addwf	WaitHalfSec@Halfcount& (0+255),w,b
 10199  003E6E  0100               	movlb	0	; () banked
 10200  003E70  6FA0               	movwf	WaitHalfSec@Halfcount& (0+255),b
 10201  003E72  0EFF               	movlw	255
 10202  003E74  0100               	movlb	0	; () banked
 10203  003E76  21A1               	addwfc	(WaitHalfSec@Halfcount+1)& (0+255),w,b
 10204  003E78  0100               	movlb	0	; () banked
 10205  003E7A  6FA1               	movwf	(WaitHalfSec@Halfcount+1)& (0+255),b
 10206  003E7C                     l3253:
 10207                           
 10208                           ; BSR set to: 0
 10209  003E7C  0100               	movlb	0	; () banked
 10210  003E7E  51A1               	movf	(WaitHalfSec@Halfcount+1)& (0+255),w,b
 10211  003E80  11A0               	iorwf	WaitHalfSec@Halfcount& (0+255),w,b
 10212  003E82  B4D8               	btfsc	status,2,c
 10213                           
 10214                           ; BSR set to: 0
 10215                           
 10216                           ; BSR set to: 0
 10217  003E84  0012               	return	
 10218  003E86  FFFF               	dw	65535	; assembler added errata NOP
 10219  003E88  D7EC               	goto	l3249
 10220  003E8A  FFFF               	dw	65535	; errata NOP
 10221  003E8C                     __end_of_WaitHalfSec:
 10222                           	opt stack 0
 10223                           tblptru	equ	0xFF8
 10224                           tblptrh	equ	0xFF7
 10225                           tblptrl	equ	0xFF6
 10226                           tablat	equ	0xFF5
 10227                           prodh	equ	0xFF4
 10228                           prodl	equ	0xFF3
 10229                           intcon	equ	0xFF2
 10230                           intcon2	equ	0xFF1
 10231                           postinc0	equ	0xFEE
 10232                           wreg	equ	0xFE8
 10233                           postinc1	equ	0xFE6
 10234                           postdec1	equ	0xFE5
 10235                           fsr1l	equ	0xFE1
 10236                           indf2	equ	0xFDF
 10237                           postinc2	equ	0xFDE
 10238                           postdec2	equ	0xFDD
 10239                           fsr2h	equ	0xFDA
 10240                           fsr2l	equ	0xFD9
 10241                           status	equ	0xFD8
 10242                           
 10243 ;; *************** function _Delay1KTCYx *****************
 10244 ;; Defined at:
 10245 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d1ktcyx.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  unit            1    wreg     unsigned char 
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;  unit            1   31[BANK0 ] unsigned char 
 10250 ;; Return value:  Size  Location     Type
 10251 ;;		None               void
 10252 ;; Registers used:
 10253 ;;		wreg
 10254 ;; Tracked objects:
 10255 ;;		On entry : 0/0
 10256 ;;		On exit  : 0/0
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10259 ;;      Params:         0       0       0       0       0       0       0
 10260 ;;      Locals:         0       1       0       0       0       0       0
 10261 ;;      Temps:          0       0       0       0       0       0       0
 10262 ;;      Totals:         0       1       0       0       0       0       0
 10263 ;;Total ram usage:        1 bytes
 10264 ;; Hardware stack levels used:    1
 10265 ;; Hardware stack levels required when called:    6
 10266 ;; This function calls:
 10267 ;;		Nothing
 10268 ;; This function is called by:
 10269 ;;		_WaitHalfSec
 10270 ;;		_DisplayLCD
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text29
 10275  003FCA                     __ptext29:
 10276                           	opt stack 0
 10277  003FCA                     _Delay1KTCYx:
 10278                           	opt stack 21
 10279                           
 10280                           ; BSR set to: 0
 10281                           ;incstack = 0
 10282  003FCA  FFFF               	dw	65535
 10283                           
 10284                           ;Delay1KTCYx@unit stored from wreg
 10285  003FCC  0100               	movlb	0	; () banked
 10286  003FCE  6F9F               	movwf	Delay1KTCYx@unit& (0+255),b
 10287  003FD0                     l587:
 10288                           
 10289                           ; BSR set to: 0
 10290                           
 10291                           ; BSR set to: 0
 10292  003FD0  0EFA               	movlw	250
 10293  003FD2                     u4617:
 10294  003FD2  2EE8               	decfsz	wreg,f,c
 10295  003FD4  D7FE               	goto	u4617
 10296  003FD6  0100               	movlb	0	; () banked
 10297  003FD8  2F9F               	decfsz	Delay1KTCYx@unit& (0+255),f,b
 10298  003FDA  D7FA               	goto	l587
 10299                           
 10300                           ; BSR set to: 0
 10301                           
 10302                           ; BSR set to: 0
 10303  003FDC  0012               	return	
 10304  003FDE  FFFF               	dw	65535	; errata NOP
 10305  003FE0                     __end_of_Delay1KTCYx:
 10306                           	opt stack 0
 10307                           tblptru	equ	0xFF8
 10308                           tblptrh	equ	0xFF7
 10309                           tblptrl	equ	0xFF6
 10310                           tablat	equ	0xFF5
 10311                           prodh	equ	0xFF4
 10312                           prodl	equ	0xFF3
 10313                           intcon	equ	0xFF2
 10314                           intcon2	equ	0xFF1
 10315                           postinc0	equ	0xFEE
 10316                           wreg	equ	0xFE8
 10317                           postinc1	equ	0xFE6
 10318                           postdec1	equ	0xFE5
 10319                           fsr1l	equ	0xFE1
 10320                           indf2	equ	0xFDF
 10321                           postinc2	equ	0xFDE
 10322                           postdec2	equ	0xFDD
 10323                           fsr2h	equ	0xFDA
 10324                           fsr2l	equ	0xFD9
 10325                           status	equ	0xFD8
 10326                           
 10327 ;; *************** function _CloseTimer0 *****************
 10328 ;; Defined at:
 10329 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0close.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;		None
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;		None
 10334 ;; Return value:  Size  Location     Type
 10335 ;;		None               void
 10336 ;; Registers used:
 10337 ;;		None
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10343 ;;      Params:         0       0       0       0       0       0       0
 10344 ;;      Locals:         0       0       0       0       0       0       0
 10345 ;;      Temps:          0       0       0       0       0       0       0
 10346 ;;      Totals:         0       0       0       0       0       0       0
 10347 ;;Total ram usage:        0 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:    6
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		_main
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text30
 10358  003FF6                     __ptext30:
 10359                           	opt stack 0
 10360  003FF6                     _CloseTimer0:
 10361                           	opt stack 23
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;incstack = 0
 10365  003FF6  FFFF               	dw	65535
 10366  003FF8  9ED5               	bcf	4053,7,c	;volatile
 10367  003FFA  9AF2               	bcf	intcon,5,c	;volatile
 10368  003FFC  0012               	return	
 10369  003FFE  FFFF               	dw	65535	; errata NOP
 10370  004000                     __end_of_CloseTimer0:
 10371                           	opt stack 0
 10372                           tblptru	equ	0xFF8
 10373                           tblptrh	equ	0xFF7
 10374                           tblptrl	equ	0xFF6
 10375                           tablat	equ	0xFF5
 10376                           prodh	equ	0xFF4
 10377                           prodl	equ	0xFF3
 10378                           intcon	equ	0xFF2
 10379                           intcon2	equ	0xFF1
 10380                           postinc0	equ	0xFEE
 10381                           wreg	equ	0xFE8
 10382                           postinc1	equ	0xFE6
 10383                           postdec1	equ	0xFE5
 10384                           fsr1l	equ	0xFE1
 10385                           indf2	equ	0xFDF
 10386                           postinc2	equ	0xFDE
 10387                           postdec2	equ	0xFDD
 10388                           fsr2h	equ	0xFDA
 10389                           fsr2l	equ	0xFD9
 10390                           status	equ	0xFD8
 10391                           
 10392 ;; *************** function _low_isr *****************
 10393 ;; Defined at:
 10394 ;;		line 109 in file "main.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;		None               void
 10401 ;; Registers used:
 10402 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10408 ;;      Params:         0       0       0       0       0       0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0
 10410 ;;      Temps:         17       0       0       0       0       0       0
 10411 ;;      Totals:        17       0       0       0       0       0       0
 10412 ;;Total ram usage:       17 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    5
 10415 ;; This function calls:
 10416 ;;		_ReadEncoder
 10417 ;;		_fabs
 10418 ;;		i1_WriteTimer0
 10419 ;;		i1___ftdiv
 10420 ;; This function is called by:
 10421 ;;		Interrupt level 1
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425 ;; *************** function _TimerStopped *****************
 10426 ;; Defined at:
 10427 ;;		line 15 in file "interrupts.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;		None
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;		None               void
 10434 ;; Registers used:
 10435 ;;		None
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10441 ;;      Params:         0       0       0       0       0       0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0
 10443 ;;      Temps:          0      17       0       0       0       0       0
 10444 ;;      Totals:         0      17       0       0       0       0       0
 10445 ;;Total ram usage:       17 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    1
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		Interrupt level 1
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	intcodelo
 10456  000018                     __pintcodelo:
 10457                           	opt stack 0
 10458  000018                     _low_isr:
 10459                           	opt stack 19
 10460                           
 10461                           ;incstack = 0
 10462  000018  FFFF               	dw	65535	; errata NOP
 10463  00001A  CFD8 F03C          	movff	status,??_low_isr
 10464  00001E  CFE8 F03D          	movff	wreg,??_low_isr+1
 10465  000022  CFE0 F03E          	movff	bsr,??_low_isr+2
 10466  000026  CFFA F03F          	movff	pclath,??_low_isr+3
 10467  00002A  CFFB F040          	movff	pclatu,??_low_isr+4
 10468  00002E  CFE9 F041          	movff	fsr0l,??_low_isr+5
 10469  000032  CFEA F042          	movff	fsr0h,??_low_isr+6
 10470  000036  CFE1 F043          	movff	fsr1l,??_low_isr+7
 10471  00003A  CFE2 F044          	movff	fsr1h,??_low_isr+8
 10472  00003E  CFD9 F045          	movff	fsr2l,??_low_isr+9
 10473  000042  CFDA F046          	movff	fsr2h,??_low_isr+10
 10474  000046  CFF3 F047          	movff	prodl,??_low_isr+11
 10475  00004A  CFF4 F048          	movff	prodh,??_low_isr+12
 10476  00004E  CFF6 F049          	movff	tblptrl,??_low_isr+13
 10477  000052  CFF7 F04A          	movff	tblptrh,??_low_isr+14
 10478  000056  CFF8 F04B          	movff	tblptru,??_low_isr+15
 10479  00005A  CFF5 F04C          	movff	tablat,??_low_isr+16
 10480                           
 10481                           ;main.c: 111: if(INTCONbits.RBIF == 1)
 10482  00005E  A0F2               	btfss	intcon,0,c	;volatile
 10483  000060  D004               	goto	i1l66
 10484                           
 10485                           ;main.c: 112: {
 10486                           ;main.c: 113: ReadEncoder();
 10487  000062  EC55  F013         	call	_ReadEncoder	;wreg free
 10488                           
 10489                           ;main.c: 114: INTCONbits.RBIF = 0;
 10490  000066  90F2               	bcf	intcon,0,c	;volatile
 10491                           
 10492                           ;main.c: 115: }
 10493  000068  D02B               	goto	i1l69
 10494  00006A                     i1l66:
 10495                           
 10496                           ;main.c: 117: else if (INTCONbits.TMR0IF == 1)
 10497  00006A  A4F2               	btfss	intcon,2,c	;volatile
 10498  00006C  D029               	goto	i1l69
 10499                           
 10500                           ;main.c: 118: {
 10501                           ;main.c: 119: RPS = (fabs(PartialRot))/0.026;
 10502  00006E  C04D  F004         	movff	_PartialRot,fabs@d
 10503  000072  C04E  F005         	movff	_PartialRot+1,fabs@d+1
 10504  000076  C04F  F006         	movff	_PartialRot+2,fabs@d+2
 10505  00007A  EC8C  F01E         	call	_fabs	;wreg free
 10506  00007E  C004  F00D         	movff	?_fabs,i1___ftdiv@f1
 10507  000082  C005  F00E         	movff	?_fabs+1,i1___ftdiv@f1+1
 10508  000086  C006  F00F         	movff	?_fabs+2,i1___ftdiv@f1+2
 10509  00008A  0EFE               	movlw	254
 10510  00008C  6E10               	movwf	i1___ftdiv@f2,c
 10511  00008E  0ED4               	movlw	212
 10512  000090  6E11               	movwf	i1___ftdiv@f2+1,c
 10513  000092  0E3C               	movlw	60
 10514  000094  6E12               	movwf	i1___ftdiv@f2+2,c
 10515  000096  EC47  F01B         	call	i1___ftdiv	;wreg free
 10516  00009A  C00D  F180         	movff	?i1___ftdiv,_RPS
 10517  00009E  C00E  F181         	movff	?i1___ftdiv+1,_RPS+1
 10518  0000A2  C00F  F182         	movff	?i1___ftdiv+2,_RPS+2
 10519                           
 10520                           ;main.c: 120: PartialRot = 0.0;
 10521  0000A6  0E00               	movlw	0
 10522  0000A8  6E4D               	movwf	_PartialRot,c
 10523  0000AA  0E00               	movlw	0
 10524  0000AC  6E4E               	movwf	_PartialRot+1,c
 10525  0000AE  0E00               	movlw	0
 10526  0000B0  6E4F               	movwf	_PartialRot+2,c
 10527                           
 10528                           ;main.c: 121: WriteTimer0(0x0000);
 10529  0000B2  0E00               	movlw	0
 10530  0000B4  6E02               	movwf	i1WriteTimer0@timer0+1,c
 10531  0000B6  0E00               	movlw	0
 10532  0000B8  6E01               	movwf	i1WriteTimer0@timer0,c
 10533  0000BA  ECF0  F01F         	call	i1_WriteTimer0	;wreg free
 10534                           
 10535                           ;main.c: 122: INTCONbits.TMR0IF = 0;
 10536  0000BE  94F2               	bcf	intcon,2,c	;volatile
 10537  0000C0                     i1l69:
 10538  0000C0  C04C  FFF5         	movff	??_low_isr+16,tablat
 10539  0000C4  C04B  FFF8         	movff	??_low_isr+15,tblptru
 10540  0000C8  C04A  FFF7         	movff	??_low_isr+14,tblptrh
 10541  0000CC  C049  FFF6         	movff	??_low_isr+13,tblptrl
 10542  0000D0  C048  FFF4         	movff	??_low_isr+12,prodh
 10543  0000D4  C047  FFF3         	movff	??_low_isr+11,prodl
 10544  0000D8  C046  FFDA         	movff	??_low_isr+10,fsr2h
 10545  0000DC  C045  FFD9         	movff	??_low_isr+9,fsr2l
 10546  0000E0  C044  FFE2         	movff	??_low_isr+8,fsr1h
 10547  0000E4  C043  FFE1         	movff	??_low_isr+7,fsr1l
 10548  0000E8  C042  FFEA         	movff	??_low_isr+6,fsr0h
 10549  0000EC  C041  FFE9         	movff	??_low_isr+5,fsr0l
 10550  0000F0  C040  FFFB         	movff	??_low_isr+4,pclatu
 10551  0000F4  C03F  FFFA         	movff	??_low_isr+3,pclath
 10552  0000F8  C03E  FFE0         	movff	??_low_isr+2,bsr
 10553  0000FC  C03D  FFE8         	movff	??_low_isr+1,wreg
 10554  000100  C03C  FFD8         	movff	??_low_isr,status
 10555  000104  0010               	retfie	
 10556  000106  FFFF               	dw	65535	; errata NOP
 10557  000108                     __end_of_low_isr:
 10558                           	opt stack 0
 10559  000108                     _TimerStopped:
 10560                           	opt stack 23
 10561                           
 10562                           ;incstack = 0
 10563  000108  FFFF               	dw	65535	; errata NOP
 10564  00010A  CFD8 F080          	movff	status,??_TimerStopped
 10565  00010E  CFE8 F081          	movff	wreg,??_TimerStopped+1
 10566  000112  CFE0 F082          	movff	bsr,??_TimerStopped+2
 10567  000116  CFFA F083          	movff	pclath,??_TimerStopped+3
 10568  00011A  CFFB F084          	movff	pclatu,??_TimerStopped+4
 10569  00011E  CFE9 F085          	movff	fsr0l,??_TimerStopped+5
 10570  000122  CFEA F086          	movff	fsr0h,??_TimerStopped+6
 10571  000126  CFE1 F087          	movff	fsr1l,??_TimerStopped+7
 10572  00012A  CFE2 F088          	movff	fsr1h,??_TimerStopped+8
 10573  00012E  CFD9 F089          	movff	fsr2l,??_TimerStopped+9
 10574  000132  CFDA F08A          	movff	fsr2h,??_TimerStopped+10
 10575  000136  CFF3 F08B          	movff	prodl,??_TimerStopped+11
 10576  00013A  CFF4 F08C          	movff	prodh,??_TimerStopped+12
 10577  00013E  CFF6 F08D          	movff	tblptrl,??_TimerStopped+13
 10578  000142  CFF7 F08E          	movff	tblptrh,??_TimerStopped+14
 10579  000146  CFF8 F08F          	movff	tblptru,??_TimerStopped+15
 10580  00014A  CFF5 F090          	movff	tablat,??_TimerStopped+16
 10581                           
 10582                           ;interrupts.c: 18: if(INTCONbits.INT0F == 1)
 10583  00014E  A2F2               	btfss	intcon,1,c	;volatile
 10584  000150  D002               	goto	i1l179
 10585                           
 10586                           ;interrupts.c: 19: {
 10587                           ;interrupts.c: 20: LATB4 = ~LATB4;
 10588  000152  788A               	btg	3978,4,c	;volatile
 10589                           
 10590                           ;interrupts.c: 21: INTCONbits.INT0F = 0;
 10591  000154  92F2               	bcf	intcon,1,c	;volatile
 10592  000156                     i1l179:
 10593  000156  C090  FFF5         	movff	??_TimerStopped+16,tablat
 10594  00015A  C08F  FFF8         	movff	??_TimerStopped+15,tblptru
 10595  00015E  C08E  FFF7         	movff	??_TimerStopped+14,tblptrh
 10596  000162  C08D  FFF6         	movff	??_TimerStopped+13,tblptrl
 10597  000166  C08C  FFF4         	movff	??_TimerStopped+12,prodh
 10598  00016A  C08B  FFF3         	movff	??_TimerStopped+11,prodl
 10599  00016E  C08A  FFDA         	movff	??_TimerStopped+10,fsr2h
 10600  000172  C089  FFD9         	movff	??_TimerStopped+9,fsr2l
 10601  000176  C088  FFE2         	movff	??_TimerStopped+8,fsr1h
 10602  00017A  C087  FFE1         	movff	??_TimerStopped+7,fsr1l
 10603  00017E  C086  FFEA         	movff	??_TimerStopped+6,fsr0h
 10604  000182  C085  FFE9         	movff	??_TimerStopped+5,fsr0l
 10605  000186  C084  FFFB         	movff	??_TimerStopped+4,pclatu
 10606  00018A  C083  FFFA         	movff	??_TimerStopped+3,pclath
 10607  00018E  C082  FFE0         	movff	??_TimerStopped+2,bsr
 10608  000192  C081  FFE8         	movff	??_TimerStopped+1,wreg
 10609  000196  C080  FFD8         	movff	??_TimerStopped,status
 10610  00019A  0010               	retfie	
 10611  00019C  FFFF               	dw	65535	; errata NOP
 10612  00019E                     __end_of_TimerStopped:
 10613                           	opt stack 0
 10614                           pclatu	equ	0xFFB
 10615                           pclath	equ	0xFFA
 10616                           tblptru	equ	0xFF8
 10617                           tblptrh	equ	0xFF7
 10618                           tblptrl	equ	0xFF6
 10619                           tablat	equ	0xFF5
 10620                           prodh	equ	0xFF4
 10621                           prodl	equ	0xFF3
 10622                           intcon	equ	0xFF2
 10623                           intcon2	equ	0xFF1
 10624                           postinc0	equ	0xFEE
 10625                           fsr0h	equ	0xFEA
 10626                           fsr0l	equ	0xFE9
 10627                           wreg	equ	0xFE8
 10628                           postinc1	equ	0xFE6
 10629                           postdec1	equ	0xFE5
 10630                           fsr1h	equ	0xFE2
 10631                           fsr1l	equ	0xFE1
 10632                           bsr	equ	0xFE0
 10633                           indf2	equ	0xFDF
 10634                           postinc2	equ	0xFDE
 10635                           postdec2	equ	0xFDD
 10636                           fsr2h	equ	0xFDA
 10637                           fsr2l	equ	0xFD9
 10638                           status	equ	0xFD8
 10639                           
 10640 ;; *************** function i1_WriteTimer0 *****************
 10641 ;; Defined at:
 10642 ;;		line 16 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0write.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;  timer0          2    0[COMRAM] unsigned int 
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;  WriteTimer0     2    2[COMRAM] struct Timers
 10647 ;; Return value:  Size  Location     Type
 10648 ;;		None               void
 10649 ;; Registers used:
 10650 ;;		None
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10656 ;;      Params:         2       0       0       0       0       0       0
 10657 ;;      Locals:         2       0       0       0       0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0
 10659 ;;      Totals:         4       0       0       0       0       0       0
 10660 ;;Total ram usage:        4 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    1
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		_low_isr
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text32
 10671  003FE0                     __ptext32:
 10672                           	opt stack 0
 10673  003FE0                     i1_WriteTimer0:
 10674                           	opt stack 22
 10675                           
 10676                           ;incstack = 0
 10677  003FE0  FFFF               	dw	65535
 10678  003FE2  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
 10679  003FE6  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
 10680  003FEA  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
 10681  003FEE  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
 10682  003FF2  0012               	return	
 10683  003FF4  FFFF               	dw	65535	; errata NOP
 10684  003FF6                     __end_ofi1_WriteTimer0:
 10685                           	opt stack 0
 10686                           pclatu	equ	0xFFB
 10687                           pclath	equ	0xFFA
 10688                           tblptru	equ	0xFF8
 10689                           tblptrh	equ	0xFF7
 10690                           tblptrl	equ	0xFF6
 10691                           tablat	equ	0xFF5
 10692                           prodh	equ	0xFF4
 10693                           prodl	equ	0xFF3
 10694                           intcon	equ	0xFF2
 10695                           intcon2	equ	0xFF1
 10696                           postinc0	equ	0xFEE
 10697                           fsr0h	equ	0xFEA
 10698                           fsr0l	equ	0xFE9
 10699                           wreg	equ	0xFE8
 10700                           postinc1	equ	0xFE6
 10701                           postdec1	equ	0xFE5
 10702                           fsr1h	equ	0xFE2
 10703                           fsr1l	equ	0xFE1
 10704                           bsr	equ	0xFE0
 10705                           indf2	equ	0xFDF
 10706                           postinc2	equ	0xFDE
 10707                           postdec2	equ	0xFDD
 10708                           fsr2h	equ	0xFDA
 10709                           fsr2l	equ	0xFD9
 10710                           status	equ	0xFD8
 10711                           
 10712 ;; *************** function _fabs *****************
 10713 ;; Defined at:
 10714 ;;		line 4 in file "/Applications/microchip/xc8/v1.33/sources/common/fabs.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  d               3    3[COMRAM] struct Timers
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  3    3[COMRAM] struct Timers
 10721 ;; Registers used:
 10722 ;;		wreg, status,2, status,0, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10728 ;;      Params:         3       0       0       0       0       0       0
 10729 ;;      Locals:         0       0       0       0       0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0
 10731 ;;      Totals:         3       0       0       0       0       0       0
 10732 ;;Total ram usage:        3 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:    2
 10735 ;; This function calls:
 10736 ;;		i1___ftneg
 10737 ;; This function is called by:
 10738 ;;		_low_isr
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text33
 10743  003D18                     __ptext33:
 10744                           	opt stack 0
 10745  003D18                     _fabs:
 10746                           	opt stack 21
 10747                           
 10748                           ;incstack = 0
 10749  003D18  FFFF               	dw	65535
 10750  003D1A  5006               	movf	fabs@d+2,w,c
 10751  003D1C  0A80               	xorlw	128
 10752  003D1E  0F80               	addlw	128
 10753  003D20  E105               	bnz	i1u450_25
 10754  003D22  0E00               	movlw	0
 10755  003D24  5C05               	subwf	fabs@d+1,w,c
 10756  003D26  E102               	bnz	i1u450_25
 10757  003D28  0E00               	movlw	0
 10758  003D2A  5C04               	subwf	fabs@d,w,c
 10759  003D2C                     i1u450_25:
 10760  003D2C  B0D8               	btfsc	status,0,c
 10761  003D2E  D00F               	goto	i1l609
 10762  003D30  C004  F001         	movff	fabs@d,i1___ftneg@f1
 10763  003D34  C005  F002         	movff	fabs@d+1,i1___ftneg@f1+1
 10764  003D38  C006  F003         	movff	fabs@d+2,i1___ftneg@f1+2
 10765  003D3C  ECAE  F01F         	call	i1___ftneg	;wreg free
 10766  003D40  C001  F004         	movff	?i1___ftneg,?_fabs
 10767  003D44  C002  F005         	movff	?i1___ftneg+1,?_fabs+1
 10768  003D48  C003  F006         	movff	?i1___ftneg+2,?_fabs+2
 10769  003D4C  D006               	goto	i1l610
 10770  003D4E                     i1l609:
 10771  003D4E  C004  F004         	movff	fabs@d,?_fabs
 10772  003D52  C005  F005         	movff	fabs@d+1,?_fabs+1
 10773  003D56  C006  F006         	movff	fabs@d+2,?_fabs+2
 10774  003D5A                     i1l610:
 10775  003D5A  0012               	return	
 10776  003D5C  FFFF               	dw	65535	; errata NOP
 10777  003D5E                     __end_of_fabs:
 10778                           	opt stack 0
 10779                           pclatu	equ	0xFFB
 10780                           pclath	equ	0xFFA
 10781                           tblptru	equ	0xFF8
 10782                           tblptrh	equ	0xFF7
 10783                           tblptrl	equ	0xFF6
 10784                           tablat	equ	0xFF5
 10785                           prodh	equ	0xFF4
 10786                           prodl	equ	0xFF3
 10787                           intcon	equ	0xFF2
 10788                           intcon2	equ	0xFF1
 10789                           postinc0	equ	0xFEE
 10790                           fsr0h	equ	0xFEA
 10791                           fsr0l	equ	0xFE9
 10792                           wreg	equ	0xFE8
 10793                           postinc1	equ	0xFE6
 10794                           postdec1	equ	0xFE5
 10795                           fsr1h	equ	0xFE2
 10796                           fsr1l	equ	0xFE1
 10797                           bsr	equ	0xFE0
 10798                           indf2	equ	0xFDF
 10799                           postinc2	equ	0xFDE
 10800                           postdec2	equ	0xFDD
 10801                           fsr2h	equ	0xFDA
 10802                           fsr2l	equ	0xFD9
 10803                           status	equ	0xFD8
 10804                           
 10805 ;; *************** function i1___ftneg *****************
 10806 ;; Defined at:
 10807 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/ftneg.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  f1              3    0[COMRAM] float 
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;		None
 10812 ;; Return value:  Size  Location     Type
 10813 ;;                  3    0[COMRAM] float 
 10814 ;; Registers used:
 10815 ;;		wreg, status,2, status,0
 10816 ;; Tracked objects:
 10817 ;;		On entry : 0/0
 10818 ;;		On exit  : 0/0
 10819 ;;		Unchanged: 0/0
 10820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10821 ;;      Params:         3       0       0       0       0       0       0
 10822 ;;      Locals:         0       0       0       0       0       0       0
 10823 ;;      Temps:          0       0       0       0       0       0       0
 10824 ;;      Totals:         3       0       0       0       0       0       0
 10825 ;;Total ram usage:        3 bytes
 10826 ;; Hardware stack levels used:    1
 10827 ;; Hardware stack levels required when called:    1
 10828 ;; This function calls:
 10829 ;;		Nothing
 10830 ;; This function is called by:
 10831 ;;		_fabs
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835                           	psect	text34
 10836  003F5C                     __ptext34:
 10837                           	opt stack 0
 10838  003F5C                     i1___ftneg:
 10839                           	opt stack 21
 10840                           
 10841                           ;incstack = 0
 10842  003F5C  FFFF               	dw	65535
 10843  003F5E  0E7F               	movlw	127
 10844  003F60  1403               	andwf	i1___ftneg@f1+2,w,c
 10845  003F62  1002               	iorwf	i1___ftneg@f1+1,w,c
 10846  003F64  1001               	iorwf	i1___ftneg@f1,w,c
 10847  003F66  B4D8               	btfsc	status,2,c
 10848  003F68  D006               	goto	i1l809
 10849  003F6A  0E00               	movlw	0
 10850  003F6C  1A01               	xorwf	i1___ftneg@f1,f,c
 10851  003F6E  0E00               	movlw	0
 10852  003F70  1A02               	xorwf	i1___ftneg@f1+1,f,c
 10853  003F72  0E80               	movlw	128
 10854  003F74  1A03               	xorwf	i1___ftneg@f1+2,f,c
 10855  003F76                     i1l809:
 10856  003F76  C001  F001         	movff	i1___ftneg@f1,?i1___ftneg
 10857  003F7A  C002  F002         	movff	i1___ftneg@f1+1,?i1___ftneg+1
 10858  003F7E  C003  F003         	movff	i1___ftneg@f1+2,?i1___ftneg+2
 10859  003F82  0012               	return	
 10860  003F84  FFFF               	dw	65535	; errata NOP
 10861  003F86                     __end_ofi1___ftneg:
 10862                           	opt stack 0
 10863                           pclatu	equ	0xFFB
 10864                           pclath	equ	0xFFA
 10865                           tblptru	equ	0xFF8
 10866                           tblptrh	equ	0xFF7
 10867                           tblptrl	equ	0xFF6
 10868                           tablat	equ	0xFF5
 10869                           prodh	equ	0xFF4
 10870                           prodl	equ	0xFF3
 10871                           intcon	equ	0xFF2
 10872                           intcon2	equ	0xFF1
 10873                           postinc0	equ	0xFEE
 10874                           fsr0h	equ	0xFEA
 10875                           fsr0l	equ	0xFE9
 10876                           wreg	equ	0xFE8
 10877                           postinc1	equ	0xFE6
 10878                           postdec1	equ	0xFE5
 10879                           fsr1h	equ	0xFE2
 10880                           fsr1l	equ	0xFE1
 10881                           bsr	equ	0xFE0
 10882                           indf2	equ	0xFDF
 10883                           postinc2	equ	0xFDE
 10884                           postdec2	equ	0xFDD
 10885                           fsr2h	equ	0xFDA
 10886                           fsr2l	equ	0xFD9
 10887                           status	equ	0xFD8
 10888                           
 10889 ;; *************** function _ReadEncoder *****************
 10890 ;; Defined at:
 10891 ;;		line 195 in file "user.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;  NEW_ROT         2   57[COMRAM] int 
 10896 ;;  Bnew            2   55[COMRAM] int 
 10897 ;;  Anew            2   53[COMRAM] int 
 10898 ;;  New             2   51[COMRAM] int 
 10899 ;;  Old             2   49[COMRAM] int 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;		None               void
 10902 ;; Registers used:
 10903 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10909 ;;      Params:         0       0       0       0       0       0       0
 10910 ;;      Locals:        10       0       0       0       0       0       0
 10911 ;;      Temps:          4       0       0       0       0       0       0
 10912 ;;      Totals:        14       0       0       0       0       0       0
 10913 ;;Total ram usage:       14 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:    4
 10916 ;; This function calls:
 10917 ;;		___awtoft
 10918 ;;		i1___ftadd
 10919 ;;		i1___ftdiv
 10920 ;;		i1___ftsub
 10921 ;; This function is called by:
 10922 ;;		_low_isr
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text35
 10927  0026AA                     __ptext35:
 10928                           	opt stack 0
 10929  0026AA                     _ReadEncoder:
 10930                           	opt stack 19
 10931                           
 10932                           ;incstack = 0
 10933  0026AA  FFFF               	dw	65535
 10934                           
 10935                           ;user.c: 198: int Anew = PORTBbits.RB5;
 10936  0026AC  AA81               	btfss	3969,5,c	;volatile
 10937  0026AE  D003               	goto	i1u442_20
 10938  0026B0  6A2E               	clrf	??_ReadEncoder& (0+255),c
 10939  0026B2  2A2E               	incf	??_ReadEncoder& (0+255),f,c
 10940  0026B4  D001               	goto	i1u442_28
 10941  0026B6                     i1u442_20:
 10942  0026B6  6A2E               	clrf	??_ReadEncoder& (0+255),c
 10943  0026B8                     i1u442_28:
 10944  0026B8  502E               	movf	??_ReadEncoder,w,c
 10945  0026BA  6E36               	movwf	ReadEncoder@Anew,c
 10946  0026BC  6A37               	clrf	ReadEncoder@Anew+1,c
 10947                           
 10948                           ;user.c: 199: int Bnew = PORTBbits.RB4;
 10949  0026BE  A881               	btfss	3969,4,c	;volatile
 10950  0026C0  D003               	goto	i1u443_20
 10951  0026C2  6A2E               	clrf	??_ReadEncoder& (0+255),c
 10952  0026C4  2A2E               	incf	??_ReadEncoder& (0+255),f,c
 10953  0026C6  D001               	goto	i1u443_28
 10954  0026C8                     i1u443_20:
 10955  0026C8  6A2E               	clrf	??_ReadEncoder& (0+255),c
 10956  0026CA                     i1u443_28:
 10957  0026CA  502E               	movf	??_ReadEncoder,w,c
 10958  0026CC  6E38               	movwf	ReadEncoder@Bnew,c
 10959  0026CE  6A39               	clrf	ReadEncoder@Bnew+1,c
 10960                           
 10961                           ;user.c: 201: int Old = CHA*2 + CHB;
 10962  0026D0  C052  F02E         	movff	_CHA,??_ReadEncoder
 10963  0026D4  C053  F02F         	movff	_CHA+1,??_ReadEncoder+1
 10964  0026D8  90D8               	bcf	status,0,c
 10965  0026DA  362E               	rlcf	??_ReadEncoder,f,c
 10966  0026DC  362F               	rlcf	??_ReadEncoder+1,f,c
 10967  0026DE  5054               	movf	_CHB,w,c
 10968  0026E0  242E               	addwf	??_ReadEncoder,w,c
 10969  0026E2  6E32               	movwf	ReadEncoder@Old,c
 10970  0026E4  5055               	movf	_CHB+1,w,c
 10971  0026E6  202F               	addwfc	??_ReadEncoder+1,w,c
 10972  0026E8  6E33               	movwf	ReadEncoder@Old+1,c
 10973                           
 10974                           ;user.c: 202: int New = Anew*2 + Bnew;
 10975  0026EA  C036  F02E         	movff	ReadEncoder@Anew,??_ReadEncoder
 10976  0026EE  C037  F02F         	movff	ReadEncoder@Anew+1,??_ReadEncoder+1
 10977  0026F2  90D8               	bcf	status,0,c
 10978  0026F4  362E               	rlcf	??_ReadEncoder,f,c
 10979  0026F6  362F               	rlcf	??_ReadEncoder+1,f,c
 10980  0026F8  5038               	movf	ReadEncoder@Bnew,w,c
 10981  0026FA  242E               	addwf	??_ReadEncoder,w,c
 10982  0026FC  6E34               	movwf	ReadEncoder@New,c
 10983  0026FE  5039               	movf	ReadEncoder@Bnew+1,w,c
 10984  002700  202F               	addwfc	??_ReadEncoder+1,w,c
 10985  002702  6E35               	movwf	ReadEncoder@New+1,c
 10986                           
 10987                           ;user.c: 203: int NEW_ROT = QEM[Old*4+New];
 10988  002704  C032  F02E         	movff	ReadEncoder@Old,??_ReadEncoder
 10989  002708  C033  F02F         	movff	ReadEncoder@Old+1,??_ReadEncoder+1
 10990  00270C  90D8               	bcf	status,0,c
 10991  00270E  362E               	rlcf	??_ReadEncoder,f,c
 10992  002710  362F               	rlcf	??_ReadEncoder+1,f,c
 10993  002712  90D8               	bcf	status,0,c
 10994  002714  362E               	rlcf	??_ReadEncoder,f,c
 10995  002716  362F               	rlcf	??_ReadEncoder+1,f,c
 10996  002718  5034               	movf	ReadEncoder@New,w,c
 10997  00271A  262E               	addwf	??_ReadEncoder,f,c
 10998  00271C  5035               	movf	ReadEncoder@New+1,w,c
 10999  00271E  222F               	addwfc	??_ReadEncoder+1,f,c
 11000  002720  90D8               	bcf	status,0,c
 11001  002722  362E               	rlcf	??_ReadEncoder,f,c
 11002  002724  362F               	rlcf	??_ReadEncoder+1,f,c
 11003  002726  0E77               	movlw	low _QEM
 11004  002728  242E               	addwf	??_ReadEncoder,w,c
 11005  00272A  6EF6               	movwf	tblptrl,c
 11006  00272C  0E06               	movlw	high _QEM
 11007  00272E  202F               	addwfc	??_ReadEncoder+1,w,c
 11008  002730  6EF7               	movwf	tblptrh,c
 11009  002732                     	if	0	;There are less than 3 active tblptr bytes
 11010  002732                     	endif
 11011  002732  0009               	tblrd		*+
 11012  002734  FFFF               	dw	65535	; errata NOP
 11013  002736  CFF5 F03A          	movff	tablat,ReadEncoder@NEW_ROT
 11014  00273A  000A               	tblrd		*-
 11015  00273C  FFFF               	dw	65535	; errata NOP
 11016  00273E  CFF5 F03B          	movff	tablat,ReadEncoder@NEW_ROT+1
 11017                           
 11018                           ;user.c: 205: if (NEW_ROT == 2)
 11019  002742  503A               	movf	ReadEncoder@NEW_ROT,w,c
 11020  002744  0A02               	xorlw	2
 11021  002746  103B               	iorwf	ReadEncoder@NEW_ROT+1,w,c
 11022  002748  A4D8               	btfss	status,2,c
 11023  00274A  D005               	goto	i1l157
 11024                           
 11025                           ;user.c: 206: {
 11026                           ;user.c: 207: NEW_ROT = OLD_ROT;
 11027  00274C  C058  F03A         	movff	_OLD_ROT,ReadEncoder@NEW_ROT
 11028  002750  C059  F03B         	movff	_OLD_ROT+1,ReadEncoder@NEW_ROT+1
 11029                           
 11030                           ;user.c: 208: }
 11031  002754  D008               	goto	i1l3865
 11032  002756                     i1l157:
 11033                           
 11034                           ;user.c: 209: else
 11035                           ;user.c: 210: {
 11036                           ;user.c: 211: CHA = Anew;
 11037  002756  C036  F052         	movff	ReadEncoder@Anew,_CHA
 11038  00275A  C037  F053         	movff	ReadEncoder@Anew+1,_CHA+1
 11039                           
 11040                           ;user.c: 212: CHB = Bnew;
 11041  00275E  C038  F054         	movff	ReadEncoder@Bnew,_CHB
 11042  002762  C039  F055         	movff	ReadEncoder@Bnew+1,_CHB+1
 11043  002766                     i1l3865:
 11044                           
 11045                           ;user.c: 213: }
 11046                           ;user.c: 215: if (NEW_ROT == 1)
 11047  002766  043A               	decf	ReadEncoder@NEW_ROT,w,c
 11048  002768  103B               	iorwf	ReadEncoder@NEW_ROT+1,w,c
 11049  00276A  A4D8               	btfss	status,2,c
 11050  00276C  D003               	goto	i1l3869
 11051                           
 11052                           ;user.c: 216: {
 11053                           ;user.c: 217: CWTurn += 1;
 11054  00276E  4A56               	infsnz	_CWTurn,f,c
 11055  002770  2A57               	incf	_CWTurn+1,f,c
 11056                           
 11057                           ;user.c: 218: }
 11058  002772  D007               	goto	i1l3873
 11059  002774                     i1l3869:
 11060                           
 11061                           ;user.c: 219: else if (NEW_ROT == -1)
 11062  002774  283A               	incf	ReadEncoder@NEW_ROT,w,c
 11063  002776  B4D8               	btfsc	status,2,c
 11064  002778  283B               	incf	ReadEncoder@NEW_ROT+1,w,c
 11065  00277A  A4D8               	btfss	status,2,c
 11066  00277C  D002               	goto	i1l3873
 11067                           
 11068                           ;user.c: 220: {
 11069                           ;user.c: 221: CCWTurn += 1;
 11070  00277E  4A50               	infsnz	_CCWTurn,f,c
 11071  002780  2A51               	incf	_CCWTurn+1,f,c
 11072  002782                     i1l3873:
 11073                           
 11074                           ;user.c: 222: }
 11075                           ;user.c: 224: if (CWTurn + CCWTurn == EncoderPoll)
 11076  002782  0E99               	movlw	low _EncoderPoll
 11077  002784  6EF6               	movwf	tblptrl,c
 11078  002786                     	if	1	;There is more than 1 active tblptr byte
 11079  002786  0E06               	movlw	high _EncoderPoll
 11080  002788  6EF7               	movwf	tblptrh,c
 11081  00278A                     	endif
 11082  00278A                     	if	0	;There are less than 3 active tblptr bytes
 11083  00278A                     	endif
 11084  00278A  0009               	tblrd		*+
 11085  00278C  FFFF               	dw	65535	; errata NOP
 11086  00278E  CFF5 F02E          	movff	tablat,??_ReadEncoder
 11087  002792  0009               	tblrd		*+
 11088  002794  FFFF               	dw	65535	; errata NOP
 11089  002796  CFF5 F02F          	movff	tablat,??_ReadEncoder+1
 11090  00279A  C056  F030         	movff	_CWTurn,??_ReadEncoder+2
 11091  00279E  C057  F031         	movff	_CWTurn+1,??_ReadEncoder+3
 11092  0027A2  5050               	movf	_CCWTurn,w,c
 11093  0027A4  2630               	addwf	??_ReadEncoder+2,f,c
 11094  0027A6  5051               	movf	_CCWTurn+1,w,c
 11095  0027A8  2231               	addwfc	??_ReadEncoder+3,f,c
 11096  0027AA  502F               	movf	??_ReadEncoder+1,w,c
 11097  0027AC  1831               	xorwf	??_ReadEncoder+3,w,c
 11098  0027AE  E102               	bnz	i1u447_25
 11099  0027B0  502E               	movf	??_ReadEncoder,w,c
 11100  0027B2  1830               	xorwf	??_ReadEncoder+2,w,c
 11101  0027B4                     i1u447_25:
 11102  0027B4  A4D8               	btfss	status,2,c
 11103  0027B6  D0A3               	goto	i1l3889
 11104                           
 11105                           ;user.c: 225: {
 11106                           ;user.c: 226: if (CWTurn > CCWTurn)
 11107  0027B8  5051               	movf	_CCWTurn+1,w,c
 11108  0027BA  0A80               	xorlw	128
 11109  0027BC  6E2E               	movwf	??_ReadEncoder& (0+255),c
 11110  0027BE  5056               	movf	_CWTurn,w,c
 11111  0027C0  5C50               	subwf	_CCWTurn,w,c
 11112  0027C2  5057               	movf	_CWTurn+1,w,c
 11113  0027C4  0A80               	xorlw	128
 11114  0027C6  582E               	subwfb	??_ReadEncoder& (0+255),w,c
 11115  0027C8  B0D8               	btfsc	status,0,c
 11116  0027CA  D042               	goto	i1l3881
 11117                           
 11118                           ;user.c: 227: {
 11119                           ;user.c: 228: PORTAbits.RA3 = 1;
 11120  0027CC  8680               	bsf	3968,3,c	;volatile
 11121                           
 11122                           ;user.c: 229: PORTAbits.RA2 = 0;
 11123  0027CE  9480               	bcf	3968,2,c	;volatile
 11124                           
 11125                           ;user.c: 230: PORTAbits.RA1 = 0;
 11126  0027D0  9280               	bcf	3968,1,c	;volatile
 11127                           
 11128                           ;user.c: 231: PartialRot -= ((double)EncoderPoll)/CountPerRev;
 11129  0027D2  C04D  F028         	movff	_PartialRot,i1___ftsub@f1
 11130  0027D6  C04E  F029         	movff	_PartialRot+1,i1___ftsub@f1+1
 11131  0027DA  C04F  F02A         	movff	_PartialRot+2,i1___ftsub@f1+2
 11132  0027DE  0E97               	movlw	low _CountPerRev
 11133  0027E0  6EF6               	movwf	tblptrl,c
 11134  0027E2                     	if	1	;There is more than 1 active tblptr byte
 11135  0027E2  0E06               	movlw	high _CountPerRev
 11136  0027E4  6EF7               	movwf	tblptrh,c
 11137  0027E6                     	endif
 11138  0027E6                     	if	0	;There are less than 3 active tblptr bytes
 11139  0027E6                     	endif
 11140  0027E6  0009               	tblrd		*+
 11141  0027E8  FFFF               	dw	65535	; errata NOP
 11142  0027EA  CFF5 F009          	movff	tablat,___awtoft@c
 11143  0027EE  000A               	tblrd		*-
 11144  0027F0  FFFF               	dw	65535	; errata NOP
 11145  0027F2  CFF5 F00A          	movff	tablat,___awtoft@c+1
 11146  0027F6  EC66  F01E         	call	___awtoft	;wreg free
 11147  0027FA  C009  F010         	movff	?___awtoft,i1___ftdiv@f2
 11148  0027FE  C00A  F011         	movff	?___awtoft+1,i1___ftdiv@f2+1
 11149  002802  C00B  F012         	movff	?___awtoft+2,i1___ftdiv@f2+2
 11150  002806  0E99               	movlw	low _EncoderPoll
 11151  002808  6EF6               	movwf	tblptrl,c
 11152  00280A                     	if	1	;There is more than 1 active tblptr byte
 11153  00280A  0E06               	movlw	high _EncoderPoll
 11154  00280C  6EF7               	movwf	tblptrh,c
 11155  00280E                     	endif
 11156  00280E                     	if	0	;There are less than 3 active tblptr bytes
 11157  00280E                     	endif
 11158  00280E  0009               	tblrd		*+
 11159  002810  FFFF               	dw	65535	; errata NOP
 11160  002812  CFF5 F009          	movff	tablat,___awtoft@c
 11161  002816  000A               	tblrd		*-
 11162  002818  FFFF               	dw	65535	; errata NOP
 11163  00281A  CFF5 F00A          	movff	tablat,___awtoft@c+1
 11164  00281E  EC66  F01E         	call	___awtoft	;wreg free
 11165  002822  C009  F00D         	movff	?___awtoft,i1___ftdiv@f1
 11166  002826  C00A  F00E         	movff	?___awtoft+1,i1___ftdiv@f1+1
 11167  00282A  C00B  F00F         	movff	?___awtoft+2,i1___ftdiv@f1+2
 11168  00282E  EC47  F01B         	call	i1___ftdiv	;wreg free
 11169  002832  C00D  F02B         	movff	?i1___ftdiv,i1___ftsub@f2
 11170  002836  C00E  F02C         	movff	?i1___ftdiv+1,i1___ftsub@f2+1
 11171  00283A  C00F  F02D         	movff	?i1___ftdiv+2,i1___ftsub@f2+2
 11172  00283E  EC46  F01F         	call	i1___ftsub	;wreg free
 11173  002842  C028  F04D         	movff	?i1___ftsub,_PartialRot
 11174  002846  C029  F04E         	movff	?i1___ftsub+1,_PartialRot+1
 11175  00284A  C02A  F04F         	movff	?i1___ftsub+2,_PartialRot+2
 11176                           
 11177                           ;user.c: 232: }
 11178  00284E  D04F               	goto	i1l3887
 11179  002850                     i1l3881:
 11180                           
 11181                           ;user.c: 233: else if (CWTurn < CCWTurn)
 11182  002850  5057               	movf	_CWTurn+1,w,c
 11183  002852  0A80               	xorlw	128
 11184  002854  6E2E               	movwf	??_ReadEncoder& (0+255),c
 11185  002856  5050               	movf	_CCWTurn,w,c
 11186  002858  5C56               	subwf	_CWTurn,w,c
 11187  00285A  5051               	movf	_CCWTurn+1,w,c
 11188  00285C  0A80               	xorlw	128
 11189  00285E  582E               	subwfb	??_ReadEncoder& (0+255),w,c
 11190  002860  B0D8               	btfsc	status,0,c
 11191  002862  D042               	goto	i1l165
 11192                           
 11193                           ;user.c: 234: {
 11194                           ;user.c: 235: PORTAbits.RA3 = 0;
 11195  002864  9680               	bcf	3968,3,c	;volatile
 11196                           
 11197                           ;user.c: 236: PORTAbits.RA2 = 1;
 11198  002866  8480               	bsf	3968,2,c	;volatile
 11199                           
 11200                           ;user.c: 237: PORTAbits.RA1 = 0;
 11201  002868  9280               	bcf	3968,1,c	;volatile
 11202                           
 11203                           ;user.c: 238: PartialRot += ((double)EncoderPoll)/CountPerRev;
 11204  00286A  C04D  F01C         	movff	_PartialRot,i1___ftadd@f1
 11205  00286E  C04E  F01D         	movff	_PartialRot+1,i1___ftadd@f1+1
 11206  002872  C04F  F01E         	movff	_PartialRot+2,i1___ftadd@f1+2
 11207  002876  0E97               	movlw	low _CountPerRev
 11208  002878  6EF6               	movwf	tblptrl,c
 11209  00287A                     	if	1	;There is more than 1 active tblptr byte
 11210  00287A  0E06               	movlw	high _CountPerRev
 11211  00287C  6EF7               	movwf	tblptrh,c
 11212  00287E                     	endif
 11213  00287E                     	if	0	;There are less than 3 active tblptr bytes
 11214  00287E                     	endif
 11215  00287E  0009               	tblrd		*+
 11216  002880  FFFF               	dw	65535	; errata NOP
 11217  002882  CFF5 F009          	movff	tablat,___awtoft@c
 11218  002886  000A               	tblrd		*-
 11219  002888  FFFF               	dw	65535	; errata NOP
 11220  00288A  CFF5 F00A          	movff	tablat,___awtoft@c+1
 11221  00288E  EC66  F01E         	call	___awtoft	;wreg free
 11222  002892  C009  F010         	movff	?___awtoft,i1___ftdiv@f2
 11223  002896  C00A  F011         	movff	?___awtoft+1,i1___ftdiv@f2+1
 11224  00289A  C00B  F012         	movff	?___awtoft+2,i1___ftdiv@f2+2
 11225  00289E  0E99               	movlw	low _EncoderPoll
 11226  0028A0  6EF6               	movwf	tblptrl,c
 11227  0028A2                     	if	1	;There is more than 1 active tblptr byte
 11228  0028A2  0E06               	movlw	high _EncoderPoll
 11229  0028A4  6EF7               	movwf	tblptrh,c
 11230  0028A6                     	endif
 11231  0028A6                     	if	0	;There are less than 3 active tblptr bytes
 11232  0028A6                     	endif
 11233  0028A6  0009               	tblrd		*+
 11234  0028A8  FFFF               	dw	65535	; errata NOP
 11235  0028AA  CFF5 F009          	movff	tablat,___awtoft@c
 11236  0028AE  000A               	tblrd		*-
 11237  0028B0  FFFF               	dw	65535	; errata NOP
 11238  0028B2  CFF5 F00A          	movff	tablat,___awtoft@c+1
 11239  0028B6  EC66  F01E         	call	___awtoft	;wreg free
 11240  0028BA  C009  F00D         	movff	?___awtoft,i1___ftdiv@f1
 11241  0028BE  C00A  F00E         	movff	?___awtoft+1,i1___ftdiv@f1+1
 11242  0028C2  C00B  F00F         	movff	?___awtoft+2,i1___ftdiv@f1+2
 11243  0028C6  EC47  F01B         	call	i1___ftdiv	;wreg free
 11244  0028CA  C00D  F01F         	movff	?i1___ftdiv,i1___ftadd@f2
 11245  0028CE  C00E  F020         	movff	?i1___ftdiv+1,i1___ftadd@f2+1
 11246  0028D2  C00F  F021         	movff	?i1___ftdiv+2,i1___ftadd@f2+2
 11247  0028D6  EC76  F015         	call	i1___ftadd	;wreg free
 11248  0028DA  C01C  F04D         	movff	?i1___ftadd,_PartialRot
 11249  0028DE  C01D  F04E         	movff	?i1___ftadd+1,_PartialRot+1
 11250  0028E2  C01E  F04F         	movff	?i1___ftadd+2,_PartialRot+2
 11251                           
 11252                           ;user.c: 239: }
 11253  0028E6  D003               	goto	i1l3887
 11254  0028E8                     i1l165:
 11255                           
 11256                           ;user.c: 240: else
 11257                           ;user.c: 241: {
 11258                           ;user.c: 242: PORTAbits.RA3 = 0;
 11259  0028E8  9680               	bcf	3968,3,c	;volatile
 11260                           
 11261                           ;user.c: 243: PORTAbits.RA2 = 0;
 11262  0028EA  9480               	bcf	3968,2,c	;volatile
 11263                           
 11264                           ;user.c: 244: PORTAbits.RA1 = 0;
 11265  0028EC  9280               	bcf	3968,1,c	;volatile
 11266  0028EE                     i1l3887:
 11267                           
 11268                           ;user.c: 245: }
 11269                           ;user.c: 247: CWTurn = 0;
 11270  0028EE  0E00               	movlw	0
 11271  0028F0  6E57               	movwf	_CWTurn+1,c
 11272  0028F2  0E00               	movlw	0
 11273  0028F4  6E56               	movwf	_CWTurn,c
 11274                           
 11275                           ;user.c: 248: CCWTurn = 0;
 11276  0028F6  0E00               	movlw	0
 11277  0028F8  6E51               	movwf	_CCWTurn+1,c
 11278  0028FA  0E00               	movlw	0
 11279  0028FC  6E50               	movwf	_CCWTurn,c
 11280  0028FE                     i1l3889:
 11281                           
 11282                           ;user.c: 249: }
 11283                           ;user.c: 252: OLD_ROT = NEW_ROT;
 11284  0028FE  C03A  F058         	movff	ReadEncoder@NEW_ROT,_OLD_ROT
 11285  002902  C03B  F059         	movff	ReadEncoder@NEW_ROT+1,_OLD_ROT+1
 11286  002906  0012               	return	
 11287  002908  FFFF               	dw	65535	; errata NOP
 11288  00290A                     __end_of_ReadEncoder:
 11289                           	opt stack 0
 11290                           pclatu	equ	0xFFB
 11291                           pclath	equ	0xFFA
 11292                           tblptru	equ	0xFF8
 11293                           tblptrh	equ	0xFF7
 11294                           tblptrl	equ	0xFF6
 11295                           tablat	equ	0xFF5
 11296                           prodh	equ	0xFF4
 11297                           prodl	equ	0xFF3
 11298                           intcon	equ	0xFF2
 11299                           intcon2	equ	0xFF1
 11300                           postinc0	equ	0xFEE
 11301                           fsr0h	equ	0xFEA
 11302                           fsr0l	equ	0xFE9
 11303                           wreg	equ	0xFE8
 11304                           postinc1	equ	0xFE6
 11305                           postdec1	equ	0xFE5
 11306                           fsr1h	equ	0xFE2
 11307                           fsr1l	equ	0xFE1
 11308                           bsr	equ	0xFE0
 11309                           indf2	equ	0xFDF
 11310                           postinc2	equ	0xFDE
 11311                           postdec2	equ	0xFDD
 11312                           fsr2h	equ	0xFDA
 11313                           fsr2l	equ	0xFD9
 11314                           status	equ	0xFD8
 11315                           
 11316 ;; *************** function i1___ftsub *****************
 11317 ;; Defined at:
 11318 ;;		line 20 in file "/Applications/microchip/xc8/v1.33/sources/common/ftsub.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;  f1              3   39[COMRAM] float 
 11321 ;;  f2              3   42[COMRAM] float 
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  3   39[COMRAM] float 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2, status,0, cstack
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11333 ;;      Params:         6       0       0       0       0       0       0
 11334 ;;      Locals:         0       0       0       0       0       0       0
 11335 ;;      Temps:          0       0       0       0       0       0       0
 11336 ;;      Totals:         6       0       0       0       0       0       0
 11337 ;;Total ram usage:        6 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    3
 11340 ;; This function calls:
 11341 ;;		i1___ftadd
 11342 ;; This function is called by:
 11343 ;;		_ReadEncoder
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           	psect	text36
 11348  003E8C                     __ptext36:
 11349                           	opt stack 0
 11350  003E8C                     i1___ftsub:
 11351                           	opt stack 19
 11352                           
 11353                           ;incstack = 0
 11354  003E8C  FFFF               	dw	65535
 11355  003E8E  0E00               	movlw	0
 11356  003E90  1A2B               	xorwf	i1___ftsub@f2,f,c
 11357  003E92  0E00               	movlw	0
 11358  003E94  1A2C               	xorwf	i1___ftsub@f2+1,f,c
 11359  003E96  0E80               	movlw	128
 11360  003E98  1A2D               	xorwf	i1___ftsub@f2+2,f,c
 11361  003E9A  C028  F01C         	movff	i1___ftsub@f1,i1___ftadd@f1
 11362  003E9E  C029  F01D         	movff	i1___ftsub@f1+1,i1___ftadd@f1+1
 11363  003EA2  C02A  F01E         	movff	i1___ftsub@f1+2,i1___ftadd@f1+2
 11364  003EA6  C02B  F01F         	movff	i1___ftsub@f2,i1___ftadd@f2
 11365  003EAA  C02C  F020         	movff	i1___ftsub@f2+1,i1___ftadd@f2+1
 11366  003EAE  C02D  F021         	movff	i1___ftsub@f2+2,i1___ftadd@f2+2
 11367  003EB2  EC76  F015         	call	i1___ftadd	;wreg free
 11368  003EB6  C01C  F028         	movff	?i1___ftadd,?i1___ftsub
 11369  003EBA  C01D  F029         	movff	?i1___ftadd+1,?i1___ftsub+1
 11370  003EBE  C01E  F02A         	movff	?i1___ftadd+2,?i1___ftsub+2
 11371  003EC2  0012               	return	
 11372  003EC4  FFFF               	dw	65535	; errata NOP
 11373  003EC6                     __end_ofi1___ftsub:
 11374                           	opt stack 0
 11375                           pclatu	equ	0xFFB
 11376                           pclath	equ	0xFFA
 11377                           tblptru	equ	0xFF8
 11378                           tblptrh	equ	0xFF7
 11379                           tblptrl	equ	0xFF6
 11380                           tablat	equ	0xFF5
 11381                           prodh	equ	0xFF4
 11382                           prodl	equ	0xFF3
 11383                           intcon	equ	0xFF2
 11384                           intcon2	equ	0xFF1
 11385                           postinc0	equ	0xFEE
 11386                           fsr0h	equ	0xFEA
 11387                           fsr0l	equ	0xFE9
 11388                           wreg	equ	0xFE8
 11389                           postinc1	equ	0xFE6
 11390                           postdec1	equ	0xFE5
 11391                           fsr1h	equ	0xFE2
 11392                           fsr1l	equ	0xFE1
 11393                           bsr	equ	0xFE0
 11394                           indf2	equ	0xFDF
 11395                           postinc2	equ	0xFDE
 11396                           postdec2	equ	0xFDD
 11397                           fsr2h	equ	0xFDA
 11398                           fsr2l	equ	0xFD9
 11399                           status	equ	0xFD8
 11400                           
 11401 ;; *************** function i1___ftadd *****************
 11402 ;; Defined at:
 11403 ;;		line 86 in file "/Applications/microchip/xc8/v1.33/sources/common/ftadd.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;  f1              3   27[COMRAM] float 
 11406 ;;  f2              3   30[COMRAM] float 
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;  __ftadd         1   38[COMRAM] unsigned char 
 11409 ;;  __ftadd         1   37[COMRAM] unsigned char 
 11410 ;;  __ftadd         1   36[COMRAM] unsigned char 
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  3   27[COMRAM] float 
 11413 ;; Registers used:
 11414 ;;		wreg, status,2, status,0, cstack
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11420 ;;      Params:         6       0       0       0       0       0       0
 11421 ;;      Locals:         3       0       0       0       0       0       0
 11422 ;;      Temps:          3       0       0       0       0       0       0
 11423 ;;      Totals:        12       0       0       0       0       0       0
 11424 ;;Total ram usage:       12 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:    2
 11427 ;; This function calls:
 11428 ;;		i1___ftpack
 11429 ;; This function is called by:
 11430 ;;		_ReadEncoder
 11431 ;;		i1___ftsub
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           
 11435                           	psect	text37
 11436  002AEC                     __ptext37:
 11437                           	opt stack 0
 11438  002AEC                     i1___ftadd:
 11439                           	opt stack 19
 11440                           
 11441                           ;incstack = 0
 11442  002AEC  FFFF               	dw	65535
 11443  002AEE  C01E  F022         	movff	i1___ftadd@f1+2,??i1___ftadd
 11444  002AF2  6A23               	clrf	(??i1___ftadd+1)& (0+255),c
 11445  002AF4  6A24               	clrf	(??i1___ftadd+2)& (0+255),c
 11446  002AF6  341D               	rlcf	i1___ftadd@f1+1,w,c
 11447  002AF8  3622               	rlcf	??i1___ftadd& (0+255),f,c
 11448  002AFA  E301               	bnc	u334_21
 11449  002AFC  8023               	bsf	(??i1___ftadd+1)& (0+255),0,c
 11450  002AFE                     u334_21:
 11451  002AFE  5022               	movf	??i1___ftadd,w,c
 11452  002B00  6E27               	movwf	i1___ftadd@exp1,c
 11453  002B02  C021  F022         	movff	i1___ftadd@f2+2,??i1___ftadd
 11454  002B06  6A23               	clrf	(??i1___ftadd+1)& (0+255),c
 11455  002B08  6A24               	clrf	(??i1___ftadd+2)& (0+255),c
 11456  002B0A  3420               	rlcf	i1___ftadd@f2+1,w,c
 11457  002B0C  3622               	rlcf	??i1___ftadd& (0+255),f,c
 11458  002B0E  E301               	bnc	u335_21
 11459  002B10  8023               	bsf	(??i1___ftadd+1)& (0+255),0,c
 11460  002B12                     u335_21:
 11461  002B12  5022               	movf	??i1___ftadd,w,c
 11462  002B14  6E26               	movwf	i1___ftadd@exp2,c
 11463  002B16  5027               	movf	i1___ftadd@exp1,w,c
 11464  002B18  B4D8               	btfsc	status,2,c
 11465  002B1A  D00C               	goto	i1l735
 11466  002B1C  5026               	movf	i1___ftadd@exp2,w,c
 11467  002B1E  5C27               	subwf	i1___ftadd@exp1,w,c
 11468  002B20  B0D8               	btfsc	status,0,c
 11469  002B22  D00F               	goto	i1l3131
 11470  002B24  5027               	movf	i1___ftadd@exp1,w,c
 11471  002B26  0800               	sublw	0
 11472  002B28  2426               	addwf	i1___ftadd@exp2,w,c
 11473  002B2A  6E22               	movwf	??i1___ftadd& (0+255),c
 11474  002B2C  0E19               	movlw	25
 11475  002B2E  5C22               	subwf	??i1___ftadd,w,c
 11476  002B30  A0D8               	btfss	status,0,c
 11477  002B32  D007               	goto	i1l3131
 11478  002B34                     i1l735:
 11479  002B34  C01F  F01C         	movff	i1___ftadd@f2,?i1___ftadd
 11480  002B38  C020  F01D         	movff	i1___ftadd@f2+1,?i1___ftadd+1
 11481  002B3C  C021  F01E         	movff	i1___ftadd@f2+2,?i1___ftadd+2
 11482  002B40  D0AB               	goto	i1l736
 11483  002B42                     i1l3131:
 11484  002B42  5026               	movf	i1___ftadd@exp2,w,c
 11485  002B44  B4D8               	btfsc	status,2,c
 11486  002B46  D00C               	goto	i1l739
 11487  002B48  5027               	movf	i1___ftadd@exp1,w,c
 11488  002B4A  5C26               	subwf	i1___ftadd@exp2,w,c
 11489  002B4C  B0D8               	btfsc	status,0,c
 11490  002B4E  D00F               	goto	i1l3137
 11491  002B50  5026               	movf	i1___ftadd@exp2,w,c
 11492  002B52  0800               	sublw	0
 11493  002B54  2427               	addwf	i1___ftadd@exp1,w,c
 11494  002B56  6E22               	movwf	??i1___ftadd& (0+255),c
 11495  002B58  0E19               	movlw	25
 11496  002B5A  5C22               	subwf	??i1___ftadd,w,c
 11497  002B5C  A0D8               	btfss	status,0,c
 11498  002B5E  D007               	goto	i1l3137
 11499  002B60                     i1l739:
 11500  002B60  C01C  F01C         	movff	i1___ftadd@f1,?i1___ftadd
 11501  002B64  C01D  F01D         	movff	i1___ftadd@f1+1,?i1___ftadd+1
 11502  002B68  C01E  F01E         	movff	i1___ftadd@f1+2,?i1___ftadd+2
 11503  002B6C  D095               	goto	i1l736
 11504  002B6E                     i1l3137:
 11505  002B6E  0E06               	movlw	6
 11506  002B70  6E25               	movwf	i1___ftadd@sign,c
 11507  002B72  BE1E               	btfsc	i1___ftadd@f1+2,7,c
 11508  002B74  8E25               	bsf	i1___ftadd@sign,7,c
 11509  002B76  BE21               	btfsc	i1___ftadd@f2+2,7,c
 11510  002B78  8C25               	bsf	i1___ftadd@sign,6,c
 11511  002B7A  8E1D               	bsf	i1___ftadd@f1+1,7,c
 11512  002B7C  0EFF               	movlw	255
 11513  002B7E  161C               	andwf	i1___ftadd@f1,f,c
 11514  002B80  0EFF               	movlw	255
 11515  002B82  161D               	andwf	i1___ftadd@f1+1,f,c
 11516  002B84  0E00               	movlw	0
 11517  002B86  161E               	andwf	i1___ftadd@f1+2,f,c
 11518  002B88  8E20               	bsf	i1___ftadd@f2+1,7,c
 11519  002B8A  0EFF               	movlw	255
 11520  002B8C  161F               	andwf	i1___ftadd@f2,f,c
 11521  002B8E  0EFF               	movlw	255
 11522  002B90  1620               	andwf	i1___ftadd@f2+1,f,c
 11523  002B92  0E00               	movlw	0
 11524  002B94  1621               	andwf	i1___ftadd@f2+2,f,c
 11525  002B96  5026               	movf	i1___ftadd@exp2,w,c
 11526  002B98  5C27               	subwf	i1___ftadd@exp1,w,c
 11527  002B9A  B0D8               	btfsc	status,0,c
 11528  002B9C  D01A               	goto	i1l3163
 11529  002B9E                     i1l3153:
 11530  002B9E  90D8               	bcf	status,0,c
 11531  002BA0  361F               	rlcf	i1___ftadd@f2,f,c
 11532  002BA2  3620               	rlcf	i1___ftadd@f2+1,f,c
 11533  002BA4  3621               	rlcf	i1___ftadd@f2+2,f,c
 11534  002BA6  0626               	decf	i1___ftadd@exp2,f,c
 11535  002BA8  5026               	movf	i1___ftadd@exp2,w,c
 11536  002BAA  1827               	xorwf	i1___ftadd@exp1,w,c
 11537  002BAC  B4D8               	btfsc	status,2,c
 11538  002BAE  D00D               	goto	i1l3161
 11539  002BB0  0625               	decf	i1___ftadd@sign,f,c
 11540  002BB2  C025  F022         	movff	i1___ftadd@sign,??i1___ftadd
 11541  002BB6  0E07               	movlw	7
 11542  002BB8  1622               	andwf	??i1___ftadd,f,c
 11543  002BBA  B4D8               	btfsc	status,2,c
 11544  002BBC  D006               	goto	i1l3161
 11545  002BBE  D7EF               	goto	i1l3153
 11546  002BC0                     i1l3159:
 11547  002BC0  90D8               	bcf	status,0,c
 11548  002BC2  321E               	rrcf	i1___ftadd@f1+2,f,c
 11549  002BC4  321D               	rrcf	i1___ftadd@f1+1,f,c
 11550  002BC6  321C               	rrcf	i1___ftadd@f1,f,c
 11551  002BC8  2A27               	incf	i1___ftadd@exp1,f,c
 11552  002BCA                     i1l3161:
 11553  002BCA  5026               	movf	i1___ftadd@exp2,w,c
 11554  002BCC  6227               	cpfseq	i1___ftadd@exp1,c
 11555  002BCE  D7F8               	goto	i1l3159
 11556  002BD0  D01D               	goto	i1l750
 11557  002BD2                     i1l3163:
 11558  002BD2  5027               	movf	i1___ftadd@exp1,w,c
 11559  002BD4  5C26               	subwf	i1___ftadd@exp2,w,c
 11560  002BD6  B0D8               	btfsc	status,0,c
 11561  002BD8  D019               	goto	i1l750
 11562  002BDA                     i1l3165:
 11563  002BDA  90D8               	bcf	status,0,c
 11564  002BDC  361C               	rlcf	i1___ftadd@f1,f,c
 11565  002BDE  361D               	rlcf	i1___ftadd@f1+1,f,c
 11566  002BE0  361E               	rlcf	i1___ftadd@f1+2,f,c
 11567  002BE2  0627               	decf	i1___ftadd@exp1,f,c
 11568  002BE4  5026               	movf	i1___ftadd@exp2,w,c
 11569  002BE6  1827               	xorwf	i1___ftadd@exp1,w,c
 11570  002BE8  B4D8               	btfsc	status,2,c
 11571  002BEA  D00D               	goto	i1l3173
 11572  002BEC  0625               	decf	i1___ftadd@sign,f,c
 11573  002BEE  C025  F022         	movff	i1___ftadd@sign,??i1___ftadd
 11574  002BF2  0E07               	movlw	7
 11575  002BF4  1622               	andwf	??i1___ftadd,f,c
 11576  002BF6  B4D8               	btfsc	status,2,c
 11577  002BF8  D006               	goto	i1l3173
 11578  002BFA  D7EF               	goto	i1l3165
 11579  002BFC                     i1l3171:
 11580  002BFC  90D8               	bcf	status,0,c
 11581  002BFE  3221               	rrcf	i1___ftadd@f2+2,f,c
 11582  002C00  3220               	rrcf	i1___ftadd@f2+1,f,c
 11583  002C02  321F               	rrcf	i1___ftadd@f2,f,c
 11584  002C04  2A26               	incf	i1___ftadd@exp2,f,c
 11585  002C06                     i1l3173:
 11586  002C06  5026               	movf	i1___ftadd@exp2,w,c
 11587  002C08  6227               	cpfseq	i1___ftadd@exp1,c
 11588  002C0A  D7F8               	goto	i1l3171
 11589  002C0C                     i1l750:
 11590  002C0C  AE25               	btfss	i1___ftadd@sign,7,c
 11591  002C0E  D00C               	goto	i1l759
 11592  002C10  0EFF               	movlw	255
 11593  002C12  1A1C               	xorwf	i1___ftadd@f1,f,c
 11594  002C14  0EFF               	movlw	255
 11595  002C16  1A1D               	xorwf	i1___ftadd@f1+1,f,c
 11596  002C18  0EFF               	movlw	255
 11597  002C1A  1A1E               	xorwf	i1___ftadd@f1+2,f,c
 11598  002C1C  0E01               	movlw	1
 11599  002C1E  261C               	addwf	i1___ftadd@f1,f,c
 11600  002C20  0E00               	movlw	0
 11601  002C22  221D               	addwfc	i1___ftadd@f1+1,f,c
 11602  002C24  0E00               	movlw	0
 11603  002C26  221E               	addwfc	i1___ftadd@f1+2,f,c
 11604  002C28                     i1l759:
 11605  002C28  AC25               	btfss	i1___ftadd@sign,6,c
 11606  002C2A  D00C               	goto	i1l3179
 11607  002C2C  0EFF               	movlw	255
 11608  002C2E  1A1F               	xorwf	i1___ftadd@f2,f,c
 11609  002C30  0EFF               	movlw	255
 11610  002C32  1A20               	xorwf	i1___ftadd@f2+1,f,c
 11611  002C34  0EFF               	movlw	255
 11612  002C36  1A21               	xorwf	i1___ftadd@f2+2,f,c
 11613  002C38  0E01               	movlw	1
 11614  002C3A  261F               	addwf	i1___ftadd@f2,f,c
 11615  002C3C  0E00               	movlw	0
 11616  002C3E  2220               	addwfc	i1___ftadd@f2+1,f,c
 11617  002C40  0E00               	movlw	0
 11618  002C42  2221               	addwfc	i1___ftadd@f2+2,f,c
 11619  002C44                     i1l3179:
 11620  002C44  0E00               	movlw	0
 11621  002C46  6E25               	movwf	i1___ftadd@sign,c
 11622  002C48  501C               	movf	i1___ftadd@f1,w,c
 11623  002C4A  261F               	addwf	i1___ftadd@f2,f,c
 11624  002C4C  501D               	movf	i1___ftadd@f1+1,w,c
 11625  002C4E  2220               	addwfc	i1___ftadd@f2+1,f,c
 11626  002C50  501E               	movf	i1___ftadd@f1+2,w,c
 11627  002C52  2221               	addwfc	i1___ftadd@f2+2,f,c
 11628  002C54  AE21               	btfss	i1___ftadd@f2+2,7,c
 11629  002C56  D00E               	goto	i1l3189
 11630  002C58  0EFF               	movlw	255
 11631  002C5A  1A1F               	xorwf	i1___ftadd@f2,f,c
 11632  002C5C  0EFF               	movlw	255
 11633  002C5E  1A20               	xorwf	i1___ftadd@f2+1,f,c
 11634  002C60  0EFF               	movlw	255
 11635  002C62  1A21               	xorwf	i1___ftadd@f2+2,f,c
 11636  002C64  0E01               	movlw	1
 11637  002C66  261F               	addwf	i1___ftadd@f2,f,c
 11638  002C68  0E00               	movlw	0
 11639  002C6A  2220               	addwfc	i1___ftadd@f2+1,f,c
 11640  002C6C  0E00               	movlw	0
 11641  002C6E  2221               	addwfc	i1___ftadd@f2+2,f,c
 11642  002C70  0E01               	movlw	1
 11643  002C72  6E25               	movwf	i1___ftadd@sign,c
 11644  002C74                     i1l3189:
 11645  002C74  C01F  F001         	movff	i1___ftadd@f2,i1___ftpack@arg
 11646  002C78  C020  F002         	movff	i1___ftadd@f2+1,i1___ftpack@arg+1
 11647  002C7C  C021  F003         	movff	i1___ftadd@f2+2,i1___ftpack@arg+2
 11648  002C80  C027  F004         	movff	i1___ftadd@exp1,i1___ftpack@exp
 11649  002C84  C025  F005         	movff	i1___ftadd@sign,i1___ftpack@sign
 11650  002C88  ECF0  F01C         	call	i1___ftpack	;wreg free
 11651  002C8C  C001  F01C         	movff	?i1___ftpack,?i1___ftadd
 11652  002C90  C002  F01D         	movff	?i1___ftpack+1,?i1___ftadd+1
 11653  002C94  C003  F01E         	movff	?i1___ftpack+2,?i1___ftadd+2
 11654  002C98                     i1l736:
 11655  002C98  0012               	return	
 11656  002C9A  FFFF               	dw	65535	; errata NOP
 11657  002C9C                     __end_ofi1___ftadd:
 11658                           	opt stack 0
 11659                           pclatu	equ	0xFFB
 11660                           pclath	equ	0xFFA
 11661                           tblptru	equ	0xFF8
 11662                           tblptrh	equ	0xFF7
 11663                           tblptrl	equ	0xFF6
 11664                           tablat	equ	0xFF5
 11665                           prodh	equ	0xFF4
 11666                           prodl	equ	0xFF3
 11667                           intcon	equ	0xFF2
 11668                           intcon2	equ	0xFF1
 11669                           postinc0	equ	0xFEE
 11670                           fsr0h	equ	0xFEA
 11671                           fsr0l	equ	0xFE9
 11672                           wreg	equ	0xFE8
 11673                           postinc1	equ	0xFE6
 11674                           postdec1	equ	0xFE5
 11675                           fsr1h	equ	0xFE2
 11676                           fsr1l	equ	0xFE1
 11677                           bsr	equ	0xFE0
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           fsr2h	equ	0xFDA
 11682                           fsr2l	equ	0xFD9
 11683                           status	equ	0xFD8
 11684                           
 11685 ;; *************** function i1___ftdiv *****************
 11686 ;; Defined at:
 11687 ;;		line 49 in file "/Applications/microchip/xc8/v1.33/sources/common/ftdiv.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;  f1              3   12[COMRAM] float 
 11690 ;;  f2              3   15[COMRAM] float 
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;  __ftdiv         3   22[COMRAM] float 
 11693 ;;  __ftdiv         1   26[COMRAM] unsigned char 
 11694 ;;  __ftdiv         1   25[COMRAM] unsigned char 
 11695 ;;  __ftdiv         1   21[COMRAM] unsigned char 
 11696 ;; Return value:  Size  Location     Type
 11697 ;;                  3   12[COMRAM] float 
 11698 ;; Registers used:
 11699 ;;		wreg, status,2, status,0, cstack
 11700 ;; Tracked objects:
 11701 ;;		On entry : 0/0
 11702 ;;		On exit  : 0/0
 11703 ;;		Unchanged: 0/0
 11704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11705 ;;      Params:         6       0       0       0       0       0       0
 11706 ;;      Locals:         6       0       0       0       0       0       0
 11707 ;;      Temps:          3       0       0       0       0       0       0
 11708 ;;      Totals:        15       0       0       0       0       0       0
 11709 ;;Total ram usage:       15 bytes
 11710 ;; Hardware stack levels used:    1
 11711 ;; Hardware stack levels required when called:    2
 11712 ;; This function calls:
 11713 ;;		i1___ftpack
 11714 ;; This function is called by:
 11715 ;;		_low_isr
 11716 ;;		_ReadEncoder
 11717 ;; This function uses a non-reentrant model
 11718 ;;
 11719                           
 11720                           	psect	text38
 11721  00368E                     __ptext38:
 11722                           	opt stack 0
 11723  00368E                     i1___ftdiv:
 11724                           	opt stack 21
 11725                           
 11726                           ;incstack = 0
 11727  00368E  FFFF               	dw	65535
 11728  003690  C00F  F013         	movff	i1___ftdiv@f1+2,??i1___ftdiv
 11729  003694  6A14               	clrf	(??i1___ftdiv+1)& (0+255),c
 11730  003696  6A15               	clrf	(??i1___ftdiv+2)& (0+255),c
 11731  003698  340E               	rlcf	i1___ftdiv@f1+1,w,c
 11732  00369A  3613               	rlcf	??i1___ftdiv& (0+255),f,c
 11733  00369C  E301               	bnc	u435_21
 11734  00369E  8014               	bsf	(??i1___ftdiv+1)& (0+255),0,c
 11735  0036A0                     u435_21:
 11736  0036A0  5013               	movf	??i1___ftdiv,w,c
 11737  0036A2  6E1A               	movwf	i1___ftdiv@exp,c
 11738  0036A4  661A               	tstfsz	i1___ftdiv@exp& (0+255),c
 11739  0036A6  D001               	goto	i1l3755
 11740  0036A8  D00C               	goto	i1u438_20
 11741  0036AA                     i1l3755:
 11742  0036AA  C012  F013         	movff	i1___ftdiv@f2+2,??i1___ftdiv
 11743  0036AE  6A14               	clrf	(??i1___ftdiv+1)& (0+255),c
 11744  0036B0  6A15               	clrf	(??i1___ftdiv+2)& (0+255),c
 11745  0036B2  3411               	rlcf	i1___ftdiv@f2+1,w,c
 11746  0036B4  3613               	rlcf	??i1___ftdiv& (0+255),f,c
 11747  0036B6  E301               	bnc	u437_21
 11748  0036B8  8014               	bsf	(??i1___ftdiv+1)& (0+255),0,c
 11749  0036BA                     u437_21:
 11750  0036BA  5013               	movf	??i1___ftdiv,w,c
 11751  0036BC  6E1B               	movwf	i1___ftdiv@sign,c
 11752  0036BE  661B               	tstfsz	i1___ftdiv@sign& (0+255),c
 11753  0036C0  D007               	goto	i1l3761
 11754  0036C2                     i1u438_20:
 11755  0036C2  0E00               	movlw	0
 11756  0036C4  6E0D               	movwf	?i1___ftdiv,c
 11757  0036C6  0E00               	movlw	0
 11758  0036C8  6E0E               	movwf	?i1___ftdiv+1,c
 11759  0036CA  0E00               	movlw	0
 11760  0036CC  6E0F               	movwf	?i1___ftdiv+2,c
 11761  0036CE  D04A               	goto	i1l767
 11762  0036D0                     i1l3761:
 11763  0036D0  0E00               	movlw	0
 11764  0036D2  6E17               	movwf	i1___ftdiv@f3,c
 11765  0036D4  0E00               	movlw	0
 11766  0036D6  6E18               	movwf	i1___ftdiv@f3+1,c
 11767  0036D8  0E00               	movlw	0
 11768  0036DA  6E19               	movwf	i1___ftdiv@f3+2,c
 11769  0036DC  501B               	movf	i1___ftdiv@sign,w,c
 11770  0036DE  0F89               	addlw	137
 11771  0036E0  5E1A               	subwf	i1___ftdiv@exp,f,c
 11772  0036E2  C00F  F01B         	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 11773  0036E6  5012               	movf	i1___ftdiv@f2+2,w,c
 11774  0036E8  1A1B               	xorwf	i1___ftdiv@sign,f,c
 11775  0036EA  0E80               	movlw	128
 11776  0036EC  161B               	andwf	i1___ftdiv@sign,f,c
 11777  0036EE  8E0E               	bsf	i1___ftdiv@f1+1,7,c
 11778  0036F0  0EFF               	movlw	255
 11779  0036F2  160D               	andwf	i1___ftdiv@f1,f,c
 11780  0036F4  0EFF               	movlw	255
 11781  0036F6  160E               	andwf	i1___ftdiv@f1+1,f,c
 11782  0036F8  0E00               	movlw	0
 11783  0036FA  160F               	andwf	i1___ftdiv@f1+2,f,c
 11784  0036FC  8E11               	bsf	i1___ftdiv@f2+1,7,c
 11785  0036FE  0EFF               	movlw	255
 11786  003700  1610               	andwf	i1___ftdiv@f2,f,c
 11787  003702  0EFF               	movlw	255
 11788  003704  1611               	andwf	i1___ftdiv@f2+1,f,c
 11789  003706  0E00               	movlw	0
 11790  003708  1612               	andwf	i1___ftdiv@f2+2,f,c
 11791  00370A  0E18               	movlw	24
 11792  00370C  6E16               	movwf	i1___ftdiv@cntr,c
 11793  00370E                     i1l3781:
 11794  00370E  90D8               	bcf	status,0,c
 11795  003710  3617               	rlcf	i1___ftdiv@f3,f,c
 11796  003712  3618               	rlcf	i1___ftdiv@f3+1,f,c
 11797  003714  3619               	rlcf	i1___ftdiv@f3+2,f,c
 11798  003716  5010               	movf	i1___ftdiv@f2,w,c
 11799  003718  5C0D               	subwf	i1___ftdiv@f1,w,c
 11800  00371A  5011               	movf	i1___ftdiv@f2+1,w,c
 11801  00371C  580E               	subwfb	i1___ftdiv@f1+1,w,c
 11802  00371E  5012               	movf	i1___ftdiv@f2+2,w,c
 11803  003720  580F               	subwfb	i1___ftdiv@f1+2,w,c
 11804  003722  A0D8               	btfss	status,0,c
 11805  003724  D007               	goto	i1l770
 11806  003726  5010               	movf	i1___ftdiv@f2,w,c
 11807  003728  5E0D               	subwf	i1___ftdiv@f1,f,c
 11808  00372A  5011               	movf	i1___ftdiv@f2+1,w,c
 11809  00372C  5A0E               	subwfb	i1___ftdiv@f1+1,f,c
 11810  00372E  5012               	movf	i1___ftdiv@f2+2,w,c
 11811  003730  5A0F               	subwfb	i1___ftdiv@f1+2,f,c
 11812  003732  8017               	bsf	i1___ftdiv@f3,0,c
 11813  003734                     i1l770:
 11814  003734  90D8               	bcf	status,0,c
 11815  003736  360D               	rlcf	i1___ftdiv@f1,f,c
 11816  003738  360E               	rlcf	i1___ftdiv@f1+1,f,c
 11817  00373A  360F               	rlcf	i1___ftdiv@f1+2,f,c
 11818  00373C  2E16               	decfsz	i1___ftdiv@cntr,f,c
 11819  00373E  D7E7               	goto	i1l3781
 11820  003740  C017  F001         	movff	i1___ftdiv@f3,i1___ftpack@arg
 11821  003744  C018  F002         	movff	i1___ftdiv@f3+1,i1___ftpack@arg+1
 11822  003748  C019  F003         	movff	i1___ftdiv@f3+2,i1___ftpack@arg+2
 11823  00374C  C01A  F004         	movff	i1___ftdiv@exp,i1___ftpack@exp
 11824  003750  C01B  F005         	movff	i1___ftdiv@sign,i1___ftpack@sign
 11825  003754  ECF0  F01C         	call	i1___ftpack	;wreg free
 11826  003758  C001  F00D         	movff	?i1___ftpack,?i1___ftdiv
 11827  00375C  C002  F00E         	movff	?i1___ftpack+1,?i1___ftdiv+1
 11828  003760  C003  F00F         	movff	?i1___ftpack+2,?i1___ftdiv+2
 11829  003764                     i1l767:
 11830  003764  0012               	return	
 11831  003766  FFFF               	dw	65535	; errata NOP
 11832  003768                     __end_ofi1___ftdiv:
 11833                           	opt stack 0
 11834                           pclatu	equ	0xFFB
 11835                           pclath	equ	0xFFA
 11836                           tblptru	equ	0xFF8
 11837                           tblptrh	equ	0xFF7
 11838                           tblptrl	equ	0xFF6
 11839                           tablat	equ	0xFF5
 11840                           prodh	equ	0xFF4
 11841                           prodl	equ	0xFF3
 11842                           intcon	equ	0xFF2
 11843                           intcon2	equ	0xFF1
 11844                           postinc0	equ	0xFEE
 11845                           fsr0h	equ	0xFEA
 11846                           fsr0l	equ	0xFE9
 11847                           wreg	equ	0xFE8
 11848                           postinc1	equ	0xFE6
 11849                           postdec1	equ	0xFE5
 11850                           fsr1h	equ	0xFE2
 11851                           fsr1l	equ	0xFE1
 11852                           bsr	equ	0xFE0
 11853                           indf2	equ	0xFDF
 11854                           postinc2	equ	0xFDE
 11855                           postdec2	equ	0xFDD
 11856                           fsr2h	equ	0xFDA
 11857                           fsr2l	equ	0xFD9
 11858                           status	equ	0xFD8
 11859                           
 11860 ;; *************** function ___awtoft *****************
 11861 ;; Defined at:
 11862 ;;		line 32 in file "/Applications/microchip/xc8/v1.33/sources/common/awtoft.c"
 11863 ;; Parameters:    Size  Location     Type
 11864 ;;  c               2    8[COMRAM] int 
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;  sign            1   11[COMRAM] unsigned char 
 11867 ;; Return value:  Size  Location     Type
 11868 ;;                  3    8[COMRAM] float 
 11869 ;; Registers used:
 11870 ;;		wreg, status,2, status,0, prodl, cstack
 11871 ;; Tracked objects:
 11872 ;;		On entry : 0/0
 11873 ;;		On exit  : 0/0
 11874 ;;		Unchanged: 0/0
 11875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11876 ;;      Params:         3       0       0       0       0       0       0
 11877 ;;      Locals:         1       0       0       0       0       0       0
 11878 ;;      Temps:          0       0       0       0       0       0       0
 11879 ;;      Totals:         4       0       0       0       0       0       0
 11880 ;;Total ram usage:        4 bytes
 11881 ;; Hardware stack levels used:    1
 11882 ;; Hardware stack levels required when called:    2
 11883 ;; This function calls:
 11884 ;;		i1___ftpack
 11885 ;; This function is called by:
 11886 ;;		_ReadEncoder
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text39
 11891  003CCC                     __ptext39:
 11892                           	opt stack 0
 11893  003CCC                     ___awtoft:
 11894                           	opt stack 20
 11895                           
 11896                           ;incstack = 0
 11897  003CCC  FFFF               	dw	65535
 11898  003CCE  0E00               	movlw	0
 11899  003CD0  6E0C               	movwf	___awtoft@sign,c
 11900  003CD2  500A               	movf	___awtoft@c+1,w,c
 11901  003CD4  0A80               	xorlw	128
 11902  003CD6  6EF3               	movwf	prodl,c
 11903  003CD8  0E80               	movlw	128
 11904  003CDA  5CF3               	subwf	prodl,w,c
 11905  003CDC  0E00               	movlw	0
 11906  003CDE  B4D8               	btfsc	status,2,c
 11907  003CE0  5C09               	subwf	___awtoft@c,w,c
 11908  003CE2  B0D8               	btfsc	status,0,c
 11909  003CE4  D006               	goto	i1l3745
 11910  003CE6  6C09               	negf	___awtoft@c,c
 11911  003CE8  1E0A               	comf	___awtoft@c+1,f,c
 11912  003CEA  B0D8               	btfsc	status,0,c
 11913  003CEC  2A0A               	incf	___awtoft@c+1,f,c
 11914  003CEE  0E01               	movlw	1
 11915  003CF0  6E0C               	movwf	___awtoft@sign,c
 11916  003CF2                     i1l3745:
 11917  003CF2  C009  F001         	movff	___awtoft@c,i1___ftpack@arg
 11918  003CF6  C00A  F002         	movff	___awtoft@c+1,i1___ftpack@arg+1
 11919  003CFA  6A03               	clrf	i1___ftpack@arg+2,c
 11920  003CFC  0E8E               	movlw	142
 11921  003CFE  6E04               	movwf	i1___ftpack@exp,c
 11922  003D00  C00C  F005         	movff	___awtoft@sign,i1___ftpack@sign
 11923  003D04  ECF0  F01C         	call	i1___ftpack	;wreg free
 11924  003D08  C001  F009         	movff	?i1___ftpack,?___awtoft
 11925  003D0C  C002  F00A         	movff	?i1___ftpack+1,?___awtoft+1
 11926  003D10  C003  F00B         	movff	?i1___ftpack+2,?___awtoft+2
 11927  003D14  0012               	return	
 11928  003D16  FFFF               	dw	65535	; errata NOP
 11929  003D18                     __end_of___awtoft:
 11930                           	opt stack 0
 11931                           pclatu	equ	0xFFB
 11932                           pclath	equ	0xFFA
 11933                           tblptru	equ	0xFF8
 11934                           tblptrh	equ	0xFF7
 11935                           tblptrl	equ	0xFF6
 11936                           tablat	equ	0xFF5
 11937                           prodh	equ	0xFF4
 11938                           prodl	equ	0xFF3
 11939                           intcon	equ	0xFF2
 11940                           intcon2	equ	0xFF1
 11941                           postinc0	equ	0xFEE
 11942                           fsr0h	equ	0xFEA
 11943                           fsr0l	equ	0xFE9
 11944                           wreg	equ	0xFE8
 11945                           postinc1	equ	0xFE6
 11946                           postdec1	equ	0xFE5
 11947                           fsr1h	equ	0xFE2
 11948                           fsr1l	equ	0xFE1
 11949                           bsr	equ	0xFE0
 11950                           indf2	equ	0xFDF
 11951                           postinc2	equ	0xFDE
 11952                           postdec2	equ	0xFDD
 11953                           fsr2h	equ	0xFDA
 11954                           fsr2l	equ	0xFD9
 11955                           status	equ	0xFD8
 11956                           
 11957 ;; *************** function i1___ftpack *****************
 11958 ;; Defined at:
 11959 ;;		line 62 in file "/Applications/microchip/xc8/v1.33/sources/common/float.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  arg             3    0[COMRAM] unsigned um
 11962 ;;  exp             1    3[COMRAM] unsigned char 
 11963 ;;  sign            1    4[COMRAM] unsigned char 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;		None
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  3    0[COMRAM] float 
 11968 ;; Registers used:
 11969 ;;		wreg, status,2, status,0
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11975 ;;      Params:         5       0       0       0       0       0       0
 11976 ;;      Locals:         0       0       0       0       0       0       0
 11977 ;;      Temps:          3       0       0       0       0       0       0
 11978 ;;      Totals:         8       0       0       0       0       0       0
 11979 ;;Total ram usage:        8 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; Hardware stack levels required when called:    1
 11982 ;; This function calls:
 11983 ;;		Nothing
 11984 ;; This function is called by:
 11985 ;;		___awtoft
 11986 ;;		i1___ftadd
 11987 ;;		i1___ftdiv
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text40
 11992  0039E0                     __ptext40:
 11993                           	opt stack 0
 11994  0039E0                     i1___ftpack:
 11995                           	opt stack 21
 11996                           
 11997                           ;incstack = 0
 11998  0039E0  FFFF               	dw	65535
 11999  0039E2  5004               	movf	i1___ftpack@exp,w,c
 12000  0039E4  B4D8               	btfsc	status,2,c
 12001  0039E6  D005               	goto	i1l2729
 12002  0039E8  5001               	movf	i1___ftpack@arg,w,c
 12003  0039EA  1002               	iorwf	i1___ftpack@arg+1,w,c
 12004  0039EC  1003               	iorwf	i1___ftpack@arg+2,w,c
 12005  0039EE  A4D8               	btfss	status,2,c
 12006  0039F0  D00C               	goto	i1l2735
 12007  0039F2                     i1l2729:
 12008  0039F2  0E00               	movlw	0
 12009  0039F4  6E01               	movwf	?i1___ftpack,c
 12010  0039F6  0E00               	movlw	0
 12011  0039F8  6E02               	movwf	?i1___ftpack+1,c
 12012  0039FA  0E00               	movlw	0
 12013  0039FC  6E03               	movwf	?i1___ftpack+2,c
 12014  0039FE  D044               	goto	i1l698
 12015  003A00                     i1l2733:
 12016  003A00  2A04               	incf	i1___ftpack@exp,f,c
 12017  003A02  90D8               	bcf	status,0,c
 12018  003A04  3203               	rrcf	i1___ftpack@arg+2,f,c
 12019  003A06  3202               	rrcf	i1___ftpack@arg+1,f,c
 12020  003A08  3201               	rrcf	i1___ftpack@arg,f,c
 12021  003A0A                     i1l2735:
 12022  003A0A  0E00               	movlw	0
 12023  003A0C  1401               	andwf	i1___ftpack@arg,w,c
 12024  003A0E  6E06               	movwf	??i1___ftpack& (0+255),c
 12025  003A10  0E00               	movlw	0
 12026  003A12  1402               	andwf	i1___ftpack@arg+1,w,c
 12027  003A14  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 12028  003A16  0EFE               	movlw	254
 12029  003A18  1403               	andwf	i1___ftpack@arg+2,w,c
 12030  003A1A  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 12031  003A1C  5006               	movf	??i1___ftpack,w,c
 12032  003A1E  1007               	iorwf	??i1___ftpack+1,w,c
 12033  003A20  1008               	iorwf	??i1___ftpack+2,w,c
 12034  003A22  B4D8               	btfsc	status,2,c
 12035  003A24  D00C               	goto	i1l2741
 12036  003A26  D7EC               	goto	i1l2733
 12037  003A28                     i1l2737:
 12038  003A28  2A04               	incf	i1___ftpack@exp,f,c
 12039  003A2A  0E01               	movlw	1
 12040  003A2C  2601               	addwf	i1___ftpack@arg,f,c
 12041  003A2E  0E00               	movlw	0
 12042  003A30  2202               	addwfc	i1___ftpack@arg+1,f,c
 12043  003A32  0E00               	movlw	0
 12044  003A34  2203               	addwfc	i1___ftpack@arg+2,f,c
 12045  003A36  90D8               	bcf	status,0,c
 12046  003A38  3203               	rrcf	i1___ftpack@arg+2,f,c
 12047  003A3A  3202               	rrcf	i1___ftpack@arg+1,f,c
 12048  003A3C  3201               	rrcf	i1___ftpack@arg,f,c
 12049  003A3E                     i1l2741:
 12050  003A3E  0E00               	movlw	0
 12051  003A40  1401               	andwf	i1___ftpack@arg,w,c
 12052  003A42  6E06               	movwf	??i1___ftpack& (0+255),c
 12053  003A44  0E00               	movlw	0
 12054  003A46  1402               	andwf	i1___ftpack@arg+1,w,c
 12055  003A48  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 12056  003A4A  0EFF               	movlw	255
 12057  003A4C  1403               	andwf	i1___ftpack@arg+2,w,c
 12058  003A4E  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 12059  003A50  5006               	movf	??i1___ftpack,w,c
 12060  003A52  1007               	iorwf	??i1___ftpack+1,w,c
 12061  003A54  1008               	iorwf	??i1___ftpack+2,w,c
 12062  003A56  B4D8               	btfsc	status,2,c
 12063  003A58  D006               	goto	i1l2745
 12064  003A5A  D7E6               	goto	i1l2737
 12065  003A5C                     i1l2743:
 12066  003A5C  0604               	decf	i1___ftpack@exp,f,c
 12067  003A5E  90D8               	bcf	status,0,c
 12068  003A60  3601               	rlcf	i1___ftpack@arg,f,c
 12069  003A62  3602               	rlcf	i1___ftpack@arg+1,f,c
 12070  003A64  3603               	rlcf	i1___ftpack@arg+2,f,c
 12071  003A66                     i1l2745:
 12072  003A66  AE02               	btfss	i1___ftpack@arg+1,7,c
 12073  003A68  D7F9               	goto	i1l2743
 12074  003A6A  A004               	btfss	i1___ftpack@exp,0,c
 12075  003A6C  9E02               	bcf	i1___ftpack@arg+1,7,c
 12076  003A6E  90D8               	bcf	status,0,c
 12077  003A70  3204               	rrcf	i1___ftpack@exp,f,c
 12078  003A72  5004               	movf	i1___ftpack@exp,w,c
 12079  003A74  1203               	iorwf	i1___ftpack@arg+2,f,c
 12080  003A76  5005               	movf	i1___ftpack@sign,w,c
 12081  003A78  A4D8               	btfss	status,2,c
 12082  003A7A  8E03               	bsf	i1___ftpack@arg+2,7,c
 12083  003A7C  C001  F001         	movff	i1___ftpack@arg,?i1___ftpack
 12084  003A80  C002  F002         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 12085  003A84  C003  F003         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 12086  003A88                     i1l698:
 12087  003A88  0012               	return	
 12088  003A8A  FFFF               	dw	65535	; errata NOP
 12089  003A8C                     __end_ofi1___ftpack:
 12090                           	opt stack 0
 12091                           pclatu	equ	0xFFB
 12092                           pclath	equ	0xFFA
 12093                           tblptru	equ	0xFF8
 12094                           tblptrh	equ	0xFF7
 12095                           tblptrl	equ	0xFF6
 12096                           tablat	equ	0xFF5
 12097                           prodh	equ	0xFF4
 12098                           prodl	equ	0xFF3
 12099                           intcon	equ	0xFF2
 12100                           intcon2	equ	0xFF1
 12101                           postinc0	equ	0xFEE
 12102                           fsr0h	equ	0xFEA
 12103                           fsr0l	equ	0xFE9
 12104                           wreg	equ	0xFE8
 12105                           postinc1	equ	0xFE6
 12106                           postdec1	equ	0xFE5
 12107                           fsr1h	equ	0xFE2
 12108                           fsr1l	equ	0xFE1
 12109                           bsr	equ	0xFE0
 12110                           indf2	equ	0xFDF
 12111                           postinc2	equ	0xFDE
 12112                           postdec2	equ	0xFDD
 12113                           fsr2h	equ	0xFDA
 12114                           fsr2l	equ	0xFD9
 12115                           status	equ	0xFD8
 12116                           
 12117 ;; *************** function _high_isr *****************
 12118 ;; Defined at:
 12119 ;;		line 96 in file "main.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;		None
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;		None
 12124 ;; Return value:  Size  Location     Type
 12125 ;;		None               void
 12126 ;; Registers used:
 12127 ;;		None
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12133 ;;      Params:         0       0       0       0       0       0       0
 12134 ;;      Locals:         0       0       0       0       0       0       0
 12135 ;;      Temps:          0      14       0       0       0       0       0
 12136 ;;      Totals:         0      14       0       0       0       0       0
 12137 ;;Total ram usage:       14 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; This function calls:
 12140 ;;		Nothing
 12141 ;; This function is called by:
 12142 ;;		Interrupt level 2
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           	psect	intcode
 12147  000008                     __pintcode:
 12148                           	opt stack 0
 12149  000008                     _high_isr:
 12150                           	opt stack 19
 12151                           
 12152                           ;incstack = 0
 12153  000008  FFFF               	dw	65535	; errata NOP
 12154  00000A  CFFA F091          	movff	pclath,??_high_isr
 12155  00000E  CFFB F092          	movff	pclatu,??_high_isr+1
 12156  000012  EF2F  F01E         	goto	int_func
 12157                           pclatu	equ	0xFFB
 12158                           pclath	equ	0xFFA
 12159                           tblptru	equ	0xFF8
 12160                           tblptrh	equ	0xFF7
 12161                           tblptrl	equ	0xFF6
 12162                           tablat	equ	0xFF5
 12163                           prodh	equ	0xFF4
 12164                           prodl	equ	0xFF3
 12165                           intcon	equ	0xFF2
 12166                           intcon2	equ	0xFF1
 12167                           postinc0	equ	0xFEE
 12168                           fsr0h	equ	0xFEA
 12169                           fsr0l	equ	0xFE9
 12170                           wreg	equ	0xFE8
 12171                           postinc1	equ	0xFE6
 12172                           postdec1	equ	0xFE5
 12173                           fsr1h	equ	0xFE2
 12174                           fsr1l	equ	0xFE1
 12175                           bsr	equ	0xFE0
 12176                           indf2	equ	0xFDF
 12177                           postinc2	equ	0xFDE
 12178                           postdec2	equ	0xFDD
 12179                           fsr2h	equ	0xFDA
 12180                           fsr2l	equ	0xFD9
 12181                           status	equ	0xFD8
 12182                           
 12183                           	psect	intcode_body
 12184  003C5E                     __pintcode_body:
 12185                           	opt stack 19
 12186  003C5E                     int_func:
 12187                           	opt stack 19
 12188  003C5E  FFFF               	dw	65535	; errata NOP
 12189  003C60  CFE9 F093          	movff	fsr0l,??_high_isr+2
 12190  003C64  CFEA F094          	movff	fsr0h,??_high_isr+3
 12191  003C68  CFE1 F095          	movff	fsr1l,??_high_isr+4
 12192  003C6C  CFE2 F096          	movff	fsr1h,??_high_isr+5
 12193  003C70  CFD9 F097          	movff	fsr2l,??_high_isr+6
 12194  003C74  CFDA F098          	movff	fsr2h,??_high_isr+7
 12195  003C78  CFF3 F099          	movff	prodl,??_high_isr+8
 12196  003C7C  CFF4 F09A          	movff	prodh,??_high_isr+9
 12197  003C80  CFF6 F09B          	movff	tblptrl,??_high_isr+10
 12198  003C84  CFF7 F09C          	movff	tblptrh,??_high_isr+11
 12199  003C88  CFF8 F09D          	movff	tblptru,??_high_isr+12
 12200  003C8C  CFF5 F09E          	movff	tablat,??_high_isr+13
 12201  003C90  C09E  FFF5         	movff	??_high_isr+13,tablat
 12202  003C94  C09D  FFF8         	movff	??_high_isr+12,tblptru
 12203  003C98  C09C  FFF7         	movff	??_high_isr+11,tblptrh
 12204  003C9C  C09B  FFF6         	movff	??_high_isr+10,tblptrl
 12205  003CA0  C09A  FFF4         	movff	??_high_isr+9,prodh
 12206  003CA4  C099  FFF3         	movff	??_high_isr+8,prodl
 12207  003CA8  C098  FFDA         	movff	??_high_isr+7,fsr2h
 12208  003CAC  C097  FFD9         	movff	??_high_isr+6,fsr2l
 12209  003CB0  C096  FFE2         	movff	??_high_isr+5,fsr1h
 12210  003CB4  C095  FFE1         	movff	??_high_isr+4,fsr1l
 12211  003CB8  C094  FFEA         	movff	??_high_isr+3,fsr0h
 12212  003CBC  C093  FFE9         	movff	??_high_isr+2,fsr0l
 12213  003CC0  C092  FFFB         	movff	??_high_isr+1,pclatu
 12214  003CC4  C091  FFFA         	movff	??_high_isr,pclath
 12215  003CC8  0011               	retfie		f
 12216  003CCA  FFFF               	dw	65535	; errata NOP
 12217  003CCC                     __end_of_high_isr:
 12218                           	opt stack 0
 12219                           pclatu	equ	0xFFB
 12220                           pclath	equ	0xFFA
 12221                           tblptru	equ	0xFF8
 12222                           tblptrh	equ	0xFF7
 12223                           tblptrl	equ	0xFF6
 12224                           tablat	equ	0xFF5
 12225                           prodh	equ	0xFF4
 12226                           prodl	equ	0xFF3
 12227                           intcon	equ	0xFF2
 12228                           intcon2	equ	0xFF1
 12229                           postinc0	equ	0xFEE
 12230                           fsr0h	equ	0xFEA
 12231                           fsr0l	equ	0xFE9
 12232                           wreg	equ	0xFE8
 12233                           postinc1	equ	0xFE6
 12234                           postdec1	equ	0xFE5
 12235                           fsr1h	equ	0xFE2
 12236                           fsr1l	equ	0xFE1
 12237                           bsr	equ	0xFE0
 12238                           indf2	equ	0xFDF
 12239                           postinc2	equ	0xFDE
 12240                           postdec2	equ	0xFDD
 12241                           fsr2h	equ	0xFDA
 12242                           fsr2l	equ	0xFD9
 12243                           status	equ	0xFD8
 12244                           pclatu	equ	0xFFB
 12245                           pclath	equ	0xFFA
 12246                           tblptru	equ	0xFF8
 12247                           tblptrh	equ	0xFF7
 12248                           tblptrl	equ	0xFF6
 12249                           tablat	equ	0xFF5
 12250                           prodh	equ	0xFF4
 12251                           prodl	equ	0xFF3
 12252                           intcon	equ	0xFF2
 12253                           intcon2	equ	0xFF1
 12254                           postinc0	equ	0xFEE
 12255                           fsr0h	equ	0xFEA
 12256                           fsr0l	equ	0xFE9
 12257                           wreg	equ	0xFE8
 12258                           postinc1	equ	0xFE6
 12259                           postdec1	equ	0xFE5
 12260                           fsr1h	equ	0xFE2
 12261                           fsr1l	equ	0xFE1
 12262                           bsr	equ	0xFE0
 12263                           indf2	equ	0xFDF
 12264                           postinc2	equ	0xFDE
 12265                           postdec2	equ	0xFDD
 12266                           fsr2h	equ	0xFDA
 12267                           fsr2l	equ	0xFD9
 12268                           status	equ	0xFD8
 12269                           
 12270                           	psect	param0
 12271  0000                     pclatu	equ	0xFFB
 12272                           pclath	equ	0xFFA
 12273                           tblptru	equ	0xFF8
 12274                           tblptrh	equ	0xFF7
 12275                           tblptrl	equ	0xFF6
 12276                           tablat	equ	0xFF5
 12277                           prodh	equ	0xFF4
 12278                           prodl	equ	0xFF3
 12279                           intcon	equ	0xFF2
 12280                           intcon2	equ	0xFF1
 12281                           postinc0	equ	0xFEE
 12282                           fsr0h	equ	0xFEA
 12283                           fsr0l	equ	0xFE9
 12284                           wreg	equ	0xFE8
 12285                           postinc1	equ	0xFE6
 12286                           postdec1	equ	0xFE5
 12287                           fsr1h	equ	0xFE2
 12288                           fsr1l	equ	0xFE1
 12289                           bsr	equ	0xFE0
 12290                           indf2	equ	0xFDF
 12291                           postinc2	equ	0xFDE
 12292                           postdec2	equ	0xFDD
 12293                           fsr2h	equ	0xFDA
 12294                           fsr2l	equ	0xFD9
 12295                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    154
    Data        18
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      89
    BANK0           128     97      97
    BANK1           256    110     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> main@Msg3(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1124$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    WriteLCD@Msg	PTR unsigned char  size(2) Largest target is 10
		 -> main@Msg3(BANK1[10]), 

    WriteLCD@msgptr	PTR unsigned char  size(2) Largest target is 10
		 -> main@Msg3(BANK1[10]), 

    DisplayLCD@tempPtr	PTR unsigned char  size(2) Largest target is 10
		 -> main@Msg3(BANK1[10]), main@Msg2(BANK1[5]), main@Msg1(BANK1[6]), main@LCDinit(BANK1[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_ReadEncoder
    _fabs->i1___ftneg
    _ReadEncoder->i1___ftsub
    i1___ftsub->i1___ftadd
    i1___ftadd->i1___ftdiv
    i1___ftdiv->___awtoft
    ___awtoft->i1___ftpack

Critical Paths under _TimerStopped in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_WriteLCD
    _sprintf->___ftadd
    _sprintf->___ftdiv
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftneg
    ___awdiv->___awmod
    ___lltoft->___fttol
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftneg->___lltoft
    ___ftge->___ftadd
    ___ftdiv->_scale
    _DisplayLCD->_Delay100TCYx
    _DisplayLCD->_Delay10TCYx
    _DisplayLCD->_Delay1KTCYx
    _InitApp->_WaitHalfSec
    _WaitHalfSec->_Delay1KTCYx

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _TimerStopped in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_WriteLCD
    _WriteLCD->_sprintf
    _sprintf->___ftge

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _TimerStopped in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _TimerStopped in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _TimerStopped in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _TimerStopped in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _TimerStopped in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   48758
                                             81 BANK1     29    29      0
                        _CloseTimer0
                         _DisplayLCD
                            _InitApp
                     _InitInterrupts
                        _WaitHalfSec
                           _WriteLCD
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     149
                                             31 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _WriteLCD                                            15     6      9   47622
                                             95 BANK0      2     2      0
                                             68 BANK1     13     4      9
                         _DisplayLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             63    52     11   46406
                                              9 BANK1     59    48     11
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3    9232
                                             73 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             31 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3    9034
                                             73 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2067
                                             45 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    3854
                                             58 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lltoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1356
                                             31 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1466
                                             37 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     409
                                             31 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          16    10      6     552
                                             31 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    1874
                                             46 BANK0      9     5      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     795
                                             31 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     692
                                             31 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     729
                                             31 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3541
                                              0 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3256
                                             83 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lltoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     231
                                             55 BANK0      3     0      3
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     560
                                              0 BANK1      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2274
                                             80 BANK0     15     9      6
                           ___ftpack
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1646
                                             31 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _DisplayLCD                                           5     1      4     694
                                             32 BANK0      5     1      4
                       _Delay100TCYx
                        _Delay10TCYx
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay10TCYx                                          1     1      0      22
                                             31 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      22
                                             31 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0      68
                        _WaitHalfSec
 ---------------------------------------------------------------------------------
 (1) _WaitHalfSec                                          2     2      0      68
                                             32 BANK0      2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                             31 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CloseTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                             17    17      0    5884
                                             59 COMRAM    17    17      0
                        _ReadEncoder
                               _fabs
                      i1_WriteTimer0
                          i1___ftdiv
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fabs                                                 3     0      3     190
                                              3 COMRAM     3     0      3
                          i1___ftneg
 ---------------------------------------------------------------------------------
 (8) i1___ftneg                                            3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (7) _ReadEncoder                                         14    14      0    4722
                                             45 COMRAM    14    14      0
                           ___awtoft
                          i1___ftadd
                          i1___ftdiv
                          i1___ftsub
 ---------------------------------------------------------------------------------
 (8) i1___ftsub                                            6     0      6    1484
                                             39 COMRAM     6     0      6
                           ___awtoft (ARG)
                          i1___ftadd
                          i1___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___ftadd                                           12     6      6    1387
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                          i1___ftdiv (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1___ftdiv                                           15     9      6     879
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                               _fabs (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) ___awtoft                                             4     1      3     746
                                              8 COMRAM     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1___ftpack                                           8     3      5     443
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TimerStopped                                        17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _high_isr                                           14    14      0       0
                                             17 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CloseTimer0
   _DisplayLCD
     _Delay100TCYx
     _Delay10TCYx
     _Delay1KTCYx
   _InitApp
     _WaitHalfSec
       _Delay1KTCYx
   _InitInterrupts
   _WaitHalfSec
     _Delay1KTCYx
   _WriteLCD
     _DisplayLCD
       _Delay100TCYx
       _Delay10TCYx
       _Delay1KTCYx
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___fttol (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
         ___fttol (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___fttol (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
       ___ftsub
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___fttol (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
       ___fttol
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
         ___fttol (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _WriteTimer0

 _low_isr (ROOT)
   _ReadEncoder
     ___awtoft
       i1___ftpack
     i1___ftadd
       ___awtoft (ARG)
         i1___ftpack
       i1___ftdiv (ARG)
         ___awtoft (ARG)
           i1___ftpack
         _fabs (ARG)
           i1___ftneg
         i1___ftpack (ARG)
       i1___ftpack (ARG)
     i1___ftdiv
       ___awtoft (ARG)
         i1___ftpack
       _fabs (ARG)
         i1___ftneg
       i1___ftpack (ARG)
     i1___ftsub
       ___awtoft (ARG)
         i1___ftpack
       i1___ftadd (ARG)
         ___awtoft (ARG)
           i1___ftpack
         i1___ftdiv (ARG)
           ___awtoft (ARG)
             i1___ftpack
           _fabs (ARG)
             i1___ftneg
           i1___ftpack (ARG)
         i1___ftpack (ARG)
       i1___ftdiv (ARG)
         ___awtoft (ARG)
           i1___ftpack
         _fabs (ARG)
           i1___ftneg
         i1___ftpack (ARG)
   _fabs
     i1___ftneg
   i1_WriteTimer0
   i1___ftdiv
     ___awtoft (ARG)
       i1___ftpack
     _fabs (ARG)
       i1___ftneg
     i1___ftpack (ARG)

 _TimerStopped (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     6E      83       6       51.2%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     61      61       4       75.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      59       1       70.1%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13D      14        0.0%
DATA                 0      0     13D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 23 15:27:23 2014

                                              WriteLCD@msgptr 014D  
                                                  i1___ftpack 39E0  
                                                ___awdiv@sign 00AA  
                                                 __CFG_BOR$ON 000000  
                                                          bsr 000FE0  
                                         ___wmul@multiplicand 00AF  
                                                __CFG_CP0$OFF 000000  
                                                __CFG_CP1$OFF 000000  
                                                __CFG_CP2$OFF 000000  
                                                __CFG_CP3$OFF 000000  
                                                 __CFG_OSC$HS 000000  
                                                ___ftadd@exp1 00DE  
                                                ___ftadd@exp2 00DD  
                                                ___ftadd@sign 00DC  
                                                         l206 210A  
                                                         l151 3BD8  
                                                         l143 3B92  
                                                         l243 0B1A  
                                                         l244 0B1E  
                                                         l309 17C2  
                                                         l245 1190  
                                                         l263 0F96  
                                                         l249 0B86  
                                                         l276 129E  
                                                         l580 3F8C  
                                                         l573 3FBA  
                                                         l741 24F6  
                                                         _CHA 0052  
                                                         l750 25E0  
                                                         _CHB 0054  
                                                         l735 2494  
                                                         l736 26A6  
                                                         l809 3EEC  
                                                         l657 2AE8  
                                                         l770 334C  
                                                         l666 2AD8  
                                                         l587 3FD0  
                                                         l739 24CE  
                                                         l819 323C  
                                                         l767 3386  
                                                         l759 260A  
                                                         l863 382C  
                                                         l775 2E32  
                                                         l784 2E22  
                                                         l793 3914  
                                                         l873 3B20  
                                                         l777 2D48  
                                                i1___ftadd@f1 001C  
                                                         l698 35A4  
                                                         l778 2D94  
                                                i1___ftadd@f2 001F  
                                                         l799 2F9A  
                                                __CFG_CPB$OFF 000000  
                                                         _PR2 000FCB  
                                                __CFG_CPD$OFF 000000  
                                                         _QEM 0677  
                                                         _RPS 0180  
                                        __size_of_WriteTimer0 0016  
                                                i1___ftdiv@f1 000D  
                                                i1___ftdiv@f2 0010  
                                                i1___ftdiv@f3 0017  
                                                __CFG_BORV$45 000000  
                                                ___awmod@sign 00A4  
                                                i1___ftneg@f1 0001  
                                                         wreg 000FE8  
                                                i1___ftsub@f1 0028  
                                                i1___ftsub@f2 002B  
                                                __CFG_LVP$OFF 000000  
                                                ___ftdiv@cntr 00D9  
                                                __CFG_OSCS$ON 000000  
                                                ___ftdiv@sign 00DE  
                                                __CFG_WDT$OFF 000000  
                                                        l3011 3888  
                                                        l3021 3912  
                                                        l3101 3AA4  
                                                        l3015 38CE  
                                                        l3103 3ABC  
                                                        l3105 3AC2  
                                                        l3035 311C  
                                                        l3115 3BE6  
                                                        l3221 3B82  
                                                        l3053 31AA  
                                                        l3109 3B06  
                                                        l3117 3BFE  
                                                        l3301 0846  
                                                        l3223 3B96  
                                                        l2511 357E  
                                                        l2503 352E  
                                                        l3071 322C  
                                                        l3063 31E8  
                                                        l3303 0854  
                                                        l2505 355A  
                                                        l3065 3200  
                                                        l3057 31C6  
                                                        l3081 3798  
                                                        l3401 0DB6  
                                                        l3313 08D0  
                                                        l2507 356E  
                                                        l3067 3206  
                                                        l3083 37B0  
                                                        l2603 2E60  
                                                        l3307 08A2  
                                                        l3253 3E7C  
                                                        l3245 3BCA  
                                                        l2517 3598  
                                                        l2541 24DC  
                                                        l3093 3812  
                                                        l3085 37B6  
                                                        l2701 396A  
                                                        l3325 0926  
                                                        l3317 08D6  
                                                        l3309 08BE  
                                                        l2535 24A2  
                                                        l2623 2EE8  
                                                        l3407 0DFA  
                                                        l3415 0E1A  
                                                        l3351 0A62  
                                                        l3335 098A  
                                                        l3319 0908  
                                                        l3249 3E62  
                                                        l2721 39D4  
                                                        l2713 39B2  
                                                        l2705 397C  
                                                        l2633 2F32  
                                                        l2609 2E9A  
                                                        l3425 0E66  
                                                        l3273 071E  
                                                        l3281 07A6  
                                                        l2491 34B4  
                                                        l2563 2562  
                                                        l2547 24EC  
                                                        l2707 3988  
                                                        l2627 2F06  
                                                        l2803 1D20  
                                                        l3603 166E  
                                                        l3523 1244  
                                                        l3507 11D0  
                                                        l3371 0B56  
                                                        l3363 0AFC  
                                                        l3267 06E0  
                                                        l3259 06C4  
                                                        l2565 2576  
                                                        l2557 252E  
                                                        l2653 35D8  
                                                        l2709 398E  
                                                        l2717 39C0  
                                                        l2637 2F50  
                                                        l2821 1FDC  
                                                        l2813 1E3E  
                                                        l3613 16AE  
                                                        l3533 133C  
                                                        l3541 13D6  
                                                        l3381 0B8A  
                                                        l3199 3B4A  
                                                        l2495 34C8  
                                                        l2583 2634  
                                                        l2575 25C2  
                                                        l2567 2582  
                                                        l2903 2948  
                                                        l3711 1ACC  
                                                        l3703 1A7C  
                                                        l3623 1764  
                                                        l3359 0AD0  
                                                        l2497 34DC  
                                                        l2593 2682  
                                                        l2577 25D6  
                                                        l2569 258E  
                                                        l2665 361E  
                                                        l2681 366E  
                                                        l2809 1E12  
                                                        l3713 1AD6  
                                                        l3721 1B00  
                                                        l3705 1A88  
                                                        l3625 1772  
                                                        l3633 1792  
                                                        l3553 1484  
                                                        l3545 141C  
                                                        l3537 1380  
                                                        l3449 0FC4  
                                                        l3457 109C  
                                                        l3377 0B6E  
                                                        l3289 07E4  
                                                        l2499 3508  
                                                        l2931 2A46  
                                                        l2923 29EA  
                                                        l2667 362A  
                                                        l2659 3600  
                                                        l2827 20DA  
                                                        l3459 10AA  
                                                        l3467 10CA  
                                                        l3395 0D28  
                                                        l3731 1B5A  
                                                        l2941 2A7C  
                                                        l2909 2984  
                                                        l2685 3682  
                                                        l2677 3660  
                                                        l2669 3630  
                                                        l2781 22C4  
                                                        l3709 1AC0  
                                                        l3653 184C  
                                                        l3573 158A  
                                                        l3557 14B0  
                                                        l3485 111A  
                                                        l3469 10D4  
                                                        l3389 0C76  
                                                        l2951 2ABA  
                                                        l2855 2CEE  
                                                        l2839 3F20  
                                                        l3639 17C6  
                                                        l3591 162E  
                                                        l2961 326A  
                                                        l2953 2AD2  
                                                        l2945 2A98  
                                                        l2849 2CC6  
                                                        l2697 3948  
                                                        l3665 1960  
                                                        l3649 17FA  
                                                        l3569 1522  
                                                        l3729 1B36  
                                                        l2883 2DC6  
                                                        l3691 1A14  
                                                        l3683 19B8  
                                                        l3667 196E  
                                                        l3675 198E  
                                                        l3595 164E  
                                                        l3587 15DE  
                                                        l2893 2E04  
                                                        l2789 23D0  
                                                        l3677 199A  
                                                        l3933 30B4  
                                                        l2967 32A4  
                                                        l2895 2E1C  
                                                        l2887 2DE2  
                                                        l3687 19E0  
                                                        l3697 1A44  
                                                        l3849 3476  
                                                        l2987 3304  
                                                        STR_1 069B  
                                                        u3010 2934  
                                                        u3101 325A  
                                                        u3030 2970  
                                                        u3015 2928  
                                                        u3121 3282  
                                                        u3130 3290  
                                                        u3210 3148  
                                                        u3035 2964  
                                                        u3215 313E  
                                                        u3240 31CE  
                                                        u3080 2AA0  
                                                        u2601 2E78  
                                                        u2610 2E86  
                                                        u2371 2440  
                                                        u2381 2460  
                                                        u3191 310C  
                                                        u3700 09DA  
                                                        u2581 2E50  
                                                        u4511 2FAA  
                                                        u2921 2CB6  
                                                        u3705 09CE  
                                                        u4521 2FBC  
                                                        u4531 2FCE  
                                                        u4540 3046  
                                                        u2941 2CDE  
                                                        u4550 305E  
                                                        u4607 3FBC  
                                                        u4617 3FD2  
                                                        u4548 304A  
                                                        u3685 0964  
                                                        u2990 2DEA  
                                                        u4558 3062  
                                                        i1l66 006A  
                                                        i1l69 00C0  
                                                        u4597 3F8E  
                                                __CFG_PWRT$ON 000000  
                                                __CFG_STVR$ON 000000  
                                                        _fabs 3D18  
                                                        _main 2F9E  
                                                ___ftpack@arg 009F  
                                                ___ftpack@exp 00A2  
                                                        fsr0h 000FEA  
                                                        fsr1h 000FE2  
                                                        fsr0l 000FE9  
                                                        fsr2h 000FDA  
                                                        fsr1l 000FE1  
                                                        indf2 000FDF  
                                                        fsr2l 000FD9  
                                                        pclat 000FFA  
                                         i1WriteTimer0@timer0 0001  
                                               i1___ftdiv@exp 001A  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                                        start 019E  
                                                _sprintf$1138 011D  
                                               ??_ReadEncoder 002E  
                                                _sprintf$1748 011A  
                                         __end_of_EncoderPoll 069B  
                                         __end_of_CloseTimer0 4000  
                                                ___ftmul@cntr 00C7  
                                                ___ftmul@sign 00C8  
                                             __end_of_InitApp 3E18  
                                                 _Delay10TCYx 3F86  
                                                ___fttol@exp1 00AD  
                                                ___fttol@lval 00A9  
                                                 _Delay1KTCYx 3FCA  
                                                       ?_fabs 0004  
                                                       ?_main 0001  
                                               i1_WriteTimer0 3FE0  
                                             __end_of___awdiv 368E  
                                             __end_of___ftadd 26AA  
                                             __end_of___awmod 39E0  
                                       __size_of_Delay100TCYx 0016  
                                             __end_of___ftdiv 338A  
                                             __end_of___ftneg 3EFC  
                                             __end_of___lldiv 3840  
                                             __end_of___ftmul 2F9E  
                                             ___awdiv@divisor 00A7  
                                             __end_of___llmod 3B34  
                                             __end_of___ftsub 3D9E  
                                             __end_of___fttol 3240  
                                                       _LATB4 007C54  
                                                       i1l165 28E8  
                                                       i1l157 2756  
                                                       i1l610 3D5A  
                                                       i1l179 0156  
                                                       i1l609 3D4E  
                                                       i1l750 2C0C  
                                                       i1l735 2B34  
                                                       i1l736 2C98  
                                                       i1l809 3F76  
                                                       i1l770 3734  
                                                       i1l739 2B60  
                                                       i1l767 3764  
                                                       i1l759 2C28  
                                                       i1l698 3A88  
                                             ___awdiv@counter 00A9  
                                                       _TMR0H 000FD7  
                                                       _TMR0L 000FD6  
                                                       _PORTA 000F80  
                                                       _PORTD 000F83  
                                              i1___ftadd@exp1 0027  
                                              i1___ftadd@exp2 0026  
                                                       _TRISA 000F92  
                                                       _TRISD 000F95  
                                                       _TRISE 000F96  
                                              i1___ftadd@sign 0025  
                                               __CFG_WRT0$OFF 000000  
                                               __CFG_WRT1$OFF 000000  
                                               __CFG_WRT2$OFF 000000  
                                               __CFG_WRT3$OFF 000000  
                                                ___lltoft@exp 00B6  
                                                  _DisplayLCD 3B34  
                                              __CFG_EBTR0$OFF 000000  
                                              __CFG_EBTR1$OFF 000000  
                                              __CFG_EBTR2$OFF 000000  
                                              __CFG_EBTR3$OFF 000000  
                                               __CFG_WRTB$OFF 000000  
                                               __CFG_WRTC$OFF 000000  
                                               __CFG_WRTD$OFF 000000  
                                              __CFG_EBTRB$OFF 000000  
                                               ___awtoft@sign 000C  
                                             __end_of_dpowers 0629  
                                                       fabs@d 0004  
                                                       _scale 1B72  
                                             __end_of_isdigit 3F2C  
                                               ___ftpack@sign 00A3  
                                             __end_of_low_isr 0108  
                                                       tablat 000FF5  
                                              i1___ftdiv@cntr 0016  
                                              i1___ftdiv@sign 001B  
                                         __end_of_CountPerRev 0699  
                                                       status 000FD8  
                                             __end_of_sprintf 1B72  
                                          __size_ofi1___ftadd 01B0  
                                          __size_ofi1___ftdiv 00DA  
                                          __size_ofi1___ftneg 002A  
                                          __size_ofi1___ftsub 003A  
                                              i1___ftpack@arg 0001  
                                              i1___ftpack@exp 0004  
                                             __initialization 3D9E  
                                                __end_of_fabs 3D5E  
                                                _Delay100TCYx 3FB4  
                                                __end_of_main 30F2  
                                              _InitInterrupts 3F2C  
                                                 ?i1___ftpack 0001  
                                         __end_of_ReadEncoder 290A  
                                              ?i1_WriteTimer0 0001  
                                                      ??_fabs 0007  
                                                      ??_main 0151  
                                               ___fttol@sign1 00A8  
                                               __activetblptr 000002  
                                        __size_of__tdiv_to_l_ 019A  
                                                  _PartialRot 004D  
                                             __CFG_CCP2MUX$ON 000000  
                                       DisplayLCD@currentChar 00A4  
                                                      _ADCON1 000FC1  
                                            ___llmod@dividend 009F  
                                                      ?_scale 00C9  
                                                      _CCPR1L 000FBE  
                                            ___awdiv@dividend 00A5  
                                            __end_of___awtoft 3D18  
                                            __end_of___ftpack 35A8  
                                            __end_of_WriteLCD 349A  
                                               ??_WaitHalfSec 00A0  
                                            __end_of___lltoft 3C5E  
                                                      i1l3131 2B42  
                                                      i1l3161 2BCA  
                                                      i1l3153 2B9E  
                                                      i1l3137 2B6E  
                                                      i1l3171 2BFC  
                                                      i1l3163 2BD2  
                                                      i1l3173 2C06  
                                                      i1l3165 2BDA  
                                                      i1l3159 2BC0  
                                                      i1l3179 2C44  
                                                      i1l2741 3A3E  
                                                      i1l2733 3A00  
                                                      i1l3189 2C74  
                                                      i1l2743 3A5C  
                                                      i1l2735 3A0A  
                                                      i1l2745 3A66  
                                                      i1l2737 3A28  
                                                      i1l2729 39F2  
                                                      i1l3745 3CF2  
                                                      i1l3761 36D0  
                                                      i1l3755 36AA  
                                                      i1l3781 370E  
                                                      i1l3881 2850  
                                                      i1l3873 2782  
                                                      i1l3865 2766  
                                                      i1l3869 2774  
                                                      i1l3887 28EE  
                                                      i1l3889 28FE  
                                                      u334_21 2AFE  
                                                      u335_21 2B12  
                                                      u435_21 36A0  
                                                      u437_21 36BA  
                                                 _EncoderPoll 0699  
                                                 _CloseTimer0 3FF6  
                                              __CFG_WDTPS$128 000000  
                                                      _CWTurn 0056  
                                                   ??_InitApp 00A2  
                                      __end_of_InitInterrupts 3F5C  
                                            __end_of__powers_ 0677  
                                            __end_of_high_isr 3CCC  
                                                      ___ftge 3840  
                                                      ___wmul 3E18  
                                                   ??___awdiv 00A9  
                                                   ??___ftadd 00D9  
                                                   ??___awmod 00A3  
                                                   ??___ftdiv 00D6  
                                                   ??___ftneg 00BA  
                                                   ??___lldiv 00A7  
                                                   ??___ftmul 00C0  
                                                   ??___llmod 00A7  
                                                   ??___ftsub 00DF  
                                                   ??___fttol 00A3  
                                                      _fround 210E  
                                                      clear_0 3DAC  
                                              sprintf@vd_1140 0125  
                                            ___awdiv@quotient 00AB  
                                             ___awmod@divisor 00A1  
                                             ___awmod@counter 00A3  
                                       ___ftmul@f3_as_product 00C4  
                                           __end_ofi1___ftadd 2C9C  
                                           __end_ofi1___ftdiv 3768  
                                           __end_ofi1___ftneg 3F86  
                                           __end_ofi1___ftsub 3EC6  
                                                   ??_isdigit 009F  
                                                __mediumconst 0000  
                                                 ?_DisplayLCD 00A0  
                                                   ??_low_isr 003C  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                                 _CountPerRev 0697  
                                                   ??_sprintf 0114  
                                         __size_ofi1___ftpack 00AC  
                                                  __accesstop 0080  
                                     __end_of__initialization 3DD2  
                                                  ___ftadd@f1 00D3  
                                                  ___ftadd@f2 00D6  
                                                  ___ftge@ff1 0100  
                                                  ___ftge@ff2 0103  
                                             i1___ftpack@sign 0005  
                                                  ___ftdiv@f1 00D0  
                                                  ___ftdiv@f2 00D3  
                                                  ___ftdiv@f3 00DA  
                                                  ___ftneg@f1 00B7  
                                                  ___awtoft@c 0009  
                                         __end_of_WaitHalfSec 3E8C  
                                             ?_InitInterrupts 0001  
                                                  ___ftmul@f1 00BA  
                                                  ___ftmul@f2 00BD  
                                                 _ReadEncoder 26AA  
                                                  ___ftsub@f1 0100  
                                                  ___ftsub@f2 0103  
                                                  ___fttol@f1 009F  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK1 01A2  
                                                  ___lltoft@c 00AE  
                                             ??i1_WriteTimer0 0003  
                                               __end_of_scale 210E  
                                                  __div_to_l_ 290A  
                                             __div_to_l_@exp1 00AE  
                                             __div_to_l_@cntr 00AD  
                                                sprintf@integ 0130  
                                                     ??_scale 00CC  
                                             __div_to_l_@quot 00A9  
                                                sprintf@width 0133  
                                                  __pbssBANK1 0180  
                                               __div_to_l_@f1 009F  
                                               __div_to_l_@f2 00A2  
                                         __size_of_DisplayLCD 00A8  
                                                     ?___ftge 0100  
                                                ?_Delay10TCYx 0001  
                                                     ?___wmul 00AD  
                                                ?_Delay1KTCYx 0001  
                                            WriteTimer0@timer 00A1  
                                               ??_WriteTimer0 00A1  
                                                     ?_fround 00C9  
                                                   ?___awtoft 0009  
                                                   ?___ftpack 009F  
                                                   ?_WriteLCD 0144  
                                                   ?___lltoft 00AE  
                                                     _CCWTurn 0050  
                                                     _OLD_ROT 0058  
                                                   ?_high_isr 0001  
                                                 _WaitHalfSec 3E52  
                                               ?_TimerStopped 0001  
                                                     _InitApp 3DDC  
                                           __end_of__npowers_ 0650  
                                                     __Hparam 0000  
                                                  _scale$1747 00CC  
                                                     __Lparam 0000  
                                             __size_of___ftge 00D8  
                                                ??i1___ftpack 0006  
                                                     ___awdiv 35A8  
                                                     ___ftadd 2426  
                                                     ___awmod 3918  
                                                     ___ftdiv 3240  
                                                     ___ftneg 3EC6  
                                                     ___lldiv 3768  
                                             __size_of___wmul 003A  
                                                     ___ftmul 2E36  
                                                     ___llmod 3A8C  
                                                     ___ftsub 3D5E  
                                                     ___fttol 30F2  
                                                __psmallconst 0600  
                                                     __pcinit 3D9E  
                                                  ??___awtoft 000C  
                                                  ??___ftpack 00A4  
                                                  ??_WriteLCD 00DF  
                                             __size_of_fround 0318  
                                             Delay10TCYx@unit 009F  
                                                     __ramtop 0600  
                                                  ??___lltoft 00B2  
                                                     __ptext0 2F9E  
                                                     __ptext1 3F9E  
                                                     __ptext2 338A  
                                                     __ptext3 06A2  
                                                     __ptext4 1B72  
                                                     __ptext5 3EFC  
                                                     __ptext6 210E  
                                                     __ptext7 3E18  
                                                     __ptext8 2E36  
                                                     __ptext9 3918  
                                                   _T0CONbits 000FD5  
                                                 ?__div_to_l_ 009F  
                                                     _dpowers 0601  
                                                   _T2CONbits 000FCA  
                                                     _isdigit 3EFC  
                                            ___awmod@dividend 009F  
                                         __end_of_WriteTimer0 3FB4  
                                                     _low_isr 0018  
                                                     _sprintf 06A2  
                                                  ??_high_isr 0091  
                                              __pintcode_body 3C5E  
                                        end_of_initialization 3DD2  
                                              ??_TimerStopped 0080  
                                          __end_ofi1___ftpack 3A8C  
                                                ?_CloseTimer0 0001  
                                               __Lmediumconst 0000  
                                                     int_func 3C5E  
                                             ___lldiv@divisor 00A3  
                                             ___lldiv@counter 00AB  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc1 000FE6  
                                                     postinc2 000FDE  
                                              __tdiv_to_l_@f1 009F  
                                              __tdiv_to_l_@f2 00A2  
                                               ??__tdiv_to_l_ 00A5  
                                                   _PORTAbits 000F80  
                                                   _PORTBbits 000F81  
                                                   _PORTEbits 000F84  
                                                ??_DisplayLCD 00A4  
                                                   _TRISBbits 000F93  
                                                   _TRISCbits 000F94  
                                               WriteLCD@width 014F  
                                                   i1___ftadd 2AEC  
                                                   i1___ftdiv 368E  
                                                   i1___ftneg 3F5C  
                                                   i1___ftsub 3E8C  
                                            ??_InitInterrupts 009F  
                                           DisplayLCD@tempPtr 00A0  
                                                 _CCP1CONbits 000FBD  
                                                 ___ftdiv@exp 00DD  
                                         __size_of__div_to_l_ 01E2  
                                          i1WriteTimer0@timer 0003  
                                                ?_ReadEncoder 0001  
                                                 ___ftmul@exp 00C3  
                                            Delay100TCYx@unit 009F  
                                          __end_of_DisplayLCD 3BDC  
                                              __end_of___ftge 3918  
                                              __end_of___wmul 3E52  
                                        __size_of_Delay10TCYx 0018  
                                                 _WriteTimer0 3F9E  
                                              __end_of_fround 2426  
                                        __size_of_Delay1KTCYx 0016  
                                         start_initialization 3D9E  
                                                 __end_of_QEM 0697  
                                         __end_of__tdiv_to_l_ 2E36  
                                                  ?i1___ftadd 001C  
                                                  ?i1___ftdiv 000D  
                                                  ?i1___ftneg 0001  
                                                  ?i1___ftsub 0028  
                                             ___llmod@divisor 00A3  
                                             ___llmod@counter 00A7  
                                                    ??___ftge 0106  
                                             ReadEncoder@Anew 0036  
                                             ReadEncoder@Bnew 0038  
                                                    ??___wmul 00B1  
                                                 __pdataBANK1 016E  
                                                    ??_fround 00CC  
                                       __end_ofi1_WriteTimer0 3FF6  
                                        __end_of_TimerStopped 019E  
                                                 WriteLCD@Msg 014B  
                                                  fround@prec 00D2  
                                                 WriteLCD@len 0146  
                                                 WriteLCD@var 0148  
                                           __size_of___awtoft 004C  
                                           __size_of___ftpack 010E  
                                           __size_of_WriteLCD 0110  
                                           __size_of___lltoft 0082  
                                                 __pbssCOMRAM 004D  
                                               __pcstackBANK0 0080  
                                               __pcstackBANK1 0100  
                                         __end_of__stringdata 06A1  
                                                _isdigit$1512 00A0  
                                             Delay1KTCYx@unit 009F  
                                                ?_WaitHalfSec 0001  
                                           __size_of_high_isr 3CC4  
                                                 sprintf@ccnt 012E  
                                                 sprintf@_val 0137  
                                                 sprintf@flag 0135  
                                                 sprintf@fval 013E  
                                                 sprintf@prec 0141  
                                                 sprintf@temp 0129  
                                                    ?_InitApp 0001  
                                        __size_of_CloseTimer0 000A  
                                               ?_Delay100TCYx 0001  
                                                   __pintcode 0008  
                                                    ?___awdiv 00A5  
                                                    ?___ftadd 00D3  
                                                    ?___awmod 009F  
                                                    ?___ftdiv 00D0  
                                                    ?___ftneg 00B7  
                                                    ?___lldiv 009F  
                                                    ?___ftmul 00BA  
                                                    ?___llmod 009F  
                                                    ?___ftsub 0100  
                                                   __npowers_ 0629  
                                                    ?___fttol 009F  
                                                 __pintcodelo 0018  
                                                 __tdiv_to_l_ 2C9C  
                                              DisplayLCD@init 00A2  
                                        WaitHalfSec@Halfcount 00A0  
                                                ??__div_to_l_ 00A5  
                                                 __smallconst 0600  
                                           WriteTimer0@timer0 009F  
                                                    ?_isdigit 0001  
                                                    ?_low_isr 0001  
                                                 ??i1___ftadd 0022  
                                                 ??i1___ftdiv 0013  
                                                 ??i1___ftneg 0004  
                                                 ??i1___ftsub 002E  
                                                    ?_sprintf 0109  
                                              __size_of_scale 059C  
                                              ___wmul@product 00B1  
                                                    i1u442_20 26B6  
                                                    i1u450_25 3D2C  
                                                    i1u443_20 26C8  
                                                    i1u442_28 26B8  
                                                    i1u443_28 26CA  
                                                    i1u438_20 36C2  
                                                    i1u447_25 27B4  
                                              ??_Delay100TCYx 009F  
                                          __end_of__div_to_l_ 2AEC  
                                                    _RCONbits 000FD0  
                                                   main@F3981 016E  
                                                   main@F3983 0175  
                                                   main@F3985 017B  
                                        __size_of_ReadEncoder 0260  
                                                 __stringdata 069B  
                                           ___wmul@multiplier 00AD  
                                                 _INTCON2bits 000FF1  
                                                   copy_data0 3DC6  
                                                    __Hparam0 0000  
                                            __size_of_InitApp 003C  
                                                    __Lparam0 0000  
                                              ReadEncoder@Old 0032  
                                              ReadEncoder@New 0034  
                                       __size_of_TimerStopped 0096  
                                            __size_of___awdiv 00E6  
                                            __size_of___ftadd 0284  
                                            __size_of___awmod 00C8  
                                            __size_of___ftdiv 014A  
                                            __size_of___ftneg 0036  
                                            __size_of___lldiv 00D8  
                                            __size_of___ftmul 0168  
                                            __size_of___llmod 00A8  
                                            __size_of___ftsub 0040  
                                            __size_of___fttol 014E  
                                          ReadEncoder@NEW_ROT 003A  
                                                ?_WriteTimer0 009F  
                                                    ___awtoft 3CCC  
                                                    ___ftpack 349A  
                                                    _WriteLCD 338A  
                                                 _fround$1745 00CF  
                                                 _fround$1746 00CC  
                                                    ___lltoft 3BDC  
                                                  sprintf@exp 013C  
                                            __size_of_isdigit 0030  
                                            __size_of_low_isr 00F0  
                                                    __ptext10 35A8  
                                                    __ptext11 2C9C  
                                                    __ptext20 3840  
                                                    __ptext12 290A  
                                                    __ptext21 3240  
                                                    __ptext13 3BDC  
                                                    __ptext30 3FF6  
                                                    __ptext22 349A  
                                                    __ptext14 3A8C  
                                                    __ptext23 3B34  
                                                    __ptext15 3768  
                                                    __ptext40 39E0  
                                                    __ptext32 3FE0  
                                                    __ptext24 3F86  
                                                    __ptext16 30F2  
                                                    __ptext33 3D18  
                                                    __ptext25 3FB4  
                                                    __ptext17 3D5E  
                                                    __ptext34 3F5C  
                                                    __ptext26 3F2C  
                                                    __ptext18 2426  
                                                    __ptext35 26AA  
                                                    __ptext27 3DDC  
                                                    __ptext19 3EC6  
                                                    __ptext36 3E8C  
                                                    __ptext28 3E52  
                                                    __ptext37 2AEC  
                                                    __ptext29 3FCA  
                                                    __ptext38 368E  
                                                    __ptext39 3CCC  
                                                    __powers_ 0650  
                                                    _high_isr 0008  
                                            __size_of_sprintf 14D0  
                                                _TimerStopped 0108  
                                               __size_of_fabs 0046  
                                               __size_of_main 0154  
                                        __size_of_WaitHalfSec 003A  
                                               ??_Delay10TCYx 009F  
                                            WriteLCD@LCDstart 0144  
                                                    main@Msg1 0159  
                                                    main@Msg2 015F  
                                                    main@Msg3 0164  
                                               ??_Delay1KTCYx 009F  
                                                  _INTCONbits 000FF2  
                                        __end_of_Delay100TCYx 3FCA  
                                                    isdigit@c 00A1  
                                                    scale@scl 00CF  
                                                    intlevel1 01B4  
                                                    intlevel2 01B4  
                                                   sprintf@ap 012C  
                                            __tdiv_to_l_@exp1 00AD  
                                                   sprintf@vd 0121  
                                            __tdiv_to_l_@cntr 00AC  
                                                   sprintf@sp 0109  
                                            __tdiv_to_l_@quot 00A8  
                                            ___lldiv@dividend 009F  
                                     __size_of_InitInterrupts 0030  
                                                ?__tdiv_to_l_ 009F  
                                         __end_of_Delay10TCYx 3F9E  
                                                    sprintf@c 0143  
                                                    sprintf@f 010B  
                                            ___lldiv@quotient 00A7  
                                         __end_of_Delay1KTCYx 3FE0  
                                               ??_CloseTimer0 009F  
                                                 main@LCDinit 0152  
                                      __size_ofi1_WriteTimer0 0016  
