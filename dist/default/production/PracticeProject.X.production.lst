

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Sep 19 11:25:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	idataBANK0
    28  000A78                     __pidataBANK0:
    29                           	opt stack 0
    30                           
    31                           ;initializer for main@F3914
    32  000A78  33                 	db	51
    33  000A79  32                 	db	50
    34  000A7A  28                 	db	40
    35  000A7B  01                 	db	1
    36  000A7C  0C                 	db	12
    37  000A7D  06                 	db	6
    38  000A7E  00                 	db	0
    39                           
    40                           ;initializer for main@F3916
    41  000A7F  84                 	db	132
    42  000A80  43                 	db	67
    43  000A81  55                 	db	85
    44  000A82  4E                 	db	78
    45  000A83  54                 	db	84
    46  000A84  00                 	db	0
    47                           
    48                           ;initializer for main@F3918
    49  000A85  C5                 	db	197
    50  000A86  52                 	db	82
    51  000A87  50                 	db	80
    52  000A88  4D                 	db	77
    53  000A89  00                 	db	0
    54                           
    55                           	psect	smallconst
    56  000600                     __psmallconst:
    57                           	opt stack 0
    58  000600  00                 	db	0
    59  000601                     _QEM:
    60                           	opt stack 0
    61  000601  0000               	dw	0
    62  000603  FFFF               	dw	65535
    63  000605  0001               	dw	1
    64  000607  0002               	dw	2
    65  000609  0001               	dw	1
    66  00060B  0000               	dw	0
    67  00060D  0002               	dw	2
    68  00060F  FFFF               	dw	65535
    69  000611  FFFF               	dw	65535
    70  000613  0002               	dw	2
    71  000615  0000               	dw	0
    72  000617  0001               	dw	1
    73  000619  0002               	dw	2
    74  00061B  0001               	dw	1
    75  00061D  FFFF               	dw	65535
    76  00061F  0000               	dw	0
    77  000621                     __end_of_QEM:
    78                           	opt stack 0
    79  000621                     _EncoderPoll:
    80                           	opt stack 0
    81  000621  0080               	dw	128
    82  000623                     __end_of_EncoderPoll:
    83                           	opt stack 0
    84  0000                     _ADCON1	set	4033
    85  0000                     _INTCON	set	4082
    86  0000                     _INTCON2	set	4081
    87  0000                     _INTCONbits	set	4082
    88  0000                     _PORTA	set	3968
    89  0000                     _PORTAbits	set	3968
    90  0000                     _PORTBbits	set	3969
    91  0000                     _PORTD	set	3971
    92  0000                     _PORTEbits	set	3972
    93  0000                     _RCONbits	set	4048
    94  0000                     _TRISA	set	3986
    95  0000                     _TRISBbits	set	3987
    96  0000                     _TRISD	set	3989
    97  0000                     _TRISE	set	3990
    98  0000                     _LATB4	set	31828
    99                           
   100                           ; #config settings
   101  000623  00                 	db	0	; dummy byte at the end
   102  0000                     
   103                           	psect	cinit
   104  000986                     __pcinit:
   105                           	opt stack 0
   106  000986                     start_initialization:
   107                           	opt stack 0
   108  000986                     __initialization:
   109                           	opt stack 0
   110                           
   111                           ; Clear objects allocated to COMRAM (10 bytes)
   112  000986  EE00  F03F         	lfsr	0,__pbssCOMRAM
   113  00098A  0E0A               	movlw	10
   114  00098C                     clear_0:
   115  00098C  6AEE               	clrf	postinc0,c
   116  00098E  06E8               	decf	wreg,f,c
   117  000990  E1FD               	bnz	clear_0
   118                           
   119                           ; Initialize objects allocated to BANK0 (18 bytes)
   120                           ; load TBLPTR registers with __pidataBANK0
   121  000992  0E78               	movlw	low __pidataBANK0
   122  000994  6EF6               	movwf	tblptrl,c
   123  000996  0E0A               	movlw	high __pidataBANK0
   124  000998  6EF7               	movwf	tblptrh,c
   125  00099A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   126  00099C  6EF8               	movwf	tblptru,c
   127  00099E  EE00  F099         	lfsr	0,__pdataBANK0
   128  0009A2  EE10 F012          	lfsr	1,18
   129  0009A6                     copy_data0:
   130  0009A6  0009               	tblrd		*+
   131  0009A8  CFF5 FFEE          	movff	tablat,postinc0
   132  0009AC  50E5               	movf	postdec1,w,c
   133  0009AE  50E1               	movf	fsr1l,w,c
   134  0009B0  E1FA               	bnz	copy_data0
   135  0009B2                     end_of_initialization:
   136                           	opt stack 0
   137  0009B2                     __end_of__initialization:
   138                           	opt stack 0
   139  0009B2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   140  0009B4  6EF8               	movwf	tblptru,c
   141  0009B6  0E06               	movlw	high __Lsmallconst
   142  0009B8  6EF7               	movwf	tblptrh,c
   143  0009BA  0100               	movlb	0
   144  0009BC  EFC1  F003         	goto	_main	;jump to C main() function
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           postdec1	equ	0xFE5
   152                           fsr1l	equ	0xFE1
   153                           
   154                           	psect	bssCOMRAM
   155  00003F                     __pbssCOMRAM:
   156                           	opt stack 0
   157  00003F                     _CCWTurn:
   158                           	opt stack 0
   159  00003F                     	ds	2
   160  000041                     _CHA:
   161                           	opt stack 0
   162  000041                     	ds	2
   163  000043                     _CHB:
   164                           	opt stack 0
   165  000043                     	ds	2
   166  000045                     _CWTurn:
   167                           	opt stack 0
   168  000045                     	ds	2
   169  000047                     _OLD_ROT:
   170                           	opt stack 0
   171  000047                     	ds	2
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	dataBANK0
   182  000099                     __pdataBANK0:
   183                           	opt stack 0
   184  000099                     main@F3914:
   185                           	opt stack 0
   186  000099                     	ds	7
   187  0000A0                     main@F3916:
   188                           	opt stack 0
   189  0000A0                     	ds	6
   190  0000A6                     main@F3918:
   191                           	opt stack 0
   192  0000A6                     	ds	5
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	cstackBANK0
   203  000080                     __pcstackBANK0:
   204                           	opt stack 0
   205  000080                     Delay100TCYx@unit:
   206                           	opt stack 0
   207  000080                     Delay10TCYx@unit:
   208                           	opt stack 0
   209  000080                     Delay1KTCYx@unit:
   210                           	opt stack 0
   211                           
   212                           ; 1 bytes @ 0x0
   213  000080                     	ds	1
   214  000081                     WaitHalfSec@Halfcount:
   215                           	opt stack 0
   216  000081                     DisplayLCD@tempPtr:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x1
   220  000081                     	ds	2
   221  000083                     DisplayLCD@init:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x3
   225  000083                     	ds	2
   226  000085                     DisplayLCD@currentChar:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x5
   230  000085                     	ds	1
   231  000086                     ??_main:
   232                           
   233                           ; 0 bytes @ 0x6
   234  000086                     	ds	1
   235  000087                     main@LCDinit:
   236                           	opt stack 0
   237                           
   238                           ; 7 bytes @ 0x7
   239  000087                     	ds	7
   240  00008E                     main@Msg1:
   241                           	opt stack 0
   242                           
   243                           ; 6 bytes @ 0xE
   244  00008E                     	ds	6
   245  000094                     main@Msg2:
   246                           	opt stack 0
   247                           
   248                           ; 5 bytes @ 0x14
   249  000094                     	ds	5
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	cstackCOMRAM
   260  000001                     __pcstackCOMRAM:
   261                           	opt stack 0
   262  000001                     ??_ReadEncoder:
   263  000001                     
   264                           ; 2 bytes @ 0x0
   265  000001                     	ds	4
   266  000005                     ReadEncoder@Old:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x4
   270  000005                     	ds	2
   271  000007                     ReadEncoder@New:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x6
   275  000007                     	ds	2
   276  000009                     ReadEncoder@Anew:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x8
   280  000009                     	ds	2
   281  00000B                     ReadEncoder@Bnew:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0xA
   285  00000B                     	ds	2
   286  00000D                     ReadEncoder@NEW_ROT:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0xC
   290  00000D                     	ds	2
   291  00000F                     ??_low_isr:
   292                           
   293                           ; 0 bytes @ 0xE
   294  00000F                     	ds	17
   295  000020                     ??_TimerStopped:
   296                           
   297                           ; 0 bytes @ 0x1F
   298  000020                     	ds	17
   299  000031                     ??_high_isr:
   300                           
   301                           ; 0 bytes @ 0x30
   302  000031                     	ds	14
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 32 in file "main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  LCDinit         7    7[BANK0 ] unsigned char [7]
   322 ;;  Msg1            6   14[BANK0 ] unsigned char [6]
   323 ;;  Msg2            5   20[BANK0 ] unsigned char [5]
   324 ;; Return value:  Size  Location     Type
   325 ;;                  2   30[COMRAM] int 
   326 ;; Registers used:
   327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         0       0       0       0       0       0       0
   334 ;;      Locals:         0      18       0       0       0       0       0
   335 ;;      Temps:          0       1       0       0       0       0       0
   336 ;;      Totals:         0      19       0       0       0       0       0
   337 ;;Total ram usage:       19 bytes
   338 ;; Hardware stack levels required when called:    6
   339 ;; This function calls:
   340 ;;		_DisplayLCD
   341 ;;		_InitApp
   342 ;;		_InitInterrupts
   343 ;;		_WaitHalfSec
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text0
   350  000782                     __ptext0:
   351                           	opt stack 0
   352  000782                     _main:
   353                           	opt stack 25
   354                           
   355                           ;incstack = 0
   356  000782  FFFF               	dw	65535
   357                           
   358                           ;main.c: 36: char LCDinit[] = {0x33,0x32,0x28,0x01,0x0c,0x06,0x00};
   359  000784  EE20  F099         	lfsr	2,main@F3914
   360  000788  EE10  F087         	lfsr	1,main@LCDinit
   361  00078C  0E07               	movlw	7
   362  00078E                     u331:
   363  00078E  CFDE FFE6          	movff	postinc2,postinc1
   364  000792  2EE8               	decfsz	wreg,f,c
   365  000794  D7FC               	goto	u331
   366                           
   367                           ;main.c: 37: char Msg1[] = {0x84,'C','U','N','T','\0'};
   368  000796  EE20  F0A0         	lfsr	2,main@F3916
   369  00079A  EE10  F08E         	lfsr	1,main@Msg1
   370  00079E  0E06               	movlw	6
   371  0007A0                     u341:
   372  0007A0  CFDE FFE6          	movff	postinc2,postinc1
   373  0007A4  2EE8               	decfsz	wreg,f,c
   374  0007A6  D7FC               	goto	u341
   375                           
   376                           ;main.c: 38: char Msg2[] = {0xC5,'R','P','M','\0'};
   377  0007A8  EE20  F0A6         	lfsr	2,main@F3918
   378  0007AC  EE10  F094         	lfsr	1,main@Msg2
   379  0007B0  0E05               	movlw	5
   380  0007B2                     u351:
   381  0007B2  CFDE FFE6          	movff	postinc2,postinc1
   382  0007B6  2EE8               	decfsz	wreg,f,c
   383  0007B8  D7FC               	goto	u351
   384                           
   385                           ;main.c: 39: InitApp();
   386  0007BA  ECE0  F004         	call	_InitApp	;wreg free
   387                           
   388                           ;main.c: 40: DisplayLCD(LCDinit,1);
   389  0007BE  0100               	movlb	0	; () banked
   390  0007C0  0E00               	movlw	high main@LCDinit
   391  0007C2  0100               	movlb	0	; () banked
   392  0007C4  6F82               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
   393  0007C6  0100               	movlb	0	; () banked
   394  0007C8  0E87               	movlw	low main@LCDinit
   395  0007CA  0100               	movlb	0	; () banked
   396  0007CC  6F81               	movwf	DisplayLCD@tempPtr& (0+255),b
   397  0007CE  0E00               	movlw	0
   398  0007D0  0100               	movlb	0	; () banked
   399  0007D2  6F84               	movwf	(DisplayLCD@init+1)& (0+255),b
   400  0007D4  0E01               	movlw	1
   401  0007D6  0100               	movlb	0	; () banked
   402  0007D8  6F83               	movwf	DisplayLCD@init& (0+255),b
   403  0007DA  EC38  F004         	call	_DisplayLCD	;wreg free
   404                           
   405                           ;main.c: 41: DisplayLCD(Msg1,0);
   406  0007DE  0100               	movlb	0	; () banked
   407  0007E0  0E00               	movlw	high main@Msg1
   408  0007E2  0100               	movlb	0	; () banked
   409  0007E4  6F82               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
   410  0007E6  0100               	movlb	0	; () banked
   411  0007E8  0E8E               	movlw	low main@Msg1
   412  0007EA  0100               	movlb	0	; () banked
   413  0007EC  6F81               	movwf	DisplayLCD@tempPtr& (0+255),b
   414  0007EE  0E00               	movlw	0
   415  0007F0  0100               	movlb	0	; () banked
   416  0007F2  6F84               	movwf	(DisplayLCD@init+1)& (0+255),b
   417  0007F4  0E00               	movlw	0
   418  0007F6  0100               	movlb	0	; () banked
   419  0007F8  6F83               	movwf	DisplayLCD@init& (0+255),b
   420  0007FA  EC38  F004         	call	_DisplayLCD	;wreg free
   421                           
   422                           ;main.c: 42: DisplayLCD(Msg2,0);
   423  0007FE  0100               	movlb	0	; () banked
   424  000800  0E00               	movlw	high main@Msg2
   425  000802  0100               	movlb	0	; () banked
   426  000804  6F82               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
   427  000806  0100               	movlb	0	; () banked
   428  000808  0E94               	movlw	low main@Msg2
   429  00080A  0100               	movlb	0	; () banked
   430  00080C  6F81               	movwf	DisplayLCD@tempPtr& (0+255),b
   431  00080E  0E00               	movlw	0
   432  000810  0100               	movlb	0	; () banked
   433  000812  6F84               	movwf	(DisplayLCD@init+1)& (0+255),b
   434  000814  0E00               	movlw	0
   435  000816  0100               	movlb	0	; () banked
   436  000818  6F83               	movwf	DisplayLCD@init& (0+255),b
   437  00081A  EC38  F004         	call	_DisplayLCD	;wreg free
   438                           
   439                           ;main.c: 43: CHA = PORTBbits.RB5;
   440  00081E  AA81               	btfss	3969,5,c	;volatile
   441  000820  D004               	goto	u360
   442  000822  0100               	movlb	0	; () banked
   443  000824  6B86               	clrf	??_main& (0+255),b
   444  000826  2B86               	incf	??_main& (0+255),f,b
   445  000828  D002               	goto	u368
   446  00082A                     u360:
   447  00082A  0100               	movlb	0	; () banked
   448  00082C  6B86               	clrf	??_main& (0+255),b
   449  00082E                     u368:
   450  00082E  0100               	movlb	0	; () banked
   451  000830  5186               	movf	??_main& (0+255),w,b
   452  000832  6E41               	movwf	_CHA,c
   453  000834  6A42               	clrf	_CHA+1,c
   454                           
   455                           ; BSR set to: 0
   456                           ;main.c: 44: CHB = PORTBbits.RB4;
   457  000836  A881               	btfss	3969,4,c	;volatile
   458  000838  D004               	goto	u370
   459  00083A  0100               	movlb	0	; () banked
   460  00083C  6B86               	clrf	??_main& (0+255),b
   461  00083E  2B86               	incf	??_main& (0+255),f,b
   462  000840  D002               	goto	u378
   463  000842                     u370:
   464  000842  0100               	movlb	0	; () banked
   465  000844  6B86               	clrf	??_main& (0+255),b
   466  000846                     u378:
   467  000846  0100               	movlb	0	; () banked
   468  000848  5186               	movf	??_main& (0+255),w,b
   469  00084A  6E43               	movwf	_CHB,c
   470  00084C  6A44               	clrf	_CHB+1,c
   471                           
   472                           ; BSR set to: 0
   473                           ;main.c: 45: OLD_ROT = 0;
   474  00084E  0E00               	movlw	0
   475  000850  6E48               	movwf	_OLD_ROT+1,c
   476  000852  0E00               	movlw	0
   477  000854  6E47               	movwf	_OLD_ROT,c
   478                           
   479                           ; BSR set to: 0
   480                           ;main.c: 46: CCWTurn = 0;
   481  000856  0E00               	movlw	0
   482  000858  6E40               	movwf	_CCWTurn+1,c
   483  00085A  0E00               	movlw	0
   484  00085C  6E3F               	movwf	_CCWTurn,c
   485                           
   486                           ; BSR set to: 0
   487                           ;main.c: 47: CWTurn = 0;
   488  00085E  0E00               	movlw	0
   489  000860  6E46               	movwf	_CWTurn+1,c
   490  000862  0E00               	movlw	0
   491  000864  6E45               	movwf	_CWTurn,c
   492                           
   493                           ; BSR set to: 0
   494                           ;main.c: 48: InitInterrupts();
   495  000866  EC45  F005         	call	_InitInterrupts	;wreg free
   496  00086A                     l1189:
   497                           
   498                           ;main.c: 54: {
   499                           ;main.c: 55: WaitHalfSec();
   500  00086A  ECFD  F004         	call	_WaitHalfSec	;wreg free
   501  00086E  D7FD               	goto	l1189
   502  000870                     __end_of_main:
   503                           	opt stack 0
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postinc1	equ	0xFE6
   511                           postdec1	equ	0xFE5
   512                           fsr1l	equ	0xFE1
   513                           postinc2	equ	0xFDE
   514                           
   515 ;; *************** function _InitInterrupts *****************
   516 ;; Defined at:
   517 ;;		line 125 in file "user.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  2    8[COMRAM] int 
   524 ;; Registers used:
   525 ;;		wreg, status,2
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   531 ;;      Params:         0       0       0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    3
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text1
   546  000A8A                     __ptext1:
   547                           	opt stack 0
   548  000A8A                     _InitInterrupts:
   549                           	opt stack 27
   550                           
   551                           ;incstack = 0
   552  000A8A  FFFF               	dw	65535
   553                           
   554                           ;user.c: 127: RCONbits.IPEN = 1;
   555  000A8C  8ED0               	bsf	4048,7,c	;volatile
   556                           
   557                           ;user.c: 128: INTCON2 = 0b00000000;
   558  000A8E  0E00               	movlw	0
   559  000A90  6EF1               	movwf	intcon2,c	;volatile
   560                           
   561                           ;user.c: 129: INTCON = 0b11001000;
   562  000A92  0EC8               	movlw	200
   563  000A94  6EF2               	movwf	intcon,c	;volatile
   564                           
   565                           ;user.c: 142: return 0;
   566                           ;	Return value of _InitInterrupts is never used
   567  000A96  0012               	return	
   568  000A98  FFFF               	dw	65535	; errata NOP
   569  000A9A                     __end_of_InitInterrupts:
   570                           	opt stack 0
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           intcon	equ	0xFF2
   576                           intcon2	equ	0xFF1
   577                           postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           postinc1	equ	0xFE6
   580                           postdec1	equ	0xFE5
   581                           fsr1l	equ	0xFE1
   582                           postinc2	equ	0xFDE
   583                           
   584 ;; *************** function _InitApp *****************
   585 ;; Defined at:
   586 ;;		line 18 in file "user.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  2    2[COMRAM] int 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   600 ;;      Params:         0       0       0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    5
   607 ;; This function calls:
   608 ;;		_WaitHalfSec
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text2
   615  0009C0                     __ptext2:
   616                           	opt stack 0
   617  0009C0                     _InitApp:
   618                           	opt stack 25
   619                           
   620                           ;incstack = 0
   621  0009C0  FFFF               	dw	65535
   622                           
   623                           ;user.c: 22: TRISA = 0b11100001;
   624  0009C2  0EE1               	movlw	225
   625  0009C4  6E92               	movwf	3986,c	;volatile
   626                           
   627                           ;user.c: 23: TRISBbits.RB4 = 1;
   628  0009C6  8893               	bsf	3987,4,c	;volatile
   629                           
   630                           ;user.c: 24: TRISBbits.RB5 = 1;
   631  0009C8  8A93               	bsf	3987,5,c	;volatile
   632                           
   633                           ;user.c: 25: TRISBbits.RB1 = 0;
   634  0009CA  9293               	bcf	3987,1,c	;volatile
   635                           
   636                           ;user.c: 26: PORTBbits.RB1 = 1;
   637  0009CC  8281               	bsf	3969,1,c	;volatile
   638                           
   639                           ;user.c: 27: TRISD = 0b00001111;
   640  0009CE  0E0F               	movlw	15
   641  0009D0  6E95               	movwf	3989,c	;volatile
   642                           
   643                           ;user.c: 28: TRISE = 0b00000100;
   644  0009D2  0E04               	movlw	4
   645  0009D4  6E96               	movwf	3990,c	;volatile
   646                           
   647                           ;user.c: 29: ADCON1 = 0b10000111;
   648  0009D6  0E87               	movlw	135
   649  0009D8  6EC1               	movwf	4033,c	;volatile
   650                           
   651                           ;user.c: 33: PORTA = 0b00010000;
   652  0009DA  0E10               	movlw	16
   653  0009DC  6E80               	movwf	3968,c	;volatile
   654                           
   655                           ;user.c: 34: PORTAbits.RA3 = 1;
   656  0009DE  8680               	bsf	3968,3,c	;volatile
   657                           
   658                           ;user.c: 35: WaitHalfSec();
   659  0009E0  ECFD  F004         	call	_WaitHalfSec	;wreg free
   660                           
   661                           ;user.c: 36: PORTAbits.RA3 = 0;
   662  0009E4  9680               	bcf	3968,3,c	;volatile
   663                           
   664                           ;user.c: 37: PORTAbits.RA2 = 1;
   665  0009E6  8480               	bsf	3968,2,c	;volatile
   666                           
   667                           ;user.c: 38: WaitHalfSec();
   668  0009E8  ECFD  F004         	call	_WaitHalfSec	;wreg free
   669                           
   670                           ;user.c: 39: PORTAbits.RA2 = 0;
   671  0009EC  9480               	bcf	3968,2,c	;volatile
   672                           
   673                           ;user.c: 40: PORTAbits.RA1 = 1;
   674  0009EE  8280               	bsf	3968,1,c	;volatile
   675                           
   676                           ;user.c: 41: WaitHalfSec();
   677  0009F0  ECFD  F004         	call	_WaitHalfSec	;wreg free
   678                           
   679                           ;user.c: 42: PORTAbits.RA1 = 0;
   680  0009F4  9280               	bcf	3968,1,c	;volatile
   681                           
   682                           ;user.c: 44: return 0;
   683                           ;	Return value of _InitApp is never used
   684  0009F6  0012               	return	
   685  0009F8  FFFF               	dw	65535	; errata NOP
   686  0009FA                     __end_of_InitApp:
   687                           	opt stack 0
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           intcon	equ	0xFF2
   693                           intcon2	equ	0xFF1
   694                           postinc0	equ	0xFEE
   695                           wreg	equ	0xFE8
   696                           postinc1	equ	0xFE6
   697                           postdec1	equ	0xFE5
   698                           fsr1l	equ	0xFE1
   699                           postinc2	equ	0xFDE
   700                           
   701 ;; *************** function _WaitHalfSec *****************
   702 ;; Defined at:
   703 ;;		line 50 in file "user.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  Halfcount       2    1[BANK0 ] int 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  2   10[COMRAM] int 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   717 ;;      Params:         0       0       0       0       0       0       0
   718 ;;      Locals:         0       2       0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0
   720 ;;      Totals:         0       2       0       0       0       0       0
   721 ;;Total ram usage:        2 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    4
   724 ;; This function calls:
   725 ;;		_Delay1KTCYx
   726 ;; This function is called by:
   727 ;;		_main
   728 ;;		_InitApp
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text3
   733  0009FA                     __ptext3:
   734                           	opt stack 0
   735  0009FA                     _WaitHalfSec:
   736                           	opt stack 26
   737                           
   738                           ;incstack = 0
   739  0009FA  FFFF               	dw	65535
   740                           
   741                           ;user.c: 52: int Halfcount = 50;
   742  0009FC  0E00               	movlw	0
   743  0009FE  0100               	movlb	0	; () banked
   744  000A00  6F82               	movwf	(WaitHalfSec@Halfcount+1)& (0+255),b
   745  000A02  0E32               	movlw	50
   746  000A04  0100               	movlb	0	; () banked
   747  000A06  6F81               	movwf	WaitHalfSec@Halfcount& (0+255),b
   748                           
   749                           ;user.c: 53: while (Halfcount != 0)
   750  000A08  D00D               	goto	l1067
   751  000A0A                     l1063:
   752                           
   753                           ; BSR set to: 0
   754                           ;user.c: 54: {
   755                           ;user.c: 55: Delay1KTCYx(25);
   756  000A0A  0E19               	movlw	25
   757  000A0C  EC26  F005         	call	_Delay1KTCYx
   758                           
   759                           ;user.c: 56: Halfcount = Halfcount-1;
   760  000A10  0EFF               	movlw	255
   761  000A12  0100               	movlb	0	; () banked
   762  000A14  2581               	addwf	WaitHalfSec@Halfcount& (0+255),w,b
   763  000A16  0100               	movlb	0	; () banked
   764  000A18  6F81               	movwf	WaitHalfSec@Halfcount& (0+255),b
   765  000A1A  0EFF               	movlw	255
   766  000A1C  0100               	movlb	0	; () banked
   767  000A1E  2182               	addwfc	(WaitHalfSec@Halfcount+1)& (0+255),w,b
   768  000A20  0100               	movlb	0	; () banked
   769  000A22  6F82               	movwf	(WaitHalfSec@Halfcount+1)& (0+255),b
   770  000A24                     l1067:
   771                           
   772                           ; BSR set to: 0
   773  000A24  0100               	movlb	0	; () banked
   774  000A26  5182               	movf	(WaitHalfSec@Halfcount+1)& (0+255),w,b
   775  000A28  1181               	iorwf	WaitHalfSec@Halfcount& (0+255),w,b
   776  000A2A  B4D8               	btfsc	status,2,c
   777                           
   778                           ; BSR set to: 0
   779                           
   780                           ; BSR set to: 0
   781                           ;user.c: 57: }
   782                           ;user.c: 58: return 0;
   783                           ;	Return value of _WaitHalfSec is never used
   784  000A2C  0012               	return	
   785  000A2E  FFFF               	dw	65535	; assembler added errata NOP
   786  000A30  D7EC               	goto	l1063
   787  000A32  FFFF               	dw	65535	; errata NOP
   788  000A34                     __end_of_WaitHalfSec:
   789                           	opt stack 0
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           intcon	equ	0xFF2
   795                           intcon2	equ	0xFF1
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           postinc1	equ	0xFE6
   799                           postdec1	equ	0xFE5
   800                           fsr1l	equ	0xFE1
   801                           postinc2	equ	0xFDE
   802                           status	equ	0xFD8
   803                           
   804 ;; *************** function _DisplayLCD *****************
   805 ;; Defined at:
   806 ;;		line 71 in file "user.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  tempPtr         2    1[BANK0 ] PTR unsigned char 
   809 ;;		 -> main@Msg2(5), main@Msg1(6), main@LCDinit(7), 
   810 ;;  init            2    3[BANK0 ] int 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  currentChar     1    5[BANK0 ] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2    1[BANK0 ] int 
   815 ;; Registers used:
   816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   822 ;;      Params:         0       4       0       0       0       0       0
   823 ;;      Locals:         0       1       0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0
   825 ;;      Totals:         0       5       0       0       0       0       0
   826 ;;Total ram usage:        5 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    4
   829 ;; This function calls:
   830 ;;		_Delay100TCYx
   831 ;;		_Delay10TCYx
   832 ;;		_Delay1KTCYx
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text4
   839  000870                     __ptext4:
   840                           	opt stack 0
   841  000870                     _DisplayLCD:
   842                           	opt stack 26
   843                           
   844                           ; BSR set to: 0
   845                           ;incstack = 0
   846  000870  FFFF               	dw	65535
   847                           
   848                           ;user.c: 73: char currentChar;
   849                           ;user.c: 77: if (init == 1)
   850  000872  0100               	movlb	0	; () banked
   851  000874  0583               	decf	DisplayLCD@init& (0+255),w,b
   852  000876  1184               	iorwf	(DisplayLCD@init+1)& (0+255),w,b
   853  000878  A4D8               	btfss	status,2,c
   854  00087A  D029               	goto	l108
   855                           
   856                           ; BSR set to: 0
   857                           ;user.c: 78: {
   858                           ;user.c: 79: Delay1KTCYx(250);
   859  00087C  0EFA               	movlw	250
   860  00087E  EC26  F005         	call	_Delay1KTCYx
   861                           
   862                           ;user.c: 80: PORTEbits.RE0 = 0;
   863  000882  9084               	bcf	3972,0,c	;volatile
   864                           
   865                           ;user.c: 81: while (*tempPtr != 0)
   866  000884  D01C               	goto	l1135
   867  000886                     l1113:
   868                           
   869                           ;user.c: 82: {
   870                           ;user.c: 83: currentChar = *tempPtr;
   871  000886  C081  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
   872  00088A  C082  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
   873  00088E  50DF               	movf	indf2,w,c
   874  000890  0100               	movlb	0	; () banked
   875  000892  6F85               	movwf	DisplayLCD@currentChar& (0+255),b
   876                           
   877                           ; BSR set to: 0
   878                           ;user.c: 84: PORTEbits.RE1 = 1;
   879  000894  8284               	bsf	3972,1,c	;volatile
   880                           
   881                           ; BSR set to: 0
   882                           ;user.c: 85: PORTD = currentChar;
   883  000896  C085  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
   884                           
   885                           ; BSR set to: 0
   886                           ;user.c: 86: PORTEbits.RE1 = 0;
   887  00089A  9284               	bcf	3972,1,c	;volatile
   888                           
   889                           ; BSR set to: 0
   890                           ;user.c: 87: Delay100TCYx(250);
   891  00089C  0EFA               	movlw	250
   892  00089E  EC31  F005         	call	_Delay100TCYx
   893                           
   894                           ;user.c: 88: currentChar <<= 4;
   895  0008A2  0100               	movlb	0	; () banked
   896  0008A4  3B85               	swapf	DisplayLCD@currentChar& (0+255),f,b
   897  0008A6  0EF0               	movlw	240
   898  0008A8  1785               	andwf	DisplayLCD@currentChar& (0+255),f,b
   899                           
   900                           ; BSR set to: 0
   901                           ;user.c: 89: PORTEbits.RE1 = 1;
   902  0008AA  8284               	bsf	3972,1,c	;volatile
   903                           
   904                           ; BSR set to: 0
   905                           ;user.c: 90: PORTD = currentChar;
   906  0008AC  C085  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
   907                           
   908                           ; BSR set to: 0
   909                           ;user.c: 91: PORTEbits.RE1 = 0;
   910  0008B0  9284               	bcf	3972,1,c	;volatile
   911                           
   912                           ; BSR set to: 0
   913                           ;user.c: 92: Delay100TCYx(250);
   914  0008B2  0EFA               	movlw	250
   915  0008B4  EC31  F005         	call	_Delay100TCYx
   916                           
   917                           ;user.c: 93: tempPtr++;
   918  0008B8  0100               	movlb	0	; () banked
   919  0008BA  4B81               	infsnz	DisplayLCD@tempPtr& (0+255),f,b
   920  0008BC  2B82               	incf	(DisplayLCD@tempPtr+1)& (0+255),f,b
   921  0008BE                     l1135:
   922  0008BE  C081  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
   923  0008C2  C082  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
   924  0008C6  50DF               	movf	indf2,w,c
   925  0008C8  B4D8               	btfsc	status,2,c
   926  0008CA  D024               	goto	l116
   927  0008CC  D7DC               	goto	l1113
   928  0008CE                     l108:
   929                           
   930                           ; BSR set to: 0
   931                           ;user.c: 96: else
   932                           ;user.c: 97: {
   933                           ;user.c: 98: PORTEbits.RE0 = 0;
   934  0008CE  9084               	bcf	3972,0,c	;volatile
   935                           
   936                           ;user.c: 99: while (*tempPtr)
   937  0008D0  D01A               	goto	l1159
   938  0008D2                     l1137:
   939                           
   940                           ; BSR set to: 0
   941                           ;user.c: 100: {
   942                           ;user.c: 101: currentChar = *tempPtr;
   943  0008D2  C081  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
   944  0008D6  C082  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
   945  0008DA  50DF               	movf	indf2,w,c
   946  0008DC  0100               	movlb	0	; () banked
   947  0008DE  6F85               	movwf	DisplayLCD@currentChar& (0+255),b
   948                           
   949                           ; BSR set to: 0
   950                           ;user.c: 102: PORTEbits.RE1 = 1;
   951  0008E0  8284               	bsf	3972,1,c	;volatile
   952                           
   953                           ; BSR set to: 0
   954                           ;user.c: 103: PORTD = currentChar;
   955  0008E2  C085  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
   956                           
   957                           ; BSR set to: 0
   958                           ;user.c: 104: PORTEbits.RE1 = 0;
   959  0008E6  9284               	bcf	3972,1,c	;volatile
   960                           
   961                           ; BSR set to: 0
   962                           ;user.c: 105: currentChar <<= 4;
   963  0008E8  0100               	movlb	0	; () banked
   964  0008EA  3B85               	swapf	DisplayLCD@currentChar& (0+255),f,b
   965  0008EC  0EF0               	movlw	240
   966  0008EE  1785               	andwf	DisplayLCD@currentChar& (0+255),f,b
   967                           
   968                           ; BSR set to: 0
   969                           ;user.c: 106: PORTEbits.RE1 = 1;
   970  0008F0  8284               	bsf	3972,1,c	;volatile
   971                           
   972                           ; BSR set to: 0
   973                           ;user.c: 107: PORTD = currentChar;
   974  0008F2  C085  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
   975                           
   976                           ; BSR set to: 0
   977                           ;user.c: 108: PORTEbits.RE1 = 0;
   978  0008F6  9284               	bcf	3972,1,c	;volatile
   979                           
   980                           ; BSR set to: 0
   981                           ;user.c: 109: Delay10TCYx(10);
   982  0008F8  0E0A               	movlw	10
   983  0008FA  EC1A  F005         	call	_Delay10TCYx
   984                           
   985                           ;user.c: 110: PORTEbits.RE0 = 1;
   986  0008FE  8084               	bsf	3972,0,c	;volatile
   987                           
   988                           ;user.c: 111: tempPtr++;
   989  000900  0100               	movlb	0	; () banked
   990  000902  4B81               	infsnz	DisplayLCD@tempPtr& (0+255),f,b
   991  000904  2B82               	incf	(DisplayLCD@tempPtr+1)& (0+255),f,b
   992  000906                     l1159:
   993                           
   994                           ; BSR set to: 0
   995  000906  C081  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
   996  00090A  C082  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
   997  00090E  50DF               	movf	indf2,w,c
   998  000910  A4D8               	btfss	status,2,c
   999  000912  D7DF               	goto	l1137
  1000  000914                     l116:
  1001  000914  0012               	return	
  1002  000916  FFFF               	dw	65535	; errata NOP
  1003  000918                     __end_of_DisplayLCD:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           intcon	equ	0xFF2
  1010                           intcon2	equ	0xFF1
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           postinc1	equ	0xFE6
  1014                           postdec1	equ	0xFE5
  1015                           fsr1l	equ	0xFE1
  1016                           indf2	equ	0xFDF
  1017                           postinc2	equ	0xFDE
  1018                           fsr2h	equ	0xFDA
  1019                           fsr2l	equ	0xFD9
  1020                           status	equ	0xFD8
  1021                           
  1022 ;; *************** function _Delay1KTCYx *****************
  1023 ;; Defined at:
  1024 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d1ktcyx.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  unit            1    wreg     unsigned char 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  unit            1    0[BANK0 ] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;		None               void
  1031 ;; Registers used:
  1032 ;;		wreg
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1038 ;;      Params:         0       0       0       0       0       0       0
  1039 ;;      Locals:         0       1       0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0
  1041 ;;      Totals:         0       1       0       0       0       0       0
  1042 ;;Total ram usage:        1 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    3
  1045 ;; This function calls:
  1046 ;;		Nothing
  1047 ;; This function is called by:
  1048 ;;		_WaitHalfSec
  1049 ;;		_DisplayLCD
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text5
  1054  000A4C                     __ptext5:
  1055                           	opt stack 0
  1056  000A4C                     _Delay1KTCYx:
  1057                           	opt stack 26
  1058                           
  1059                           ;incstack = 0
  1060  000A4C  FFFF               	dw	65535
  1061                           
  1062                           ;Delay1KTCYx@unit stored from wreg
  1063  000A4E  0100               	movlb	0	; () banked
  1064  000A50  6F80               	movwf	Delay1KTCYx@unit& (0+255),b
  1065  000A52                     l380:
  1066                           
  1067                           ; BSR set to: 0
  1068                           
  1069                           ; BSR set to: 0
  1070  000A52  0EFA               	movlw	250
  1071  000A54                     u387:
  1072  000A54  2EE8               	decfsz	wreg,f,c
  1073  000A56  D7FE               	goto	u387
  1074  000A58  0100               	movlb	0	; () banked
  1075  000A5A  2F80               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  1076  000A5C  D7FA               	goto	l380
  1077                           
  1078                           ; BSR set to: 0
  1079                           
  1080                           ; BSR set to: 0
  1081  000A5E  0012               	return	
  1082  000A60  FFFF               	dw	65535	; errata NOP
  1083  000A62                     __end_of_Delay1KTCYx:
  1084                           	opt stack 0
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           intcon	equ	0xFF2
  1090                           intcon2	equ	0xFF1
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postinc1	equ	0xFE6
  1094                           postdec1	equ	0xFE5
  1095                           fsr1l	equ	0xFE1
  1096                           indf2	equ	0xFDF
  1097                           postinc2	equ	0xFDE
  1098                           fsr2h	equ	0xFDA
  1099                           fsr2l	equ	0xFD9
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function _Delay10TCYx *****************
  1103 ;; Defined at:
  1104 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d10tcyx.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  unit            1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  unit            1    0[BANK0 ] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;		None               void
  1111 ;; Registers used:
  1112 ;;		wreg
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1118 ;;      Params:         0       0       0       0       0       0       0
  1119 ;;      Locals:         0       1       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0
  1121 ;;      Totals:         0       1       0       0       0       0       0
  1122 ;;Total ram usage:        1 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    3
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_DisplayLCD
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text6
  1133  000A34                     __ptext6:
  1134                           	opt stack 0
  1135  000A34                     _Delay10TCYx:
  1136                           	opt stack 26
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;incstack = 0
  1140  000A34  FFFF               	dw	65535
  1141                           
  1142                           ;Delay10TCYx@unit stored from wreg
  1143  000A36  0100               	movlb	0	; () banked
  1144  000A38  6F80               	movwf	Delay10TCYx@unit& (0+255),b
  1145  000A3A                     l373:
  1146                           
  1147                           ; BSR set to: 0
  1148                           
  1149                           ; BSR set to: 0
  1150  000A3A  0E02               	movlw	2
  1151  000A3C                     u397:
  1152  000A3C  F000               	nop	
  1153  000A3E  2EE8               	decfsz	wreg,f,c
  1154  000A40  D7FD               	goto	u397
  1155  000A42  0100               	movlb	0	; () banked
  1156  000A44  2F80               	decfsz	Delay10TCYx@unit& (0+255),f,b
  1157  000A46  D7F9               	goto	l373
  1158                           
  1159                           ; BSR set to: 0
  1160                           
  1161                           ; BSR set to: 0
  1162  000A48  0012               	return	
  1163  000A4A  FFFF               	dw	65535	; errata NOP
  1164  000A4C                     __end_of_Delay10TCYx:
  1165                           	opt stack 0
  1166                           tblptru	equ	0xFF8
  1167                           tblptrh	equ	0xFF7
  1168                           tblptrl	equ	0xFF6
  1169                           tablat	equ	0xFF5
  1170                           intcon	equ	0xFF2
  1171                           intcon2	equ	0xFF1
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postinc1	equ	0xFE6
  1175                           postdec1	equ	0xFE5
  1176                           fsr1l	equ	0xFE1
  1177                           indf2	equ	0xFDF
  1178                           postinc2	equ	0xFDE
  1179                           fsr2h	equ	0xFDA
  1180                           fsr2l	equ	0xFD9
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _Delay100TCYx *****************
  1184 ;; Defined at:
  1185 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d100tcyx.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  unit            1    wreg     unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  unit            1    0[BANK0 ] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;		None               void
  1192 ;; Registers used:
  1193 ;;		wreg
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1199 ;;      Params:         0       0       0       0       0       0       0
  1200 ;;      Locals:         0       1       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0
  1202 ;;      Totals:         0       1       0       0       0       0       0
  1203 ;;Total ram usage:        1 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    3
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_DisplayLCD
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text7
  1214  000A62                     __ptext7:
  1215                           	opt stack 0
  1216  000A62                     _Delay100TCYx:
  1217                           	opt stack 26
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;incstack = 0
  1221  000A62  FFFF               	dw	65535
  1222                           
  1223                           ;Delay100TCYx@unit stored from wreg
  1224  000A64  0100               	movlb	0	; () banked
  1225  000A66  6F80               	movwf	Delay100TCYx@unit& (0+255),b
  1226  000A68                     l366:
  1227                           
  1228                           ; BSR set to: 0
  1229                           
  1230                           ; BSR set to: 0
  1231  000A68  0E19               	movlw	25
  1232  000A6A                     u407:
  1233  000A6A  2EE8               	decfsz	wreg,f,c
  1234  000A6C  D7FE               	goto	u407
  1235  000A6E  0100               	movlb	0	; () banked
  1236  000A70  2F80               	decfsz	Delay100TCYx@unit& (0+255),f,b
  1237  000A72  D7FA               	goto	l366
  1238                           
  1239                           ; BSR set to: 0
  1240                           
  1241                           ; BSR set to: 0
  1242  000A74  0012               	return	
  1243  000A76  FFFF               	dw	65535	; errata NOP
  1244  000A78                     __end_of_Delay100TCYx:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           intcon	equ	0xFF2
  1251                           intcon2	equ	0xFF1
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           postinc1	equ	0xFE6
  1255                           postdec1	equ	0xFE5
  1256                           fsr1l	equ	0xFE1
  1257                           indf2	equ	0xFDF
  1258                           postinc2	equ	0xFDE
  1259                           fsr2h	equ	0xFDA
  1260                           fsr2l	equ	0xFD9
  1261                           status	equ	0xFD8
  1262                           
  1263 ;; *************** function _low_isr *****************
  1264 ;; Defined at:
  1265 ;;		line 74 in file "main.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;		None               void
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1279 ;;      Params:         0       0       0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0
  1281 ;;      Temps:         17       0       0       0       0       0       0
  1282 ;;      Totals:        17       0       0       0       0       0       0
  1283 ;;Total ram usage:       17 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    2
  1286 ;; This function calls:
  1287 ;;		_ReadEncoder
  1288 ;; This function is called by:
  1289 ;;		Interrupt level 1
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293 ;; *************** function _TimerStopped *****************
  1294 ;; Defined at:
  1295 ;;		line 15 in file "interrupts.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;		None               void
  1302 ;; Registers used:
  1303 ;;		None
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1309 ;;      Params:         0       0       0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0
  1311 ;;      Temps:         17       0       0       0       0       0       0
  1312 ;;      Totals:        17       0       0       0       0       0       0
  1313 ;;Total ram usage:       17 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    1
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		Interrupt level 1
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	intcodelo
  1324  000018                     __pintcodelo:
  1325                           	opt stack 0
  1326  000018                     _low_isr:
  1327                           	opt stack 25
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;incstack = 0
  1331  000018  FFFF               	dw	65535	; errata NOP
  1332  00001A  CFD8 F00F          	movff	status,??_low_isr
  1333  00001E  CFE8 F010          	movff	wreg,??_low_isr+1
  1334  000022  CFE0 F011          	movff	bsr,??_low_isr+2
  1335  000026  CFFA F012          	movff	pclath,??_low_isr+3
  1336  00002A  CFFB F013          	movff	pclatu,??_low_isr+4
  1337  00002E  CFE9 F014          	movff	fsr0l,??_low_isr+5
  1338  000032  CFEA F015          	movff	fsr0h,??_low_isr+6
  1339  000036  CFE1 F016          	movff	fsr1l,??_low_isr+7
  1340  00003A  CFE2 F017          	movff	fsr1h,??_low_isr+8
  1341  00003E  CFD9 F018          	movff	fsr2l,??_low_isr+9
  1342  000042  CFDA F019          	movff	fsr2h,??_low_isr+10
  1343  000046  CFF3 F01A          	movff	prodl,??_low_isr+11
  1344  00004A  CFF4 F01B          	movff	prodh,??_low_isr+12
  1345  00004E  CFF6 F01C          	movff	tblptrl,??_low_isr+13
  1346  000052  CFF7 F01D          	movff	tblptrh,??_low_isr+14
  1347  000056  CFF8 F01E          	movff	tblptru,??_low_isr+15
  1348  00005A  CFF5 F01F          	movff	tablat,??_low_isr+16
  1349                           
  1350                           ;main.c: 76: if(INTCONbits.RBIF == 1)
  1351  00005E  A0F2               	btfss	intcon,0,c	;volatile
  1352  000060  D003               	goto	i1l48
  1353                           
  1354                           ;main.c: 77: {
  1355                           ;main.c: 78: ReadEncoder();
  1356  000062  EC12  F003         	call	_ReadEncoder	;wreg free
  1357                           
  1358                           ;main.c: 80: INTCONbits.RBIF = 0;
  1359  000066  90F2               	bcf	intcon,0,c	;volatile
  1360  000068                     i1l48:
  1361  000068  C01F  FFF5         	movff	??_low_isr+16,tablat
  1362  00006C  C01E  FFF8         	movff	??_low_isr+15,tblptru
  1363  000070  C01D  FFF7         	movff	??_low_isr+14,tblptrh
  1364  000074  C01C  FFF6         	movff	??_low_isr+13,tblptrl
  1365  000078  C01B  FFF4         	movff	??_low_isr+12,prodh
  1366  00007C  C01A  FFF3         	movff	??_low_isr+11,prodl
  1367  000080  C019  FFDA         	movff	??_low_isr+10,fsr2h
  1368  000084  C018  FFD9         	movff	??_low_isr+9,fsr2l
  1369  000088  C017  FFE2         	movff	??_low_isr+8,fsr1h
  1370  00008C  C016  FFE1         	movff	??_low_isr+7,fsr1l
  1371  000090  C015  FFEA         	movff	??_low_isr+6,fsr0h
  1372  000094  C014  FFE9         	movff	??_low_isr+5,fsr0l
  1373  000098  C013  FFFB         	movff	??_low_isr+4,pclatu
  1374  00009C  C012  FFFA         	movff	??_low_isr+3,pclath
  1375  0000A0  C011  FFE0         	movff	??_low_isr+2,bsr
  1376  0000A4  C010  FFE8         	movff	??_low_isr+1,wreg
  1377  0000A8  C00F  FFD8         	movff	??_low_isr,status
  1378  0000AC  0010               	retfie	
  1379  0000AE  FFFF               	dw	65535	; errata NOP
  1380  0000B0                     __end_of_low_isr:
  1381                           	opt stack 0
  1382  0000B0                     _TimerStopped:
  1383                           	opt stack 26
  1384                           
  1385                           ;incstack = 0
  1386  0000B0  FFFF               	dw	65535	; errata NOP
  1387  0000B2  CFD8 F020          	movff	status,??_TimerStopped
  1388  0000B6  CFE8 F021          	movff	wreg,??_TimerStopped+1
  1389  0000BA  CFE0 F022          	movff	bsr,??_TimerStopped+2
  1390  0000BE  CFFA F023          	movff	pclath,??_TimerStopped+3
  1391  0000C2  CFFB F024          	movff	pclatu,??_TimerStopped+4
  1392  0000C6  CFE9 F025          	movff	fsr0l,??_TimerStopped+5
  1393  0000CA  CFEA F026          	movff	fsr0h,??_TimerStopped+6
  1394  0000CE  CFE1 F027          	movff	fsr1l,??_TimerStopped+7
  1395  0000D2  CFE2 F028          	movff	fsr1h,??_TimerStopped+8
  1396  0000D6  CFD9 F029          	movff	fsr2l,??_TimerStopped+9
  1397  0000DA  CFDA F02A          	movff	fsr2h,??_TimerStopped+10
  1398  0000DE  CFF3 F02B          	movff	prodl,??_TimerStopped+11
  1399  0000E2  CFF4 F02C          	movff	prodh,??_TimerStopped+12
  1400  0000E6  CFF6 F02D          	movff	tblptrl,??_TimerStopped+13
  1401  0000EA  CFF7 F02E          	movff	tblptrh,??_TimerStopped+14
  1402  0000EE  CFF8 F02F          	movff	tblptru,??_TimerStopped+15
  1403  0000F2  CFF5 F030          	movff	tablat,??_TimerStopped+16
  1404                           
  1405                           ;interrupts.c: 18: if(INTCONbits.INT0F == 1)
  1406  0000F6  A2F2               	btfss	intcon,1,c	;volatile
  1407  0000F8  D002               	goto	i1l140
  1408                           
  1409                           ;interrupts.c: 19: {
  1410                           ;interrupts.c: 20: LATB4 = ~LATB4;
  1411  0000FA  788A               	btg	3978,4,c	;volatile
  1412                           
  1413                           ;interrupts.c: 21: INTCONbits.INT0F = 0;
  1414  0000FC  92F2               	bcf	intcon,1,c	;volatile
  1415  0000FE                     i1l140:
  1416  0000FE  C030  FFF5         	movff	??_TimerStopped+16,tablat
  1417  000102  C02F  FFF8         	movff	??_TimerStopped+15,tblptru
  1418  000106  C02E  FFF7         	movff	??_TimerStopped+14,tblptrh
  1419  00010A  C02D  FFF6         	movff	??_TimerStopped+13,tblptrl
  1420  00010E  C02C  FFF4         	movff	??_TimerStopped+12,prodh
  1421  000112  C02B  FFF3         	movff	??_TimerStopped+11,prodl
  1422  000116  C02A  FFDA         	movff	??_TimerStopped+10,fsr2h
  1423  00011A  C029  FFD9         	movff	??_TimerStopped+9,fsr2l
  1424  00011E  C028  FFE2         	movff	??_TimerStopped+8,fsr1h
  1425  000122  C027  FFE1         	movff	??_TimerStopped+7,fsr1l
  1426  000126  C026  FFEA         	movff	??_TimerStopped+6,fsr0h
  1427  00012A  C025  FFE9         	movff	??_TimerStopped+5,fsr0l
  1428  00012E  C024  FFFB         	movff	??_TimerStopped+4,pclatu
  1429  000132  C023  FFFA         	movff	??_TimerStopped+3,pclath
  1430  000136  C022  FFE0         	movff	??_TimerStopped+2,bsr
  1431  00013A  C021  FFE8         	movff	??_TimerStopped+1,wreg
  1432  00013E  C020  FFD8         	movff	??_TimerStopped,status
  1433  000142  0010               	retfie	
  1434  000144  FFFF               	dw	65535	; errata NOP
  1435  000146                     __end_of_TimerStopped:
  1436                           	opt stack 0
  1437                           pclatu	equ	0xFFB
  1438                           pclath	equ	0xFFA
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           prodh	equ	0xFF4
  1444                           prodl	equ	0xFF3
  1445                           intcon	equ	0xFF2
  1446                           intcon2	equ	0xFF1
  1447                           postinc0	equ	0xFEE
  1448                           fsr0h	equ	0xFEA
  1449                           fsr0l	equ	0xFE9
  1450                           wreg	equ	0xFE8
  1451                           postinc1	equ	0xFE6
  1452                           postdec1	equ	0xFE5
  1453                           fsr1h	equ	0xFE2
  1454                           fsr1l	equ	0xFE1
  1455                           bsr	equ	0xFE0
  1456                           indf2	equ	0xFDF
  1457                           postinc2	equ	0xFDE
  1458                           fsr2h	equ	0xFDA
  1459                           fsr2l	equ	0xFD9
  1460                           status	equ	0xFD8
  1461                           
  1462 ;; *************** function _ReadEncoder *****************
  1463 ;; Defined at:
  1464 ;;		line 146 in file "user.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  NEW_ROT         2   12[COMRAM] int 
  1469 ;;  Bnew            2   10[COMRAM] int 
  1470 ;;  Anew            2    8[COMRAM] int 
  1471 ;;  New             2    6[COMRAM] int 
  1472 ;;  Old             2    4[COMRAM] int 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;		None               void
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1482 ;;      Params:         0       0       0       0       0       0       0
  1483 ;;      Locals:        10       0       0       0       0       0       0
  1484 ;;      Temps:          4       0       0       0       0       0       0
  1485 ;;      Totals:        14       0       0       0       0       0       0
  1486 ;;Total ram usage:       14 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_low_isr
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text9
  1497  000624                     __ptext9:
  1498                           	opt stack 0
  1499  000624                     _ReadEncoder:
  1500                           	opt stack 25
  1501                           
  1502                           ;incstack = 0
  1503  000624  FFFF               	dw	65535
  1504                           
  1505                           ;user.c: 149: int Anew = PORTBbits.RB5;
  1506  000626  AA81               	btfss	3969,5,c	;volatile
  1507  000628  D003               	goto	i1u5_20
  1508  00062A  6A01               	clrf	??_ReadEncoder& (0+255),c
  1509  00062C  2A01               	incf	??_ReadEncoder& (0+255),f,c
  1510  00062E  D001               	goto	i1u5_28
  1511  000630                     i1u5_20:
  1512  000630  6A01               	clrf	??_ReadEncoder& (0+255),c
  1513  000632                     i1u5_28:
  1514  000632  5001               	movf	??_ReadEncoder,w,c
  1515  000634  6E09               	movwf	ReadEncoder@Anew,c
  1516  000636  6A0A               	clrf	ReadEncoder@Anew+1,c
  1517                           
  1518                           ;user.c: 150: int Bnew = PORTBbits.RB4;
  1519  000638  A881               	btfss	3969,4,c	;volatile
  1520  00063A  D003               	goto	i1u6_20
  1521  00063C  6A01               	clrf	??_ReadEncoder& (0+255),c
  1522  00063E  2A01               	incf	??_ReadEncoder& (0+255),f,c
  1523  000640  D001               	goto	i1u6_28
  1524  000642                     i1u6_20:
  1525  000642  6A01               	clrf	??_ReadEncoder& (0+255),c
  1526  000644                     i1u6_28:
  1527  000644  5001               	movf	??_ReadEncoder,w,c
  1528  000646  6E0B               	movwf	ReadEncoder@Bnew,c
  1529  000648  6A0C               	clrf	ReadEncoder@Bnew+1,c
  1530                           
  1531                           ;user.c: 152: int Old = CHA*2 + CHB;
  1532  00064A  C041  F001         	movff	_CHA,??_ReadEncoder
  1533  00064E  C042  F002         	movff	_CHA+1,??_ReadEncoder+1
  1534  000652  90D8               	bcf	status,0,c
  1535  000654  3601               	rlcf	??_ReadEncoder,f,c
  1536  000656  3602               	rlcf	??_ReadEncoder+1,f,c
  1537  000658  5043               	movf	_CHB,w,c
  1538  00065A  2401               	addwf	??_ReadEncoder,w,c
  1539  00065C  6E05               	movwf	ReadEncoder@Old,c
  1540  00065E  5044               	movf	_CHB+1,w,c
  1541  000660  2002               	addwfc	??_ReadEncoder+1,w,c
  1542  000662  6E06               	movwf	ReadEncoder@Old+1,c
  1543                           
  1544                           ;user.c: 153: int New = Anew*2 + Bnew;
  1545  000664  C009  F001         	movff	ReadEncoder@Anew,??_ReadEncoder
  1546  000668  C00A  F002         	movff	ReadEncoder@Anew+1,??_ReadEncoder+1
  1547  00066C  90D8               	bcf	status,0,c
  1548  00066E  3601               	rlcf	??_ReadEncoder,f,c
  1549  000670  3602               	rlcf	??_ReadEncoder+1,f,c
  1550  000672  500B               	movf	ReadEncoder@Bnew,w,c
  1551  000674  2401               	addwf	??_ReadEncoder,w,c
  1552  000676  6E07               	movwf	ReadEncoder@New,c
  1553  000678  500C               	movf	ReadEncoder@Bnew+1,w,c
  1554  00067A  2002               	addwfc	??_ReadEncoder+1,w,c
  1555  00067C  6E08               	movwf	ReadEncoder@New+1,c
  1556                           
  1557                           ;user.c: 154: int NEW_ROT = QEM[Old*4+New];
  1558  00067E  C005  F001         	movff	ReadEncoder@Old,??_ReadEncoder
  1559  000682  C006  F002         	movff	ReadEncoder@Old+1,??_ReadEncoder+1
  1560  000686  90D8               	bcf	status,0,c
  1561  000688  3601               	rlcf	??_ReadEncoder,f,c
  1562  00068A  3602               	rlcf	??_ReadEncoder+1,f,c
  1563  00068C  90D8               	bcf	status,0,c
  1564  00068E  3601               	rlcf	??_ReadEncoder,f,c
  1565  000690  3602               	rlcf	??_ReadEncoder+1,f,c
  1566  000692  5007               	movf	ReadEncoder@New,w,c
  1567  000694  2601               	addwf	??_ReadEncoder,f,c
  1568  000696  5008               	movf	ReadEncoder@New+1,w,c
  1569  000698  2202               	addwfc	??_ReadEncoder+1,f,c
  1570  00069A  90D8               	bcf	status,0,c
  1571  00069C  3601               	rlcf	??_ReadEncoder,f,c
  1572  00069E  3602               	rlcf	??_ReadEncoder+1,f,c
  1573  0006A0  0E01               	movlw	low _QEM
  1574  0006A2  2401               	addwf	??_ReadEncoder,w,c
  1575  0006A4  6EF6               	movwf	tblptrl,c
  1576  0006A6  0E06               	movlw	high _QEM
  1577  0006A8  2002               	addwfc	??_ReadEncoder+1,w,c
  1578  0006AA  6EF7               	movwf	tblptrh,c
  1579  0006AC                     	if	0	;There are less than 3 active tblptr bytes
  1580  0006AC                     	endif
  1581  0006AC  0009               	tblrd		*+
  1582  0006AE  FFFF               	dw	65535	; errata NOP
  1583  0006B0  CFF5 F00D          	movff	tablat,ReadEncoder@NEW_ROT
  1584  0006B4  000A               	tblrd		*-
  1585  0006B6  FFFF               	dw	65535	; errata NOP
  1586  0006B8  CFF5 F00E          	movff	tablat,ReadEncoder@NEW_ROT+1
  1587                           
  1588                           ;user.c: 156: if (NEW_ROT == 2)
  1589  0006BC  500D               	movf	ReadEncoder@NEW_ROT,w,c
  1590  0006BE  0A02               	xorlw	2
  1591  0006C0  100E               	iorwf	ReadEncoder@NEW_ROT+1,w,c
  1592  0006C2  A4D8               	btfss	status,2,c
  1593  0006C4  D005               	goto	i1l122
  1594                           
  1595                           ;user.c: 157: {
  1596                           ;user.c: 158: NEW_ROT = OLD_ROT;
  1597  0006C6  C047  F00D         	movff	_OLD_ROT,ReadEncoder@NEW_ROT
  1598  0006CA  C048  F00E         	movff	_OLD_ROT+1,ReadEncoder@NEW_ROT+1
  1599                           
  1600                           ;user.c: 159: }
  1601  0006CE  D008               	goto	i1l867
  1602  0006D0                     i1l122:
  1603                           
  1604                           ;user.c: 160: else
  1605                           ;user.c: 161: {
  1606                           ;user.c: 162: CHA = Anew;
  1607  0006D0  C009  F041         	movff	ReadEncoder@Anew,_CHA
  1608  0006D4  C00A  F042         	movff	ReadEncoder@Anew+1,_CHA+1
  1609                           
  1610                           ;user.c: 163: CHB = Bnew;
  1611  0006D8  C00B  F043         	movff	ReadEncoder@Bnew,_CHB
  1612  0006DC  C00C  F044         	movff	ReadEncoder@Bnew+1,_CHB+1
  1613  0006E0                     i1l867:
  1614                           
  1615                           ;user.c: 164: }
  1616                           ;user.c: 166: if (NEW_ROT == 1)
  1617  0006E0  040D               	decf	ReadEncoder@NEW_ROT,w,c
  1618  0006E2  100E               	iorwf	ReadEncoder@NEW_ROT+1,w,c
  1619  0006E4  A4D8               	btfss	status,2,c
  1620  0006E6  D003               	goto	i1l871
  1621                           
  1622                           ;user.c: 167: {
  1623                           ;user.c: 168: CWTurn += 1;
  1624  0006E8  4A45               	infsnz	_CWTurn,f,c
  1625  0006EA  2A46               	incf	_CWTurn+1,f,c
  1626                           
  1627                           ;user.c: 169: }
  1628  0006EC  D007               	goto	i1l875
  1629  0006EE                     i1l871:
  1630                           
  1631                           ;user.c: 170: else if (NEW_ROT == -1)
  1632  0006EE  280D               	incf	ReadEncoder@NEW_ROT,w,c
  1633  0006F0  B4D8               	btfsc	status,2,c
  1634  0006F2  280E               	incf	ReadEncoder@NEW_ROT+1,w,c
  1635  0006F4  A4D8               	btfss	status,2,c
  1636  0006F6  D002               	goto	i1l875
  1637                           
  1638                           ;user.c: 171: {
  1639                           ;user.c: 172: CCWTurn += 1;
  1640  0006F8  4A3F               	infsnz	_CCWTurn,f,c
  1641  0006FA  2A40               	incf	_CCWTurn+1,f,c
  1642  0006FC                     i1l875:
  1643                           
  1644                           ;user.c: 173: }
  1645                           ;user.c: 175: if (CWTurn + CCWTurn == EncoderPoll)
  1646  0006FC  0E21               	movlw	low _EncoderPoll
  1647  0006FE  6EF6               	movwf	tblptrl,c
  1648  000700                     	if	0	;There is only one active tblptr byte
  1649  000700                     	endif
  1650  000700                     	if	0	;There are less than 3 active tblptr bytes
  1651  000700                     	endif
  1652  000700  0009               	tblrd		*+
  1653  000702  FFFF               	dw	65535	; errata NOP
  1654  000704  CFF5 F001          	movff	tablat,??_ReadEncoder
  1655  000708  0009               	tblrd		*+
  1656  00070A  FFFF               	dw	65535	; errata NOP
  1657  00070C  CFF5 F002          	movff	tablat,??_ReadEncoder+1
  1658  000710  C045  F003         	movff	_CWTurn,??_ReadEncoder+2
  1659  000714  C046  F004         	movff	_CWTurn+1,??_ReadEncoder+3
  1660  000718  503F               	movf	_CCWTurn,w,c
  1661  00071A  2603               	addwf	??_ReadEncoder+2,f,c
  1662  00071C  5040               	movf	_CCWTurn+1,w,c
  1663  00071E  2204               	addwfc	??_ReadEncoder+3,f,c
  1664  000720  5002               	movf	??_ReadEncoder+1,w,c
  1665  000722  1804               	xorwf	??_ReadEncoder+3,w,c
  1666  000724  E102               	bnz	i1u10_25
  1667  000726  5001               	movf	??_ReadEncoder,w,c
  1668  000728  1803               	xorwf	??_ReadEncoder+2,w,c
  1669  00072A                     i1u10_25:
  1670  00072A  A4D8               	btfss	status,2,c
  1671  00072C  D024               	goto	i1l887
  1672                           
  1673                           ;user.c: 176: {
  1674                           ;user.c: 177: if (CWTurn > CCWTurn)
  1675  00072E  5040               	movf	_CCWTurn+1,w,c
  1676  000730  0A80               	xorlw	128
  1677  000732  6E01               	movwf	??_ReadEncoder& (0+255),c
  1678  000734  5045               	movf	_CWTurn,w,c
  1679  000736  5C3F               	subwf	_CCWTurn,w,c
  1680  000738  5046               	movf	_CWTurn+1,w,c
  1681  00073A  0A80               	xorlw	128
  1682  00073C  5801               	subwfb	??_ReadEncoder& (0+255),w,c
  1683  00073E  B0D8               	btfsc	status,0,c
  1684  000740  D002               	goto	i1l881
  1685                           
  1686                           ;user.c: 178: {
  1687                           ;user.c: 179: PORTAbits.RA3 = 1;
  1688  000742  8680               	bsf	3968,3,c	;volatile
  1689  000744  D00E               	goto	L3
  1690  000746                     i1l881:
  1691                           
  1692                           ;user.c: 183: else if (CWTurn < CCWTurn)
  1693  000746  5046               	movf	_CWTurn+1,w,c
  1694  000748  0A80               	xorlw	128
  1695  00074A  6E01               	movwf	??_ReadEncoder& (0+255),c
  1696  00074C  503F               	movf	_CCWTurn,w,c
  1697  00074E  5C45               	subwf	_CWTurn,w,c
  1698  000750  5040               	movf	_CCWTurn+1,w,c
  1699  000752  0A80               	xorlw	128
  1700  000754  5801               	subwfb	??_ReadEncoder& (0+255),w,c
  1701  000756  B0D8               	btfsc	status,0,c
  1702  000758  D003               	goto	i1l130
  1703                           
  1704                           ;user.c: 184: {
  1705                           ;user.c: 185: PORTAbits.RA3 = 0;
  1706  00075A  9680               	bcf	3968,3,c	;volatile
  1707                           
  1708                           ;user.c: 186: PORTAbits.RA2 = 1;
  1709  00075C  8480               	bsf	3968,2,c	;volatile
  1710  00075E  D002               	goto	L2
  1711  000760                     i1l130:
  1712                           
  1713                           ;user.c: 189: else
  1714                           ;user.c: 190: {
  1715                           ;user.c: 191: PORTAbits.RA3 = 0;
  1716  000760  9680               	bcf	3968,3,c	;volatile
  1717  000762                     L3:
  1718                           
  1719                           ;user.c: 192: PORTAbits.RA2 = 0;
  1720  000762  9480               	bcf	3968,2,c	;volatile
  1721  000764                     L2:
  1722                           
  1723                           ;user.c: 193: PORTAbits.RA1 = 0;
  1724  000764  9280               	bcf	3968,1,c	;volatile
  1725                           
  1726                           ;user.c: 194: }
  1727                           ;user.c: 196: CWTurn = 0;
  1728  000766  0E00               	movlw	0
  1729  000768  6E46               	movwf	_CWTurn+1,c
  1730  00076A  0E00               	movlw	0
  1731  00076C  6E45               	movwf	_CWTurn,c
  1732                           
  1733                           ;user.c: 197: CCWTurn = 0;
  1734  00076E  0E00               	movlw	0
  1735  000770  6E40               	movwf	_CCWTurn+1,c
  1736  000772  0E00               	movlw	0
  1737  000774  6E3F               	movwf	_CCWTurn,c
  1738  000776                     i1l887:
  1739                           
  1740                           ;user.c: 198: }
  1741                           ;user.c: 201: OLD_ROT = NEW_ROT;
  1742  000776  C00D  F047         	movff	ReadEncoder@NEW_ROT,_OLD_ROT
  1743  00077A  C00E  F048         	movff	ReadEncoder@NEW_ROT+1,_OLD_ROT+1
  1744  00077E  0012               	return	
  1745  000780  FFFF               	dw	65535	; errata NOP
  1746  000782                     __end_of_ReadEncoder:
  1747                           	opt stack 0
  1748                           pclatu	equ	0xFFB
  1749                           pclath	equ	0xFFA
  1750                           tblptru	equ	0xFF8
  1751                           tblptrh	equ	0xFF7
  1752                           tblptrl	equ	0xFF6
  1753                           tablat	equ	0xFF5
  1754                           prodh	equ	0xFF4
  1755                           prodl	equ	0xFF3
  1756                           intcon	equ	0xFF2
  1757                           intcon2	equ	0xFF1
  1758                           postinc0	equ	0xFEE
  1759                           fsr0h	equ	0xFEA
  1760                           fsr0l	equ	0xFE9
  1761                           wreg	equ	0xFE8
  1762                           postinc1	equ	0xFE6
  1763                           postdec1	equ	0xFE5
  1764                           fsr1h	equ	0xFE2
  1765                           fsr1l	equ	0xFE1
  1766                           bsr	equ	0xFE0
  1767                           indf2	equ	0xFDF
  1768                           postinc2	equ	0xFDE
  1769                           fsr2h	equ	0xFDA
  1770                           fsr2l	equ	0xFD9
  1771                           status	equ	0xFD8
  1772                           
  1773 ;; *************** function _high_isr *****************
  1774 ;; Defined at:
  1775 ;;		line 62 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;		None               void
  1782 ;; Registers used:
  1783 ;;		None
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1789 ;;      Params:         0       0       0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0
  1791 ;;      Temps:         14       0       0       0       0       0       0
  1792 ;;      Totals:        14       0       0       0       0       0       0
  1793 ;;Total ram usage:       14 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		Interrupt level 2
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	intcode
  1803  000008                     __pintcode:
  1804                           	opt stack 0
  1805  000008                     _high_isr:
  1806                           	opt stack 25
  1807                           
  1808                           ;incstack = 0
  1809  000008  FFFF               	dw	65535	; errata NOP
  1810  00000A  CFFA F031          	movff	pclath,??_high_isr
  1811  00000E  CFFB F032          	movff	pclatu,??_high_isr+1
  1812  000012  EF8C  F004         	goto	int_func
  1813                           pclatu	equ	0xFFB
  1814                           pclath	equ	0xFFA
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           prodh	equ	0xFF4
  1820                           prodl	equ	0xFF3
  1821                           intcon	equ	0xFF2
  1822                           intcon2	equ	0xFF1
  1823                           postinc0	equ	0xFEE
  1824                           fsr0h	equ	0xFEA
  1825                           fsr0l	equ	0xFE9
  1826                           wreg	equ	0xFE8
  1827                           postinc1	equ	0xFE6
  1828                           postdec1	equ	0xFE5
  1829                           fsr1h	equ	0xFE2
  1830                           fsr1l	equ	0xFE1
  1831                           bsr	equ	0xFE0
  1832                           indf2	equ	0xFDF
  1833                           postinc2	equ	0xFDE
  1834                           fsr2h	equ	0xFDA
  1835                           fsr2l	equ	0xFD9
  1836                           status	equ	0xFD8
  1837                           
  1838                           	psect	intcode_body
  1839  000918                     __pintcode_body:
  1840                           	opt stack 25
  1841  000918                     int_func:
  1842                           	opt stack 25
  1843  000918  FFFF               	dw	65535	; errata NOP
  1844  00091A  CFE9 F033          	movff	fsr0l,??_high_isr+2
  1845  00091E  CFEA F034          	movff	fsr0h,??_high_isr+3
  1846  000922  CFE1 F035          	movff	fsr1l,??_high_isr+4
  1847  000926  CFE2 F036          	movff	fsr1h,??_high_isr+5
  1848  00092A  CFD9 F037          	movff	fsr2l,??_high_isr+6
  1849  00092E  CFDA F038          	movff	fsr2h,??_high_isr+7
  1850  000932  CFF3 F039          	movff	prodl,??_high_isr+8
  1851  000936  CFF4 F03A          	movff	prodh,??_high_isr+9
  1852  00093A  CFF6 F03B          	movff	tblptrl,??_high_isr+10
  1853  00093E  CFF7 F03C          	movff	tblptrh,??_high_isr+11
  1854  000942  CFF8 F03D          	movff	tblptru,??_high_isr+12
  1855  000946  CFF5 F03E          	movff	tablat,??_high_isr+13
  1856  00094A  C03E  FFF5         	movff	??_high_isr+13,tablat
  1857  00094E  C03D  FFF8         	movff	??_high_isr+12,tblptru
  1858  000952  C03C  FFF7         	movff	??_high_isr+11,tblptrh
  1859  000956  C03B  FFF6         	movff	??_high_isr+10,tblptrl
  1860  00095A  C03A  FFF4         	movff	??_high_isr+9,prodh
  1861  00095E  C039  FFF3         	movff	??_high_isr+8,prodl
  1862  000962  C038  FFDA         	movff	??_high_isr+7,fsr2h
  1863  000966  C037  FFD9         	movff	??_high_isr+6,fsr2l
  1864  00096A  C036  FFE2         	movff	??_high_isr+5,fsr1h
  1865  00096E  C035  FFE1         	movff	??_high_isr+4,fsr1l
  1866  000972  C034  FFEA         	movff	??_high_isr+3,fsr0h
  1867  000976  C033  FFE9         	movff	??_high_isr+2,fsr0l
  1868  00097A  C032  FFFB         	movff	??_high_isr+1,pclatu
  1869  00097E  C031  FFFA         	movff	??_high_isr,pclath
  1870  000982  0011               	retfie		f
  1871  000984  FFFF               	dw	65535	; errata NOP
  1872  000986                     __end_of_high_isr:
  1873                           	opt stack 0
  1874                           pclatu	equ	0xFFB
  1875                           pclath	equ	0xFFA
  1876                           tblptru	equ	0xFF8
  1877                           tblptrh	equ	0xFF7
  1878                           tblptrl	equ	0xFF6
  1879                           tablat	equ	0xFF5
  1880                           prodh	equ	0xFF4
  1881                           prodl	equ	0xFF3
  1882                           intcon	equ	0xFF2
  1883                           intcon2	equ	0xFF1
  1884                           postinc0	equ	0xFEE
  1885                           fsr0h	equ	0xFEA
  1886                           fsr0l	equ	0xFE9
  1887                           wreg	equ	0xFE8
  1888                           postinc1	equ	0xFE6
  1889                           postdec1	equ	0xFE5
  1890                           fsr1h	equ	0xFE2
  1891                           fsr1l	equ	0xFE1
  1892                           bsr	equ	0xFE0
  1893                           indf2	equ	0xFDF
  1894                           postinc2	equ	0xFDE
  1895                           fsr2h	equ	0xFDA
  1896                           fsr2l	equ	0xFD9
  1897                           status	equ	0xFD8
  1898                           pclatu	equ	0xFFB
  1899                           pclath	equ	0xFFA
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           prodh	equ	0xFF4
  1905                           prodl	equ	0xFF3
  1906                           intcon	equ	0xFF2
  1907                           intcon2	equ	0xFF1
  1908                           postinc0	equ	0xFEE
  1909                           fsr0h	equ	0xFEA
  1910                           fsr0l	equ	0xFE9
  1911                           wreg	equ	0xFE8
  1912                           postinc1	equ	0xFE6
  1913                           postdec1	equ	0xFE5
  1914                           fsr1h	equ	0xFE2
  1915                           fsr1l	equ	0xFE1
  1916                           bsr	equ	0xFE0
  1917                           indf2	equ	0xFDF
  1918                           postinc2	equ	0xFDE
  1919                           fsr2h	equ	0xFDA
  1920                           fsr2l	equ	0xFD9
  1921                           status	equ	0xFD8
  1922                           
  1923                           	psect	rparam
  1924  0000                     pclatu	equ	0xFFB
  1925                           pclath	equ	0xFFA
  1926                           tblptru	equ	0xFF8
  1927                           tblptrh	equ	0xFF7
  1928                           tblptrl	equ	0xFF6
  1929                           tablat	equ	0xFF5
  1930                           prodh	equ	0xFF4
  1931                           prodl	equ	0xFF3
  1932                           intcon	equ	0xFF2
  1933                           intcon2	equ	0xFF1
  1934                           postinc0	equ	0xFEE
  1935                           fsr0h	equ	0xFEA
  1936                           fsr0l	equ	0xFE9
  1937                           wreg	equ	0xFE8
  1938                           postinc1	equ	0xFE6
  1939                           postdec1	equ	0xFE5
  1940                           fsr1h	equ	0xFE2
  1941                           fsr1l	equ	0xFE1
  1942                           bsr	equ	0xFE0
  1943                           indf2	equ	0xFDF
  1944                           postinc2	equ	0xFDE
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    34
    Data        18
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62      72
    BANK0           128     25      43
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    DisplayLCD@tempPtr	PTR unsigned char  size(2) Largest target is 7
		 -> main@Msg2(BANK0[5]), main@Msg1(BANK0[6]), main@LCDinit(BANK0[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_ReadEncoder

Critical Paths under _TimerStopped in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_DisplayLCD
    _InitApp->_WaitHalfSec
    _WaitHalfSec->_Delay1KTCYx
    _DisplayLCD->_Delay100TCYx
    _DisplayLCD->_Delay10TCYx
    _DisplayLCD->_Delay1KTCYx

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _TimerStopped in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _TimerStopped in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _TimerStopped in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _TimerStopped in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _TimerStopped in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _TimerStopped in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    1116
                                              6 BANK0     19    19      0
                         _DisplayLCD
                            _InitApp
                     _InitInterrupts
                        _WaitHalfSec
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0      99
                        _WaitHalfSec
 ---------------------------------------------------------------------------------
 (1) _WaitHalfSec                                          2     2      0      99
                                              1 BANK0      2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (1) _DisplayLCD                                           5     1      4     780
                                              1 BANK0      5     1      4
                       _Delay100TCYx
                        _Delay10TCYx
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10TCYx                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay100TCYx                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0     150
                                             14 COMRAM    17    17      0
                        _ReadEncoder
 ---------------------------------------------------------------------------------
 (5) _ReadEncoder                                         14    14      0     150
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TimerStopped                                        17    17      0       0
                                             31 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                             48 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayLCD
     _Delay100TCYx
     _Delay10TCYx
     _Delay1KTCYx
   _InitApp
     _WaitHalfSec
       _Delay1KTCYx
   _InitInterrupts
   _WaitHalfSec
     _Delay1KTCYx

 _low_isr (ROOT)
   _ReadEncoder

 _TimerStopped (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     19      2B       5       33.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      48       1       56.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73      15        0.0%
DATA                 0      0      73       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Sep 19 11:25:51 2014

                                                           __CFG_BOR$ON 000000  
                                                                    bsr 000FE0  
                                                          __CFG_CP0$OFF 000000  
                                                          __CFG_CP1$OFF 000000  
                                                          __CFG_CP2$OFF 000000  
                                                          __CFG_CP3$OFF 000000  
                                                           __CFG_OSC$HS 000000  
                                                                   l116 0914  
                                                                   l108 08CE  
                                                                   l380 0A52  
                                                                   l373 0A3A  
                                                                   l366 0A68  
                                                                   _CHA 0041  
                                                                   _CHB 0043  
                                                          __CFG_CPB$OFF 000000  
                                                                   u331 078E  
                                                                   u341 07A0  
                                                                   u407 0A6A  
                                                                   u351 07B2  
                                                                   u360 082A  
                                                                   u370 0842  
                                                          __CFG_CPD$OFF 000000  
                                                                   _QEM 0601  
                                                                   u368 082E  
                                                                   u378 0846  
                                                                   u387 0A54  
                                                                   u397 0A3C  
                                                          __CFG_BORV$45 000000  
                                                                   wreg 000FE8  
                                                          __CFG_LVP$OFF 000000  
                                                          __CFG_OSCS$ON 000000  
                                                          __CFG_WDT$OFF 000000  
                                                                  l1113 0886  
                                                                  l1135 08BE  
                                                                  l1063 0A0A  
                                                                  l1137 08D2  
                                                                  l1067 0A24  
                                                                  l1159 0906  
                                                                  l1189 086A  
                                                                  i1l48 0068  
                                                          __CFG_PWRT$ON 000000  
                                                          __CFG_STVR$ON 000000  
                                                                  _main 0782  
                                                                  fsr0h 000FEA  
                                                                  fsr1h 000FE2  
                                                                  fsr0l 000FE9  
                                                                  fsr2h 000FDA  
                                                                  fsr1l 000FE1  
                                                                  indf2 000FDF  
                                                                  fsr2l 000FD9  
                                                                  pclat 000FFA  
                                                                  prodh 000FF4  
                                                                  prodl 000FF3  
                                                                  start 0146  
                                                         ??_ReadEncoder 0001  
                                                   __end_of_EncoderPoll 0623  
                                                       __end_of_InitApp 09FA  
                                                           _Delay10TCYx 0A34  
                                                           _Delay1KTCYx 0A4C  
                                                                 ?_main 0001  
                                                 __size_of_Delay100TCYx 0016  
                                                                 _LATB4 007C54  
                                                                 i1l130 0760  
                                                                 i1l122 06D0  
                                                                 i1l140 00FE  
                                                                 i1l871 06EE  
                                                                 i1l881 0746  
                                                                 i1l875 06FC  
                                                                 i1l867 06E0  
                                                                 i1l887 0776  
                                                                 _PORTA 000F80  
                                                                 _PORTD 000F83  
                                                                 _TRISA 000F92  
                                                                 _TRISD 000F95  
                                                                 _TRISE 000F96  
                                                         __CFG_WRT0$OFF 000000  
                                                         __CFG_WRT1$OFF 000000  
                                                         __CFG_WRT2$OFF 000000  
                                                         __CFG_WRT3$OFF 000000  
                                                            _DisplayLCD 0870  
                                                        __CFG_EBTR0$OFF 000000  
                                                        __CFG_EBTR1$OFF 000000  
                                                        __CFG_EBTR2$OFF 000000  
                                                        __CFG_EBTR3$OFF 000000  
                                                         __CFG_WRTB$OFF 000000  
                                                         __CFG_WRTC$OFF 000000  
                                                         __CFG_WRTD$OFF 000000  
                                                        __CFG_EBTRB$OFF 000000  
                                                       __end_of_low_isr 00B0  
                                                                 tablat 000FF5  
                                                                 status 000FD8  
                                                       __initialization 0986  
                                                          _Delay100TCYx 0A62  
                                                          __end_of_main 0870  
                                                        _InitInterrupts 0A8A  
                                                   __end_of_ReadEncoder 0782  
                                                                ??_main 0086  
                                                         __activetblptr 000001  
                                                       __CFG_CCP2MUX$ON 000000  
                                                 DisplayLCD@currentChar 0085  
                                                                _ADCON1 000FC1  
                                                         ??_WaitHalfSec 0081  
                                                                _INTCON 000FF2  
                                                           _EncoderPoll 0621  
                                                        __CFG_WDTPS$128 000000  
                                                                _CWTurn 0045  
                                                                i1u5_20 0630  
                                                                i1u6_20 0642  
                                                                i1u5_28 0632  
                                                                i1u6_28 0644  
                                                             ??_InitApp 0083  
                                                __end_of_InitInterrupts 0A9A  
                                                      __end_of_high_isr 0986  
                                                                clear_0 098C  
                                                          __mediumconst 0000  
                                                           ?_DisplayLCD 0081  
                                                             ??_low_isr 000F  
                                                                tblptrh 000FF7  
                                                                tblptrl 000FF6  
                                                                tblptru 000FF8  
                                                            __accesstop 0080  
                                               __end_of__initialization 09B2  
                                                   __end_of_WaitHalfSec 0A34  
                                                       ?_InitInterrupts 0001  
                                                           _ReadEncoder 0624  
                                                        __pcstackCOMRAM 0001  
                                                          __pidataBANK0 0A78  
                                                   __size_of_DisplayLCD 00A8  
                                                          ?_Delay10TCYx 0001  
                                                          ?_Delay1KTCYx 0001  
                                                               _CCWTurn 003F  
                                                               _INTCON2 000FF1  
                                                               i1u10_25 072A  
                                                               _OLD_ROT 0047  
                                                             ?_high_isr 0001  
                                                           _WaitHalfSec 09FA  
                                                         ?_TimerStopped 0001  
                                                               _InitApp 09C0  
                                                               __Hparam 0000  
                                                               __Lparam 0000  
                                                          __psmallconst 0600  
                                                               __pcinit 0986  
                                                       Delay10TCYx@unit 0080  
                                                               __ramtop 0600  
                                                               __ptext0 0782  
                                                               __ptext1 0A8A  
                                                               __ptext2 09C0  
                                                               __ptext3 09FA  
                                                               __ptext4 0870  
                                                               __ptext5 0A4C  
                                                               __ptext6 0A34  
                                                               __ptext7 0A62  
                                                               __ptext9 0624  
                                                               _low_isr 0018  
                                                            ??_high_isr 0031  
                                                        __pintcode_body 0918  
                                                  end_of_initialization 09B2  
                                                        ??_TimerStopped 0020  
                                                               int_func 0918  
                                                               postdec1 000FE5  
                                                               postinc0 000FEE  
                                                               postinc1 000FE6  
                                                               postinc2 000FDE  
                                                             _PORTAbits 000F80  
                                                             _PORTBbits 000F81  
                                                             _PORTEbits 000F84  
                                                          ??_DisplayLCD 0085  
                                                             _TRISBbits 000F93  
                                                      ??_InitInterrupts 0080  
                                                     DisplayLCD@tempPtr 0081  
                                                          ?_ReadEncoder 0001  
                                                      Delay100TCYx@unit 0080  
                                                    __end_of_DisplayLCD 0918  
                                                  __size_of_Delay10TCYx 0018  
                                                  __size_of_Delay1KTCYx 0016  
                                                   start_initialization 0986  
                                                           __end_of_QEM 0621  
                                                       ReadEncoder@Anew 0009  
                                                       ReadEncoder@Bnew 000B  
                                                           __pdataBANK0 0099  
                                                  __end_of_TimerStopped 0146  
                                                           __pbssCOMRAM 003F  
                                                         __pcstackBANK0 0080  
                                                       Delay1KTCYx@unit 0080  
                                                          ?_WaitHalfSec 0001  
                                                     __size_of_high_isr 097E  
                                                              ?_InitApp 0001  
                                                         ?_Delay100TCYx 0001  
                                                             __pintcode 0008  
                                                           __pintcodelo 0018  
                                                        DisplayLCD@init 0083  
                                                  WaitHalfSec@Halfcount 0081  
                                                           __smallconst 0600  
                                                              ?_low_isr 0001  
                                                        ??_Delay100TCYx 0080  
                                                              _RCONbits 000FD0  
                                                             main@F3914 0099  
                                                             main@F3916 00A0  
                                                             main@F3918 00A6  
                                                  __size_of_ReadEncoder 015E  
                                                             copy_data0 09A6  
                                                      __size_of_InitApp 003A  
                                                              __Hrparam 0000  
                                                              __Lrparam 0000  
                                                          __Lsmallconst 0600  
                                                        ReadEncoder@Old 0005  
                                                        ReadEncoder@New 0007  
                                                 __size_of_TimerStopped 0096  
                                                    ReadEncoder@NEW_ROT 000D  
                                                      __size_of_low_isr 0098  
                                                              _high_isr 0008  
                                                          _TimerStopped 00B0  
                                                         __size_of_main 00EE  
                                                  __size_of_WaitHalfSec 003A  
                                                         ??_Delay10TCYx 0080  
                                                              main@Msg1 008E  
                                                              main@Msg2 0094  
                                                         ??_Delay1KTCYx 0080  
                                                            _INTCONbits 000FF2  
                                                  __end_of_Delay100TCYx 0A78  
                                                              intlevel1 0A9A  
                                                              intlevel2 0A9A  
                                               __size_of_InitInterrupts 0010  
                                                   __end_of_Delay10TCYx 0A4C  
                                                   __end_of_Delay1KTCYx 0A62  
                                                           main@LCDinit 0087  
