

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 23 23:32:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F452
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	param0,global,class=BANK0,space=1,delta=1
    54  0000                     
    55                           	psect	idataBANK1
    56  003B38                     __pidataBANK1:
    57                           	opt stack 0
    58                           
    59                           ;initializer for main@F3983
    60  003B38  33                 	db	51
    61  003B39  32                 	db	50
    62  003B3A  28                 	db	40
    63  003B3B  01                 	db	1
    64  003B3C  0C                 	db	12
    65  003B3D  06                 	db	6
    66  003B3E  00                 	db	0
    67                           
    68                           ;initializer for main@F3985
    69  003B3F  84                 	db	132
    70  003B40  43                 	db	67
    71  003B41  55                 	db	85
    72  003B42  4E                 	db	78
    73  003B43  54                 	db	84
    74  003B44  00                 	db	0
    75                           
    76                           ;initializer for main@F3987
    77  003B45  C5                 	db	197
    78  003B46  52                 	db	82
    79  003B47  50                 	db	80
    80  003B48  53                 	db	83
    81  003B49  00                 	db	0
    82                           
    83                           	psect	smallconst
    84  000600                     __psmallconst:
    85                           	opt stack 0
    86  000600  00                 	db	0
    87  000601                     _dpowers:
    88                           	opt stack 0
    89  000601  0001               	dw	1
    90  000603  0000               	dw	0
    91  000605  000A               	dw	10
    92  000607  0000               	dw	0
    93  000609  0064               	dw	100
    94  00060B  0000               	dw	0
    95  00060D  03E8               	dw	1000
    96  00060F  0000               	dw	0
    97  000611  2710               	dw	10000
    98  000613  0000               	dw	0
    99  000615  86A0               	dw	34464
   100  000617  0001               	dw	1
   101  000619  4240               	dw	16960
   102  00061B  000F               	dw	15
   103  00061D  9680               	dw	38528
   104  00061F  0098               	dw	152
   105  000621  E100               	dw	57600
   106  000623  05F5               	dw	1525
   107  000625  CA00               	dw	51712
   108  000627  3B9A               	dw	15258
   109  000629                     __end_of_dpowers:
   110                           	opt stack 0
   111  000629                     __npowers_:
   112                           	opt stack 0
   113  000629  00                 	db	0
   114  00062A  80                 	db	128
   115  00062B  3F                 	db	63
   116  00062C  CD                 	db	205
   117  00062D  CC                 	db	204
   118  00062E  3D                 	db	61
   119  00062F  D7                 	db	215
   120  000630  23                 	db	35
   121  000631  3C                 	db	60
   122  000632  12                 	db	18
   123  000633  83                 	db	131
   124  000634  3A                 	db	58
   125  000635  B7                 	db	183
   126  000636  D1                 	db	209
   127  000637  38                 	db	56
   128  000638  C6                 	db	198
   129  000639  27                 	db	39
   130  00063A  37                 	db	55
   131  00063B  38                 	db	56
   132  00063C  86                 	db	134
   133  00063D  35                 	db	53
   134  00063E  C0                 	db	192
   135  00063F  D6                 	db	214
   136  000640  33                 	db	51
   137  000641  CC                 	db	204
   138  000642  2B                 	db	43
   139  000643  32                 	db	50
   140  000644  70                 	db	112
   141  000645  89                 	db	137
   142  000646  30                 	db	48
   143  000647  E7                 	db	231
   144  000648  DB                 	db	219
   145  000649  2E                 	db	46
   146  00064A  E5                 	db	229
   147  00064B  3C                 	db	60
   148  00064C  1E                 	db	30
   149  00064D  42                 	db	66
   150  00064E  A2                 	db	162
   151  00064F  0D                 	db	13
   152  000650                     __end_of__npowers_:
   153                           	opt stack 0
   154  000650                     __powers_:
   155                           	opt stack 0
   156  000650  00                 	db	0
   157  000651  80                 	db	128
   158  000652  3F                 	db	63
   159  000653  00                 	db	0
   160  000654  20                 	db	32
   161  000655  41                 	db	65
   162  000656  00                 	db	0
   163  000657  C8                 	db	200
   164  000658  42                 	db	66
   165  000659  00                 	db	0
   166  00065A  7A                 	db	122
   167  00065B  44                 	db	68
   168  00065C  40                 	db	64
   169  00065D  1C                 	db	28
   170  00065E  46                 	db	70
   171  00065F  50                 	db	80
   172  000660  C3                 	db	195
   173  000661  47                 	db	71
   174  000662  24                 	db	36
   175  000663  74                 	db	116
   176  000664  49                 	db	73
   177  000665  97                 	db	151
   178  000666  18                 	db	24
   179  000667  4B                 	db	75
   180  000668  BC                 	db	188
   181  000669  BE                 	db	190
   182  00066A  4C                 	db	76
   183  00066B  6B                 	db	107
   184  00066C  6E                 	db	110
   185  00066D  4E                 	db	78
   186  00066E  03                 	db	3
   187  00066F  15                 	db	21
   188  000670  50                 	db	80
   189  000671  79                 	db	121
   190  000672  AD                 	db	173
   191  000673  60                 	db	96
   192  000674  F3                 	db	243
   193  000675  49                 	db	73
   194  000676  71                 	db	113
   195  000677                     __end_of__powers_:
   196                           	opt stack 0
   197  000677                     _QEM:
   198                           	opt stack 0
   199  000677  0000               	dw	0
   200  000679  FFFF               	dw	65535
   201  00067B  0001               	dw	1
   202  00067D  0002               	dw	2
   203  00067F  0001               	dw	1
   204  000681  0000               	dw	0
   205  000683  0002               	dw	2
   206  000685  FFFF               	dw	65535
   207  000687  FFFF               	dw	65535
   208  000689  0002               	dw	2
   209  00068B  0000               	dw	0
   210  00068D  0001               	dw	1
   211  00068F  0002               	dw	2
   212  000691  0001               	dw	1
   213  000693  FFFF               	dw	65535
   214  000695  0000               	dw	0
   215  000697                     __end_of_QEM:
   216                           	opt stack 0
   217  000697                     _CountPerRev:
   218                           	opt stack 0
   219  000697  01F4               	dw	500
   220  000699                     __end_of_CountPerRev:
   221                           	opt stack 0
   222  000699                     _EncoderPoll:
   223                           	opt stack 0
   224  000699  0080               	dw	128
   225  00069B                     __end_of_EncoderPoll:
   226                           	opt stack 0
   227  0000                     _ADCON1	set	4033
   228  0000                     _CCP1CONbits	set	4029
   229  0000                     _CCPR1L	set	4030
   230  0000                     _INTCON2bits	set	4081
   231  0000                     _INTCONbits	set	4082
   232  0000                     _PORTA	set	3968
   233  0000                     _PORTAbits	set	3968
   234  0000                     _PORTBbits	set	3969
   235  0000                     _PORTD	set	3971
   236  0000                     _PORTEbits	set	3972
   237  0000                     _PR2	set	4043
   238  0000                     _RCONbits	set	4048
   239  0000                     _T0CONbits	set	4053
   240  0000                     _T2CONbits	set	4042
   241  0000                     _TMR0H	set	4055
   242  0000                     _TMR0L	set	4054
   243  0000                     _TRISA	set	3986
   244  0000                     _TRISBbits	set	3987
   245  0000                     _TRISCbits	set	3988
   246  0000                     _TRISD	set	3989
   247  0000                     _TRISE	set	3990
   248  0000                     _LATB4	set	31828
   249  00069B                     __stringdata:
   250                           	opt stack 0
   251  00069B                     STR_1:
   252  00069B  25                 	db	37
   253  00069C  2A                 	db	42
   254  00069D  2E                 	db	46
   255  00069E  2A                 	db	42
   256  00069F  67                 	db	103	;'g'
   257  0006A0  00                 	db	0
   258  0006A1                     __end_of__stringdata:
   259                           	opt stack 0
   260                           
   261                           ; #config settings
   262  0006A1  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           	psect	cinit
   265  003944                     __pcinit:
   266                           	opt stack 0
   267  003944                     start_initialization:
   268                           	opt stack 0
   269  003944                     __initialization:
   270                           	opt stack 0
   271                           
   272                           ; Clear objects allocated to BANK1 (3 bytes)
   273  003944  0101               	movlb	1
   274  003946  6B60               	clrf	(__pbssBANK1+2)& (0+255),b
   275  003948  6B5F               	clrf	(__pbssBANK1+1)& (0+255),b
   276  00394A  6B5E               	clrf	__pbssBANK1& (0+255),b
   277                           
   278                           ; Clear objects allocated to COMRAM (17 bytes)
   279  00394C  EE00  F040         	lfsr	0,__pbssCOMRAM
   280  003950  0E11               	movlw	17
   281  003952                     clear_0:
   282  003952  6AEE               	clrf	postinc0,c
   283  003954  06E8               	decf	wreg,f,c
   284  003956  E1FD               	bnz	clear_0
   285                           
   286                           ; Initialize objects allocated to BANK1 (18 bytes)
   287                           ; load TBLPTR registers with __pidataBANK1
   288  003958  0E38               	movlw	low __pidataBANK1
   289  00395A  6EF6               	movwf	tblptrl,c
   290  00395C  0E3B               	movlw	high __pidataBANK1
   291  00395E  6EF7               	movwf	tblptrh,c
   292  003960  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   293  003962  6EF8               	movwf	tblptru,c
   294  003964  EE01  F04C         	lfsr	0,__pdataBANK1
   295  003968  EE10 F012          	lfsr	1,18
   296  00396C                     copy_data0:
   297  00396C  0009               	tblrd		*+
   298  00396E  CFF5 FFEE          	movff	tablat,postinc0
   299  003972  50E5               	movf	postdec1,w,c
   300  003974  50E1               	movf	fsr1l,w,c
   301  003976  E1FA               	bnz	copy_data0
   302  003978                     end_of_initialization:
   303                           	opt stack 0
   304  003978                     __end_of__initialization:
   305                           	opt stack 0
   306  003978  0E00               	movlw	low (__Lmediumconst shr (0+16))
   307  00397A  6EF8               	movwf	tblptru,c
   308  00397C  0100               	movlb	0
   309  00397E  EFC7  F015         	goto	_main	;jump to C main() function
   310                           tblptru	equ	0xFF8
   311                           tblptrh	equ	0xFF7
   312                           tblptrl	equ	0xFF6
   313                           tablat	equ	0xFF5
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           postdec1	equ	0xFE5
   317                           fsr1l	equ	0xFE1
   318                           
   319                           	psect	bssCOMRAM
   320  000040                     __pbssCOMRAM:
   321                           	opt stack 0
   322  000040                     _PartialRot:
   323                           	opt stack 0
   324  000040                     	ds	3
   325  000043                     _CCWTurn:
   326                           	opt stack 0
   327  000043                     	ds	2
   328  000045                     _CHA:
   329                           	opt stack 0
   330  000045                     	ds	2
   331  000047                     _CHAcount:
   332                           	opt stack 0
   333  000047                     	ds	2
   334  000049                     _CHB:
   335                           	opt stack 0
   336  000049                     	ds	2
   337  00004B                     _CWTurn:
   338                           	opt stack 0
   339  00004B                     	ds	2
   340  00004D                     _OLD_ROT:
   341                           	opt stack 0
   342  00004D                     	ds	2
   343  00004F                     _TMR0count:
   344                           	opt stack 0
   345  00004F                     	ds	2
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	bssBANK1
   356  00015E                     __pbssBANK1:
   357                           	opt stack 0
   358  00015E                     _RPS:
   359                           	opt stack 0
   360  00015E                     	ds	3
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	dataBANK1
   371  00014C                     __pdataBANK1:
   372                           	opt stack 0
   373  00014C                     main@F3983:
   374                           	opt stack 0
   375  00014C                     	ds	7
   376  000153                     main@F3985:
   377                           	opt stack 0
   378  000153                     	ds	6
   379  000159                     main@F3987:
   380                           	opt stack 0
   381  000159                     	ds	5
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	cstackBANK1
   392  000100                     __pcstackBANK1:
   393                           	opt stack 0
   394  000100                     _sprintf$1742:
   395                           	opt stack 0
   396                           
   397                           ; 3 bytes @ 0x0
   398  000100                     	ds	3
   399  000103                     _sprintf$1131:
   400                           	opt stack 0
   401                           
   402                           ; 4 bytes @ 0x3
   403  000103                     	ds	4
   404  000107                     sprintf@vd:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x7
   408  000107                     	ds	4
   409  00010B                     sprintf@vd_1133:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0xB
   413  00010B                     	ds	4
   414  00010F                     sprintf@temp:
   415                           	opt stack 0
   416                           
   417                           ; 3 bytes @ 0xF
   418  00010F                     	ds	3
   419  000112                     sprintf@ap:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x12
   423  000112                     	ds	2
   424  000114                     sprintf@integ:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0x14
   428  000114                     	ds	3
   429  000117                     sprintf@ccnt:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x17
   433  000117                     	ds	2
   434  000119                     sprintf@width:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x19
   438  000119                     	ds	2
   439  00011B                     sprintf@flag:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1B
   443  00011B                     	ds	2
   444  00011D                     sprintf@_val:
   445                           	opt stack 0
   446                           
   447                           ; 5 bytes @ 0x1D
   448  00011D                     	ds	5
   449  000122                     sprintf@exp:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x22
   453  000122                     	ds	2
   454  000124                     sprintf@fval:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0x24
   458  000124                     	ds	3
   459  000127                     sprintf@prec:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x27
   463  000127                     	ds	2
   464  000129                     sprintf@c:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x29
   468  000129                     	ds	1
   469  00012A                     ??_WriteLCD:
   470                           
   471                           ; 0 bytes @ 0x2A
   472  00012A                     	ds	2
   473  00012C                     WriteLCD@msgptr:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x2C
   477  00012C                     	ds	2
   478  00012E                     WriteLCD@width:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x2E
   482  00012E                     	ds	2
   483  000130                     main@LCDinit:
   484                           	opt stack 0
   485                           
   486                           ; 7 bytes @ 0x30
   487  000130                     	ds	7
   488  000137                     main@Msg1:
   489                           	opt stack 0
   490                           
   491                           ; 6 bytes @ 0x37
   492  000137                     	ds	6
   493  00013D                     main@Msg2:
   494                           	opt stack 0
   495                           
   496                           ; 5 bytes @ 0x3D
   497  00013D                     	ds	5
   498  000142                     main@Msg3:
   499                           	opt stack 0
   500                           
   501                           ; 10 bytes @ 0x42
   502  000142                     	ds	10
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	cstackBANK0
   513  000080                     __pcstackBANK0:
   514                           	opt stack 0
   515  000080                     ??_high_isr:
   516                           
   517                           ; 0 bytes @ 0x0
   518  000080                     	ds	14
   519  00008E                     ??_isdigit:
   520  00008E                     ?___awmod:
   521                           	opt stack 0
   522  00008E                     ?___ftpack:
   523                           	opt stack 0
   524  00008E                     ?__tdiv_to_l_:
   525                           	opt stack 0
   526  00008E                     ?__div_to_l_:
   527                           	opt stack 0
   528  00008E                     ?___fttol:
   529                           	opt stack 0
   530  00008E                     ?___lldiv:
   531                           	opt stack 0
   532  00008E                     ?___llmod:
   533                           	opt stack 0
   534  00008E                     Delay100TCYx@unit:
   535                           	opt stack 0
   536  00008E                     Delay10TCYx@unit:
   537                           	opt stack 0
   538  00008E                     Delay1KTCYx@unit:
   539                           	opt stack 0
   540  00008E                     WriteTimer0@timer0:
   541                           	opt stack 0
   542  00008E                     ___awmod@dividend:
   543                           	opt stack 0
   544  00008E                     __div_to_l_@f1:
   545                           	opt stack 0
   546  00008E                     ___ftpack@arg:
   547                           	opt stack 0
   548  00008E                     __tdiv_to_l_@f1:
   549                           	opt stack 0
   550  00008E                     ___fttol@f1:
   551                           	opt stack 0
   552  00008E                     ___lldiv@dividend:
   553                           	opt stack 0
   554  00008E                     ___llmod@dividend:
   555                           	opt stack 0
   556                           
   557                           ; 4 bytes @ 0xE
   558  00008E                     	ds	1
   559  00008F                     _isdigit$1503:
   560                           	opt stack 0
   561  00008F                     WaitHalfSec@Halfcount:
   562                           	opt stack 0
   563  00008F                     DisplayLCD@tempPtr:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0xF
   567  00008F                     	ds	1
   568  000090                     isdigit@c:
   569                           	opt stack 0
   570  000090                     WriteTimer0@timer:
   571                           	opt stack 0
   572  000090                     ___awmod@divisor:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x10
   576  000090                     	ds	1
   577  000091                     ___ftpack@exp:
   578                           	opt stack 0
   579  000091                     DisplayLCD@init:
   580                           	opt stack 0
   581  000091                     __div_to_l_@f2:
   582                           	opt stack 0
   583  000091                     __tdiv_to_l_@f2:
   584                           	opt stack 0
   585                           
   586                           ; 3 bytes @ 0x11
   587  000091                     	ds	1
   588  000092                     ??___fttol:
   589  000092                     ___awmod@counter:
   590                           	opt stack 0
   591  000092                     ___ftpack@sign:
   592                           	opt stack 0
   593  000092                     ___lldiv@divisor:
   594                           	opt stack 0
   595  000092                     ___llmod@divisor:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x12
   599  000092                     	ds	1
   600  000093                     ??___ftpack:
   601  000093                     DisplayLCD@currentChar:
   602                           	opt stack 0
   603  000093                     ___awmod@sign:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x13
   607  000093                     	ds	1
   608  000094                     ??__tdiv_to_l_:
   609  000094                     ??__div_to_l_:
   610  000094                     ?___awdiv:
   611                           	opt stack 0
   612  000094                     ___awdiv@dividend:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x14
   616  000094                     	ds	2
   617  000096                     ___llmod@counter:
   618                           	opt stack 0
   619  000096                     ___awdiv@divisor:
   620                           	opt stack 0
   621  000096                     ___lldiv@quotient:
   622                           	opt stack 0
   623                           
   624                           ; 4 bytes @ 0x16
   625  000096                     	ds	1
   626  000097                     ___fttol@sign1:
   627                           	opt stack 0
   628  000097                     __tdiv_to_l_@quot:
   629                           	opt stack 0
   630                           
   631                           ; 4 bytes @ 0x17
   632  000097                     	ds	1
   633  000098                     ___awdiv@counter:
   634                           	opt stack 0
   635  000098                     __div_to_l_@quot:
   636                           	opt stack 0
   637  000098                     ___fttol@lval:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x18
   641  000098                     	ds	1
   642  000099                     ___awdiv@sign:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x19
   646  000099                     	ds	1
   647  00009A                     ___lldiv@counter:
   648                           	opt stack 0
   649  00009A                     ___awdiv@quotient:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x1A
   653  00009A                     	ds	1
   654  00009B                     __tdiv_to_l_@cntr:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x1B
   658  00009B                     	ds	1
   659  00009C                     ?___wmul:
   660                           	opt stack 0
   661  00009C                     __div_to_l_@cntr:
   662                           	opt stack 0
   663  00009C                     __tdiv_to_l_@exp1:
   664                           	opt stack 0
   665  00009C                     ___fttol@exp1:
   666                           	opt stack 0
   667  00009C                     ___wmul@multiplier:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x1C
   671  00009C                     	ds	1
   672  00009D                     ?___lltoft:
   673                           	opt stack 0
   674  00009D                     __div_to_l_@exp1:
   675                           	opt stack 0
   676  00009D                     ___lltoft@c:
   677                           	opt stack 0
   678                           
   679                           ; 4 bytes @ 0x1D
   680  00009D                     	ds	1
   681  00009E                     ___wmul@multiplicand:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x1E
   685  00009E                     	ds	2
   686  0000A0                     ___wmul@product:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x20
   690  0000A0                     	ds	1
   691  0000A1                     ??___lltoft:
   692                           
   693                           ; 0 bytes @ 0x21
   694  0000A1                     	ds	4
   695  0000A5                     ___lltoft@exp:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x25
   699  0000A5                     	ds	1
   700  0000A6                     ?___ftneg:
   701                           	opt stack 0
   702  0000A6                     ___ftneg@f1:
   703                           	opt stack 0
   704                           
   705                           ; 3 bytes @ 0x26
   706  0000A6                     	ds	3
   707  0000A9                     ?___ftmul:
   708                           	opt stack 0
   709  0000A9                     ___ftmul@f1:
   710                           	opt stack 0
   711                           
   712                           ; 3 bytes @ 0x29
   713  0000A9                     	ds	3
   714  0000AC                     ___ftmul@f2:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x2C
   718  0000AC                     	ds	3
   719  0000AF                     ??___ftmul:
   720                           
   721                           ; 0 bytes @ 0x2F
   722  0000AF                     	ds	3
   723  0000B2                     ___ftmul@exp:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x32
   727  0000B2                     	ds	1
   728  0000B3                     ___ftmul@f3_as_product:
   729                           	opt stack 0
   730                           
   731                           ; 3 bytes @ 0x33
   732  0000B3                     	ds	3
   733  0000B6                     ___ftmul@cntr:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x36
   737  0000B6                     	ds	1
   738  0000B7                     ___ftmul@sign:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x37
   742  0000B7                     	ds	1
   743  0000B8                     ?_fround:
   744                           	opt stack 0
   745  0000B8                     ?_scale:
   746                           	opt stack 0
   747                           
   748                           ; 3 bytes @ 0x38
   749  0000B8                     	ds	3
   750  0000BB                     _fround$1740:
   751                           	opt stack 0
   752  0000BB                     _scale$1741:
   753                           	opt stack 0
   754                           
   755                           ; 3 bytes @ 0x3B
   756  0000BB                     	ds	3
   757  0000BE                     scale@scl:
   758                           	opt stack 0
   759  0000BE                     _fround$1739:
   760                           	opt stack 0
   761                           
   762                           ; 3 bytes @ 0x3E
   763  0000BE                     	ds	1
   764  0000BF                     ?___ftdiv:
   765                           	opt stack 0
   766  0000BF                     ___ftdiv@f1:
   767                           	opt stack 0
   768                           
   769                           ; 3 bytes @ 0x3F
   770  0000BF                     	ds	2
   771  0000C1                     fround@prec:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x41
   775  0000C1                     	ds	1
   776  0000C2                     ?___ftadd:
   777                           	opt stack 0
   778  0000C2                     ___ftadd@f1:
   779                           	opt stack 0
   780  0000C2                     ___ftdiv@f2:
   781                           	opt stack 0
   782                           
   783                           ; 3 bytes @ 0x42
   784  0000C2                     	ds	3
   785  0000C5                     ??___ftdiv:
   786  0000C5                     ___ftadd@f2:
   787                           	opt stack 0
   788                           
   789                           ; 3 bytes @ 0x45
   790  0000C5                     	ds	3
   791  0000C8                     ??___ftadd:
   792  0000C8                     ___ftdiv@cntr:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x48
   796  0000C8                     	ds	1
   797  0000C9                     ___ftdiv@f3:
   798                           	opt stack 0
   799                           
   800                           ; 3 bytes @ 0x49
   801  0000C9                     	ds	2
   802  0000CB                     ___ftadd@sign:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x4B
   806  0000CB                     	ds	1
   807  0000CC                     ___ftadd@exp2:
   808                           	opt stack 0
   809  0000CC                     ___ftdiv@exp:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x4C
   813  0000CC                     	ds	1
   814  0000CD                     ___ftadd@exp1:
   815                           	opt stack 0
   816  0000CD                     ___ftdiv@sign:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x4D
   820  0000CD                     	ds	1
   821  0000CE                     ?___ftsub:
   822                           	opt stack 0
   823  0000CE                     ___ftge@ff1:
   824                           	opt stack 0
   825  0000CE                     ___ftsub@f1:
   826                           	opt stack 0
   827                           
   828                           ; 3 bytes @ 0x4E
   829  0000CE                     	ds	3
   830  0000D1                     ___ftge@ff2:
   831                           	opt stack 0
   832  0000D1                     ___ftsub@f2:
   833                           	opt stack 0
   834                           
   835                           ; 3 bytes @ 0x51
   836  0000D1                     	ds	3
   837  0000D4                     ??___ftge:
   838                           
   839                           ; 0 bytes @ 0x54
   840  0000D4                     	ds	3
   841  0000D7                     ?_sprintf:
   842                           	opt stack 0
   843  0000D7                     sprintf@sp:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x57
   847  0000D7                     	ds	2
   848  0000D9                     sprintf@f:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x59
   852  0000D9                     	ds	9
   853  0000E2                     ??_sprintf:
   854                           
   855                           ; 0 bytes @ 0x62
   856  0000E2                     	ds	6
   857  0000E8                     WriteLCD@LCDstart:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x68
   861  0000E8                     	ds	2
   862  0000EA                     WriteLCD@len:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x6A
   866  0000EA                     	ds	2
   867  0000EC                     WriteLCD@var:
   868                           	opt stack 0
   869                           
   870                           ; 3 bytes @ 0x6C
   871  0000EC                     	ds	3
   872  0000EF                     WriteLCD@Msg:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x6F
   876  0000EF                     	ds	2
   877  0000F1                     ??_main:
   878                           
   879                           ; 0 bytes @ 0x71
   880  0000F1                     	ds	1
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           postinc0	equ	0xFEE
   886                           wreg	equ	0xFE8
   887                           postdec1	equ	0xFE5
   888                           fsr1l	equ	0xFE1
   889                           
   890                           	psect	cstackCOMRAM
   891  000001                     __pcstackCOMRAM:
   892                           	opt stack 0
   893  000001                     ?i1___ftpack:
   894                           	opt stack 0
   895  000001                     i1WriteTimer0@timer0:
   896                           	opt stack 0
   897  000001                     i1___ftpack@arg:
   898                           	opt stack 0
   899                           
   900                           ; 3 bytes @ 0x0
   901  000001                     	ds	2
   902  000003                     i1WriteTimer0@timer:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x2
   906  000003                     	ds	1
   907  000004                     i1___ftpack@exp:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x3
   911  000004                     	ds	1
   912  000005                     i1___ftpack@sign:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x4
   916  000005                     	ds	1
   917  000006                     ??i1___ftpack:
   918                           
   919                           ; 0 bytes @ 0x5
   920  000006                     	ds	3
   921  000009                     ?___awtoft:
   922                           	opt stack 0
   923  000009                     ___awtoft@c:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x8
   927  000009                     	ds	3
   928  00000C                     ___awtoft@sign:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0xB
   932  00000C                     	ds	1
   933  00000D                     ?i1___ftdiv:
   934                           	opt stack 0
   935  00000D                     i1___ftdiv@f1:
   936                           	opt stack 0
   937                           
   938                           ; 3 bytes @ 0xC
   939  00000D                     	ds	3
   940  000010                     i1___ftdiv@f2:
   941                           	opt stack 0
   942                           
   943                           ; 3 bytes @ 0xF
   944  000010                     	ds	3
   945  000013                     ??i1___ftdiv:
   946                           
   947                           ; 0 bytes @ 0x12
   948  000013                     	ds	3
   949  000016                     i1___ftdiv@cntr:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x15
   953  000016                     	ds	1
   954  000017                     i1___ftdiv@f3:
   955                           	opt stack 0
   956                           
   957                           ; 3 bytes @ 0x16
   958  000017                     	ds	3
   959  00001A                     i1___ftdiv@exp:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x19
   963  00001A                     	ds	1
   964  00001B                     i1___ftdiv@sign:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x1A
   968  00001B                     	ds	1
   969  00001C                     ??_low_isr:
   970                           
   971                           ; 0 bytes @ 0x1B
   972  00001C                     	ds	19
   973  00002F                     ??_TimerStopped:
   974                           
   975                           ; 0 bytes @ 0x2E
   976  00002F                     	ds	17
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1l	equ	0xFE1
   985                           
   986 ;;
   987 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   988 ;;
   989 ;; *************** function _main *****************
   990 ;; Defined at:
   991 ;;		line 52 in file "main.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  Msg3           10   66[BANK1 ] unsigned char [10]
   996 ;;  LCDinit         7   48[BANK1 ] unsigned char [7]
   997 ;;  Msg1            6   55[BANK1 ] unsigned char [6]
   998 ;;  Msg2            5   61[BANK1 ] unsigned char [5]
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  2   50[COMRAM] int 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1008 ;;      Params:         0       0       0       0       0       0       0
  1009 ;;      Locals:         0       0      28       0       0       0       0
  1010 ;;      Temps:          0       1       0       0       0       0       0
  1011 ;;      Totals:         0       1      28       0       0       0       0
  1012 ;;Total ram usage:       29 bytes
  1013 ;; Hardware stack levels required when called:    9
  1014 ;; This function calls:
  1015 ;;		_CloseTimer0
  1016 ;;		_DisplayLCD
  1017 ;;		_InitApp
  1018 ;;		_InitInterrupts
  1019 ;;		_WaitHalfSec
  1020 ;;		_WriteLCD
  1021 ;;		_WriteTimer0
  1022 ;; This function is called by:
  1023 ;;		Startup code after reset
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text0
  1028  002B8E                     __ptext0:
  1029                           	opt stack 0
  1030  002B8E                     _main:
  1031                           	opt stack 22
  1032                           
  1033                           ;incstack = 0
  1034  002B8E  FFFF               	dw	65535
  1035                           
  1036                           ;main.c: 56: char LCDinit[] = {0x33,0x32,0x28,0x01,0x0c,0x06,0x00};
  1037  002B90  EE21  F04C         	lfsr	2,main@F3983
  1038  002B94  EE11  F030         	lfsr	1,main@LCDinit
  1039  002B98  0E07               	movlw	7
  1040  002B9A                     u5661:
  1041  002B9A  CFDE FFE6          	movff	postinc2,postinc1
  1042  002B9E  2EE8               	decfsz	wreg,f,c
  1043  002BA0  D7FC               	goto	u5661
  1044                           
  1045                           ;main.c: 57: char Msg1[] = {0x84,'C','U','N','T','\0'};
  1046  002BA2  EE21  F053         	lfsr	2,main@F3985
  1047  002BA6  EE11  F037         	lfsr	1,main@Msg1
  1048  002BAA  0E06               	movlw	6
  1049  002BAC                     u5671:
  1050  002BAC  CFDE FFE6          	movff	postinc2,postinc1
  1051  002BB0  2EE8               	decfsz	wreg,f,c
  1052  002BB2  D7FC               	goto	u5671
  1053                           
  1054                           ;main.c: 58: char Msg2[] = {0xC5,'R','P','S','\0'};
  1055  002BB4  EE21  F059         	lfsr	2,main@F3987
  1056  002BB8  EE11  F03D         	lfsr	1,main@Msg2
  1057  002BBC  0E05               	movlw	5
  1058  002BBE                     u5681:
  1059  002BBE  CFDE FFE6          	movff	postinc2,postinc1
  1060  002BC2  2EE8               	decfsz	wreg,f,c
  1061  002BC4  D7FC               	goto	u5681
  1062                           
  1063                           ;main.c: 59: char Msg3[10];
  1064                           ;main.c: 60: InitApp();
  1065  002BC6  ECC1  F01C         	call	_InitApp	;wreg free
  1066                           
  1067                           ;main.c: 61: DisplayLCD(LCDinit,1);
  1068  002BCA  0101               	movlb	1	; () banked
  1069  002BCC  0E01               	movlw	high main@LCDinit
  1070  002BCE  0100               	movlb	0	; () banked
  1071  002BD0  6F90               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
  1072  002BD2  0101               	movlb	1	; () banked
  1073  002BD4  0E30               	movlw	low main@LCDinit
  1074  002BD6  0100               	movlb	0	; () banked
  1075  002BD8  6F8F               	movwf	DisplayLCD@tempPtr& (0+255),b
  1076  002BDA  0E00               	movlw	0
  1077  002BDC  0100               	movlb	0	; () banked
  1078  002BDE  6F92               	movwf	(DisplayLCD@init+1)& (0+255),b
  1079  002BE0  0E01               	movlw	1
  1080  002BE2  0100               	movlb	0	; () banked
  1081  002BE4  6F91               	movwf	DisplayLCD@init& (0+255),b
  1082  002BE6  EC90  F01B         	call	_DisplayLCD	;wreg free
  1083                           
  1084                           ;main.c: 65: DisplayLCD(Msg1,0);
  1085  002BEA  0101               	movlb	1	; () banked
  1086  002BEC  0E01               	movlw	high main@Msg1
  1087  002BEE  0100               	movlb	0	; () banked
  1088  002BF0  6F90               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
  1089  002BF2  0101               	movlb	1	; () banked
  1090  002BF4  0E37               	movlw	low main@Msg1
  1091  002BF6  0100               	movlb	0	; () banked
  1092  002BF8  6F8F               	movwf	DisplayLCD@tempPtr& (0+255),b
  1093  002BFA  0E00               	movlw	0
  1094  002BFC  0100               	movlb	0	; () banked
  1095  002BFE  6F92               	movwf	(DisplayLCD@init+1)& (0+255),b
  1096  002C00  0E00               	movlw	0
  1097  002C02  0100               	movlb	0	; () banked
  1098  002C04  6F91               	movwf	DisplayLCD@init& (0+255),b
  1099  002C06  EC90  F01B         	call	_DisplayLCD	;wreg free
  1100                           
  1101                           ;main.c: 66: DisplayLCD(Msg2,0);
  1102  002C0A  0101               	movlb	1	; () banked
  1103  002C0C  0E01               	movlw	high main@Msg2
  1104  002C0E  0100               	movlb	0	; () banked
  1105  002C10  6F90               	movwf	(DisplayLCD@tempPtr+1)& (0+255),b
  1106  002C12  0101               	movlb	1	; () banked
  1107  002C14  0E3D               	movlw	low main@Msg2
  1108  002C16  0100               	movlb	0	; () banked
  1109  002C18  6F8F               	movwf	DisplayLCD@tempPtr& (0+255),b
  1110  002C1A  0E00               	movlw	0
  1111  002C1C  0100               	movlb	0	; () banked
  1112  002C1E  6F92               	movwf	(DisplayLCD@init+1)& (0+255),b
  1113  002C20  0E00               	movlw	0
  1114  002C22  0100               	movlb	0	; () banked
  1115  002C24  6F91               	movwf	DisplayLCD@init& (0+255),b
  1116  002C26  EC90  F01B         	call	_DisplayLCD	;wreg free
  1117                           
  1118                           ;main.c: 70: CHA = PORTBbits.RB5;
  1119  002C2A  AA81               	btfss	3969,5,c	;volatile
  1120  002C2C  D004               	goto	u5690
  1121  002C2E  0100               	movlb	0	; () banked
  1122  002C30  6BF1               	clrf	??_main& (0+255),b
  1123  002C32  2BF1               	incf	??_main& (0+255),f,b
  1124  002C34  D002               	goto	u5698
  1125  002C36                     u5690:
  1126  002C36  0100               	movlb	0	; () banked
  1127  002C38  6BF1               	clrf	??_main& (0+255),b
  1128  002C3A                     u5698:
  1129  002C3A  0100               	movlb	0	; () banked
  1130  002C3C  51F1               	movf	??_main& (0+255),w,b
  1131  002C3E  6E45               	movwf	_CHA,c
  1132  002C40  6A46               	clrf	_CHA+1,c
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;main.c: 71: CHB = PORTBbits.RB4;
  1136  002C42  A881               	btfss	3969,4,c	;volatile
  1137  002C44  D004               	goto	u5700
  1138  002C46  0100               	movlb	0	; () banked
  1139  002C48  6BF1               	clrf	??_main& (0+255),b
  1140  002C4A  2BF1               	incf	??_main& (0+255),f,b
  1141  002C4C  D002               	goto	u5708
  1142  002C4E                     u5700:
  1143  002C4E  0100               	movlb	0	; () banked
  1144  002C50  6BF1               	clrf	??_main& (0+255),b
  1145  002C52                     u5708:
  1146  002C52  0100               	movlb	0	; () banked
  1147  002C54  51F1               	movf	??_main& (0+255),w,b
  1148  002C56  6E49               	movwf	_CHB,c
  1149  002C58  6A4A               	clrf	_CHB+1,c
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;main.c: 72: OLD_ROT = 0;
  1153  002C5A  0E00               	movlw	0
  1154  002C5C  6E4E               	movwf	_OLD_ROT+1,c
  1155  002C5E  0E00               	movlw	0
  1156  002C60  6E4D               	movwf	_OLD_ROT,c
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;main.c: 73: CCWTurn = 0;
  1160  002C62  0E00               	movlw	0
  1161  002C64  6E44               	movwf	_CCWTurn+1,c
  1162  002C66  0E00               	movlw	0
  1163  002C68  6E43               	movwf	_CCWTurn,c
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;main.c: 74: CWTurn = 0;
  1167  002C6A  0E00               	movlw	0
  1168  002C6C  6E4C               	movwf	_CWTurn+1,c
  1169  002C6E  0E00               	movlw	0
  1170  002C70  6E4B               	movwf	_CWTurn,c
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 75: RPS = 0.0;
  1174  002C72  0E00               	movlw	0
  1175  002C74  0101               	movlb	1	; () banked
  1176  002C76  6F5E               	movwf	_RPS& (0+255),b
  1177  002C78  0E00               	movlw	0
  1178  002C7A  0101               	movlb	1	; () banked
  1179  002C7C  6F5F               	movwf	(_RPS+1)& (0+255),b
  1180  002C7E  0E00               	movlw	0
  1181  002C80  0101               	movlb	1	; () banked
  1182  002C82  6F60               	movwf	(_RPS+2)& (0+255),b
  1183                           
  1184                           ; BSR set to: 1
  1185                           ;main.c: 76: CHAcount = 0;
  1186  002C84  0E00               	movlw	0
  1187  002C86  6E48               	movwf	_CHAcount+1,c
  1188  002C88  0E00               	movlw	0
  1189  002C8A  6E47               	movwf	_CHAcount,c
  1190                           
  1191                           ; BSR set to: 1
  1192                           ;main.c: 80: PR2 = 0x9B;
  1193  002C8C  0E9B               	movlw	155
  1194  002C8E  6ECB               	movwf	4043,c	;volatile
  1195                           
  1196                           ; BSR set to: 1
  1197                           ;main.c: 81: CCP1CONbits.DC1B1 = 0;
  1198  002C90  9ABD               	bcf	4029,5,c	;volatile
  1199                           
  1200                           ; BSR set to: 1
  1201                           ;main.c: 82: CCP1CONbits.DC1B0 = 0;
  1202  002C92  98BD               	bcf	4029,4,c	;volatile
  1203                           
  1204                           ; BSR set to: 1
  1205                           ;main.c: 83: CCPR1L = 0b00000100;
  1206  002C94  0E04               	movlw	4
  1207  002C96  6EBE               	movwf	4030,c	;volatile
  1208                           
  1209                           ; BSR set to: 1
  1210                           ;main.c: 87: TMR0count = 0;
  1211  002C98  0E00               	movlw	0
  1212  002C9A  6E50               	movwf	_TMR0count+1,c
  1213  002C9C  0E00               	movlw	0
  1214  002C9E  6E4F               	movwf	_TMR0count,c
  1215                           
  1216                           ; BSR set to: 1
  1217                           ;main.c: 88: WriteTimer0(0x0BDC);
  1218  002CA0  0E0B               	movlw	11
  1219  002CA2  0100               	movlb	0	; () banked
  1220  002CA4  6F8F               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  1221  002CA6  0EDC               	movlw	220
  1222  002CA8  0100               	movlb	0	; () banked
  1223  002CAA  6F8E               	movwf	WriteTimer0@timer0& (0+255),b
  1224  002CAC  EC70  F01D         	call	_WriteTimer0	;wreg free
  1225                           
  1226                           ;main.c: 89: InitInterrupts();
  1227  002CB0  EC4C  F01D         	call	_InitInterrupts	;wreg free
  1228  002CB4                     l4867:
  1229                           
  1230                           ;main.c: 95: {
  1231                           ;main.c: 96: WaitHalfSec();
  1232  002CB4  ECFC  F01C         	call	_WaitHalfSec	;wreg free
  1233                           
  1234                           ;main.c: 97: WriteLCD(0xC0,5,RPS,Msg3);
  1235  002CB8  0E00               	movlw	0
  1236  002CBA  0100               	movlb	0	; () banked
  1237  002CBC  6FE9               	movwf	(WriteLCD@LCDstart+1)& (0+255),b
  1238  002CBE  0EC0               	movlw	192
  1239  002CC0  0100               	movlb	0	; () banked
  1240  002CC2  6FE8               	movwf	WriteLCD@LCDstart& (0+255),b
  1241  002CC4  0E00               	movlw	0
  1242  002CC6  0100               	movlb	0	; () banked
  1243  002CC8  6FEB               	movwf	(WriteLCD@len+1)& (0+255),b
  1244  002CCA  0E05               	movlw	5
  1245  002CCC  0100               	movlb	0	; () banked
  1246  002CCE  6FEA               	movwf	WriteLCD@len& (0+255),b
  1247  002CD0  C15E  F0EC         	movff	_RPS,WriteLCD@var
  1248  002CD4  C15F  F0ED         	movff	_RPS+1,WriteLCD@var+1
  1249  002CD8  C160  F0EE         	movff	_RPS+2,WriteLCD@var+2
  1250  002CDC  0101               	movlb	1	; () banked
  1251  002CDE  0E01               	movlw	high main@Msg3
  1252  002CE0  0100               	movlb	0	; () banked
  1253  002CE2  6FF0               	movwf	(WriteLCD@Msg+1)& (0+255),b
  1254  002CE4  0101               	movlb	1	; () banked
  1255  002CE6  0E42               	movlw	low main@Msg3
  1256  002CE8  0100               	movlb	0	; () banked
  1257  002CEA  6FEF               	movwf	WriteLCD@Msg& (0+255),b
  1258  002CEC  EC4C  F018         	call	_WriteLCD	;wreg free
  1259  002CF0  D7E1               	goto	l4867
  1260  002CF2                     __end_of_main:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           postinc1	equ	0xFE6
  1269                           postdec1	equ	0xFE5
  1270                           fsr1l	equ	0xFE1
  1271                           postinc2	equ	0xFDE
  1272                           
  1273 ;; *************** function _WriteTimer0 *****************
  1274 ;; Defined at:
  1275 ;;		line 16 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0write.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  timer0          2   14[BANK0 ] unsigned int 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  timer           2   16[BANK0 ] struct Timers
  1280 ;; Return value:  Size  Location     Type
  1281 ;;		None               void
  1282 ;; Registers used:
  1283 ;;		None
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1289 ;;      Params:         0       2       0       0       0       0       0
  1290 ;;      Locals:         0       2       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0
  1292 ;;      Totals:         0       4       0       0       0       0       0
  1293 ;;Total ram usage:        4 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    4
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text1
  1304  003AE0                     __ptext1:
  1305                           	opt stack 0
  1306  003AE0                     _WriteTimer0:
  1307                           	opt stack 26
  1308                           
  1309                           ;incstack = 0
  1310  003AE0  FFFF               	dw	65535
  1311  003AE2  C08E  F090         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1312  003AE6  C08F  F091         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1313  003AEA  C091  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1314  003AEE  C090  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1315  003AF2  0012               	return	
  1316  003AF4  FFFF               	dw	65535	; errata NOP
  1317  003AF6                     __end_of_WriteTimer0:
  1318                           	opt stack 0
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           postinc0	equ	0xFEE
  1324                           wreg	equ	0xFE8
  1325                           postinc1	equ	0xFE6
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           postinc2	equ	0xFDE
  1329                           
  1330 ;; *************** function _WriteLCD *****************
  1331 ;; Defined at:
  1332 ;;		line 269 in file "user.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  LCDstart        2  104[BANK0 ] int 
  1335 ;;  len             2  106[BANK0 ] int 
  1336 ;;  var             3  108[BANK0 ] int 
  1337 ;;  Msg             2  111[BANK0 ] PTR unsigned char 
  1338 ;;		 -> main@Msg3(10), 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  width           2   46[BANK1 ] int 
  1341 ;;  msgptr          2   44[BANK1 ] PTR unsigned char 
  1342 ;;		 -> main@Msg3(10), 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;		None               void
  1345 ;; Registers used:
  1346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1352 ;;      Params:         0       9       0       0       0       0       0
  1353 ;;      Locals:         0       0       4       0       0       0       0
  1354 ;;      Temps:          0       0       2       0       0       0       0
  1355 ;;      Totals:         0       9       6       0       0       0       0
  1356 ;;Total ram usage:       15 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    8
  1359 ;; This function calls:
  1360 ;;		_DisplayLCD
  1361 ;;		_sprintf
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text2
  1368  003098                     __ptext2:
  1369                           	opt stack 0
  1370  003098                     _WriteLCD:
  1371                           	opt stack 22
  1372                           
  1373                           ;incstack = 0
  1374  003098  FFFF               	dw	65535
  1375                           
  1376                           ;user.c: 271: char *msgptr = Msg;
  1377  00309A  0100               	movlb	0	; () banked
  1378  00309C  0101               	movlb	1	; () banked
  1379  00309E  C0F0  F12D         	movff	WriteLCD@Msg+1,WriteLCD@msgptr+1
  1380  0030A2  0100               	movlb	0	; () banked
  1381  0030A4  0101               	movlb	1	; () banked
  1382  0030A6  C0EF  F12C         	movff	WriteLCD@Msg,WriteLCD@msgptr
  1383                           
  1384                           ; BSR set to: 1
  1385                           ;user.c: 272: int width = sprintf(msgptr+1,"%*.*g",len,len-1,var);
  1386  0030AA  0E01               	movlw	1
  1387  0030AC  0101               	movlb	1	; () banked
  1388  0030AE  252C               	addwf	WriteLCD@msgptr& (0+255),w,b
  1389  0030B0  0100               	movlb	0	; () banked
  1390  0030B2  6FD7               	movwf	sprintf@sp& (0+255),b
  1391  0030B4  0E00               	movlw	0
  1392  0030B6  0101               	movlb	1	; () banked
  1393  0030B8  212D               	addwfc	(WriteLCD@msgptr+1)& (0+255),w,b
  1394  0030BA  0100               	movlb	0	; () banked
  1395  0030BC  6FD8               	movwf	(sprintf@sp+1)& (0+255),b
  1396  0030BE  0E06               	movlw	high STR_1
  1397  0030C0  0100               	movlb	0	; () banked
  1398  0030C2  6FDA               	movwf	(sprintf@f+1)& (0+255),b
  1399  0030C4  0E9B               	movlw	low STR_1
  1400  0030C6  0100               	movlb	0	; () banked
  1401  0030C8  6FD9               	movwf	sprintf@f& (0+255),b
  1402  0030CA  C0EA  F0DB         	movff	WriteLCD@len,?_sprintf+4
  1403  0030CE  C0EB  F0DC         	movff	WriteLCD@len+1,?_sprintf+5
  1404  0030D2  0EFF               	movlw	255
  1405  0030D4  0100               	movlb	0	; () banked
  1406  0030D6  25EA               	addwf	WriteLCD@len& (0+255),w,b
  1407  0030D8  0100               	movlb	0	; () banked
  1408  0030DA  6FDD               	movwf	(?_sprintf+6)& (0+255),b
  1409  0030DC  0EFF               	movlw	255
  1410  0030DE  0100               	movlb	0	; () banked
  1411  0030E0  21EB               	addwfc	(WriteLCD@len+1)& (0+255),w,b
  1412  0030E2  0100               	movlb	0	; () banked
  1413  0030E4  6FDE               	movwf	(?_sprintf+7)& (0+255),b
  1414  0030E6  C0EC  F0DF         	movff	WriteLCD@var,?_sprintf+8
  1415  0030EA  C0ED  F0E0         	movff	WriteLCD@var+1,?_sprintf+9
  1416  0030EE  C0EE  F0E1         	movff	WriteLCD@var+2,?_sprintf+10
  1417  0030F2  EC51  F003         	call	_sprintf	;wreg free
  1418  0030F6  0100               	movlb	0	; () banked
  1419  0030F8  C0D7  F12E         	movff	?_sprintf,WriteLCD@width
  1420  0030FC  0100               	movlb	0	; () banked
  1421  0030FE  C0D8  F12F         	movff	?_sprintf+1,WriteLCD@width+1
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;user.c: 274: Msg[0] = LCDstart;
  1425  003102  C0EF  FFD9         	movff	WriteLCD@Msg,fsr2l
  1426  003106  C0F0  FFDA         	movff	WriteLCD@Msg+1,fsr2h
  1427  00310A  0100               	movlb	0	; () banked
  1428  00310C  C0E8  FFDF         	movff	WriteLCD@LCDstart,indf2
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;user.c: 275: if (width > len)
  1432  003110  0100               	movlb	0	; () banked
  1433  003112  51EB               	movf	(WriteLCD@len+1)& (0+255),w,b
  1434  003114  0A80               	xorlw	128
  1435  003116  0101               	movlb	1	; () banked
  1436  003118  6F2A               	movwf	??_WriteLCD& (0+255),b
  1437  00311A  0101               	movlb	1	; () banked
  1438  00311C  512E               	movf	WriteLCD@width& (0+255),w,b
  1439  00311E  0100               	movlb	0	; () banked
  1440  003120  5DEA               	subwf	WriteLCD@len& (0+255),w,b
  1441  003122  0101               	movlb	1	; () banked
  1442  003124  512F               	movf	(WriteLCD@width+1)& (0+255),w,b
  1443  003126  0A80               	xorlw	128
  1444  003128  0101               	movlb	1	; () banked
  1445  00312A  592A               	subwfb	??_WriteLCD& (0+255),w,b
  1446  00312C  B0D8               	btfsc	status,0,c
  1447  00312E  D022               	goto	l4825
  1448                           
  1449                           ; BSR set to: 1
  1450                           ;user.c: 276: {
  1451                           ;user.c: 277: Msg[len] = '!';
  1452  003130  0100               	movlb	0	; () banked
  1453  003132  51EA               	movf	WriteLCD@len& (0+255),w,b
  1454  003134  0100               	movlb	0	; () banked
  1455  003136  25EF               	addwf	WriteLCD@Msg& (0+255),w,b
  1456  003138  6ED9               	movwf	fsr2l,c
  1457  00313A  0100               	movlb	0	; () banked
  1458  00313C  51EB               	movf	(WriteLCD@len+1)& (0+255),w,b
  1459  00313E  0100               	movlb	0	; () banked
  1460  003140  21F0               	addwfc	(WriteLCD@Msg+1)& (0+255),w,b
  1461  003142  6EDA               	movwf	fsr2h,c
  1462  003144  0E21               	movlw	33
  1463  003146  6EDF               	movwf	indf2,c
  1464                           
  1465                           ;user.c: 278: Msg[len+1] = '\0';
  1466  003148  0E01               	movlw	1
  1467  00314A  0100               	movlb	0	; () banked
  1468  00314C  25EA               	addwf	WriteLCD@len& (0+255),w,b
  1469  00314E  0101               	movlb	1	; () banked
  1470  003150  6F2A               	movwf	??_WriteLCD& (0+255),b
  1471  003152  0E00               	movlw	0
  1472  003154  0100               	movlb	0	; () banked
  1473  003156  21EB               	addwfc	(WriteLCD@len+1)& (0+255),w,b
  1474  003158  0101               	movlb	1	; () banked
  1475  00315A  6F2B               	movwf	(??_WriteLCD+1)& (0+255),b
  1476  00315C  0101               	movlb	1	; () banked
  1477  00315E  512A               	movf	??_WriteLCD& (0+255),w,b
  1478  003160  0100               	movlb	0	; () banked
  1479  003162  25EF               	addwf	WriteLCD@Msg& (0+255),w,b
  1480  003164  6ED9               	movwf	fsr2l,c
  1481  003166  0101               	movlb	1	; () banked
  1482  003168  512B               	movf	(??_WriteLCD+1)& (0+255),w,b
  1483  00316A  0100               	movlb	0	; () banked
  1484  00316C  21F0               	addwfc	(WriteLCD@Msg+1)& (0+255),w,b
  1485  00316E  6EDA               	movwf	fsr2h,c
  1486  003170  0E00               	movlw	0
  1487  003172  6EDF               	movwf	indf2,c
  1488  003174                     l4825:
  1489                           
  1490                           ;user.c: 279: }
  1491                           ;user.c: 280: DisplayLCD(Msg,0);
  1492  003174  0100               	movlb	0	; () banked
  1493  003176  C0F0  F090         	movff	WriteLCD@Msg+1,DisplayLCD@tempPtr+1
  1494  00317A  0100               	movlb	0	; () banked
  1495  00317C  C0EF  F08F         	movff	WriteLCD@Msg,DisplayLCD@tempPtr
  1496  003180  0E00               	movlw	0
  1497  003182  0100               	movlb	0	; () banked
  1498  003184  6F92               	movwf	(DisplayLCD@init+1)& (0+255),b
  1499  003186  0E00               	movlw	0
  1500  003188  0100               	movlb	0	; () banked
  1501  00318A  6F91               	movwf	DisplayLCD@init& (0+255),b
  1502  00318C  EC90  F01B         	call	_DisplayLCD	;wreg free
  1503  003190  0012               	return	
  1504  003192  FFFF               	dw	65535	; errata NOP
  1505  003194                     __end_of_WriteLCD:
  1506                           	opt stack 0
  1507                           tblptru	equ	0xFF8
  1508                           tblptrh	equ	0xFF7
  1509                           tblptrl	equ	0xFF6
  1510                           tablat	equ	0xFF5
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postinc1	equ	0xFE6
  1514                           postdec1	equ	0xFE5
  1515                           fsr1l	equ	0xFE1
  1516                           indf2	equ	0xFDF
  1517                           postinc2	equ	0xFDE
  1518                           fsr2h	equ	0xFDA
  1519                           fsr2l	equ	0xFD9
  1520                           status	equ	0xFD8
  1521                           
  1522 ;; *************** function _sprintf *****************
  1523 ;; Defined at:
  1524 ;;		line 492 in file "/Applications/microchip/xc8/v1.33/sources/common/doprnt.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  sp              2   87[BANK0 ] PTR unsigned char 
  1527 ;;		 -> main@Msg3(10), 
  1528 ;;  f               2   89[BANK0 ] PTR const unsigned char 
  1529 ;;		 -> STR_1(6), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  vd              4    7[BANK1 ] unsigned long 
  1532 ;;  temp            3   15[BANK1 ] unsigned long 
  1533 ;;  vd              4   11[BANK1 ] unsigned long 
  1534 ;;  _val            5   29[BANK1 ] struct .
  1535 ;;  fval            3   36[BANK1 ] struct .
  1536 ;;  integ           3   20[BANK1 ] struct .
  1537 ;;  ival            3    0        struct .
  1538 ;;  prec            2   39[BANK1 ] int 
  1539 ;;  exp             2   34[BANK1 ] int 
  1540 ;;  flag            2   27[BANK1 ] unsigned short 
  1541 ;;  width           2   25[BANK1 ] int 
  1542 ;;  ccnt            2   23[BANK1 ] int 
  1543 ;;  ap              2   18[BANK1 ] PTR void [1]
  1544 ;;		 -> ?_sprintf(2), 
  1545 ;;  c               1   41[BANK1 ] char 
  1546 ;;  d               1    0        unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  2   87[BANK0 ] int 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1556 ;;      Params:         0      11       0       0       0       0       0
  1557 ;;      Locals:         0       0      42       0       0       0       0
  1558 ;;      Temps:          0       6       0       0       0       0       0
  1559 ;;      Totals:         0      17      42       0       0       0       0
  1560 ;;Total ram usage:       59 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    7
  1563 ;; This function calls:
  1564 ;;		___awdiv
  1565 ;;		___awmod
  1566 ;;		___ftadd
  1567 ;;		___ftdiv
  1568 ;;		___ftge
  1569 ;;		___ftmul
  1570 ;;		___ftneg
  1571 ;;		___ftsub
  1572 ;;		___fttol
  1573 ;;		___lldiv
  1574 ;;		___llmod
  1575 ;;		___lltoft
  1576 ;;		___wmul
  1577 ;;		__div_to_l_
  1578 ;;		__tdiv_to_l_
  1579 ;;		_fround
  1580 ;;		_isdigit
  1581 ;;		_scale
  1582 ;; This function is called by:
  1583 ;;		_WriteLCD
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text3
  1588  0006A2                     __ptext3:
  1589                           	opt stack 0
  1590  0006A2                     _sprintf:
  1591                           	opt stack 22
  1592                           
  1593                           ;incstack = 0
  1594  0006A2  FFFF               	dw	65535
  1595                           
  1596                           ;doprnt.c: 494: va_list ap;
  1597                           ;doprnt.c: 499: signed char c;
  1598                           ;doprnt.c: 501: int width;
  1599                           ;doprnt.c: 504: int prec;
  1600                           ;doprnt.c: 508: unsigned short flag;
  1601                           ;doprnt.c: 510: int ccnt = 0;
  1602  0006A4  0E00               	movlw	0
  1603  0006A6  0101               	movlb	1	; () banked
  1604  0006A8  6F18               	movwf	(sprintf@ccnt+1)& (0+255),b
  1605  0006AA  0E00               	movlw	0
  1606  0006AC  0101               	movlb	1	; () banked
  1607  0006AE  6F17               	movwf	sprintf@ccnt& (0+255),b
  1608                           
  1609                           ; BSR set to: 1
  1610                           ;doprnt.c: 515: char d;
  1611                           ;doprnt.c: 516: double fval, integ;
  1612                           ;doprnt.c: 517: int exp;
  1613                           ;doprnt.c: 518: double ival;
  1614                           ;doprnt.c: 519: union {
  1615                           ;doprnt.c: 520: unsigned long _val;
  1616                           ;doprnt.c: 521: struct {
  1617                           ;doprnt.c: 522: const char * _cp;
  1618                           ;doprnt.c: 523: unsigned _len;
  1619                           ;doprnt.c: 524: } _str;
  1620                           ;doprnt.c: 525: } _val;
  1621                           ;doprnt.c: 542: *ap = __va_start();
  1622  0006B0  0100               	movlb	0	; () banked
  1623  0006B2  0E00               	movlw	high (?_sprintf+4)
  1624  0006B4  0101               	movlb	1	; () banked
  1625  0006B6  6F13               	movwf	(sprintf@ap+1)& (0+255),b
  1626  0006B8  0100               	movlb	0	; () banked
  1627  0006BA  0EDB               	movlw	low (?_sprintf+4)
  1628  0006BC  0101               	movlb	1	; () banked
  1629  0006BE  6F12               	movwf	sprintf@ap& (0+255),b
  1630                           
  1631                           ;doprnt.c: 545: while(c = *f++) {
  1632  0006C0  EF9B  F00D         	goto	l4773
  1633  0006C4                     l4303:
  1634                           
  1635                           ; BSR set to: 1
  1636                           ;doprnt.c: 547: if(c != '%')
  1637  0006C4  0101               	movlb	1	; () banked
  1638  0006C6  5129               	movf	sprintf@c& (0+255),w,b
  1639  0006C8  0A25               	xorlw	37
  1640  0006CA  B4D8               	btfsc	status,2,c
  1641  0006CC  D009               	goto	l4311
  1642                           
  1643                           ; BSR set to: 1
  1644                           ;doprnt.c: 549: {
  1645                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
  1646  0006CE  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  1647  0006D2  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  1648  0006D6  0101               	movlb	1	; () banked
  1649  0006D8  C129  FFDF         	movff	sprintf@c,indf2
  1650  0006DC  EF95  F00D         	goto	L10
  1651  0006E0                     l4311:
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;doprnt.c: 552: }
  1655                           ;doprnt.c: 555: width = 0;
  1656  0006E0  0E00               	movlw	0
  1657  0006E2  0101               	movlb	1	; () banked
  1658  0006E4  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  1659  0006E6  0E00               	movlw	0
  1660  0006E8  0101               	movlb	1	; () banked
  1661  0006EA  6F19               	movwf	sprintf@width& (0+255),b
  1662                           
  1663                           ;doprnt.c: 557: flag = 0;
  1664  0006EC  0E00               	movlw	0
  1665  0006EE  0101               	movlb	1	; () banked
  1666  0006F0  6F1C               	movwf	(sprintf@flag+1)& (0+255),b
  1667  0006F2  0E00               	movlw	0
  1668  0006F4  0101               	movlb	1	; () banked
  1669  0006F6  6F1B               	movwf	sprintf@flag& (0+255),b
  1670                           
  1671                           ; BSR set to: 1
  1672                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1673  0006F8  0100               	movlb	0	; () banked
  1674  0006FA  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1675  0006FE  0100               	movlb	0	; () banked
  1676  000700  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1677  000704                     	if	0	;tblptru may be non-zero
  1678  000704                     	endif
  1679  000704                     	if	0	;tblptru may be non-zero
  1680  000704                     	endif
  1681  000704  0008               	tblrd		*
  1682  000706  FFFF               	dw	65535	; errata NOP
  1683  000708  50F5               	movf	tablat,w,c
  1684  00070A  EC34  F01D         	call	_isdigit
  1685  00070E  A0D8               	btfss	status,0,c
  1686  000710  D04A               	goto	l4325
  1687                           
  1688                           ;doprnt.c: 607: width = 0;
  1689  000712  0E00               	movlw	0
  1690  000714  0101               	movlb	1	; () banked
  1691  000716  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  1692  000718  0E00               	movlw	0
  1693  00071A  0101               	movlb	1	; () banked
  1694  00071C  6F19               	movwf	sprintf@width& (0+255),b
  1695  00071E                     l4317:
  1696                           
  1697                           ;doprnt.c: 609: width *= 10;
  1698  00071E  C119  F09C         	movff	sprintf@width,___wmul@multiplier
  1699  000722  C11A  F09D         	movff	sprintf@width+1,___wmul@multiplier+1
  1700  000726  0E00               	movlw	0
  1701  000728  0100               	movlb	0	; () banked
  1702  00072A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1703  00072C  0E0A               	movlw	10
  1704  00072E  0100               	movlb	0	; () banked
  1705  000730  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1706  000732  ECDF  F01C         	call	___wmul	;wreg free
  1707  000736  0100               	movlb	0	; () banked
  1708  000738  C09C  F119         	movff	?___wmul,sprintf@width
  1709  00073C  0100               	movlb	0	; () banked
  1710  00073E  C09D  F11A         	movff	?___wmul+1,sprintf@width+1
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;doprnt.c: 610: width += *f++ - '0';
  1714  000742  0ED0               	movlw	208
  1715  000744  0100               	movlb	0	; () banked
  1716  000746  6FE2               	movwf	??_sprintf& (0+255),b
  1717  000748  0EFF               	movlw	255
  1718  00074A  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  1719  00074C  0100               	movlb	0	; () banked
  1720  00074E  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1721  000752  0100               	movlb	0	; () banked
  1722  000754  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1723  000758                     	if	0	;tblptru may be non-zero
  1724  000758                     	endif
  1725  000758                     	if	0	;tblptru may be non-zero
  1726  000758                     	endif
  1727  000758  0008               	tblrd		*
  1728  00075A  FFFF               	dw	65535	; errata NOP
  1729  00075C  50F5               	movf	tablat,w,c
  1730  00075E  0100               	movlb	0	; () banked
  1731  000760  6FE4               	movwf	(??_sprintf+2)& (0+255),b
  1732  000762  6BE5               	clrf	(??_sprintf+3)& (0+255),b
  1733  000764  0100               	movlb	0	; () banked
  1734  000766  51E2               	movf	??_sprintf& (0+255),w,b
  1735  000768  0100               	movlb	0	; () banked
  1736  00076A  27E4               	addwf	(??_sprintf+2)& (0+255),f,b
  1737  00076C  0100               	movlb	0	; () banked
  1738  00076E  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  1739  000770  0100               	movlb	0	; () banked
  1740  000772  23E5               	addwfc	(??_sprintf+3)& (0+255),f,b
  1741  000774  0100               	movlb	0	; () banked
  1742  000776  51E4               	movf	(??_sprintf+2)& (0+255),w,b
  1743  000778  0101               	movlb	1	; () banked
  1744  00077A  2719               	addwf	sprintf@width& (0+255),f,b
  1745  00077C  0100               	movlb	0	; () banked
  1746  00077E  51E5               	movf	(??_sprintf+3)& (0+255),w,b
  1747  000780  0101               	movlb	1	; () banked
  1748  000782  231A               	addwfc	(sprintf@width+1)& (0+255),f,b
  1749                           
  1750                           ; BSR set to: 1
  1751  000784  0100               	movlb	0	; () banked
  1752  000786  4BD9               	infsnz	sprintf@f& (0+255),f,b
  1753  000788  2BDA               	incf	(sprintf@f+1)& (0+255),f,b
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1757  00078A  0100               	movlb	0	; () banked
  1758  00078C  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1759  000790  0100               	movlb	0	; () banked
  1760  000792  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1761  000796                     	if	0	;tblptru may be non-zero
  1762  000796                     	endif
  1763  000796                     	if	0	;tblptru may be non-zero
  1764  000796                     	endif
  1765  000796  0008               	tblrd		*
  1766  000798  FFFF               	dw	65535	; errata NOP
  1767  00079A  50F5               	movf	tablat,w,c
  1768  00079C  EC34  F01D         	call	_isdigit
  1769  0007A0  A0D8               	btfss	status,0,c
  1770  0007A2  D020               	goto	l4333
  1771  0007A4  D7BC               	goto	l4317
  1772  0007A6                     l4325:
  1773  0007A6  0100               	movlb	0	; () banked
  1774  0007A8  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1775  0007AC  0100               	movlb	0	; () banked
  1776  0007AE  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1777  0007B2                     	if	0	;tblptru may be non-zero
  1778  0007B2                     	endif
  1779  0007B2                     	if	0	;tblptru may be non-zero
  1780  0007B2                     	endif
  1781  0007B2  0008               	tblrd		*
  1782  0007B4  FFFF               	dw	65535	; errata NOP
  1783  0007B6  50F5               	movf	tablat,w,c
  1784  0007B8  0A2A               	xorlw	42
  1785  0007BA  A4D8               	btfss	status,2,c
  1786  0007BC  D013               	goto	l4333
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
  1790  0007BE  C112  FFD9         	movff	sprintf@ap,fsr2l
  1791  0007C2  C113  FFDA         	movff	sprintf@ap+1,fsr2h
  1792  0007C6  0101               	movlb	1	; () banked
  1793  0007C8  CFDE F119          	movff	postinc2,sprintf@width
  1794  0007CC  0101               	movlb	1	; () banked
  1795  0007CE  CFDD F11A          	movff	postdec2,sprintf@width+1
  1796                           
  1797                           ; BSR set to: 1
  1798  0007D2  0E02               	movlw	2
  1799  0007D4  0101               	movlb	1	; () banked
  1800  0007D6  2712               	addwf	sprintf@ap& (0+255),f,b
  1801  0007D8  0E00               	movlw	0
  1802  0007DA  0101               	movlb	1	; () banked
  1803  0007DC  2313               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1804                           
  1805                           ; BSR set to: 1
  1806                           ;doprnt.c: 615: f++;
  1807  0007DE  0100               	movlb	0	; () banked
  1808  0007E0  4BD9               	infsnz	sprintf@f& (0+255),f,b
  1809  0007E2  2BDA               	incf	(sprintf@f+1)& (0+255),f,b
  1810  0007E4                     l4333:
  1811                           
  1812                           ;doprnt.c: 617: }
  1813                           ;doprnt.c: 620: if(*f == '.') {
  1814  0007E4  0100               	movlb	0	; () banked
  1815  0007E6  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1816  0007EA  0100               	movlb	0	; () banked
  1817  0007EC  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1818  0007F0                     	if	0	;tblptru may be non-zero
  1819  0007F0                     	endif
  1820  0007F0                     	if	0	;tblptru may be non-zero
  1821  0007F0                     	endif
  1822  0007F0  0008               	tblrd		*
  1823  0007F2  FFFF               	dw	65535	; errata NOP
  1824  0007F4  50F5               	movf	tablat,w,c
  1825  0007F6  0A2E               	xorlw	46
  1826  0007F8  A4D8               	btfss	status,2,c
  1827  0007FA  D061               	goto	l4353
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;doprnt.c: 621: flag |= 0x4000;
  1831  0007FC  0101               	movlb	1	; () banked
  1832  0007FE  8D1C               	bsf	(sprintf@flag+1)& (0+255),6,b
  1833                           
  1834                           ;doprnt.c: 622: f++;
  1835  000800  0100               	movlb	0	; () banked
  1836  000802  4BD9               	infsnz	sprintf@f& (0+255),f,b
  1837  000804  2BDA               	incf	(sprintf@f+1)& (0+255),f,b
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;doprnt.c: 624: if(*f == '*') {
  1841  000806  0100               	movlb	0	; () banked
  1842  000808  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1843  00080C  0100               	movlb	0	; () banked
  1844  00080E  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1845  000812                     	if	0	;tblptru may be non-zero
  1846  000812                     	endif
  1847  000812                     	if	0	;tblptru may be non-zero
  1848  000812                     	endif
  1849  000812  0008               	tblrd		*
  1850  000814  FFFF               	dw	65535	; errata NOP
  1851  000816  50F5               	movf	tablat,w,c
  1852  000818  0A2A               	xorlw	42
  1853  00081A  A4D8               	btfss	status,2,c
  1854  00081C  D014               	goto	l4345
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
  1858  00081E  C112  FFD9         	movff	sprintf@ap,fsr2l
  1859  000822  C113  FFDA         	movff	sprintf@ap+1,fsr2h
  1860  000826  0101               	movlb	1	; () banked
  1861  000828  CFDE F127          	movff	postinc2,sprintf@prec
  1862  00082C  0101               	movlb	1	; () banked
  1863  00082E  CFDD F128          	movff	postdec2,sprintf@prec+1
  1864                           
  1865                           ; BSR set to: 1
  1866  000832  0E02               	movlw	2
  1867  000834  0101               	movlb	1	; () banked
  1868  000836  2712               	addwf	sprintf@ap& (0+255),f,b
  1869  000838  0E00               	movlw	0
  1870  00083A  0101               	movlb	1	; () banked
  1871  00083C  2313               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1872                           
  1873                           ; BSR set to: 1
  1874                           ;doprnt.c: 626: f++;
  1875  00083E  0100               	movlb	0	; () banked
  1876  000840  4BD9               	infsnz	sprintf@f& (0+255),f,b
  1877  000842  2BDA               	incf	(sprintf@f+1)& (0+255),f,b
  1878                           
  1879                           ;doprnt.c: 627: } else
  1880  000844  D048               	goto	l4361
  1881  000846                     l4345:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;doprnt.c: 629: {
  1885                           ;doprnt.c: 630: prec = 0;
  1886  000846  0E00               	movlw	0
  1887  000848  0101               	movlb	1	; () banked
  1888  00084A  6F28               	movwf	(sprintf@prec+1)& (0+255),b
  1889  00084C  0E00               	movlw	0
  1890  00084E  0101               	movlb	1	; () banked
  1891  000850  6F27               	movwf	sprintf@prec& (0+255),b
  1892                           
  1893                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1894  000852  D027               	goto	l4351
  1895  000854                     l4347:
  1896                           
  1897                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1898  000854  C127  F09C         	movff	sprintf@prec,___wmul@multiplier
  1899  000858  C128  F09D         	movff	sprintf@prec+1,___wmul@multiplier+1
  1900  00085C  0E00               	movlw	0
  1901  00085E  0100               	movlb	0	; () banked
  1902  000860  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1903  000862  0E0A               	movlw	10
  1904  000864  0100               	movlb	0	; () banked
  1905  000866  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1906  000868  ECDF  F01C         	call	___wmul	;wreg free
  1907  00086C  0100               	movlb	0	; () banked
  1908  00086E  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1909  000872  0100               	movlb	0	; () banked
  1910  000874  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1911  000878                     	if	0	;tblptru may be non-zero
  1912  000878                     	endif
  1913  000878                     	if	0	;tblptru may be non-zero
  1914  000878                     	endif
  1915  000878  0008               	tblrd		*
  1916  00087A  FFFF               	dw	65535	; errata NOP
  1917  00087C  50F5               	movf	tablat,w,c
  1918  00087E  0100               	movlb	0	; () banked
  1919  000880  279C               	addwf	?___wmul& (0+255),f,b
  1920  000882  0E00               	movlw	0
  1921  000884  0100               	movlb	0	; () banked
  1922  000886  239D               	addwfc	(?___wmul+1)& (0+255),f,b
  1923  000888  0ED0               	movlw	208
  1924  00088A  0100               	movlb	0	; () banked
  1925  00088C  259C               	addwf	?___wmul& (0+255),w,b
  1926  00088E  0101               	movlb	1	; () banked
  1927  000890  6F27               	movwf	sprintf@prec& (0+255),b
  1928  000892  0EFF               	movlw	255
  1929  000894  0100               	movlb	0	; () banked
  1930  000896  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  1931  000898  0101               	movlb	1	; () banked
  1932  00089A  6F28               	movwf	(sprintf@prec+1)& (0+255),b
  1933                           
  1934                           ; BSR set to: 1
  1935  00089C  0100               	movlb	0	; () banked
  1936  00089E  4BD9               	infsnz	sprintf@f& (0+255),f,b
  1937  0008A0  2BDA               	incf	(sprintf@f+1)& (0+255),f,b
  1938  0008A2                     l4351:
  1939  0008A2  0100               	movlb	0	; () banked
  1940  0008A4  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1941  0008A8  0100               	movlb	0	; () banked
  1942  0008AA  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1943  0008AE                     	if	0	;tblptru may be non-zero
  1944  0008AE                     	endif
  1945  0008AE                     	if	0	;tblptru may be non-zero
  1946  0008AE                     	endif
  1947  0008AE  0008               	tblrd		*
  1948  0008B0  FFFF               	dw	65535	; errata NOP
  1949  0008B2  50F5               	movf	tablat,w,c
  1950  0008B4  EC34  F01D         	call	_isdigit
  1951  0008B8  A0D8               	btfss	status,0,c
  1952  0008BA  D00D               	goto	l4361
  1953  0008BC  D7CB               	goto	l4347
  1954  0008BE                     l4353:
  1955                           
  1956                           ;doprnt.c: 635: prec = 0;
  1957  0008BE  0E00               	movlw	0
  1958  0008C0  0101               	movlb	1	; () banked
  1959  0008C2  6F28               	movwf	(sprintf@prec+1)& (0+255),b
  1960  0008C4  0E00               	movlw	0
  1961  0008C6  0101               	movlb	1	; () banked
  1962  0008C8  6F27               	movwf	sprintf@prec& (0+255),b
  1963                           
  1964                           ; BSR set to: 1
  1965                           ;doprnt.c: 637: flag |= 0x1000;
  1966  0008CA  0101               	movlb	1	; () banked
  1967  0008CC  891C               	bsf	(sprintf@flag+1)& (0+255),4,b
  1968  0008CE  D003               	goto	l4361
  1969  0008D0                     l4357:
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;doprnt.c: 692: flag |= 0x200;
  1973  0008D0  0101               	movlb	1	; () banked
  1974  0008D2  831C               	bsf	(sprintf@flag+1)& (0+255),1,b
  1975                           
  1976                           ;doprnt.c: 693: break;
  1977  0008D4  D019               	goto	l4363
  1978  0008D6                     l4361:
  1979  0008D6  0100               	movlb	0	; () banked
  1980  0008D8  C0D9  FFF6         	movff	sprintf@f,tblptrl
  1981  0008DC  0100               	movlb	0	; () banked
  1982  0008DE  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  1983  0008E2  0100               	movlb	0	; () banked
  1984  0008E4  4BD9               	infsnz	sprintf@f& (0+255),f,b
  1985  0008E6  2BDA               	incf	(sprintf@f+1)& (0+255),f,b
  1986  0008E8                     	if	0	;tblptru may be non-zero
  1987  0008E8                     	endif
  1988  0008E8                     	if	0	;tblptru may be non-zero
  1989  0008E8                     	endif
  1990  0008E8  0008               	tblrd		*
  1991  0008EA  FFFF               	dw	65535	; errata NOP
  1992  0008EC  0101               	movlb	1	; () banked
  1993  0008EE  CFF5 F129          	movff	tablat,sprintf@c
  1994  0008F2  0101               	movlb	1	; () banked
  1995  0008F4  5129               	movf	sprintf@c& (0+255),w,b
  1996                           
  1997                           ; Switch size 1, requested type "space"
  1998                           ; Number of cases is 2, Range of values is 0 to 103
  1999                           ; switch strategies available:
  2000                           ; Name         Instructions Cycles
  2001                           ; simple_byte            7     4 (average)
  2002                           ;	Chosen strategy is simple_byte
  2003  0008F6  0A00               	xorlw	0	; case 0
  2004  0008F8  B4D8               	btfsc	status,2,c
  2005  0008FA  EFAD  F00D         	goto	l4775
  2006  0008FE  0A67               	xorlw	103	; case 103
  2007  000900  B4D8               	btfsc	status,2,c
  2008  000902  D7E6               	goto	l4357
  2009  000904  EF9B  F00D         	goto	l4773
  2010  000908                     l4363:
  2011                           
  2012                           ; BSR set to: 1
  2013                           ;doprnt.c: 834: if(flag & (0x700)) {
  2014  000908  0E07               	movlw	7
  2015  00090A  0101               	movlb	1	; () banked
  2016  00090C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  2017  00090E  B4D8               	btfsc	status,2,c
  2018  000910  EFCD  F00C         	goto	l4721
  2019                           
  2020                           ; BSR set to: 1
  2021                           ;doprnt.c: 836: if(flag & 0x1000)
  2022  000914  0101               	movlb	1	; () banked
  2023  000916  A91C               	btfss	(sprintf@flag+1)& (0+255),4,b
  2024  000918  D006               	goto	l4369
  2025                           
  2026                           ; BSR set to: 1
  2027                           ;doprnt.c: 838: prec = 6;
  2028  00091A  0E00               	movlw	0
  2029  00091C  0101               	movlb	1	; () banked
  2030  00091E  6F28               	movwf	(sprintf@prec+1)& (0+255),b
  2031  000920  0E06               	movlw	6
  2032  000922  0101               	movlb	1	; () banked
  2033  000924  6F27               	movwf	sprintf@prec& (0+255),b
  2034  000926                     l4369:
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2038  000926  C112  FFD9         	movff	sprintf@ap,fsr2l
  2039  00092A  C113  FFDA         	movff	sprintf@ap+1,fsr2h
  2040  00092E  0101               	movlb	1	; () banked
  2041  000930  CFDE F124          	movff	postinc2,sprintf@fval
  2042  000934  0101               	movlb	1	; () banked
  2043  000936  CFDE F125          	movff	postinc2,sprintf@fval+1
  2044  00093A  0101               	movlb	1	; () banked
  2045  00093C  CFDD F126          	movff	postdec2,sprintf@fval+2
  2046                           
  2047                           ; BSR set to: 1
  2048  000940  0E03               	movlw	3
  2049  000942  0101               	movlb	1	; () banked
  2050  000944  2712               	addwf	sprintf@ap& (0+255),f,b
  2051  000946  0E00               	movlw	0
  2052  000948  0101               	movlb	1	; () banked
  2053  00094A  2313               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;doprnt.c: 840: if(fval < 0.0) {
  2057  00094C  0101               	movlb	1	; () banked
  2058  00094E  5126               	movf	(sprintf@fval+2)& (0+255),w,b
  2059  000950  0A80               	xorlw	128
  2060  000952  0F80               	addlw	128
  2061  000954  E107               	bnz	u4995
  2062  000956  0E00               	movlw	0
  2063  000958  0101               	movlb	1	; () banked
  2064  00095A  5D25               	subwf	(sprintf@fval+1)& (0+255),w,b
  2065  00095C  E103               	bnz	u4995
  2066  00095E  0E00               	movlw	0
  2067  000960  0101               	movlb	1	; () banked
  2068  000962  5D24               	subwf	sprintf@fval& (0+255),w,b
  2069  000964                     u4995:
  2070  000964  B0D8               	btfsc	status,0,c
  2071  000966  D011               	goto	l4379
  2072                           
  2073                           ; BSR set to: 1
  2074                           ;doprnt.c: 841: fval = -fval;
  2075  000968  C124  F0A6         	movff	sprintf@fval,___ftneg@f1
  2076  00096C  C125  F0A7         	movff	sprintf@fval+1,___ftneg@f1+1
  2077  000970  C126  F0A8         	movff	sprintf@fval+2,___ftneg@f1+2
  2078  000974  EC19  F01D         	call	___ftneg	;wreg free
  2079  000978  C0A6  F124         	movff	?___ftneg,sprintf@fval
  2080  00097C  C0A7  F125         	movff	?___ftneg+1,sprintf@fval+1
  2081  000980  C0A8  F126         	movff	?___ftneg+2,sprintf@fval+2
  2082                           
  2083                           ;doprnt.c: 842: flag |= 0x03;
  2084  000984  0E03               	movlw	3
  2085  000986  0101               	movlb	1	; () banked
  2086  000988  131B               	iorwf	sprintf@flag& (0+255),f,b
  2087  00098A                     l4379:
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;doprnt.c: 843: }
  2091                           ;doprnt.c: 844: exp = 0;
  2092  00098A  0E00               	movlw	0
  2093  00098C  0101               	movlb	1	; () banked
  2094  00098E  6F23               	movwf	(sprintf@exp+1)& (0+255),b
  2095  000990  0E00               	movlw	0
  2096  000992  0101               	movlb	1	; () banked
  2097  000994  6F22               	movwf	sprintf@exp& (0+255),b
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;doprnt.c: 845: if( fval!=0) {
  2101  000996  0E7F               	movlw	127
  2102  000998  0101               	movlb	1	; () banked
  2103  00099A  1526               	andwf	(sprintf@fval+2)& (0+255),w,b
  2104  00099C  0101               	movlb	1	; () banked
  2105  00099E  1125               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2106  0009A0  0101               	movlb	1	; () banked
  2107  0009A2  1124               	iorwf	sprintf@fval& (0+255),w,b
  2108  0009A4  B4D8               	btfsc	status,2,c
  2109  0009A6  D0AA               	goto	l4407
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2113  0009A8  0E82               	movlw	130
  2114  0009AA  0100               	movlb	0	; () banked
  2115  0009AC  6FE2               	movwf	??_sprintf& (0+255),b
  2116  0009AE  0EFF               	movlw	255
  2117  0009B0  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  2118  0009B2  0101               	movlb	1	; () banked
  2119  0009B4  C124  F0E4         	movff	sprintf@fval,??_sprintf+2
  2120  0009B8  0101               	movlb	1	; () banked
  2121  0009BA  C125  F0E5         	movff	sprintf@fval+1,??_sprintf+3
  2122  0009BE  0101               	movlb	1	; () banked
  2123  0009C0  C126  F0E6         	movff	sprintf@fval+2,??_sprintf+4
  2124  0009C4  0101               	movlb	1	; () banked
  2125  0009C6  C127  F0E7         	movff	sprintf@fval+3,??_sprintf+5
  2126  0009CA  0E10               	movlw	16
  2127  0009CC  D006               	goto	u5010
  2128  0009CE                     u5015:
  2129  0009CE  0100               	movlb	0	; () banked
  2130  0009D0  90D8               	bcf	status,0,c
  2131  0009D2  33E7               	rrcf	(??_sprintf+5)& (0+255),f,b
  2132  0009D4  33E6               	rrcf	(??_sprintf+4)& (0+255),f,b
  2133  0009D6  33E5               	rrcf	(??_sprintf+3)& (0+255),f,b
  2134  0009D8  33E4               	rrcf	(??_sprintf+2)& (0+255),f,b
  2135  0009DA                     u5010:
  2136  0009DA  2EE8               	decfsz	wreg,f,c
  2137  0009DC  D7F8               	goto	u5015
  2138  0009DE  0100               	movlb	0	; () banked
  2139  0009E0  51E4               	movf	(??_sprintf+2)& (0+255),w,b
  2140  0009E2  0100               	movlb	0	; () banked
  2141  0009E4  25E2               	addwf	??_sprintf& (0+255),w,b
  2142  0009E6  0101               	movlb	1	; () banked
  2143  0009E8  6F22               	movwf	sprintf@exp& (0+255),b
  2144  0009EA  0E00               	movlw	0
  2145  0009EC  0100               	movlb	0	; () banked
  2146  0009EE  21E3               	addwfc	(??_sprintf+1)& (0+255),w,b
  2147  0009F0  0101               	movlb	1	; () banked
  2148  0009F2  6F23               	movwf	(sprintf@exp+1)& (0+255),b
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;doprnt.c: 847: exp--;
  2152  0009F4  0101               	movlb	1	; () banked
  2153  0009F6  0722               	decf	sprintf@exp& (0+255),f,b
  2154  0009F8  A0D8               	btfss	status,0,c
  2155  0009FA  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  2156                           
  2157                           ; BSR set to: 1
  2158                           ;doprnt.c: 848: exp *= 3;
  2159  0009FC  C122  F09C         	movff	sprintf@exp,___wmul@multiplier
  2160  000A00  C123  F09D         	movff	sprintf@exp+1,___wmul@multiplier+1
  2161  000A04  0E00               	movlw	0
  2162  000A06  0100               	movlb	0	; () banked
  2163  000A08  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2164  000A0A  0E03               	movlw	3
  2165  000A0C  0100               	movlb	0	; () banked
  2166  000A0E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2167  000A10  ECDF  F01C         	call	___wmul	;wreg free
  2168  000A14  0100               	movlb	0	; () banked
  2169  000A16  C09C  F122         	movff	?___wmul,sprintf@exp
  2170  000A1A  0100               	movlb	0	; () banked
  2171  000A1C  C09D  F123         	movff	?___wmul+1,sprintf@exp+1
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;doprnt.c: 849: exp /= 10;
  2175  000A20  C122  F094         	movff	sprintf@exp,___awdiv@dividend
  2176  000A24  C123  F095         	movff	sprintf@exp+1,___awdiv@dividend+1
  2177  000A28  0E00               	movlw	0
  2178  000A2A  0100               	movlb	0	; () banked
  2179  000A2C  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  2180  000A2E  0E0A               	movlw	10
  2181  000A30  0100               	movlb	0	; () banked
  2182  000A32  6F96               	movwf	___awdiv@divisor& (0+255),b
  2183  000A34  ECCA  F018         	call	___awdiv	;wreg free
  2184  000A38  0100               	movlb	0	; () banked
  2185  000A3A  C094  F122         	movff	?___awdiv,sprintf@exp
  2186  000A3E  0100               	movlb	0	; () banked
  2187  000A40  C095  F123         	movff	?___awdiv+1,sprintf@exp+1
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;doprnt.c: 850: if(exp < 0)
  2191  000A44  0101               	movlb	1	; () banked
  2192  000A46  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  2193  000A48  0A80               	xorlw	128
  2194  000A4A  6EF3               	movwf	prodl,c
  2195  000A4C  0E80               	movlw	128
  2196  000A4E  5CF3               	subwf	prodl,w,c
  2197  000A50  0E00               	movlw	0
  2198  000A52  B4D8               	btfsc	status,2,c
  2199  000A54  5D22               	subwf	sprintf@exp& (0+255),w,b
  2200  000A56  B0D8               	btfsc	status,0,c
  2201  000A58  D004               	goto	l4395
  2202                           
  2203                           ; BSR set to: 1
  2204                           ;doprnt.c: 851: exp--;
  2205  000A5A  0101               	movlb	1	; () banked
  2206  000A5C  0722               	decf	sprintf@exp& (0+255),f,b
  2207  000A5E  A0D8               	btfss	status,0,c
  2208  000A60  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  2209  000A62                     l4395:
  2210                           
  2211                           ; BSR set to: 1
  2212                           ;doprnt.c: 855: integ = scale(-exp);
  2213  000A62  0101               	movlb	1	; () banked
  2214  000A64  5122               	movf	sprintf@exp& (0+255),w,b
  2215  000A66  0800               	sublw	0
  2216  000A68  ECB9  F00D         	call	_scale
  2217  000A6C  C0B8  F114         	movff	?_scale,sprintf@integ
  2218  000A70  C0B9  F115         	movff	?_scale+1,sprintf@integ+1
  2219  000A74  C0BA  F116         	movff	?_scale+2,sprintf@integ+2
  2220                           
  2221                           ;doprnt.c: 856: integ *= fval;
  2222  000A78  C114  F0A9         	movff	sprintf@integ,___ftmul@f1
  2223  000A7C  C115  F0AA         	movff	sprintf@integ+1,___ftmul@f1+1
  2224  000A80  C116  F0AB         	movff	sprintf@integ+2,___ftmul@f1+2
  2225  000A84  C124  F0AC         	movff	sprintf@fval,___ftmul@f2
  2226  000A88  C125  F0AD         	movff	sprintf@fval+1,___ftmul@f2+1
  2227  000A8C  C126  F0AE         	movff	sprintf@fval+2,___ftmul@f2+2
  2228  000A90  EC13  F015         	call	___ftmul	;wreg free
  2229  000A94  C0A9  F114         	movff	?___ftmul,sprintf@integ
  2230  000A98  C0AA  F115         	movff	?___ftmul+1,sprintf@integ+1
  2231  000A9C  C0AB  F116         	movff	?___ftmul+2,sprintf@integ+2
  2232                           
  2233                           ;doprnt.c: 857: if(integ < 1.0)
  2234  000AA0  C114  F0CE         	movff	sprintf@integ,___ftge@ff1
  2235  000AA4  C115  F0CF         	movff	sprintf@integ+1,___ftge@ff1+1
  2236  000AA8  C116  F0D0         	movff	sprintf@integ+2,___ftge@ff1+2
  2237  000AAC  0E00               	movlw	0
  2238  000AAE  0100               	movlb	0	; () banked
  2239  000AB0  6FD1               	movwf	___ftge@ff2& (0+255),b
  2240  000AB2  0E80               	movlw	128
  2241  000AB4  0100               	movlb	0	; () banked
  2242  000AB6  6FD2               	movwf	(___ftge@ff2+1)& (0+255),b
  2243  000AB8  0E3F               	movlw	63
  2244  000ABA  0100               	movlb	0	; () banked
  2245  000ABC  6FD3               	movwf	(___ftge@ff2+2)& (0+255),b
  2246  000ABE  EC16  F01A         	call	___ftge	;wreg free
  2247  000AC2  B0D8               	btfsc	status,0,c
  2248  000AC4  D005               	goto	l4403
  2249                           
  2250                           ;doprnt.c: 858: exp--;
  2251  000AC6  0101               	movlb	1	; () banked
  2252  000AC8  0722               	decf	sprintf@exp& (0+255),f,b
  2253  000ACA  A0D8               	btfss	status,0,c
  2254  000ACC  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  2255  000ACE  D016               	goto	l4407
  2256  000AD0                     l4403:
  2257                           
  2258                           ;doprnt.c: 859: else if(integ >= 10.0)
  2259  000AD0  C114  F0CE         	movff	sprintf@integ,___ftge@ff1
  2260  000AD4  C115  F0CF         	movff	sprintf@integ+1,___ftge@ff1+1
  2261  000AD8  C116  F0D0         	movff	sprintf@integ+2,___ftge@ff1+2
  2262  000ADC  0E00               	movlw	0
  2263  000ADE  0100               	movlb	0	; () banked
  2264  000AE0  6FD1               	movwf	___ftge@ff2& (0+255),b
  2265  000AE2  0E20               	movlw	32
  2266  000AE4  0100               	movlb	0	; () banked
  2267  000AE6  6FD2               	movwf	(___ftge@ff2+1)& (0+255),b
  2268  000AE8  0E41               	movlw	65
  2269  000AEA  0100               	movlb	0	; () banked
  2270  000AEC  6FD3               	movwf	(___ftge@ff2+2)& (0+255),b
  2271  000AEE  EC16  F01A         	call	___ftge	;wreg free
  2272  000AF2  A0D8               	btfss	status,0,c
  2273  000AF4  D003               	goto	l4407
  2274                           
  2275                           ;doprnt.c: 860: exp++;
  2276  000AF6  0101               	movlb	1	; () banked
  2277  000AF8  4B22               	infsnz	sprintf@exp& (0+255),f,b
  2278  000AFA  2B23               	incf	(sprintf@exp+1)& (0+255),f,b
  2279  000AFC                     l4407:
  2280                           
  2281                           ;doprnt.c: 861: }
  2282                           ;doprnt.c: 863: if(exp <= 0)
  2283  000AFC  0101               	movlb	1	; () banked
  2284  000AFE  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  2285  000B00  0A80               	xorlw	128
  2286  000B02  6EF3               	movwf	prodl,c
  2287  000B04  0E80               	movlw	128
  2288  000B06  5CF3               	subwf	prodl,w,c
  2289  000B08  0E01               	movlw	1
  2290  000B0A  B4D8               	btfsc	status,2,c
  2291  000B0C  5D22               	subwf	sprintf@exp& (0+255),w,b
  2292  000B0E  B0D8               	btfsc	status,0,c
  2293  000B10  D004               	goto	l247
  2294                           
  2295                           ; BSR set to: 1
  2296                           ;doprnt.c: 864: c = 1;
  2297  000B12  0E01               	movlw	1
  2298  000B14  0101               	movlb	1	; () banked
  2299  000B16  6F29               	movwf	sprintf@c& (0+255),b
  2300  000B18  D002               	goto	l248
  2301  000B1A                     l247:
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;doprnt.c: 865: else
  2305                           ;doprnt.c: 866: c = exp;
  2306  000B1A  C122  F129         	movff	sprintf@exp,sprintf@c
  2307  000B1E                     l248:
  2308                           
  2309                           ; BSR set to: 1
  2310                           ;doprnt.c: 867: if(
  2311                           ;doprnt.c: 875: flag & 0x200 && (exp < -4 || exp >= (int)prec)
  2312                           ;doprnt.c: 877: ) {
  2313  000B1E  0101               	movlb	1	; () banked
  2314  000B20  A31C               	btfss	(sprintf@flag+1)& (0+255),1,b
  2315  000B22  D336               	goto	l249
  2316                           
  2317                           ; BSR set to: 1
  2318  000B24  0101               	movlb	1	; () banked
  2319  000B26  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  2320  000B28  0A80               	xorlw	128
  2321  000B2A  0F81               	addlw	-127
  2322  000B2C  0EFC               	movlw	252
  2323  000B2E  B4D8               	btfsc	status,2,c
  2324  000B30  5D22               	subwf	sprintf@exp& (0+255),w,b
  2325  000B32  A0D8               	btfss	status,0,c
  2326  000B34  D010               	goto	l4415
  2327                           
  2328                           ; BSR set to: 1
  2329  000B36  0101               	movlb	1	; () banked
  2330  000B38  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  2331  000B3A  0A80               	xorlw	128
  2332  000B3C  0100               	movlb	0	; () banked
  2333  000B3E  6FE2               	movwf	??_sprintf& (0+255),b
  2334  000B40  0101               	movlb	1	; () banked
  2335  000B42  5127               	movf	sprintf@prec& (0+255),w,b
  2336  000B44  0101               	movlb	1	; () banked
  2337  000B46  5D22               	subwf	sprintf@exp& (0+255),w,b
  2338  000B48  0101               	movlb	1	; () banked
  2339  000B4A  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  2340  000B4C  0A80               	xorlw	128
  2341  000B4E  0100               	movlb	0	; () banked
  2342  000B50  59E2               	subwfb	??_sprintf& (0+255),w,b
  2343  000B52  A0D8               	btfss	status,0,c
  2344  000B54  D31D               	goto	l249
  2345  000B56                     l4415:
  2346                           
  2347                           ;doprnt.c: 879: if(prec && flag & 0x200)
  2348  000B56  0101               	movlb	1	; () banked
  2349  000B58  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  2350  000B5A  1127               	iorwf	sprintf@prec& (0+255),w,b
  2351  000B5C  B4D8               	btfsc	status,2,c
  2352  000B5E  D007               	goto	l4421
  2353                           
  2354                           ; BSR set to: 1
  2355  000B60  0101               	movlb	1	; () banked
  2356  000B62  A31C               	btfss	(sprintf@flag+1)& (0+255),1,b
  2357  000B64  D004               	goto	l4421
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;doprnt.c: 880: prec--;
  2361  000B66  0101               	movlb	1	; () banked
  2362  000B68  0727               	decf	sprintf@prec& (0+255),f,b
  2363  000B6A  A0D8               	btfss	status,0,c
  2364  000B6C  0728               	decf	(sprintf@prec+1)& (0+255),f,b
  2365  000B6E                     l4421:
  2366                           
  2367                           ; BSR set to: 1
  2368                           ;doprnt.c: 882: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
  2369  000B6E  0E09               	movlw	9
  2370  000B70  0101               	movlb	1	; () banked
  2371  000B72  5D27               	subwf	sprintf@prec& (0+255),w,b
  2372  000B74  0E00               	movlw	0
  2373  000B76  0101               	movlb	1	; () banked
  2374  000B78  5928               	subwfb	(sprintf@prec+1)& (0+255),w,b
  2375  000B7A  A0D8               	btfss	status,0,c
  2376  000B7C  D004               	goto	l253
  2377                           
  2378                           ; BSR set to: 1
  2379                           ;doprnt.c: 883: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
  2380  000B7E  0E08               	movlw	8
  2381  000B80  0101               	movlb	1	; () banked
  2382  000B82  6F29               	movwf	sprintf@c& (0+255),b
  2383  000B84  D002               	goto	l4425
  2384  000B86                     l253:
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;doprnt.c: 884: else
  2388                           ;doprnt.c: 885: c = prec;
  2389  000B86  C127  F129         	movff	sprintf@prec,sprintf@c
  2390  000B8A                     l4425:
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;doprnt.c: 886: if( fval!=0) {
  2394  000B8A  0E7F               	movlw	127
  2395  000B8C  0101               	movlb	1	; () banked
  2396  000B8E  1526               	andwf	(sprintf@fval+2)& (0+255),w,b
  2397  000B90  0101               	movlb	1	; () banked
  2398  000B92  1125               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2399  000B94  0101               	movlb	1	; () banked
  2400  000B96  1124               	iorwf	sprintf@fval& (0+255),w,b
  2401  000B98  B4D8               	btfsc	status,2,c
  2402  000B9A  D10D               	goto	l4445
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;doprnt.c: 887: fval /= scale(exp-c);
  2406  000B9C  C124  F0BF         	movff	sprintf@fval,___ftdiv@f1
  2407  000BA0  C125  F0C0         	movff	sprintf@fval+1,___ftdiv@f1+1
  2408  000BA4  C126  F0C1         	movff	sprintf@fval+2,___ftdiv@f1+2
  2409  000BA8  0101               	movlb	1	; () banked
  2410  000BAA  5129               	movf	sprintf@c& (0+255),w,b
  2411  000BAC  0800               	sublw	0
  2412  000BAE  0101               	movlb	1	; () banked
  2413  000BB0  2522               	addwf	sprintf@exp& (0+255),w,b
  2414  000BB2  ECB9  F00D         	call	_scale
  2415  000BB6  C0B8  F0C2         	movff	?_scale,___ftdiv@f2
  2416  000BBA  C0B9  F0C3         	movff	?_scale+1,___ftdiv@f2+1
  2417  000BBE  C0BA  F0C4         	movff	?_scale+2,___ftdiv@f2+2
  2418  000BC2  EC20  F017         	call	___ftdiv	;wreg free
  2419  000BC6  C0BF  F124         	movff	?___ftdiv,sprintf@fval
  2420  000BCA  C0C0  F125         	movff	?___ftdiv+1,sprintf@fval+1
  2421  000BCE  C0C1  F126         	movff	?___ftdiv+2,sprintf@fval+2
  2422                           
  2423                           ;doprnt.c: 902: if(fval - (double)(unsigned long)fval >= 0.5)
  2424  000BD2  C124  F0C5         	movff	sprintf@fval,___ftadd@f2
  2425  000BD6  C125  F0C6         	movff	sprintf@fval+1,___ftadd@f2+1
  2426  000BDA  C126  F0C7         	movff	sprintf@fval+2,___ftadd@f2+2
  2427  000BDE  C124  F08E         	movff	sprintf@fval,___fttol@f1
  2428  000BE2  C125  F08F         	movff	sprintf@fval+1,___fttol@f1+1
  2429  000BE6  C126  F090         	movff	sprintf@fval+2,___fttol@f1+2
  2430  000BEA  EC79  F016         	call	___fttol	;wreg free
  2431  000BEE  C08E  F09D         	movff	?___fttol,___lltoft@c
  2432  000BF2  C08F  F09E         	movff	?___fttol+1,___lltoft@c+1
  2433  000BF6  C090  F09F         	movff	?___fttol+2,___lltoft@c+2
  2434  000BFA  C091  F0A0         	movff	?___fttol+3,___lltoft@c+3
  2435  000BFE  ECE4  F01B         	call	___lltoft	;wreg free
  2436  000C02  C09D  F0A6         	movff	?___lltoft,___ftneg@f1
  2437  000C06  C09E  F0A7         	movff	?___lltoft+1,___ftneg@f1+1
  2438  000C0A  C09F  F0A8         	movff	?___lltoft+2,___ftneg@f1+2
  2439  000C0E  EC19  F01D         	call	___ftneg	;wreg free
  2440  000C12  C0A6  F0C2         	movff	?___ftneg,___ftadd@f1
  2441  000C16  C0A7  F0C3         	movff	?___ftneg+1,___ftadd@f1+1
  2442  000C1A  C0A8  F0C4         	movff	?___ftneg+2,___ftadd@f1+2
  2443  000C1E  EC13  F012         	call	___ftadd	;wreg free
  2444  000C22  C0C2  F0CE         	movff	?___ftadd,___ftge@ff1
  2445  000C26  C0C3  F0CF         	movff	?___ftadd+1,___ftge@ff1+1
  2446  000C2A  C0C4  F0D0         	movff	?___ftadd+2,___ftge@ff1+2
  2447  000C2E  0E00               	movlw	0
  2448  000C30  0100               	movlb	0	; () banked
  2449  000C32  6FD1               	movwf	___ftge@ff2& (0+255),b
  2450  000C34  0E00               	movlw	0
  2451  000C36  0100               	movlb	0	; () banked
  2452  000C38  6FD2               	movwf	(___ftge@ff2+1)& (0+255),b
  2453  000C3A  0E3F               	movlw	63
  2454  000C3C  0100               	movlb	0	; () banked
  2455  000C3E  6FD3               	movwf	(___ftge@ff2+2)& (0+255),b
  2456  000C40  EC16  F01A         	call	___ftge	;wreg free
  2457  000C44  A0D8               	btfss	status,0,c
  2458  000C46  D017               	goto	l4433
  2459                           
  2460                           ;doprnt.c: 903: fval += 0.5;
  2461  000C48  C124  F0C2         	movff	sprintf@fval,___ftadd@f1
  2462  000C4C  C125  F0C3         	movff	sprintf@fval+1,___ftadd@f1+1
  2463  000C50  C126  F0C4         	movff	sprintf@fval+2,___ftadd@f1+2
  2464  000C54  0E00               	movlw	0
  2465  000C56  0100               	movlb	0	; () banked
  2466  000C58  6FC5               	movwf	___ftadd@f2& (0+255),b
  2467  000C5A  0E00               	movlw	0
  2468  000C5C  0100               	movlb	0	; () banked
  2469  000C5E  6FC6               	movwf	(___ftadd@f2+1)& (0+255),b
  2470  000C60  0E3F               	movlw	63
  2471  000C62  0100               	movlb	0	; () banked
  2472  000C64  6FC7               	movwf	(___ftadd@f2+2)& (0+255),b
  2473  000C66  EC13  F012         	call	___ftadd	;wreg free
  2474  000C6A  C0C2  F124         	movff	?___ftadd,sprintf@fval
  2475  000C6E  C0C3  F125         	movff	?___ftadd+1,sprintf@fval+1
  2476  000C72  C0C4  F126         	movff	?___ftadd+2,sprintf@fval+2
  2477  000C76                     l4433:
  2478                           
  2479                           ;doprnt.c: 904: if((unsigned long)fval >= dpowers[c+1]) {
  2480  000C76  0101               	movlb	1	; () banked
  2481  000C78  C129  F0E2         	movff	sprintf@c,??_sprintf
  2482  000C7C  0100               	movlb	0	; () banked
  2483  000C7E  6BE3               	clrf	(??_sprintf+1)& (0+255),b
  2484  000C80  BFE2               	btfsc	??_sprintf& (0+255),7,b
  2485  000C82  07E3               	decf	(??_sprintf+1)& (0+255),f,b
  2486  000C84  0100               	movlb	0	; () banked
  2487  000C86  90D8               	bcf	status,0,c
  2488  000C88  37E2               	rlcf	??_sprintf& (0+255),f,b
  2489  000C8A  37E3               	rlcf	(??_sprintf+1)& (0+255),f,b
  2490  000C8C  0100               	movlb	0	; () banked
  2491  000C8E  90D8               	bcf	status,0,c
  2492  000C90  37E2               	rlcf	??_sprintf& (0+255),f,b
  2493  000C92  37E3               	rlcf	(??_sprintf+1)& (0+255),f,b
  2494  000C94  0E04               	movlw	4
  2495  000C96  0100               	movlb	0	; () banked
  2496  000C98  27E2               	addwf	??_sprintf& (0+255),f,b
  2497  000C9A  0E00               	movlw	0
  2498  000C9C  23E3               	addwfc	(??_sprintf+1)& (0+255),f,b
  2499  000C9E  0E01               	movlw	low _dpowers
  2500  000CA0  0100               	movlb	0	; () banked
  2501  000CA2  25E2               	addwf	??_sprintf& (0+255),w,b
  2502  000CA4  6EF6               	movwf	tblptrl,c
  2503  000CA6  0E06               	movlw	high _dpowers
  2504  000CA8  21E3               	addwfc	(??_sprintf+1)& (0+255),w,b
  2505  000CAA  6EF7               	movwf	tblptrh,c
  2506  000CAC                     	if	0	;There are less than 3 active tblptr bytes
  2507  000CAC                     	endif
  2508  000CAC  C124  F08E         	movff	sprintf@fval,___fttol@f1
  2509  000CB0  C125  F08F         	movff	sprintf@fval+1,___fttol@f1+1
  2510  000CB4  C126  F090         	movff	sprintf@fval+2,___fttol@f1+2
  2511  000CB8  EC79  F016         	call	___fttol	;wreg free
  2512  000CBC  C08E  F0E4         	movff	?___fttol,??_sprintf+2
  2513  000CC0  C08F  F0E5         	movff	?___fttol+1,??_sprintf+3
  2514  000CC4  C090  F0E6         	movff	?___fttol+2,??_sprintf+4
  2515  000CC8  C091  F0E7         	movff	?___fttol+3,??_sprintf+5
  2516  000CCC  0009               	tblrd		*+
  2517  000CCE  FFFF               	dw	65535	; errata NOP
  2518  000CD0  50F5               	movf	tablat,w,c
  2519  000CD2  0100               	movlb	0	; () banked
  2520  000CD4  5DE4               	subwf	(??_sprintf+2)& (0+255),w,b
  2521  000CD6  0009               	tblrd		*+
  2522  000CD8  FFFF               	dw	65535	; errata NOP
  2523  000CDA  50F5               	movf	tablat,w,c
  2524  000CDC  59E5               	subwfb	(??_sprintf+3)& (0+255),w,b
  2525  000CDE  0009               	tblrd		*+
  2526  000CE0  FFFF               	dw	65535	; errata NOP
  2527  000CE2  50F5               	movf	tablat,w,c
  2528  000CE4  59E6               	subwfb	(??_sprintf+4)& (0+255),w,b
  2529  000CE6  0009               	tblrd		*+
  2530  000CE8  FFFF               	dw	65535	; errata NOP
  2531  000CEA  50F5               	movf	tablat,w,c
  2532  000CEC  59E7               	subwfb	(??_sprintf+5)& (0+255),w,b
  2533  000CEE  A0D8               	btfss	status,0,c
  2534  000CF0  D01B               	goto	l4439
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;doprnt.c: 905: fval *= 1e-1;
  2538  000CF2  C124  F0A9         	movff	sprintf@fval,___ftmul@f1
  2539  000CF6  C125  F0AA         	movff	sprintf@fval+1,___ftmul@f1+1
  2540  000CFA  C126  F0AB         	movff	sprintf@fval+2,___ftmul@f1+2
  2541  000CFE  0ECD               	movlw	205
  2542  000D00  0100               	movlb	0	; () banked
  2543  000D02  6FAC               	movwf	___ftmul@f2& (0+255),b
  2544  000D04  0ECC               	movlw	204
  2545  000D06  0100               	movlb	0	; () banked
  2546  000D08  6FAD               	movwf	(___ftmul@f2+1)& (0+255),b
  2547  000D0A  0E3D               	movlw	61
  2548  000D0C  0100               	movlb	0	; () banked
  2549  000D0E  6FAE               	movwf	(___ftmul@f2+2)& (0+255),b
  2550  000D10  EC13  F015         	call	___ftmul	;wreg free
  2551  000D14  C0A9  F124         	movff	?___ftmul,sprintf@fval
  2552  000D18  C0AA  F125         	movff	?___ftmul+1,sprintf@fval+1
  2553  000D1C  C0AB  F126         	movff	?___ftmul+2,sprintf@fval+2
  2554                           
  2555                           ;doprnt.c: 906: exp++;
  2556  000D20  0101               	movlb	1	; () banked
  2557  000D22  4B22               	infsnz	sprintf@exp& (0+255),f,b
  2558  000D24  2B23               	incf	(sprintf@exp+1)& (0+255),f,b
  2559                           
  2560                           ;doprnt.c: 907: } else if((unsigned long)fval < dpowers[c]) {
  2561  000D26  D047               	goto	l4445
  2562  000D28                     l4439:
  2563  000D28  0101               	movlb	1	; () banked
  2564  000D2A  5129               	movf	sprintf@c& (0+255),w,b
  2565  000D2C  0D04               	mullw	4
  2566  000D2E  0E01               	movlw	low _dpowers
  2567  000D30  24F3               	addwf	prodl,w,c
  2568  000D32  6EF6               	movwf	tblptrl,c
  2569  000D34  0E06               	movlw	high _dpowers
  2570  000D36  20F4               	addwfc	prodh,w,c
  2571  000D38  6EF7               	movwf	tblptrh,c
  2572  000D3A                     	if	0	;There are less than 3 active tblptr bytes
  2573  000D3A                     	endif
  2574  000D3A  C124  F08E         	movff	sprintf@fval,___fttol@f1
  2575  000D3E  C125  F08F         	movff	sprintf@fval+1,___fttol@f1+1
  2576  000D42  C126  F090         	movff	sprintf@fval+2,___fttol@f1+2
  2577  000D46  EC79  F016         	call	___fttol	;wreg free
  2578  000D4A  C08E  F0E2         	movff	?___fttol,??_sprintf
  2579  000D4E  C08F  F0E3         	movff	?___fttol+1,??_sprintf+1
  2580  000D52  C090  F0E4         	movff	?___fttol+2,??_sprintf+2
  2581  000D56  C091  F0E5         	movff	?___fttol+3,??_sprintf+3
  2582  000D5A  0009               	tblrd		*+
  2583  000D5C  FFFF               	dw	65535	; errata NOP
  2584  000D5E  50F5               	movf	tablat,w,c
  2585  000D60  0100               	movlb	0	; () banked
  2586  000D62  5DE2               	subwf	??_sprintf& (0+255),w,b
  2587  000D64  0009               	tblrd		*+
  2588  000D66  FFFF               	dw	65535	; errata NOP
  2589  000D68  50F5               	movf	tablat,w,c
  2590  000D6A  59E3               	subwfb	(??_sprintf+1)& (0+255),w,b
  2591  000D6C  0009               	tblrd		*+
  2592  000D6E  FFFF               	dw	65535	; errata NOP
  2593  000D70  50F5               	movf	tablat,w,c
  2594  000D72  59E4               	subwfb	(??_sprintf+2)& (0+255),w,b
  2595  000D74  0009               	tblrd		*+
  2596  000D76  FFFF               	dw	65535	; errata NOP
  2597  000D78  50F5               	movf	tablat,w,c
  2598  000D7A  59E5               	subwfb	(??_sprintf+3)& (0+255),w,b
  2599  000D7C  B0D8               	btfsc	status,0,c
  2600  000D7E  D01B               	goto	l4445
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;doprnt.c: 908: fval *= 10.0;
  2604  000D80  C124  F0A9         	movff	sprintf@fval,___ftmul@f1
  2605  000D84  C125  F0AA         	movff	sprintf@fval+1,___ftmul@f1+1
  2606  000D88  C126  F0AB         	movff	sprintf@fval+2,___ftmul@f1+2
  2607  000D8C  0E00               	movlw	0
  2608  000D8E  0100               	movlb	0	; () banked
  2609  000D90  6FAC               	movwf	___ftmul@f2& (0+255),b
  2610  000D92  0E20               	movlw	32
  2611  000D94  0100               	movlb	0	; () banked
  2612  000D96  6FAD               	movwf	(___ftmul@f2+1)& (0+255),b
  2613  000D98  0E41               	movlw	65
  2614  000D9A  0100               	movlb	0	; () banked
  2615  000D9C  6FAE               	movwf	(___ftmul@f2+2)& (0+255),b
  2616  000D9E  EC13  F015         	call	___ftmul	;wreg free
  2617  000DA2  C0A9  F124         	movff	?___ftmul,sprintf@fval
  2618  000DA6  C0AA  F125         	movff	?___ftmul+1,sprintf@fval+1
  2619  000DAA  C0AB  F126         	movff	?___ftmul+2,sprintf@fval+2
  2620                           
  2621                           ;doprnt.c: 909: exp--;
  2622  000DAE  0101               	movlb	1	; () banked
  2623  000DB0  0722               	decf	sprintf@exp& (0+255),f,b
  2624  000DB2  A0D8               	btfss	status,0,c
  2625  000DB4  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  2626  000DB6                     l4445:
  2627                           
  2628                           ;doprnt.c: 910: }
  2629                           ;doprnt.c: 912: }
  2630                           ;doprnt.c: 938: width -= prec + 5;
  2631  000DB6  0E05               	movlw	5
  2632  000DB8  0101               	movlb	1	; () banked
  2633  000DBA  2527               	addwf	sprintf@prec& (0+255),w,b
  2634  000DBC  0100               	movlb	0	; () banked
  2635  000DBE  6FE2               	movwf	??_sprintf& (0+255),b
  2636  000DC0  0E00               	movlw	0
  2637  000DC2  0101               	movlb	1	; () banked
  2638  000DC4  2128               	addwfc	(sprintf@prec+1)& (0+255),w,b
  2639  000DC6  0100               	movlb	0	; () banked
  2640  000DC8  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  2641  000DCA  0100               	movlb	0	; () banked
  2642  000DCC  51E2               	movf	??_sprintf& (0+255),w,b
  2643  000DCE  0101               	movlb	1	; () banked
  2644  000DD0  5F19               	subwf	sprintf@width& (0+255),f,b
  2645  000DD2  0100               	movlb	0	; () banked
  2646  000DD4  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  2647  000DD6  0101               	movlb	1	; () banked
  2648  000DD8  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
  2649                           
  2650                           ; BSR set to: 1
  2651                           ;doprnt.c: 943: if(flag & 0x03)
  2652  000DDA  0E03               	movlw	3
  2653  000DDC  0101               	movlb	1	; () banked
  2654  000DDE  151B               	andwf	sprintf@flag& (0+255),w,b
  2655  000DE0  0100               	movlb	0	; () banked
  2656  000DE2  6FE2               	movwf	??_sprintf& (0+255),b
  2657  000DE4  0E00               	movlw	0
  2658  000DE6  0101               	movlb	1	; () banked
  2659  000DE8  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  2660  000DEA  0100               	movlb	0	; () banked
  2661  000DEC  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  2662  000DEE  0100               	movlb	0	; () banked
  2663  000DF0  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  2664  000DF2  11E2               	iorwf	??_sprintf& (0+255),w,b
  2665  000DF4  B4D8               	btfsc	status,2,c
  2666  000DF6  D011               	goto	l4459
  2667  000DF8  D00C               	goto	L2
  2668  000DFA                     l4451:
  2669                           
  2670                           ; BSR set to: 1
  2671                           ;doprnt.c: 974: ((*sp++ = (' ')),(++ccnt));
  2672  000DFA  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  2673  000DFE  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  2674  000E02  0E20               	movlw	32
  2675  000E04  6EDF               	movwf	indf2,c
  2676                           
  2677                           ; BSR set to: 1
  2678  000E06  0100               	movlb	0	; () banked
  2679  000E08  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  2680  000E0A  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  2681                           
  2682                           ; BSR set to: 0
  2683  000E0C  0101               	movlb	1	; () banked
  2684  000E0E  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  2685  000E10  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2686  000E12                     L2:
  2687                           
  2688                           ; BSR set to: 1
  2689                           ;doprnt.c: 975: width--;
  2690  000E12  0101               	movlb	1	; () banked
  2691  000E14  0719               	decf	sprintf@width& (0+255),f,b
  2692  000E16  A0D8               	btfss	status,0,c
  2693  000E18  071A               	decf	(sprintf@width+1)& (0+255),f,b
  2694  000E1A                     l4459:
  2695  000E1A  0101               	movlb	1	; () banked
  2696  000E1C  511A               	movf	(sprintf@width+1)& (0+255),w,b
  2697  000E1E  0A80               	xorlw	128
  2698  000E20  6EF3               	movwf	prodl,c
  2699  000E22  0E80               	movlw	128
  2700  000E24  5CF3               	subwf	prodl,w,c
  2701  000E26  0E01               	movlw	1
  2702  000E28  B4D8               	btfsc	status,2,c
  2703  000E2A  5D19               	subwf	sprintf@width& (0+255),w,b
  2704  000E2C  B0D8               	btfsc	status,0,c
  2705  000E2E  D7E5               	goto	l4451
  2706                           
  2707                           ; BSR set to: 1
  2708                           ;doprnt.c: 976: }
  2709                           ;doprnt.c: 982: if(flag & 0x03)
  2710                           
  2711                           ; BSR set to: 1
  2712  000E30  0E03               	movlw	3
  2713  000E32  0101               	movlb	1	; () banked
  2714  000E34  151B               	andwf	sprintf@flag& (0+255),w,b
  2715  000E36  0100               	movlb	0	; () banked
  2716  000E38  6FE2               	movwf	??_sprintf& (0+255),b
  2717  000E3A  0E00               	movlw	0
  2718  000E3C  0101               	movlb	1	; () banked
  2719  000E3E  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  2720  000E40  0100               	movlb	0	; () banked
  2721  000E42  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  2722  000E44  0100               	movlb	0	; () banked
  2723  000E46  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  2724  000E48  11E2               	iorwf	??_sprintf& (0+255),w,b
  2725  000E4A  B4D8               	btfsc	status,2,c
  2726  000E4C  D00C               	goto	l4469
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;doprnt.c: 983: ((*sp++ = ('-')),(++ccnt));
  2730  000E4E  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  2731  000E52  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  2732  000E56  0E2D               	movlw	45
  2733  000E58  6EDF               	movwf	indf2,c
  2734                           
  2735                           ; BSR set to: 0
  2736  000E5A  0100               	movlb	0	; () banked
  2737  000E5C  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  2738  000E5E  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  2739                           
  2740                           ; BSR set to: 0
  2741  000E60  0101               	movlb	1	; () banked
  2742  000E62  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  2743  000E64  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2744  000E66                     l4469:
  2745                           
  2746                           ;doprnt.c: 989: }
  2747                           ;doprnt.c: 994: _val._val = (unsigned long)fval;
  2748  000E66  C124  F08E         	movff	sprintf@fval,___fttol@f1
  2749  000E6A  C125  F08F         	movff	sprintf@fval+1,___fttol@f1+1
  2750  000E6E  C126  F090         	movff	sprintf@fval+2,___fttol@f1+2
  2751  000E72  EC79  F016         	call	___fttol	;wreg free
  2752  000E76  C08E  F11D         	movff	?___fttol,sprintf@_val
  2753  000E7A  C08F  F11E         	movff	?___fttol+1,sprintf@_val+1
  2754  000E7E  C090  F11F         	movff	?___fttol+2,sprintf@_val+2
  2755  000E82  C091  F120         	movff	?___fttol+3,sprintf@_val+3
  2756                           
  2757                           ;doprnt.c: 995: ((*sp++ = (_val._val/dpowers[c] + '0')),(++ccnt));
  2758  000E86  C11D  F08E         	movff	sprintf@_val,___lldiv@dividend
  2759  000E8A  C11E  F08F         	movff	sprintf@_val+1,___lldiv@dividend+1
  2760  000E8E  C11F  F090         	movff	sprintf@_val+2,___lldiv@dividend+2
  2761  000E92  C120  F091         	movff	sprintf@_val+3,___lldiv@dividend+3
  2762  000E96  0101               	movlb	1	; () banked
  2763  000E98  5129               	movf	sprintf@c& (0+255),w,b
  2764  000E9A  0D04               	mullw	4
  2765  000E9C  0E01               	movlw	low _dpowers
  2766  000E9E  24F3               	addwf	prodl,w,c
  2767  000EA0  6EF6               	movwf	tblptrl,c
  2768  000EA2  0E06               	movlw	high _dpowers
  2769  000EA4  20F4               	addwfc	prodh,w,c
  2770  000EA6  6EF7               	movwf	tblptrh,c
  2771  000EA8                     	if	0	;There are less than 3 active tblptr bytes
  2772  000EA8                     	endif
  2773  000EA8  0009               	tblrd		*+
  2774  000EAA  FFFF               	dw	65535	; errata NOP
  2775  000EAC  0100               	movlb	0	; () banked
  2776  000EAE  CFF5 F092          	movff	tablat,___lldiv@divisor
  2777  000EB2  0009               	tblrd		*+
  2778  000EB4  FFFF               	dw	65535	; errata NOP
  2779  000EB6  0100               	movlb	0	; () banked
  2780  000EB8  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  2781  000EBC  0009               	tblrd		*+
  2782  000EBE  FFFF               	dw	65535	; errata NOP
  2783  000EC0  0100               	movlb	0	; () banked
  2784  000EC2  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  2785  000EC6  000A               	tblrd		*-
  2786  000EC8  FFFF               	dw	65535	; errata NOP
  2787  000ECA  0100               	movlb	0	; () banked
  2788  000ECC  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  2789  000ED0  ECAA  F019         	call	___lldiv	;wreg free
  2790  000ED4  C08E  F0E2         	movff	?___lldiv,??_sprintf
  2791  000ED8  C08F  F0E3         	movff	?___lldiv+1,??_sprintf+1
  2792  000EDC  C090  F0E4         	movff	?___lldiv+2,??_sprintf+2
  2793  000EE0  C091  F0E5         	movff	?___lldiv+3,??_sprintf+3
  2794  000EE4  0100               	movlb	0	; () banked
  2795  000EE6  51E2               	movf	??_sprintf& (0+255),w,b
  2796  000EE8  0F30               	addlw	48
  2797  000EEA  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  2798  000EEE  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  2799  000EF2  6EDF               	movwf	indf2,c
  2800                           
  2801                           ; BSR set to: 0
  2802  000EF4  0100               	movlb	0	; () banked
  2803  000EF6  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  2804  000EF8  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  2805                           
  2806                           ; BSR set to: 0
  2807  000EFA  0101               	movlb	1	; () banked
  2808  000EFC  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  2809  000EFE  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2810                           
  2811                           ; BSR set to: 1
  2812                           ;doprnt.c: 996: _val._val %= dpowers[c];
  2813  000F00  C11D  F08E         	movff	sprintf@_val,___llmod@dividend
  2814  000F04  C11E  F08F         	movff	sprintf@_val+1,___llmod@dividend+1
  2815  000F08  C11F  F090         	movff	sprintf@_val+2,___llmod@dividend+2
  2816  000F0C  C120  F091         	movff	sprintf@_val+3,___llmod@dividend+3
  2817  000F10  0101               	movlb	1	; () banked
  2818  000F12  5129               	movf	sprintf@c& (0+255),w,b
  2819  000F14  0D04               	mullw	4
  2820  000F16  0E01               	movlw	low _dpowers
  2821  000F18  24F3               	addwf	prodl,w,c
  2822  000F1A  6EF6               	movwf	tblptrl,c
  2823  000F1C  0E06               	movlw	high _dpowers
  2824  000F1E  20F4               	addwfc	prodh,w,c
  2825  000F20  6EF7               	movwf	tblptrh,c
  2826  000F22                     	if	0	;There are less than 3 active tblptr bytes
  2827  000F22                     	endif
  2828  000F22  0009               	tblrd		*+
  2829  000F24  FFFF               	dw	65535	; errata NOP
  2830  000F26  0100               	movlb	0	; () banked
  2831  000F28  CFF5 F092          	movff	tablat,___llmod@divisor
  2832  000F2C  0009               	tblrd		*+
  2833  000F2E  FFFF               	dw	65535	; errata NOP
  2834  000F30  0100               	movlb	0	; () banked
  2835  000F32  CFF5 F093          	movff	tablat,___llmod@divisor+1
  2836  000F36  0009               	tblrd		*+
  2837  000F38  FFFF               	dw	65535	; errata NOP
  2838  000F3A  0100               	movlb	0	; () banked
  2839  000F3C  CFF5 F094          	movff	tablat,___llmod@divisor+2
  2840  000F40  000A               	tblrd		*-
  2841  000F42  FFFF               	dw	65535	; errata NOP
  2842  000F44  0100               	movlb	0	; () banked
  2843  000F46  CFF5 F095          	movff	tablat,___llmod@divisor+3
  2844  000F4A  EC3C  F01B         	call	___llmod	;wreg free
  2845  000F4E  C08E  F11D         	movff	?___llmod,sprintf@_val
  2846  000F52  C08F  F11E         	movff	?___llmod+1,sprintf@_val+1
  2847  000F56  C090  F11F         	movff	?___llmod+2,sprintf@_val+2
  2848  000F5A  C091  F120         	movff	?___llmod+3,sprintf@_val+3
  2849                           
  2850                           ;doprnt.c: 1001: if(prec)
  2851  000F5E  0101               	movlb	1	; () banked
  2852  000F60  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  2853  000F62  1127               	iorwf	sprintf@prec& (0+255),w,b
  2854  000F64  B4D8               	btfsc	status,2,c
  2855  000F66  D0B6               	goto	l4513
  2856                           
  2857                           ; BSR set to: 1
  2858                           ;doprnt.c: 1003: {
  2859                           ;doprnt.c: 1004: ((*sp++ = ('.')),(++ccnt));
  2860  000F68  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  2861  000F6C  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  2862  000F70  0E2E               	movlw	46
  2863  000F72  6EDF               	movwf	indf2,c
  2864                           
  2865                           ; BSR set to: 1
  2866  000F74  0100               	movlb	0	; () banked
  2867  000F76  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  2868  000F78  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  2869                           
  2870                           ; BSR set to: 0
  2871  000F7A  0101               	movlb	1	; () banked
  2872  000F7C  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  2873  000F7E  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;doprnt.c: 1005: prec -= c;
  2877  000F80  0101               	movlb	1	; () banked
  2878  000F82  5129               	movf	sprintf@c& (0+255),w,b
  2879  000F84  0101               	movlb	1	; () banked
  2880  000F86  5F27               	subwf	sprintf@prec& (0+255),f,b
  2881  000F88  0E00               	movlw	0
  2882  000F8A  0101               	movlb	1	; () banked
  2883  000F8C  BF29               	btfsc	sprintf@c& (0+255),7,b
  2884  000F8E  0EFF               	movlw	255
  2885  000F90  0101               	movlb	1	; () banked
  2886  000F92  5B28               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2887                           
  2888                           ;doprnt.c: 1006: while(c--) {
  2889  000F94  D083               	goto	l4501
  2890  000F96                     l267:
  2891                           
  2892                           ; BSR set to: 1
  2893                           ;doprnt.c: 1011: if(flag & 0x200 && _val._val == 0) {
  2894  000F96  0101               	movlb	1	; () banked
  2895  000F98  A31C               	btfss	(sprintf@flag+1)& (0+255),1,b
  2896  000F9A  D014               	goto	l4493
  2897                           
  2898                           ; BSR set to: 1
  2899  000F9C  0101               	movlb	1	; () banked
  2900  000F9E  5120               	movf	(sprintf@_val+3)& (0+255),w,b
  2901  000FA0  111D               	iorwf	sprintf@_val& (0+255),w,b
  2902  000FA2  111E               	iorwf	(sprintf@_val+1)& (0+255),w,b
  2903  000FA4  111F               	iorwf	(sprintf@_val+2)& (0+255),w,b
  2904  000FA6  A4D8               	btfss	status,2,c
  2905  000FA8  D00D               	goto	l4493
  2906                           
  2907                           ; BSR set to: 1
  2908                           ;doprnt.c: 1012: prec = c = 0;
  2909  000FAA  0E00               	movlw	0
  2910  000FAC  0101               	movlb	1	; () banked
  2911  000FAE  6F29               	movwf	sprintf@c& (0+255),b
  2912  000FB0  0101               	movlb	1	; () banked
  2913  000FB2  5129               	movf	sprintf@c& (0+255),w,b
  2914  000FB4  0101               	movlb	1	; () banked
  2915  000FB6  6F27               	movwf	sprintf@prec& (0+255),b
  2916  000FB8  0101               	movlb	1	; () banked
  2917  000FBA  6B28               	clrf	(sprintf@prec+1)& (0+255),b
  2918  000FBC  0101               	movlb	1	; () banked
  2919  000FBE  BF27               	btfsc	sprintf@prec& (0+255),7,b
  2920  000FC0  0728               	decf	(sprintf@prec+1)& (0+255),f,b
  2921                           
  2922                           ;doprnt.c: 1013: break;
  2923  000FC2  D083               	goto	l4511
  2924  000FC4                     l4493:
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;doprnt.c: 1014: }
  2928                           ;doprnt.c: 1016: ((*sp++ = ('0' + (_val._val/dpowers[c]))),(++ccnt));
  2929  000FC4  C11D  F08E         	movff	sprintf@_val,___lldiv@dividend
  2930  000FC8  C11E  F08F         	movff	sprintf@_val+1,___lldiv@dividend+1
  2931  000FCC  C11F  F090         	movff	sprintf@_val+2,___lldiv@dividend+2
  2932  000FD0  C120  F091         	movff	sprintf@_val+3,___lldiv@dividend+3
  2933  000FD4  0101               	movlb	1	; () banked
  2934  000FD6  5129               	movf	sprintf@c& (0+255),w,b
  2935  000FD8  0D04               	mullw	4
  2936  000FDA  0E01               	movlw	low _dpowers
  2937  000FDC  24F3               	addwf	prodl,w,c
  2938  000FDE  6EF6               	movwf	tblptrl,c
  2939  000FE0  0E06               	movlw	high _dpowers
  2940  000FE2  20F4               	addwfc	prodh,w,c
  2941  000FE4  6EF7               	movwf	tblptrh,c
  2942  000FE6                     	if	0	;There are less than 3 active tblptr bytes
  2943  000FE6                     	endif
  2944  000FE6  0009               	tblrd		*+
  2945  000FE8  FFFF               	dw	65535	; errata NOP
  2946  000FEA  0100               	movlb	0	; () banked
  2947  000FEC  CFF5 F092          	movff	tablat,___lldiv@divisor
  2948  000FF0  0009               	tblrd		*+
  2949  000FF2  FFFF               	dw	65535	; errata NOP
  2950  000FF4  0100               	movlb	0	; () banked
  2951  000FF6  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  2952  000FFA  0009               	tblrd		*+
  2953  000FFC  FFFF               	dw	65535	; errata NOP
  2954  000FFE  0100               	movlb	0	; () banked
  2955  001000  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  2956  001004  000A               	tblrd		*-
  2957  001006  FFFF               	dw	65535	; errata NOP
  2958  001008  0100               	movlb	0	; () banked
  2959  00100A  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  2960  00100E  ECAA  F019         	call	___lldiv	;wreg free
  2961  001012  C08E  F0E2         	movff	?___lldiv,??_sprintf
  2962  001016  C08F  F0E3         	movff	?___lldiv+1,??_sprintf+1
  2963  00101A  C090  F0E4         	movff	?___lldiv+2,??_sprintf+2
  2964  00101E  C091  F0E5         	movff	?___lldiv+3,??_sprintf+3
  2965  001022  0100               	movlb	0	; () banked
  2966  001024  51E2               	movf	??_sprintf& (0+255),w,b
  2967  001026  0F30               	addlw	48
  2968  001028  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  2969  00102C  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  2970  001030  6EDF               	movwf	indf2,c
  2971                           
  2972                           ; BSR set to: 0
  2973  001032  0100               	movlb	0	; () banked
  2974  001034  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  2975  001036  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  2976                           
  2977                           ; BSR set to: 0
  2978  001038  0101               	movlb	1	; () banked
  2979  00103A  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  2980  00103C  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  2981                           
  2982                           ; BSR set to: 1
  2983                           ;doprnt.c: 1017: _val._val %= dpowers[c];
  2984  00103E  C11D  F08E         	movff	sprintf@_val,___llmod@dividend
  2985  001042  C11E  F08F         	movff	sprintf@_val+1,___llmod@dividend+1
  2986  001046  C11F  F090         	movff	sprintf@_val+2,___llmod@dividend+2
  2987  00104A  C120  F091         	movff	sprintf@_val+3,___llmod@dividend+3
  2988  00104E  0101               	movlb	1	; () banked
  2989  001050  5129               	movf	sprintf@c& (0+255),w,b
  2990  001052  0D04               	mullw	4
  2991  001054  0E01               	movlw	low _dpowers
  2992  001056  24F3               	addwf	prodl,w,c
  2993  001058  6EF6               	movwf	tblptrl,c
  2994  00105A  0E06               	movlw	high _dpowers
  2995  00105C  20F4               	addwfc	prodh,w,c
  2996  00105E  6EF7               	movwf	tblptrh,c
  2997  001060                     	if	0	;There are less than 3 active tblptr bytes
  2998  001060                     	endif
  2999  001060  0009               	tblrd		*+
  3000  001062  FFFF               	dw	65535	; errata NOP
  3001  001064  0100               	movlb	0	; () banked
  3002  001066  CFF5 F092          	movff	tablat,___llmod@divisor
  3003  00106A  0009               	tblrd		*+
  3004  00106C  FFFF               	dw	65535	; errata NOP
  3005  00106E  0100               	movlb	0	; () banked
  3006  001070  CFF5 F093          	movff	tablat,___llmod@divisor+1
  3007  001074  0009               	tblrd		*+
  3008  001076  FFFF               	dw	65535	; errata NOP
  3009  001078  0100               	movlb	0	; () banked
  3010  00107A  CFF5 F094          	movff	tablat,___llmod@divisor+2
  3011  00107E  000A               	tblrd		*-
  3012  001080  FFFF               	dw	65535	; errata NOP
  3013  001082  0100               	movlb	0	; () banked
  3014  001084  CFF5 F095          	movff	tablat,___llmod@divisor+3
  3015  001088  EC3C  F01B         	call	___llmod	;wreg free
  3016  00108C  C08E  F11D         	movff	?___llmod,sprintf@_val
  3017  001090  C08F  F11E         	movff	?___llmod+1,sprintf@_val+1
  3018  001094  C090  F11F         	movff	?___llmod+2,sprintf@_val+2
  3019  001098  C091  F120         	movff	?___llmod+3,sprintf@_val+3
  3020  00109C                     l4501:
  3021  00109C  0101               	movlb	1	; () banked
  3022  00109E  0729               	decf	sprintf@c& (0+255),f,b
  3023  0010A0  0101               	movlb	1	; () banked
  3024  0010A2  2929               	incf	sprintf@c& (0+255),w,b
  3025  0010A4  B4D8               	btfsc	status,2,c
  3026  0010A6  D011               	goto	l4511
  3027  0010A8  D776               	goto	l267
  3028  0010AA                     l4503:
  3029                           
  3030                           ; BSR set to: 1
  3031                           ;doprnt.c: 1021: ((*sp++ = ('0')),(++ccnt));
  3032  0010AA  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3033  0010AE  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3034  0010B2  0E30               	movlw	48
  3035  0010B4  6EDF               	movwf	indf2,c
  3036                           
  3037                           ; BSR set to: 1
  3038  0010B6  0100               	movlb	0	; () banked
  3039  0010B8  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  3040  0010BA  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  3041                           
  3042                           ; BSR set to: 0
  3043  0010BC  0101               	movlb	1	; () banked
  3044  0010BE  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  3045  0010C0  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3046                           
  3047                           ; BSR set to: 1
  3048                           ;doprnt.c: 1022: prec--;
  3049  0010C2  0101               	movlb	1	; () banked
  3050  0010C4  0727               	decf	sprintf@prec& (0+255),f,b
  3051  0010C6  A0D8               	btfss	status,0,c
  3052  0010C8  0728               	decf	(sprintf@prec+1)& (0+255),f,b
  3053  0010CA                     l4511:
  3054                           
  3055                           ; BSR set to: 1
  3056  0010CA  0101               	movlb	1	; () banked
  3057  0010CC  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  3058  0010CE  1127               	iorwf	sprintf@prec& (0+255),w,b
  3059  0010D0  A4D8               	btfss	status,2,c
  3060  0010D2  D7EB               	goto	l4503
  3061  0010D4                     l4513:
  3062                           
  3063                           ; BSR set to: 1
  3064                           ;doprnt.c: 1023: }
  3065                           ;doprnt.c: 1024: }
  3066                           ;doprnt.c: 1030: ((*sp++ = ('e')),(++ccnt));
  3067  0010D4  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3068  0010D8  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3069  0010DC  0E65               	movlw	101
  3070  0010DE  6EDF               	movwf	indf2,c
  3071                           
  3072                           ; BSR set to: 1
  3073  0010E0  0100               	movlb	0	; () banked
  3074  0010E2  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  3075  0010E4  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  3076                           
  3077                           ; BSR set to: 0
  3078  0010E6  0101               	movlb	1	; () banked
  3079  0010E8  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  3080  0010EA  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3081                           
  3082                           ; BSR set to: 1
  3083                           ;doprnt.c: 1031: if(exp < 0) {
  3084  0010EC  0101               	movlb	1	; () banked
  3085  0010EE  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  3086  0010F0  0A80               	xorlw	128
  3087  0010F2  6EF3               	movwf	prodl,c
  3088  0010F4  0E80               	movlw	128
  3089  0010F6  5CF3               	subwf	prodl,w,c
  3090  0010F8  0E00               	movlw	0
  3091  0010FA  B4D8               	btfsc	status,2,c
  3092  0010FC  5D22               	subwf	sprintf@exp& (0+255),w,b
  3093  0010FE  B0D8               	btfsc	status,0,c
  3094  001100  D00C               	goto	l4529
  3095                           
  3096                           ; BSR set to: 1
  3097                           ;doprnt.c: 1032: exp = -exp;
  3098  001102  0101               	movlb	1	; () banked
  3099  001104  6D22               	negf	sprintf@exp& (0+255),b
  3100  001106  0101               	movlb	1	; () banked
  3101  001108  1F23               	comf	(sprintf@exp+1)& (0+255),f,b
  3102  00110A  B0D8               	btfsc	status,0,c
  3103  00110C  2B23               	incf	(sprintf@exp+1)& (0+255),f,b
  3104                           
  3105                           ; BSR set to: 1
  3106                           ;doprnt.c: 1033: ((*sp++ = ('-')),(++ccnt));
  3107  00110E  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3108  001112  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3109  001116  0E2D               	movlw	45
  3110  001118  D005               	goto	L3
  3111  00111A                     l4529:
  3112                           
  3113                           ; BSR set to: 1
  3114                           ;doprnt.c: 1035: ((*sp++ = ('+')),(++ccnt));
  3115  00111A  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3116  00111E  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3117  001122  0E2B               	movlw	43
  3118  001124                     L3:
  3119  001124  6EDF               	movwf	indf2,c
  3120                           
  3121                           ; BSR set to: 1
  3122  001126  0100               	movlb	0	; () banked
  3123  001128  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  3124  00112A  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  3125                           
  3126                           ; BSR set to: 0
  3127  00112C  0101               	movlb	1	; () banked
  3128  00112E  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  3129  001130  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3130                           
  3131                           ; BSR set to: 1
  3132                           ;doprnt.c: 1048: ((*sp++ = (exp / 10 + '0')),(++ccnt));
  3133                           
  3134                           ; BSR set to: 1
  3135  001132  C122  F094         	movff	sprintf@exp,___awdiv@dividend
  3136  001136  C123  F095         	movff	sprintf@exp+1,___awdiv@dividend+1
  3137  00113A  0E00               	movlw	0
  3138  00113C  0100               	movlb	0	; () banked
  3139  00113E  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  3140  001140  0E0A               	movlw	10
  3141  001142  0100               	movlb	0	; () banked
  3142  001144  6F96               	movwf	___awdiv@divisor& (0+255),b
  3143  001146  ECCA  F018         	call	___awdiv	;wreg free
  3144  00114A  0100               	movlb	0	; () banked
  3145  00114C  5194               	movf	?___awdiv& (0+255),w,b
  3146  00114E  0F30               	addlw	48
  3147  001150  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3148  001154  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3149  001158  6EDF               	movwf	indf2,c
  3150                           
  3151                           ; BSR set to: 0
  3152  00115A  0100               	movlb	0	; () banked
  3153  00115C  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  3154  00115E  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  3155                           
  3156                           ; BSR set to: 0
  3157  001160  0101               	movlb	1	; () banked
  3158  001162  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  3159  001164  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;doprnt.c: 1049: ((*sp++ = (exp % 10 + '0')),(++ccnt));
  3163  001166  C122  F08E         	movff	sprintf@exp,___awmod@dividend
  3164  00116A  C123  F08F         	movff	sprintf@exp+1,___awmod@dividend+1
  3165  00116E  0E00               	movlw	0
  3166  001170  0100               	movlb	0	; () banked
  3167  001172  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  3168  001174  0E0A               	movlw	10
  3169  001176  0100               	movlb	0	; () banked
  3170  001178  6F90               	movwf	___awmod@divisor& (0+255),b
  3171  00117A  EC82  F01A         	call	___awmod	;wreg free
  3172  00117E  0100               	movlb	0	; () banked
  3173  001180  518E               	movf	?___awmod& (0+255),w,b
  3174  001182  0F30               	addlw	48
  3175  001184  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3176  001188  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3177  00118C  EF94  F00D         	goto	L4
  3178  001190                     l249:
  3179                           
  3180                           ;doprnt.c: 1057: }
  3181                           ;doprnt.c: 1096: if(flag & 0x200) {
  3182  001190  0101               	movlb	1	; () banked
  3183  001192  A31C               	btfss	(sprintf@flag+1)& (0+255),1,b
  3184  001194  D120               	goto	l4585
  3185                           
  3186                           ; BSR set to: 1
  3187                           ;doprnt.c: 1097: if(exp < 0)
  3188  001196  0101               	movlb	1	; () banked
  3189  001198  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  3190  00119A  0A80               	xorlw	128
  3191  00119C  6EF3               	movwf	prodl,c
  3192  00119E  0E80               	movlw	128
  3193  0011A0  5CF3               	subwf	prodl,w,c
  3194  0011A2  0E00               	movlw	0
  3195  0011A4  B4D8               	btfsc	status,2,c
  3196  0011A6  5D22               	subwf	sprintf@exp& (0+255),w,b
  3197  0011A8  B0D8               	btfsc	status,0,c
  3198  0011AA  D012               	goto	l4551
  3199                           
  3200                           ; BSR set to: 1
  3201                           ;doprnt.c: 1098: prec -= (exp+1);
  3202  0011AC  0E01               	movlw	1
  3203  0011AE  0101               	movlb	1	; () banked
  3204  0011B0  2522               	addwf	sprintf@exp& (0+255),w,b
  3205  0011B2  0100               	movlb	0	; () banked
  3206  0011B4  6FE2               	movwf	??_sprintf& (0+255),b
  3207  0011B6  0E00               	movlw	0
  3208  0011B8  0101               	movlb	1	; () banked
  3209  0011BA  2123               	addwfc	(sprintf@exp+1)& (0+255),w,b
  3210  0011BC  0100               	movlb	0	; () banked
  3211  0011BE  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  3212  0011C0  0100               	movlb	0	; () banked
  3213  0011C2  51E2               	movf	??_sprintf& (0+255),w,b
  3214  0011C4  0101               	movlb	1	; () banked
  3215  0011C6  5F27               	subwf	sprintf@prec& (0+255),f,b
  3216  0011C8  0100               	movlb	0	; () banked
  3217  0011CA  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  3218  0011CC  0101               	movlb	1	; () banked
  3219  0011CE  5B28               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3220  0011D0                     l4551:
  3221                           
  3222                           ; BSR set to: 1
  3223                           ;doprnt.c: 1100: _val._val = (unsigned long)fval;
  3224  0011D0  C124  F08E         	movff	sprintf@fval,___fttol@f1
  3225  0011D4  C125  F08F         	movff	sprintf@fval+1,___fttol@f1+1
  3226  0011D8  C126  F090         	movff	sprintf@fval+2,___fttol@f1+2
  3227  0011DC  EC79  F016         	call	___fttol	;wreg free
  3228  0011E0  C08E  F11D         	movff	?___fttol,sprintf@_val
  3229  0011E4  C08F  F11E         	movff	?___fttol+1,sprintf@_val+1
  3230  0011E8  C090  F11F         	movff	?___fttol+2,sprintf@_val+2
  3231  0011EC  C091  F120         	movff	?___fttol+3,sprintf@_val+3
  3232                           
  3233                           ;doprnt.c: 1101: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3234  0011F0  0E00               	movlw	0
  3235  0011F2  0101               	movlb	1	; () banked
  3236  0011F4  6F29               	movwf	sprintf@c& (0+255),b
  3237  0011F6                     
  3238                           ; BSR set to: 1
  3239  0011F6  0101               	movlb	1	; () banked
  3240  0011F8  5129               	movf	sprintf@c& (0+255),w,b
  3241  0011FA  0A0A               	xorlw	10
  3242  0011FC  B4D8               	btfsc	status,2,c
  3243  0011FE  D022               	goto	l4567
  3244                           
  3245                           ; BSR set to: 1
  3246                           ;doprnt.c: 1102: if(_val._val < dpowers[c])
  3247                           
  3248                           ; BSR set to: 1
  3249                           
  3250                           ; BSR set to: 1
  3251  001200  0101               	movlb	1	; () banked
  3252  001202  5129               	movf	sprintf@c& (0+255),w,b
  3253  001204  0D04               	mullw	4
  3254  001206  0E01               	movlw	low _dpowers
  3255  001208  24F3               	addwf	prodl,w,c
  3256  00120A  6EF6               	movwf	tblptrl,c
  3257  00120C  0E06               	movlw	high _dpowers
  3258  00120E  20F4               	addwfc	prodh,w,c
  3259  001210  6EF7               	movwf	tblptrh,c
  3260  001212                     	if	0	;There are less than 3 active tblptr bytes
  3261  001212                     	endif
  3262  001212  0009               	tblrd		*+
  3263  001214  FFFF               	dw	65535	; errata NOP
  3264  001216  50F5               	movf	tablat,w,c
  3265  001218  0101               	movlb	1	; () banked
  3266  00121A  5D1D               	subwf	sprintf@_val& (0+255),w,b
  3267  00121C  0009               	tblrd		*+
  3268  00121E  FFFF               	dw	65535	; errata NOP
  3269  001220  50F5               	movf	tablat,w,c
  3270  001222  0101               	movlb	1	; () banked
  3271  001224  591E               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3272  001226  0009               	tblrd		*+
  3273  001228  FFFF               	dw	65535	; errata NOP
  3274  00122A  50F5               	movf	tablat,w,c
  3275  00122C  0101               	movlb	1	; () banked
  3276  00122E  591F               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3277  001230  0009               	tblrd		*+
  3278  001232  FFFF               	dw	65535	; errata NOP
  3279  001234  50F5               	movf	tablat,w,c
  3280  001236  0101               	movlb	1	; () banked
  3281  001238  5920               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3282  00123A  A0D8               	btfss	status,0,c
  3283  00123C  D003               	goto	l4567
  3284                           
  3285                           ; BSR set to: 1
  3286                           
  3287                           ; BSR set to: 1
  3288                           
  3289                           ; BSR set to: 1
  3290                           ;doprnt.c: 1103: break;
  3291  00123E  0101               	movlb	1	; () banked
  3292  001240  2B29               	incf	sprintf@c& (0+255),f,b
  3293  001242  D7D9               	goto	L5
  3294  001244                     l4567:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;doprnt.c: 1104: prec -= c;
  3298  001244  0101               	movlb	1	; () banked
  3299  001246  5129               	movf	sprintf@c& (0+255),w,b
  3300  001248  0101               	movlb	1	; () banked
  3301  00124A  5F27               	subwf	sprintf@prec& (0+255),f,b
  3302  00124C  0E00               	movlw	0
  3303  00124E  0101               	movlb	1	; () banked
  3304  001250  BF29               	btfsc	sprintf@c& (0+255),7,b
  3305  001252  0EFF               	movlw	255
  3306  001254  0101               	movlb	1	; () banked
  3307  001256  5B28               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3308                           
  3309                           ; BSR set to: 1
  3310                           ;doprnt.c: 1105: if(prec <= 12)
  3311  001258  0101               	movlb	1	; () banked
  3312  00125A  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  3313  00125C  0A80               	xorlw	128
  3314  00125E  6EF3               	movwf	prodl,c
  3315  001260  0E80               	movlw	128
  3316  001262  5CF3               	subwf	prodl,w,c
  3317  001264  0E0D               	movlw	13
  3318  001266  B4D8               	btfsc	status,2,c
  3319  001268  5D27               	subwf	sprintf@prec& (0+255),w,b
  3320  00126A  B0D8               	btfsc	status,0,c
  3321  00126C  D018               	goto	l280
  3322                           
  3323                           ; BSR set to: 1
  3324                           ;doprnt.c: 1106: fval += fround(prec);
  3325  00126E  C124  F0C2         	movff	sprintf@fval,___ftadd@f1
  3326  001272  C125  F0C3         	movff	sprintf@fval+1,___ftadd@f1+1
  3327  001276  C126  F0C4         	movff	sprintf@fval+2,___ftadd@f1+2
  3328  00127A  0101               	movlb	1	; () banked
  3329  00127C  5127               	movf	sprintf@prec& (0+255),w,b
  3330  00127E  EC87  F010         	call	_fround
  3331  001282  C0B8  F0C5         	movff	?_fround,___ftadd@f2
  3332  001286  C0B9  F0C6         	movff	?_fround+1,___ftadd@f2+1
  3333  00128A  C0BA  F0C7         	movff	?_fround+2,___ftadd@f2+2
  3334  00128E  EC13  F012         	call	___ftadd	;wreg free
  3335  001292  C0C2  F124         	movff	?___ftadd,sprintf@fval
  3336  001296  C0C3  F125         	movff	?___ftadd+1,sprintf@fval+1
  3337  00129A  C0C4  F126         	movff	?___ftadd+2,sprintf@fval+2
  3338  00129E                     l280:
  3339                           
  3340                           ;doprnt.c: 1109: {
  3341                           ;doprnt.c: 1110: double temp;
  3342                           ;doprnt.c: 1111: temp = scale(prec);
  3343  00129E  0101               	movlb	1	; () banked
  3344  0012A0  5127               	movf	sprintf@prec& (0+255),w,b
  3345  0012A2  ECB9  F00D         	call	_scale
  3346  0012A6  C0B8  F10F         	movff	?_scale,sprintf@temp
  3347  0012AA  C0B9  F110         	movff	?_scale+1,sprintf@temp+1
  3348  0012AE  C0BA  F111         	movff	?_scale+2,sprintf@temp+2
  3349                           
  3350                           ;doprnt.c: 1112: temp *= fval - (double)_val._val;
  3351  0012B2  C10F  F0A9         	movff	sprintf@temp,___ftmul@f1
  3352  0012B6  C110  F0AA         	movff	sprintf@temp+1,___ftmul@f1+1
  3353  0012BA  C111  F0AB         	movff	sprintf@temp+2,___ftmul@f1+2
  3354  0012BE  C124  F0C5         	movff	sprintf@fval,___ftadd@f2
  3355  0012C2  C125  F0C6         	movff	sprintf@fval+1,___ftadd@f2+1
  3356  0012C6  C126  F0C7         	movff	sprintf@fval+2,___ftadd@f2+2
  3357  0012CA  C11D  F09D         	movff	sprintf@_val,___lltoft@c
  3358  0012CE  C11E  F09E         	movff	sprintf@_val+1,___lltoft@c+1
  3359  0012D2  C11F  F09F         	movff	sprintf@_val+2,___lltoft@c+2
  3360  0012D6  C120  F0A0         	movff	sprintf@_val+3,___lltoft@c+3
  3361  0012DA  ECE4  F01B         	call	___lltoft	;wreg free
  3362  0012DE  C09D  F0A6         	movff	?___lltoft,___ftneg@f1
  3363  0012E2  C09E  F0A7         	movff	?___lltoft+1,___ftneg@f1+1
  3364  0012E6  C09F  F0A8         	movff	?___lltoft+2,___ftneg@f1+2
  3365  0012EA  EC19  F01D         	call	___ftneg	;wreg free
  3366  0012EE  C0A6  F0C2         	movff	?___ftneg,___ftadd@f1
  3367  0012F2  C0A7  F0C3         	movff	?___ftneg+1,___ftadd@f1+1
  3368  0012F6  C0A8  F0C4         	movff	?___ftneg+2,___ftadd@f1+2
  3369  0012FA  EC13  F012         	call	___ftadd	;wreg free
  3370  0012FE  C0C2  F0AC         	movff	?___ftadd,___ftmul@f2
  3371  001302  C0C3  F0AD         	movff	?___ftadd+1,___ftmul@f2+1
  3372  001306  C0C4  F0AE         	movff	?___ftadd+2,___ftmul@f2+2
  3373  00130A  EC13  F015         	call	___ftmul	;wreg free
  3374  00130E  C0A9  F10F         	movff	?___ftmul,sprintf@temp
  3375  001312  C0AA  F110         	movff	?___ftmul+1,sprintf@temp+1
  3376  001316  C0AB  F111         	movff	?___ftmul+2,sprintf@temp+2
  3377                           
  3378                           ;doprnt.c: 1113: _val._val = (unsigned long)temp;
  3379  00131A  C10F  F08E         	movff	sprintf@temp,___fttol@f1
  3380  00131E  C110  F08F         	movff	sprintf@temp+1,___fttol@f1+1
  3381  001322  C111  F090         	movff	sprintf@temp+2,___fttol@f1+2
  3382  001326  EC79  F016         	call	___fttol	;wreg free
  3383  00132A  C08E  F11D         	movff	?___fttol,sprintf@_val
  3384  00132E  C08F  F11E         	movff	?___fttol+1,sprintf@_val+1
  3385  001332  C090  F11F         	movff	?___fttol+2,sprintf@_val+2
  3386  001336  C091  F120         	movff	?___fttol+3,sprintf@_val+3
  3387                           
  3388                           ;doprnt.c: 1114: }
  3389                           ;doprnt.c: 1115: while(prec && _val._val % 10 == 0) {
  3390  00133A  D022               	goto	l4581
  3391  00133C                     l4577:
  3392                           
  3393                           ;doprnt.c: 1116: _val._val /= 10;
  3394  00133C  C11D  F08E         	movff	sprintf@_val,___lldiv@dividend
  3395  001340  C11E  F08F         	movff	sprintf@_val+1,___lldiv@dividend+1
  3396  001344  C11F  F090         	movff	sprintf@_val+2,___lldiv@dividend+2
  3397  001348  C120  F091         	movff	sprintf@_val+3,___lldiv@dividend+3
  3398  00134C  0E0A               	movlw	10
  3399  00134E  0100               	movlb	0	; () banked
  3400  001350  6F92               	movwf	___lldiv@divisor& (0+255),b
  3401  001352  0E00               	movlw	0
  3402  001354  0100               	movlb	0	; () banked
  3403  001356  6F93               	movwf	(___lldiv@divisor+1)& (0+255),b
  3404  001358  0E00               	movlw	0
  3405  00135A  0100               	movlb	0	; () banked
  3406  00135C  6F94               	movwf	(___lldiv@divisor+2)& (0+255),b
  3407  00135E  0E00               	movlw	0
  3408  001360  0100               	movlb	0	; () banked
  3409  001362  6F95               	movwf	(___lldiv@divisor+3)& (0+255),b
  3410  001364  ECAA  F019         	call	___lldiv	;wreg free
  3411  001368  C08E  F11D         	movff	?___lldiv,sprintf@_val
  3412  00136C  C08F  F11E         	movff	?___lldiv+1,sprintf@_val+1
  3413  001370  C090  F11F         	movff	?___lldiv+2,sprintf@_val+2
  3414  001374  C091  F120         	movff	?___lldiv+3,sprintf@_val+3
  3415                           
  3416                           ;doprnt.c: 1117: prec--;
  3417  001378  0101               	movlb	1	; () banked
  3418  00137A  0727               	decf	sprintf@prec& (0+255),f,b
  3419  00137C  A0D8               	btfss	status,0,c
  3420  00137E  0728               	decf	(sprintf@prec+1)& (0+255),f,b
  3421  001380                     l4581:
  3422  001380  0101               	movlb	1	; () banked
  3423  001382  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  3424  001384  1127               	iorwf	sprintf@prec& (0+255),w,b
  3425  001386  B4D8               	btfsc	status,2,c
  3426  001388  D049               	goto	l4589
  3427                           
  3428                           ; BSR set to: 1
  3429  00138A  C11D  F08E         	movff	sprintf@_val,___llmod@dividend
  3430  00138E  C11E  F08F         	movff	sprintf@_val+1,___llmod@dividend+1
  3431  001392  C11F  F090         	movff	sprintf@_val+2,___llmod@dividend+2
  3432  001396  C120  F091         	movff	sprintf@_val+3,___llmod@dividend+3
  3433  00139A  0E0A               	movlw	10
  3434  00139C  0100               	movlb	0	; () banked
  3435  00139E  6F92               	movwf	___llmod@divisor& (0+255),b
  3436  0013A0  0E00               	movlw	0
  3437  0013A2  0100               	movlb	0	; () banked
  3438  0013A4  6F93               	movwf	(___llmod@divisor+1)& (0+255),b
  3439  0013A6  0E00               	movlw	0
  3440  0013A8  0100               	movlb	0	; () banked
  3441  0013AA  6F94               	movwf	(___llmod@divisor+2)& (0+255),b
  3442  0013AC  0E00               	movlw	0
  3443  0013AE  0100               	movlb	0	; () banked
  3444  0013B0  6F95               	movwf	(___llmod@divisor+3)& (0+255),b
  3445  0013B2  EC3C  F01B         	call	___llmod	;wreg free
  3446  0013B6  C08E  F0E2         	movff	?___llmod,??_sprintf
  3447  0013BA  C08F  F0E3         	movff	?___llmod+1,??_sprintf+1
  3448  0013BE  C090  F0E4         	movff	?___llmod+2,??_sprintf+2
  3449  0013C2  C091  F0E5         	movff	?___llmod+3,??_sprintf+3
  3450  0013C6  0100               	movlb	0	; () banked
  3451  0013C8  51E5               	movf	(??_sprintf+3)& (0+255),w,b
  3452  0013CA  11E2               	iorwf	??_sprintf& (0+255),w,b
  3453  0013CC  11E3               	iorwf	(??_sprintf+1)& (0+255),w,b
  3454  0013CE  11E4               	iorwf	(??_sprintf+2)& (0+255),w,b
  3455  0013D0  A4D8               	btfss	status,2,c
  3456  0013D2  D024               	goto	l4589
  3457  0013D4  D7B3               	goto	l4577
  3458  0013D6                     l4585:
  3459                           
  3460                           ;doprnt.c: 1121: if(prec <= 12)
  3461  0013D6  0101               	movlb	1	; () banked
  3462  0013D8  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  3463  0013DA  0A80               	xorlw	128
  3464  0013DC  6EF3               	movwf	prodl,c
  3465  0013DE  0E80               	movlw	128
  3466  0013E0  5CF3               	subwf	prodl,w,c
  3467  0013E2  0E0D               	movlw	13
  3468  0013E4  B4D8               	btfsc	status,2,c
  3469  0013E6  5D27               	subwf	sprintf@prec& (0+255),w,b
  3470  0013E8  B0D8               	btfsc	status,0,c
  3471  0013EA  D018               	goto	l4589
  3472                           
  3473                           ; BSR set to: 1
  3474                           ;doprnt.c: 1122: fval += fround(prec);
  3475  0013EC  C124  F0C2         	movff	sprintf@fval,___ftadd@f1
  3476  0013F0  C125  F0C3         	movff	sprintf@fval+1,___ftadd@f1+1
  3477  0013F4  C126  F0C4         	movff	sprintf@fval+2,___ftadd@f1+2
  3478  0013F8  0101               	movlb	1	; () banked
  3479  0013FA  5127               	movf	sprintf@prec& (0+255),w,b
  3480  0013FC  EC87  F010         	call	_fround
  3481  001400  C0B8  F0C5         	movff	?_fround,___ftadd@f2
  3482  001404  C0B9  F0C6         	movff	?_fround+1,___ftadd@f2+1
  3483  001408  C0BA  F0C7         	movff	?_fround+2,___ftadd@f2+2
  3484  00140C  EC13  F012         	call	___ftadd	;wreg free
  3485  001410  C0C2  F124         	movff	?___ftadd,sprintf@fval
  3486  001414  C0C3  F125         	movff	?___ftadd+1,sprintf@fval+1
  3487  001418  C0C4  F126         	movff	?___ftadd+2,sprintf@fval+2
  3488  00141C                     l4589:
  3489                           
  3490                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3491  00141C  0101               	movlb	1	; () banked
  3492  00141E  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  3493  001420  0A80               	xorlw	128
  3494  001422  6EF3               	movwf	prodl,c
  3495  001424  0E80               	movlw	128
  3496  001426  5CF3               	subwf	prodl,w,c
  3497  001428  0E0A               	movlw	10
  3498  00142A  B4D8               	btfsc	status,2,c
  3499  00142C  5D22               	subwf	sprintf@exp& (0+255),w,b
  3500  00142E  B0D8               	btfsc	status,0,c
  3501  001430  D029               	goto	l4597
  3502                           
  3503                           ; BSR set to: 1
  3504  001432  0E7F               	movlw	127
  3505  001434  0101               	movlb	1	; () banked
  3506  001436  1526               	andwf	(sprintf@fval+2)& (0+255),w,b
  3507  001438  0101               	movlb	1	; () banked
  3508  00143A  1125               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3509  00143C  0101               	movlb	1	; () banked
  3510  00143E  1124               	iorwf	sprintf@fval& (0+255),w,b
  3511  001440  B4D8               	btfsc	status,2,c
  3512  001442  D06F               	goto	l4613
  3513                           
  3514                           ; BSR set to: 1
  3515  001444  C124  F08E         	movff	sprintf@fval,___fttol@f1
  3516  001448  C125  F08F         	movff	sprintf@fval+1,___fttol@f1+1
  3517  00144C  C126  F090         	movff	sprintf@fval+2,___fttol@f1+2
  3518  001450  EC79  F016         	call	___fttol	;wreg free
  3519  001454  C08E  F0E2         	movff	?___fttol,??_sprintf
  3520  001458  C08F  F0E3         	movff	?___fttol+1,??_sprintf+1
  3521  00145C  C090  F0E4         	movff	?___fttol+2,??_sprintf+2
  3522  001460  C091  F0E5         	movff	?___fttol+3,??_sprintf+3
  3523  001464  0100               	movlb	0	; () banked
  3524  001466  51E5               	movf	(??_sprintf+3)& (0+255),w,b
  3525  001468  11E2               	iorwf	??_sprintf& (0+255),w,b
  3526  00146A  11E3               	iorwf	(??_sprintf+1)& (0+255),w,b
  3527  00146C  11E4               	iorwf	(??_sprintf+2)& (0+255),w,b
  3528  00146E  A4D8               	btfss	status,2,c
  3529  001470  D058               	goto	l4613
  3530                           
  3531                           ; BSR set to: 0
  3532  001472  0101               	movlb	1	; () banked
  3533  001474  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  3534  001476  0A80               	xorlw	128
  3535  001478  0F80               	addlw	-128
  3536  00147A  0E02               	movlw	2
  3537  00147C  B4D8               	btfsc	status,2,c
  3538  00147E  5D22               	subwf	sprintf@exp& (0+255),w,b
  3539  001480  A0D8               	btfss	status,0,c
  3540  001482  D04F               	goto	l4613
  3541  001484                     l4597:
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;doprnt.c: 1129: if(integ < 4.294967296){
  3545  001484  C114  F0CE         	movff	sprintf@integ,___ftge@ff1
  3546  001488  C115  F0CF         	movff	sprintf@integ+1,___ftge@ff1+1
  3547  00148C  C116  F0D0         	movff	sprintf@integ+2,___ftge@ff1+2
  3548  001490  0E70               	movlw	112
  3549  001492  0100               	movlb	0	; () banked
  3550  001494  6FD1               	movwf	___ftge@ff2& (0+255),b
  3551  001496  0E89               	movlw	137
  3552  001498  0100               	movlb	0	; () banked
  3553  00149A  6FD2               	movwf	(___ftge@ff2+1)& (0+255),b
  3554  00149C  0E40               	movlw	64
  3555  00149E  0100               	movlb	0	; () banked
  3556  0014A0  6FD3               	movwf	(___ftge@ff2+2)& (0+255),b
  3557  0014A2  EC16  F01A         	call	___ftge	;wreg free
  3558  0014A6  B0D8               	btfsc	status,0,c
  3559  0014A8  D003               	goto	l4601
  3560                           
  3561                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3562  0014AA  0101               	movlb	1	; () banked
  3563  0014AC  0EF7               	movlw	247
  3564  0014AE  D002               	goto	L6
  3565  0014B0                     l4601:
  3566                           
  3567                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3568  0014B0  0101               	movlb	1	; () banked
  3569  0014B2  0EF8               	movlw	248
  3570  0014B4                     L6:
  3571  0014B4  0101               	movlb	1	; () banked
  3572  0014B6  2722               	addwf	sprintf@exp& (0+255),f,b
  3573  0014B8  0EFF               	movlw	255
  3574  0014BA  0101               	movlb	1	; () banked
  3575  0014BC  2323               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;doprnt.c: 1133: }
  3579                           ;doprnt.c: 1134: integ = scale(exp);
  3580                           
  3581                           ; BSR set to: 1
  3582  0014BE  0101               	movlb	1	; () banked
  3583  0014C0  5122               	movf	sprintf@exp& (0+255),w,b
  3584  0014C2  ECB9  F00D         	call	_scale
  3585  0014C6  C0B8  F114         	movff	?_scale,sprintf@integ
  3586  0014CA  C0B9  F115         	movff	?_scale+1,sprintf@integ+1
  3587  0014CE  C0BA  F116         	movff	?_scale+2,sprintf@integ+2
  3588                           
  3589                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  3590  0014D2  C124  F08E         	movff	sprintf@fval,__tdiv_to_l_@f1
  3591  0014D6  C125  F08F         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  3592  0014DA  C126  F090         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  3593  0014DE  C114  F091         	movff	sprintf@integ,__tdiv_to_l_@f2
  3594  0014E2  C115  F092         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
  3595  0014E6  C116  F093         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
  3596  0014EA  EC46  F014         	call	__tdiv_to_l_	;wreg free
  3597  0014EE  C08E  F103         	movff	?__tdiv_to_l_,_sprintf$1131
  3598  0014F2  C08F  F104         	movff	?__tdiv_to_l_+1,_sprintf$1131+1
  3599  0014F6  C090  F105         	movff	?__tdiv_to_l_+2,_sprintf$1131+2
  3600  0014FA  C091  F106         	movff	?__tdiv_to_l_+3,_sprintf$1131+3
  3601  0014FE  C103  F11D         	movff	_sprintf$1131,sprintf@_val
  3602  001502  C104  F11E         	movff	_sprintf$1131+1,sprintf@_val+1
  3603  001506  C105  F11F         	movff	_sprintf$1131+2,sprintf@_val+2
  3604  00150A  C106  F120         	movff	_sprintf$1131+3,sprintf@_val+3
  3605                           
  3606                           ;doprnt.c: 1138: fval = 0.0;
  3607  00150E  0E00               	movlw	0
  3608  001510  0101               	movlb	1	; () banked
  3609  001512  6F24               	movwf	sprintf@fval& (0+255),b
  3610  001514  0E00               	movlw	0
  3611  001516  0101               	movlb	1	; () banked
  3612  001518  6F25               	movwf	(sprintf@fval+1)& (0+255),b
  3613  00151A  0E00               	movlw	0
  3614  00151C  0101               	movlb	1	; () banked
  3615  00151E  6F26               	movwf	(sprintf@fval+2)& (0+255),b
  3616                           
  3617                           ;doprnt.c: 1139: } else {
  3618  001520  D034               	goto	l4617
  3619  001522                     l4613:
  3620                           
  3621                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  3622  001522  C124  F08E         	movff	sprintf@fval,___fttol@f1
  3623  001526  C125  F08F         	movff	sprintf@fval+1,___fttol@f1+1
  3624  00152A  C126  F090         	movff	sprintf@fval+2,___fttol@f1+2
  3625  00152E  EC79  F016         	call	___fttol	;wreg free
  3626  001532  C08E  F11D         	movff	?___fttol,sprintf@_val
  3627  001536  C08F  F11E         	movff	?___fttol+1,sprintf@_val+1
  3628  00153A  C090  F11F         	movff	?___fttol+2,sprintf@_val+2
  3629  00153E  C091  F120         	movff	?___fttol+3,sprintf@_val+3
  3630                           
  3631                           ;doprnt.c: 1141: fval -= (double)_val._val;
  3632  001542  C124  F0CE         	movff	sprintf@fval,___ftsub@f1
  3633  001546  C125  F0CF         	movff	sprintf@fval+1,___ftsub@f1+1
  3634  00154A  C126  F0D0         	movff	sprintf@fval+2,___ftsub@f1+2
  3635  00154E  C11D  F09D         	movff	sprintf@_val,___lltoft@c
  3636  001552  C11E  F09E         	movff	sprintf@_val+1,___lltoft@c+1
  3637  001556  C11F  F09F         	movff	sprintf@_val+2,___lltoft@c+2
  3638  00155A  C120  F0A0         	movff	sprintf@_val+3,___lltoft@c+3
  3639  00155E  ECE4  F01B         	call	___lltoft	;wreg free
  3640  001562  C09D  F0D1         	movff	?___lltoft,___ftsub@f2
  3641  001566  C09E  F0D2         	movff	?___lltoft+1,___ftsub@f2+1
  3642  00156A  C09F  F0D3         	movff	?___lltoft+2,___ftsub@f2+2
  3643  00156E  EC82  F01C         	call	___ftsub	;wreg free
  3644  001572  C0CE  F124         	movff	?___ftsub,sprintf@fval
  3645  001576  C0CF  F125         	movff	?___ftsub+1,sprintf@fval+1
  3646  00157A  C0D0  F126         	movff	?___ftsub+2,sprintf@fval+2
  3647                           
  3648                           ;doprnt.c: 1142: exp = 0;
  3649  00157E  0E00               	movlw	0
  3650  001580  0101               	movlb	1	; () banked
  3651  001582  6F23               	movwf	(sprintf@exp+1)& (0+255),b
  3652  001584  0E00               	movlw	0
  3653  001586  0101               	movlb	1	; () banked
  3654  001588  6F22               	movwf	sprintf@exp& (0+255),b
  3655  00158A                     l4617:
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;doprnt.c: 1143: }
  3659                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3660  00158A  0E01               	movlw	1
  3661  00158C  0101               	movlb	1	; () banked
  3662  00158E  6F29               	movwf	sprintf@c& (0+255),b
  3663  001590                     
  3664                           ; BSR set to: 1
  3665  001590  0101               	movlb	1	; () banked
  3666  001592  5129               	movf	sprintf@c& (0+255),w,b
  3667  001594  0A0A               	xorlw	10
  3668  001596  B4D8               	btfsc	status,2,c
  3669  001598  D022               	goto	l4631
  3670                           
  3671                           ; BSR set to: 1
  3672                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  3673                           
  3674                           ; BSR set to: 1
  3675                           
  3676                           ; BSR set to: 1
  3677  00159A  0101               	movlb	1	; () banked
  3678  00159C  5129               	movf	sprintf@c& (0+255),w,b
  3679  00159E  0D04               	mullw	4
  3680  0015A0  0E01               	movlw	low _dpowers
  3681  0015A2  24F3               	addwf	prodl,w,c
  3682  0015A4  6EF6               	movwf	tblptrl,c
  3683  0015A6  0E06               	movlw	high _dpowers
  3684  0015A8  20F4               	addwfc	prodh,w,c
  3685  0015AA  6EF7               	movwf	tblptrh,c
  3686  0015AC                     	if	0	;There are less than 3 active tblptr bytes
  3687  0015AC                     	endif
  3688  0015AC  0009               	tblrd		*+
  3689  0015AE  FFFF               	dw	65535	; errata NOP
  3690  0015B0  50F5               	movf	tablat,w,c
  3691  0015B2  0101               	movlb	1	; () banked
  3692  0015B4  5D1D               	subwf	sprintf@_val& (0+255),w,b
  3693  0015B6  0009               	tblrd		*+
  3694  0015B8  FFFF               	dw	65535	; errata NOP
  3695  0015BA  50F5               	movf	tablat,w,c
  3696  0015BC  0101               	movlb	1	; () banked
  3697  0015BE  591E               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3698  0015C0  0009               	tblrd		*+
  3699  0015C2  FFFF               	dw	65535	; errata NOP
  3700  0015C4  50F5               	movf	tablat,w,c
  3701  0015C6  0101               	movlb	1	; () banked
  3702  0015C8  591F               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3703  0015CA  0009               	tblrd		*+
  3704  0015CC  FFFF               	dw	65535	; errata NOP
  3705  0015CE  50F5               	movf	tablat,w,c
  3706  0015D0  0101               	movlb	1	; () banked
  3707  0015D2  5920               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3708  0015D4  A0D8               	btfss	status,0,c
  3709  0015D6  D003               	goto	l4631
  3710                           
  3711                           ; BSR set to: 1
  3712                           
  3713                           ; BSR set to: 1
  3714                           
  3715                           ; BSR set to: 1
  3716                           ;doprnt.c: 1147: break;
  3717  0015D8  0101               	movlb	1	; () banked
  3718  0015DA  2B29               	incf	sprintf@c& (0+255),f,b
  3719  0015DC  D7D9               	goto	L7
  3720  0015DE                     l4631:
  3721                           
  3722                           ; BSR set to: 1
  3723                           ;doprnt.c: 1151: width -= prec + c + exp;
  3724  0015DE  0101               	movlb	1	; () banked
  3725  0015E0  C129  F0E2         	movff	sprintf@c,??_sprintf
  3726  0015E4  0100               	movlb	0	; () banked
  3727  0015E6  6BE3               	clrf	(??_sprintf+1)& (0+255),b
  3728  0015E8  BFE2               	btfsc	??_sprintf& (0+255),7,b
  3729  0015EA  07E3               	decf	(??_sprintf+1)& (0+255),f,b
  3730  0015EC  0101               	movlb	1	; () banked
  3731  0015EE  5127               	movf	sprintf@prec& (0+255),w,b
  3732  0015F0  0100               	movlb	0	; () banked
  3733  0015F2  27E2               	addwf	??_sprintf& (0+255),f,b
  3734  0015F4  0101               	movlb	1	; () banked
  3735  0015F6  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  3736  0015F8  0100               	movlb	0	; () banked
  3737  0015FA  23E3               	addwfc	(??_sprintf+1)& (0+255),f,b
  3738  0015FC  0101               	movlb	1	; () banked
  3739  0015FE  5122               	movf	sprintf@exp& (0+255),w,b
  3740  001600  0100               	movlb	0	; () banked
  3741  001602  27E2               	addwf	??_sprintf& (0+255),f,b
  3742  001604  0101               	movlb	1	; () banked
  3743  001606  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  3744  001608  0100               	movlb	0	; () banked
  3745  00160A  23E3               	addwfc	(??_sprintf+1)& (0+255),f,b
  3746  00160C  0100               	movlb	0	; () banked
  3747  00160E  51E2               	movf	??_sprintf& (0+255),w,b
  3748  001610  0101               	movlb	1	; () banked
  3749  001612  5F19               	subwf	sprintf@width& (0+255),f,b
  3750  001614  0100               	movlb	0	; () banked
  3751  001616  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  3752  001618  0101               	movlb	1	; () banked
  3753  00161A  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
  3754                           
  3755                           ;doprnt.c: 1152: if(
  3756                           ;doprnt.c: 1156: prec)
  3757  00161C  0101               	movlb	1	; () banked
  3758  00161E  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  3759  001620  1127               	iorwf	sprintf@prec& (0+255),w,b
  3760  001622  B4D8               	btfsc	status,2,c
  3761  001624  D004               	goto	l4635
  3762                           
  3763                           ; BSR set to: 1
  3764                           ;doprnt.c: 1157: width--;
  3765  001626  0101               	movlb	1	; () banked
  3766  001628  0719               	decf	sprintf@width& (0+255),f,b
  3767  00162A  A0D8               	btfss	status,0,c
  3768  00162C  071A               	decf	(sprintf@width+1)& (0+255),f,b
  3769  00162E                     l4635:
  3770                           
  3771                           ; BSR set to: 1
  3772                           ;doprnt.c: 1158: if(flag & 0x03)
  3773  00162E  0E03               	movlw	3
  3774  001630  0101               	movlb	1	; () banked
  3775  001632  151B               	andwf	sprintf@flag& (0+255),w,b
  3776  001634  0100               	movlb	0	; () banked
  3777  001636  6FE2               	movwf	??_sprintf& (0+255),b
  3778  001638  0E00               	movlw	0
  3779  00163A  0101               	movlb	1	; () banked
  3780  00163C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  3781  00163E  0100               	movlb	0	; () banked
  3782  001640  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  3783  001642  0100               	movlb	0	; () banked
  3784  001644  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  3785  001646  11E2               	iorwf	??_sprintf& (0+255),w,b
  3786  001648  B4D8               	btfsc	status,2,c
  3787  00164A  D011               	goto	l4647
  3788  00164C  D00C               	goto	L8
  3789  00164E                     l4639:
  3790                           
  3791                           ; BSR set to: 1
  3792                           ;doprnt.c: 1190: ((*sp++ = (' ')),(++ccnt));
  3793  00164E  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3794  001652  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3795  001656  0E20               	movlw	32
  3796  001658  6EDF               	movwf	indf2,c
  3797                           
  3798                           ; BSR set to: 1
  3799  00165A  0100               	movlb	0	; () banked
  3800  00165C  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  3801  00165E  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  3802                           
  3803                           ; BSR set to: 0
  3804  001660  0101               	movlb	1	; () banked
  3805  001662  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  3806  001664  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3807  001666                     L8:
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;doprnt.c: 1191: width--;
  3811  001666  0101               	movlb	1	; () banked
  3812  001668  0719               	decf	sprintf@width& (0+255),f,b
  3813  00166A  A0D8               	btfss	status,0,c
  3814  00166C  071A               	decf	(sprintf@width+1)& (0+255),f,b
  3815  00166E                     l4647:
  3816  00166E  0101               	movlb	1	; () banked
  3817  001670  511A               	movf	(sprintf@width+1)& (0+255),w,b
  3818  001672  0A80               	xorlw	128
  3819  001674  6EF3               	movwf	prodl,c
  3820  001676  0E80               	movlw	128
  3821  001678  5CF3               	subwf	prodl,w,c
  3822  00167A  0E01               	movlw	1
  3823  00167C  B4D8               	btfsc	status,2,c
  3824  00167E  5D19               	subwf	sprintf@width& (0+255),w,b
  3825  001680  B0D8               	btfsc	status,0,c
  3826  001682  D7E5               	goto	l4639
  3827                           
  3828                           ; BSR set to: 1
  3829                           ;doprnt.c: 1192: }
  3830                           ;doprnt.c: 1197: if(flag & 0x03)
  3831                           
  3832                           ; BSR set to: 1
  3833  001684  0E03               	movlw	3
  3834  001686  0101               	movlb	1	; () banked
  3835  001688  151B               	andwf	sprintf@flag& (0+255),w,b
  3836  00168A  0100               	movlb	0	; () banked
  3837  00168C  6FE2               	movwf	??_sprintf& (0+255),b
  3838  00168E  0E00               	movlw	0
  3839  001690  0101               	movlb	1	; () banked
  3840  001692  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  3841  001694  0100               	movlb	0	; () banked
  3842  001696  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  3843  001698  0100               	movlb	0	; () banked
  3844  00169A  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  3845  00169C  11E2               	iorwf	??_sprintf& (0+255),w,b
  3846  00169E  B4D8               	btfsc	status,2,c
  3847  0016A0  D061               	goto	l4667
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;doprnt.c: 1199: ((*sp++ = ('-')),(++ccnt));
  3851  0016A2  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3852  0016A6  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3853  0016AA  0E2D               	movlw	45
  3854  0016AC  D054               	goto	L9
  3855  0016AE                     l4657:
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;doprnt.c: 1209: {
  3859                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  3860  0016AE  C11D  F08E         	movff	sprintf@_val,___lldiv@dividend
  3861  0016B2  C11E  F08F         	movff	sprintf@_val+1,___lldiv@dividend+1
  3862  0016B6  C11F  F090         	movff	sprintf@_val+2,___lldiv@dividend+2
  3863  0016BA  C120  F091         	movff	sprintf@_val+3,___lldiv@dividend+3
  3864  0016BE  0101               	movlb	1	; () banked
  3865  0016C0  5129               	movf	sprintf@c& (0+255),w,b
  3866  0016C2  0D04               	mullw	4
  3867  0016C4  0E01               	movlw	low _dpowers
  3868  0016C6  24F3               	addwf	prodl,w,c
  3869  0016C8  6EF6               	movwf	tblptrl,c
  3870  0016CA  0E06               	movlw	high _dpowers
  3871  0016CC  20F4               	addwfc	prodh,w,c
  3872  0016CE  6EF7               	movwf	tblptrh,c
  3873  0016D0                     	if	0	;There are less than 3 active tblptr bytes
  3874  0016D0                     	endif
  3875  0016D0  0009               	tblrd		*+
  3876  0016D2  FFFF               	dw	65535	; errata NOP
  3877  0016D4  0100               	movlb	0	; () banked
  3878  0016D6  CFF5 F092          	movff	tablat,___lldiv@divisor
  3879  0016DA  0009               	tblrd		*+
  3880  0016DC  FFFF               	dw	65535	; errata NOP
  3881  0016DE  0100               	movlb	0	; () banked
  3882  0016E0  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  3883  0016E4  0009               	tblrd		*+
  3884  0016E6  FFFF               	dw	65535	; errata NOP
  3885  0016E8  0100               	movlb	0	; () banked
  3886  0016EA  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  3887  0016EE  000A               	tblrd		*-
  3888  0016F0  FFFF               	dw	65535	; errata NOP
  3889  0016F2  0100               	movlb	0	; () banked
  3890  0016F4  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  3891  0016F8  ECAA  F019         	call	___lldiv	;wreg free
  3892  0016FC  C08E  F107         	movff	?___lldiv,sprintf@vd
  3893  001700  C08F  F108         	movff	?___lldiv+1,sprintf@vd+1
  3894  001704  C090  F109         	movff	?___lldiv+2,sprintf@vd+2
  3895  001708  C091  F10A         	movff	?___lldiv+3,sprintf@vd+3
  3896                           
  3897                           ;doprnt.c: 1211: vd %= 10;
  3898  00170C  C107  F08E         	movff	sprintf@vd,___llmod@dividend
  3899  001710  C108  F08F         	movff	sprintf@vd+1,___llmod@dividend+1
  3900  001714  C109  F090         	movff	sprintf@vd+2,___llmod@dividend+2
  3901  001718  C10A  F091         	movff	sprintf@vd+3,___llmod@dividend+3
  3902  00171C  0E0A               	movlw	10
  3903  00171E  0100               	movlb	0	; () banked
  3904  001720  6F92               	movwf	___llmod@divisor& (0+255),b
  3905  001722  0E00               	movlw	0
  3906  001724  0100               	movlb	0	; () banked
  3907  001726  6F93               	movwf	(___llmod@divisor+1)& (0+255),b
  3908  001728  0E00               	movlw	0
  3909  00172A  0100               	movlb	0	; () banked
  3910  00172C  6F94               	movwf	(___llmod@divisor+2)& (0+255),b
  3911  00172E  0E00               	movlw	0
  3912  001730  0100               	movlb	0	; () banked
  3913  001732  6F95               	movwf	(___llmod@divisor+3)& (0+255),b
  3914  001734  EC3C  F01B         	call	___llmod	;wreg free
  3915  001738  C08E  F107         	movff	?___llmod,sprintf@vd
  3916  00173C  C08F  F108         	movff	?___llmod+1,sprintf@vd+1
  3917  001740  C090  F109         	movff	?___llmod+2,sprintf@vd+2
  3918  001744  C091  F10A         	movff	?___llmod+3,sprintf@vd+3
  3919                           
  3920                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)),(++ccnt));
  3921  001748  0101               	movlb	1	; () banked
  3922  00174A  5107               	movf	sprintf@vd& (0+255),w,b
  3923  00174C  0F30               	addlw	48
  3924  00174E  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3925  001752  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3926  001756                     L9:
  3927  001756  6EDF               	movwf	indf2,c
  3928                           
  3929                           ; BSR set to: 1
  3930  001758  0100               	movlb	0	; () banked
  3931  00175A  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  3932  00175C  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  3933                           
  3934                           ; BSR set to: 0
  3935  00175E  0101               	movlb	1	; () banked
  3936  001760  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  3937  001762  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3938  001764                     l4667:
  3939  001764  0101               	movlb	1	; () banked
  3940  001766  0729               	decf	sprintf@c& (0+255),f,b
  3941  001768  0101               	movlb	1	; () banked
  3942  00176A  2929               	incf	sprintf@c& (0+255),w,b
  3943  00176C  B4D8               	btfsc	status,2,c
  3944  00176E  D011               	goto	l4677
  3945  001770  D79E               	goto	l4657
  3946  001772                     l4669:
  3947                           
  3948                           ; BSR set to: 1
  3949                           ;doprnt.c: 1217: ((*sp++ = ('0')),(++ccnt));
  3950  001772  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  3951  001776  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  3952  00177A  0E30               	movlw	48
  3953  00177C  6EDF               	movwf	indf2,c
  3954                           
  3955                           ; BSR set to: 1
  3956  00177E  0100               	movlb	0	; () banked
  3957  001780  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  3958  001782  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  3959                           
  3960                           ; BSR set to: 0
  3961  001784  0101               	movlb	1	; () banked
  3962  001786  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  3963  001788  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;doprnt.c: 1218: exp--;
  3967  00178A  0101               	movlb	1	; () banked
  3968  00178C  0722               	decf	sprintf@exp& (0+255),f,b
  3969  00178E  A0D8               	btfss	status,0,c
  3970  001790  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  3971  001792                     l4677:
  3972                           
  3973                           ; BSR set to: 1
  3974  001792  0101               	movlb	1	; () banked
  3975  001794  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  3976  001796  0A80               	xorlw	128
  3977  001798  6EF3               	movwf	prodl,c
  3978  00179A  0E80               	movlw	128
  3979  00179C  5CF3               	subwf	prodl,w,c
  3980  00179E  0E01               	movlw	1
  3981  0017A0  B4D8               	btfsc	status,2,c
  3982  0017A2  5D22               	subwf	sprintf@exp& (0+255),w,b
  3983  0017A4  B0D8               	btfsc	status,0,c
  3984  0017A6  D7E5               	goto	l4669
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;doprnt.c: 1219: }
  3988                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3989                           
  3990                           ; BSR set to: 1
  3991  0017A8  0101               	movlb	1	; () banked
  3992  0017AA  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  3993  0017AC  0A80               	xorlw	128
  3994  0017AE  0F80               	addlw	-128
  3995  0017B0  0E09               	movlw	9
  3996  0017B2  B4D8               	btfsc	status,2,c
  3997  0017B4  5D27               	subwf	sprintf@prec& (0+255),w,b
  3998  0017B6  A0D8               	btfss	status,0,c
  3999  0017B8  D004               	goto	l313
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4003  0017BA  0E08               	movlw	8
  4004  0017BC  0101               	movlb	1	; () banked
  4005  0017BE  6F29               	movwf	sprintf@c& (0+255),b
  4006  0017C0  D002               	goto	l4683
  4007  0017C2                     l313:
  4008                           
  4009                           ; BSR set to: 1
  4010                           ;doprnt.c: 1222: else
  4011                           ;doprnt.c: 1223: c = prec;
  4012  0017C2  C127  F129         	movff	sprintf@prec,sprintf@c
  4013  0017C6                     l4683:
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;doprnt.c: 1224: prec -= c;
  4017  0017C6  0101               	movlb	1	; () banked
  4018  0017C8  5129               	movf	sprintf@c& (0+255),w,b
  4019  0017CA  0101               	movlb	1	; () banked
  4020  0017CC  5F27               	subwf	sprintf@prec& (0+255),f,b
  4021  0017CE  0E00               	movlw	0
  4022  0017D0  0101               	movlb	1	; () banked
  4023  0017D2  BF29               	btfsc	sprintf@c& (0+255),7,b
  4024  0017D4  0EFF               	movlw	255
  4025  0017D6  0101               	movlb	1	; () banked
  4026  0017D8  5B28               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4027                           
  4028                           ; BSR set to: 1
  4029                           ;doprnt.c: 1228: if(c)
  4030  0017DA  0101               	movlb	1	; () banked
  4031  0017DC  5129               	movf	sprintf@c& (0+255),w,b
  4032  0017DE  B4D8               	btfsc	status,2,c
  4033  0017E0  D00C               	goto	l4693
  4034                           
  4035                           ; BSR set to: 1
  4036                           ;doprnt.c: 1230: ((*sp++ = ('.')),(++ccnt));
  4037  0017E2  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  4038  0017E6  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  4039  0017EA  0E2E               	movlw	46
  4040  0017EC  6EDF               	movwf	indf2,c
  4041                           
  4042                           ; BSR set to: 1
  4043  0017EE  0100               	movlb	0	; () banked
  4044  0017F0  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  4045  0017F2  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  4046                           
  4047                           ; BSR set to: 0
  4048  0017F4  0101               	movlb	1	; () banked
  4049  0017F6  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  4050  0017F8  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4051  0017FA                     l4693:
  4052                           
  4053                           ; BSR set to: 1
  4054                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  4055  0017FA  0101               	movlb	1	; () banked
  4056  0017FC  5129               	movf	sprintf@c& (0+255),w,b
  4057  0017FE  ECB9  F00D         	call	_scale
  4058  001802  C0B8  F100         	movff	?_scale,_sprintf$1742
  4059  001806  C0B9  F101         	movff	?_scale+1,_sprintf$1742+1
  4060  00180A  C0BA  F102         	movff	?_scale+2,_sprintf$1742+2
  4061                           
  4062                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  4063  00180E  C124  F0AC         	movff	sprintf@fval,___ftmul@f2
  4064  001812  C125  F0AD         	movff	sprintf@fval+1,___ftmul@f2+1
  4065  001816  C126  F0AE         	movff	sprintf@fval+2,___ftmul@f2+2
  4066  00181A  C100  F0A9         	movff	_sprintf$1742,___ftmul@f1
  4067  00181E  C101  F0AA         	movff	_sprintf$1742+1,___ftmul@f1+1
  4068  001822  C102  F0AB         	movff	_sprintf$1742+2,___ftmul@f1+2
  4069  001826  EC13  F015         	call	___ftmul	;wreg free
  4070  00182A  C0A9  F08E         	movff	?___ftmul,___fttol@f1
  4071  00182E  C0AA  F08F         	movff	?___ftmul+1,___fttol@f1+1
  4072  001832  C0AB  F090         	movff	?___ftmul+2,___fttol@f1+2
  4073  001836  EC79  F016         	call	___fttol	;wreg free
  4074  00183A  C08E  F11D         	movff	?___fttol,sprintf@_val
  4075  00183E  C08F  F11E         	movff	?___fttol+1,sprintf@_val+1
  4076  001842  C090  F11F         	movff	?___fttol+2,sprintf@_val+2
  4077  001846  C091  F120         	movff	?___fttol+3,sprintf@_val+3
  4078                           
  4079                           ;doprnt.c: 1237: while(c--) {
  4080  00184A  D08A               	goto	l4709
  4081  00184C                     l4697:
  4082                           
  4083                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  4084  00184C  C11D  F08E         	movff	sprintf@_val,___lldiv@dividend
  4085  001850  C11E  F08F         	movff	sprintf@_val+1,___lldiv@dividend+1
  4086  001854  C11F  F090         	movff	sprintf@_val+2,___lldiv@dividend+2
  4087  001858  C120  F091         	movff	sprintf@_val+3,___lldiv@dividend+3
  4088  00185C  0101               	movlb	1	; () banked
  4089  00185E  5129               	movf	sprintf@c& (0+255),w,b
  4090  001860  0D04               	mullw	4
  4091  001862  0E01               	movlw	low _dpowers
  4092  001864  24F3               	addwf	prodl,w,c
  4093  001866  6EF6               	movwf	tblptrl,c
  4094  001868  0E06               	movlw	high _dpowers
  4095  00186A  20F4               	addwfc	prodh,w,c
  4096  00186C  6EF7               	movwf	tblptrh,c
  4097  00186E                     	if	0	;There are less than 3 active tblptr bytes
  4098  00186E                     	endif
  4099  00186E  0009               	tblrd		*+
  4100  001870  FFFF               	dw	65535	; errata NOP
  4101  001872  0100               	movlb	0	; () banked
  4102  001874  CFF5 F092          	movff	tablat,___lldiv@divisor
  4103  001878  0009               	tblrd		*+
  4104  00187A  FFFF               	dw	65535	; errata NOP
  4105  00187C  0100               	movlb	0	; () banked
  4106  00187E  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  4107  001882  0009               	tblrd		*+
  4108  001884  FFFF               	dw	65535	; errata NOP
  4109  001886  0100               	movlb	0	; () banked
  4110  001888  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  4111  00188C  000A               	tblrd		*-
  4112  00188E  FFFF               	dw	65535	; errata NOP
  4113  001890  0100               	movlb	0	; () banked
  4114  001892  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  4115  001896  ECAA  F019         	call	___lldiv	;wreg free
  4116  00189A  C08E  F10B         	movff	?___lldiv,sprintf@vd_1133
  4117  00189E  C08F  F10C         	movff	?___lldiv+1,sprintf@vd_1133+1
  4118  0018A2  C090  F10D         	movff	?___lldiv+2,sprintf@vd_1133+2
  4119  0018A6  C091  F10E         	movff	?___lldiv+3,sprintf@vd_1133+3
  4120                           
  4121                           ;doprnt.c: 1239: vd %= 10;
  4122  0018AA  C10B  F08E         	movff	sprintf@vd_1133,___llmod@dividend
  4123  0018AE  C10C  F08F         	movff	sprintf@vd_1133+1,___llmod@dividend+1
  4124  0018B2  C10D  F090         	movff	sprintf@vd_1133+2,___llmod@dividend+2
  4125  0018B6  C10E  F091         	movff	sprintf@vd_1133+3,___llmod@dividend+3
  4126  0018BA  0E0A               	movlw	10
  4127  0018BC  0100               	movlb	0	; () banked
  4128  0018BE  6F92               	movwf	___llmod@divisor& (0+255),b
  4129  0018C0  0E00               	movlw	0
  4130  0018C2  0100               	movlb	0	; () banked
  4131  0018C4  6F93               	movwf	(___llmod@divisor+1)& (0+255),b
  4132  0018C6  0E00               	movlw	0
  4133  0018C8  0100               	movlb	0	; () banked
  4134  0018CA  6F94               	movwf	(___llmod@divisor+2)& (0+255),b
  4135  0018CC  0E00               	movlw	0
  4136  0018CE  0100               	movlb	0	; () banked
  4137  0018D0  6F95               	movwf	(___llmod@divisor+3)& (0+255),b
  4138  0018D2  EC3C  F01B         	call	___llmod	;wreg free
  4139  0018D6  C08E  F10B         	movff	?___llmod,sprintf@vd_1133
  4140  0018DA  C08F  F10C         	movff	?___llmod+1,sprintf@vd_1133+1
  4141  0018DE  C090  F10D         	movff	?___llmod+2,sprintf@vd_1133+2
  4142  0018E2  C091  F10E         	movff	?___llmod+3,sprintf@vd_1133+3
  4143                           
  4144                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)),(++ccnt));
  4145  0018E6  0101               	movlb	1	; () banked
  4146  0018E8  510B               	movf	sprintf@vd_1133& (0+255),w,b
  4147  0018EA  0F30               	addlw	48
  4148  0018EC  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  4149  0018F0  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  4150  0018F4  6EDF               	movwf	indf2,c
  4151                           
  4152                           ; BSR set to: 1
  4153  0018F6  0100               	movlb	0	; () banked
  4154  0018F8  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  4155  0018FA  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  4156                           
  4157                           ; BSR set to: 0
  4158  0018FC  0101               	movlb	1	; () banked
  4159  0018FE  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  4160  001900  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4161                           
  4162                           ; BSR set to: 1
  4163                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  4164  001902  C11D  F08E         	movff	sprintf@_val,___llmod@dividend
  4165  001906  C11E  F08F         	movff	sprintf@_val+1,___llmod@dividend+1
  4166  00190A  C11F  F090         	movff	sprintf@_val+2,___llmod@dividend+2
  4167  00190E  C120  F091         	movff	sprintf@_val+3,___llmod@dividend+3
  4168  001912  0101               	movlb	1	; () banked
  4169  001914  5129               	movf	sprintf@c& (0+255),w,b
  4170  001916  0D04               	mullw	4
  4171  001918  0E01               	movlw	low _dpowers
  4172  00191A  24F3               	addwf	prodl,w,c
  4173  00191C  6EF6               	movwf	tblptrl,c
  4174  00191E  0E06               	movlw	high _dpowers
  4175  001920  20F4               	addwfc	prodh,w,c
  4176  001922  6EF7               	movwf	tblptrh,c
  4177  001924                     	if	0	;There are less than 3 active tblptr bytes
  4178  001924                     	endif
  4179  001924  0009               	tblrd		*+
  4180  001926  FFFF               	dw	65535	; errata NOP
  4181  001928  0100               	movlb	0	; () banked
  4182  00192A  CFF5 F092          	movff	tablat,___llmod@divisor
  4183  00192E  0009               	tblrd		*+
  4184  001930  FFFF               	dw	65535	; errata NOP
  4185  001932  0100               	movlb	0	; () banked
  4186  001934  CFF5 F093          	movff	tablat,___llmod@divisor+1
  4187  001938  0009               	tblrd		*+
  4188  00193A  FFFF               	dw	65535	; errata NOP
  4189  00193C  0100               	movlb	0	; () banked
  4190  00193E  CFF5 F094          	movff	tablat,___llmod@divisor+2
  4191  001942  000A               	tblrd		*-
  4192  001944  FFFF               	dw	65535	; errata NOP
  4193  001946  0100               	movlb	0	; () banked
  4194  001948  CFF5 F095          	movff	tablat,___llmod@divisor+3
  4195  00194C  EC3C  F01B         	call	___llmod	;wreg free
  4196  001950  C08E  F11D         	movff	?___llmod,sprintf@_val
  4197  001954  C08F  F11E         	movff	?___llmod+1,sprintf@_val+1
  4198  001958  C090  F11F         	movff	?___llmod+2,sprintf@_val+2
  4199  00195C  C091  F120         	movff	?___llmod+3,sprintf@_val+3
  4200  001960                     l4709:
  4201  001960  0101               	movlb	1	; () banked
  4202  001962  0729               	decf	sprintf@c& (0+255),f,b
  4203  001964  0101               	movlb	1	; () banked
  4204  001966  2929               	incf	sprintf@c& (0+255),w,b
  4205  001968  B4D8               	btfsc	status,2,c
  4206  00196A  D011               	goto	l4719
  4207  00196C  D76F               	goto	l4697
  4208  00196E                     l4711:
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;doprnt.c: 1245: ((*sp++ = ('0')),(++ccnt));
  4212  00196E  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  4213  001972  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  4214  001976  0E30               	movlw	48
  4215  001978  6EDF               	movwf	indf2,c
  4216                           
  4217                           ; BSR set to: 1
  4218  00197A  0100               	movlb	0	; () banked
  4219  00197C  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  4220  00197E  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  4221                           
  4222                           ; BSR set to: 0
  4223  001980  0101               	movlb	1	; () banked
  4224  001982  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  4225  001984  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4226                           
  4227                           ; BSR set to: 1
  4228                           ;doprnt.c: 1246: prec--;
  4229  001986  0101               	movlb	1	; () banked
  4230  001988  0727               	decf	sprintf@prec& (0+255),f,b
  4231  00198A  A0D8               	btfss	status,0,c
  4232  00198C  0728               	decf	(sprintf@prec+1)& (0+255),f,b
  4233  00198E                     l4719:
  4234                           
  4235                           ; BSR set to: 1
  4236  00198E  0101               	movlb	1	; () banked
  4237  001990  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  4238  001992  1127               	iorwf	sprintf@prec& (0+255),w,b
  4239  001994  B4D8               	btfsc	status,2,c
  4240  001996  D0CF               	goto	l4773
  4241  001998  D7EA               	goto	l4711
  4242  00199A                     l4721:
  4243                           
  4244                           ; BSR set to: 1
  4245                           ;doprnt.c: 1255: }
  4246                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  4247  00199A  0101               	movlb	1	; () banked
  4248  00199C  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  4249  00199E  1127               	iorwf	sprintf@prec& (0+255),w,b
  4250  0019A0  A4D8               	btfss	status,2,c
  4251  0019A2  D00A               	goto	l4727
  4252                           
  4253                           ; BSR set to: 1
  4254  0019A4  0101               	movlb	1	; () banked
  4255  0019A6  5120               	movf	(sprintf@_val+3)& (0+255),w,b
  4256  0019A8  111D               	iorwf	sprintf@_val& (0+255),w,b
  4257  0019AA  111E               	iorwf	(sprintf@_val+1)& (0+255),w,b
  4258  0019AC  111F               	iorwf	(sprintf@_val+2)& (0+255),w,b
  4259  0019AE  A4D8               	btfss	status,2,c
  4260  0019B0  D003               	goto	l4727
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;doprnt.c: 1300: prec++;
  4264  0019B2  0101               	movlb	1	; () banked
  4265  0019B4  4B27               	infsnz	sprintf@prec& (0+255),f,b
  4266  0019B6  2B28               	incf	(sprintf@prec+1)& (0+255),f,b
  4267  0019B8                     l4727:
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;doprnt.c: 1348: if(c < prec)
  4271  0019B8  0E80               	movlw	128
  4272  0019BA  0101               	movlb	1	; () banked
  4273  0019BC  BF29               	btfsc	sprintf@c& (0+255),7,b
  4274  0019BE  0E7F               	movlw	127
  4275  0019C0  0100               	movlb	0	; () banked
  4276  0019C2  6FE2               	movwf	??_sprintf& (0+255),b
  4277  0019C4  0101               	movlb	1	; () banked
  4278  0019C6  5127               	movf	sprintf@prec& (0+255),w,b
  4279  0019C8  0101               	movlb	1	; () banked
  4280  0019CA  5D29               	subwf	sprintf@c& (0+255),w,b
  4281  0019CC  0101               	movlb	1	; () banked
  4282  0019CE  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  4283  0019D0  0A80               	xorlw	128
  4284  0019D2  0100               	movlb	0	; () banked
  4285  0019D4  59E2               	subwfb	??_sprintf& (0+255),w,b
  4286  0019D6  B0D8               	btfsc	status,0,c
  4287  0019D8  D003               	goto	l4731
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;doprnt.c: 1349: c = prec;
  4291  0019DA  C127  F129         	movff	sprintf@prec,sprintf@c
  4292  0019DE  D01A               	goto	l4735
  4293  0019E0                     l4731:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;doprnt.c: 1350: else if(prec < c)
  4297  0019E0  0101               	movlb	1	; () banked
  4298  0019E2  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  4299  0019E4  0A80               	xorlw	128
  4300  0019E6  0100               	movlb	0	; () banked
  4301  0019E8  6FE2               	movwf	??_sprintf& (0+255),b
  4302  0019EA  0101               	movlb	1	; () banked
  4303  0019EC  5129               	movf	sprintf@c& (0+255),w,b
  4304  0019EE  0101               	movlb	1	; () banked
  4305  0019F0  5D27               	subwf	sprintf@prec& (0+255),w,b
  4306  0019F2  0E80               	movlw	128
  4307  0019F4  0101               	movlb	1	; () banked
  4308  0019F6  BF29               	btfsc	sprintf@c& (0+255),7,b
  4309  0019F8  0E7F               	movlw	127
  4310  0019FA  0100               	movlb	0	; () banked
  4311  0019FC  59E2               	subwfb	??_sprintf& (0+255),w,b
  4312  0019FE  B0D8               	btfsc	status,0,c
  4313  001A00  D009               	goto	l4735
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;doprnt.c: 1351: prec = c;
  4317  001A02  0101               	movlb	1	; () banked
  4318  001A04  5129               	movf	sprintf@c& (0+255),w,b
  4319  001A06  0101               	movlb	1	; () banked
  4320  001A08  6F27               	movwf	sprintf@prec& (0+255),b
  4321  001A0A  0101               	movlb	1	; () banked
  4322  001A0C  6B28               	clrf	(sprintf@prec+1)& (0+255),b
  4323  001A0E  0101               	movlb	1	; () banked
  4324  001A10  BF27               	btfsc	sprintf@prec& (0+255),7,b
  4325  001A12  0728               	decf	(sprintf@prec+1)& (0+255),f,b
  4326  001A14                     l4735:
  4327                           
  4328                           ;doprnt.c: 1354: if(width && flag & 0x03)
  4329  001A14  0101               	movlb	1	; () banked
  4330  001A16  511A               	movf	(sprintf@width+1)& (0+255),w,b
  4331  001A18  1119               	iorwf	sprintf@width& (0+255),w,b
  4332  001A1A  B4D8               	btfsc	status,2,c
  4333  001A1C  D013               	goto	l4741
  4334                           
  4335                           ; BSR set to: 1
  4336  001A1E  0E03               	movlw	3
  4337  001A20  0101               	movlb	1	; () banked
  4338  001A22  151B               	andwf	sprintf@flag& (0+255),w,b
  4339  001A24  0100               	movlb	0	; () banked
  4340  001A26  6FE2               	movwf	??_sprintf& (0+255),b
  4341  001A28  0E00               	movlw	0
  4342  001A2A  0101               	movlb	1	; () banked
  4343  001A2C  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  4344  001A2E  0100               	movlb	0	; () banked
  4345  001A30  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  4346  001A32  0100               	movlb	0	; () banked
  4347  001A34  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  4348  001A36  11E2               	iorwf	??_sprintf& (0+255),w,b
  4349  001A38  B4D8               	btfsc	status,2,c
  4350  001A3A  D004               	goto	l4741
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;doprnt.c: 1355: width--;
  4354  001A3C  0101               	movlb	1	; () banked
  4355  001A3E  0719               	decf	sprintf@width& (0+255),f,b
  4356  001A40  A0D8               	btfss	status,0,c
  4357  001A42  071A               	decf	(sprintf@width+1)& (0+255),f,b
  4358  001A44                     l4741:
  4359                           
  4360                           ;doprnt.c: 1357: if(flag & 0x4000) {
  4361  001A44  0101               	movlb	1	; () banked
  4362  001A46  AD1C               	btfss	(sprintf@flag+1)& (0+255),6,b
  4363  001A48  D01F               	goto	l4749
  4364                           
  4365                           ; BSR set to: 1
  4366                           ;doprnt.c: 1358: if(width > prec)
  4367  001A4A  0101               	movlb	1	; () banked
  4368  001A4C  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  4369  001A4E  0A80               	xorlw	128
  4370  001A50  0100               	movlb	0	; () banked
  4371  001A52  6FE2               	movwf	??_sprintf& (0+255),b
  4372  001A54  0101               	movlb	1	; () banked
  4373  001A56  5119               	movf	sprintf@width& (0+255),w,b
  4374  001A58  0101               	movlb	1	; () banked
  4375  001A5A  5D27               	subwf	sprintf@prec& (0+255),w,b
  4376  001A5C  0101               	movlb	1	; () banked
  4377  001A5E  511A               	movf	(sprintf@width+1)& (0+255),w,b
  4378  001A60  0A80               	xorlw	128
  4379  001A62  0100               	movlb	0	; () banked
  4380  001A64  59E2               	subwfb	??_sprintf& (0+255),w,b
  4381  001A66  B0D8               	btfsc	status,0,c
  4382  001A68  D009               	goto	l4747
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;doprnt.c: 1359: width -= prec;
  4386  001A6A  0101               	movlb	1	; () banked
  4387  001A6C  5127               	movf	sprintf@prec& (0+255),w,b
  4388  001A6E  0101               	movlb	1	; () banked
  4389  001A70  5F19               	subwf	sprintf@width& (0+255),f,b
  4390  001A72  0101               	movlb	1	; () banked
  4391  001A74  5128               	movf	(sprintf@prec+1)& (0+255),w,b
  4392  001A76  0101               	movlb	1	; () banked
  4393  001A78  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
  4394  001A7A  D006               	goto	l4749
  4395  001A7C                     l4747:
  4396                           
  4397                           ;doprnt.c: 1360: else
  4398                           ;doprnt.c: 1361: width = 0;
  4399  001A7C  0E00               	movlw	0
  4400  001A7E  0101               	movlb	1	; () banked
  4401  001A80  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  4402  001A82  0E00               	movlw	0
  4403  001A84  0101               	movlb	1	; () banked
  4404  001A86  6F19               	movwf	sprintf@width& (0+255),b
  4405  001A88                     l4749:
  4406                           
  4407                           ; BSR set to: 1
  4408                           ;doprnt.c: 1362: }
  4409                           ;doprnt.c: 1390: if(width > c)
  4410  001A88  0E80               	movlw	128
  4411  001A8A  0101               	movlb	1	; () banked
  4412  001A8C  BF29               	btfsc	sprintf@c& (0+255),7,b
  4413  001A8E  0E7F               	movlw	127
  4414  001A90  0100               	movlb	0	; () banked
  4415  001A92  6FE2               	movwf	??_sprintf& (0+255),b
  4416  001A94  0101               	movlb	1	; () banked
  4417  001A96  5119               	movf	sprintf@width& (0+255),w,b
  4418  001A98  0101               	movlb	1	; () banked
  4419  001A9A  5D29               	subwf	sprintf@c& (0+255),w,b
  4420  001A9C  0101               	movlb	1	; () banked
  4421  001A9E  511A               	movf	(sprintf@width+1)& (0+255),w,b
  4422  001AA0  0A80               	xorlw	128
  4423  001AA2  0100               	movlb	0	; () banked
  4424  001AA4  59E2               	subwfb	??_sprintf& (0+255),w,b
  4425  001AA6  B0D8               	btfsc	status,0,c
  4426  001AA8  D00B               	goto	l4753
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;doprnt.c: 1391: width -= c;
  4430  001AAA  0101               	movlb	1	; () banked
  4431  001AAC  5129               	movf	sprintf@c& (0+255),w,b
  4432  001AAE  0101               	movlb	1	; () banked
  4433  001AB0  5F19               	subwf	sprintf@width& (0+255),f,b
  4434  001AB2  0E00               	movlw	0
  4435  001AB4  0101               	movlb	1	; () banked
  4436  001AB6  BF29               	btfsc	sprintf@c& (0+255),7,b
  4437  001AB8  0EFF               	movlw	255
  4438  001ABA  0101               	movlb	1	; () banked
  4439  001ABC  5B1A               	subwfb	(sprintf@width+1)& (0+255),f,b
  4440  001ABE  D006               	goto	l4755
  4441  001AC0                     l4753:
  4442                           
  4443                           ;doprnt.c: 1392: else
  4444                           ;doprnt.c: 1393: width = 0;
  4445  001AC0  0E00               	movlw	0
  4446  001AC2  0101               	movlb	1	; () banked
  4447  001AC4  6F1A               	movwf	(sprintf@width+1)& (0+255),b
  4448  001AC6  0E00               	movlw	0
  4449  001AC8  0101               	movlb	1	; () banked
  4450  001ACA  6F19               	movwf	sprintf@width& (0+255),b
  4451  001ACC                     l4755:
  4452                           
  4453                           ; BSR set to: 1
  4454                           ;doprnt.c: 1431: {
  4455                           ;doprnt.c: 1433: if(width
  4456                           ;doprnt.c: 1437: )
  4457  001ACC  0101               	movlb	1	; () banked
  4458  001ACE  511A               	movf	(sprintf@width+1)& (0+255),w,b
  4459  001AD0  1119               	iorwf	sprintf@width& (0+255),w,b
  4460  001AD2  B4D8               	btfsc	status,2,c
  4461  001AD4  D015               	goto	l4765
  4462  001AD6                     l4757:
  4463                           
  4464                           ; BSR set to: 1
  4465                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
  4466  001AD6  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  4467  001ADA  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  4468  001ADE  0E20               	movlw	32
  4469  001AE0  6EDF               	movwf	indf2,c
  4470                           
  4471                           ; BSR set to: 1
  4472  001AE2  0100               	movlb	0	; () banked
  4473  001AE4  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  4474  001AE6  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  4475                           
  4476                           ; BSR set to: 0
  4477  001AE8  0101               	movlb	1	; () banked
  4478  001AEA  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  4479  001AEC  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4480                           
  4481                           ; BSR set to: 1
  4482                           ;doprnt.c: 1440: while(--width);
  4483  001AEE  0101               	movlb	1	; () banked
  4484  001AF0  0719               	decf	sprintf@width& (0+255),f,b
  4485  001AF2  A0D8               	btfss	status,0,c
  4486  001AF4  071A               	decf	(sprintf@width+1)& (0+255),f,b
  4487  001AF6  0101               	movlb	1	; () banked
  4488  001AF8  511A               	movf	(sprintf@width+1)& (0+255),w,b
  4489  001AFA  1119               	iorwf	sprintf@width& (0+255),w,b
  4490  001AFC  A4D8               	btfss	status,2,c
  4491  001AFE  D7EB               	goto	l4757
  4492  001B00                     l4765:
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;doprnt.c: 1447: if(flag & 0x03)
  4496  001B00  0E03               	movlw	3
  4497  001B02  0101               	movlb	1	; () banked
  4498  001B04  151B               	andwf	sprintf@flag& (0+255),w,b
  4499  001B06  0100               	movlb	0	; () banked
  4500  001B08  6FE2               	movwf	??_sprintf& (0+255),b
  4501  001B0A  0E00               	movlw	0
  4502  001B0C  0101               	movlb	1	; () banked
  4503  001B0E  151C               	andwf	(sprintf@flag+1)& (0+255),w,b
  4504  001B10  0100               	movlb	0	; () banked
  4505  001B12  6FE3               	movwf	(??_sprintf+1)& (0+255),b
  4506  001B14  0100               	movlb	0	; () banked
  4507  001B16  51E3               	movf	(??_sprintf+1)& (0+255),w,b
  4508  001B18  11E2               	iorwf	??_sprintf& (0+255),w,b
  4509  001B1A  B4D8               	btfsc	status,2,c
  4510  001B1C  D00C               	goto	l4773
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
  4514  001B1E  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  4515  001B22  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  4516  001B26  0E2D               	movlw	45
  4517  001B28                     L4:
  4518  001B28  6EDF               	movwf	indf2,c
  4519  001B2A                     L10:
  4520                           
  4521                           ; BSR set to: 0
  4522  001B2A  0100               	movlb	0	; () banked
  4523  001B2C  4BD7               	infsnz	sprintf@sp& (0+255),f,b
  4524  001B2E  2BD8               	incf	(sprintf@sp+1)& (0+255),f,b
  4525                           
  4526                           ; BSR set to: 0
  4527  001B30  0101               	movlb	1	; () banked
  4528  001B32  4B17               	infsnz	sprintf@ccnt& (0+255),f,b
  4529  001B34  2B18               	incf	(sprintf@ccnt+1)& (0+255),f,b
  4530  001B36                     l4773:
  4531  001B36  0100               	movlb	0	; () banked
  4532  001B38  C0D9  FFF6         	movff	sprintf@f,tblptrl
  4533  001B3C  0100               	movlb	0	; () banked
  4534  001B3E  C0DA  FFF7         	movff	sprintf@f+1,tblptrh
  4535  001B42  0100               	movlb	0	; () banked
  4536  001B44  4BD9               	infsnz	sprintf@f& (0+255),f,b
  4537  001B46  2BDA               	incf	(sprintf@f+1)& (0+255),f,b
  4538  001B48                     	if	0	;tblptru may be non-zero
  4539  001B48                     	endif
  4540  001B48                     	if	0	;tblptru may be non-zero
  4541  001B48                     	endif
  4542  001B48  0008               	tblrd		*
  4543  001B4A  FFFF               	dw	65535	; errata NOP
  4544  001B4C  0101               	movlb	1	; () banked
  4545  001B4E  CFF5 F129          	movff	tablat,sprintf@c
  4546  001B52  0101               	movlb	1	; () banked
  4547  001B54  6729               	tstfsz	sprintf@c& (0+255),b
  4548  001B56  EF62  F003         	goto	l4303
  4549  001B5A                     l4775:
  4550                           
  4551                           ; BSR set to: 1
  4552                           ;doprnt.c: 1547: *sp = 0;
  4553  001B5A  C0D7  FFD9         	movff	sprintf@sp,fsr2l
  4554  001B5E  C0D8  FFDA         	movff	sprintf@sp+1,fsr2h
  4555  001B62  0E00               	movlw	0
  4556  001B64  6EDF               	movwf	indf2,c
  4557                           
  4558                           ; BSR set to: 1
  4559                           ;doprnt.c: 1549: return ccnt;
  4560  001B66  C117  F0D7         	movff	sprintf@ccnt,?_sprintf
  4561  001B6A  C118  F0D8         	movff	sprintf@ccnt+1,?_sprintf+1
  4562                           
  4563                           ; BSR set to: 1
  4564                           
  4565                           ; BSR set to: 1
  4566  001B6E  0012               	return	
  4567  001B70  FFFF               	dw	65535	; errata NOP
  4568  001B72                     __end_of_sprintf:
  4569                           	opt stack 0
  4570                           tblptru	equ	0xFF8
  4571                           tblptrh	equ	0xFF7
  4572                           tblptrl	equ	0xFF6
  4573                           tablat	equ	0xFF5
  4574                           prodh	equ	0xFF4
  4575                           prodl	equ	0xFF3
  4576                           postinc0	equ	0xFEE
  4577                           wreg	equ	0xFE8
  4578                           postinc1	equ	0xFE6
  4579                           postdec1	equ	0xFE5
  4580                           fsr1l	equ	0xFE1
  4581                           indf2	equ	0xFDF
  4582                           postinc2	equ	0xFDE
  4583                           postdec2	equ	0xFDD
  4584                           fsr2h	equ	0xFDA
  4585                           fsr2l	equ	0xFD9
  4586                           status	equ	0xFD8
  4587                           
  4588 ;; *************** function _scale *****************
  4589 ;; Defined at:
  4590 ;;		line 425 in file "/Applications/microchip/xc8/v1.33/sources/common/doprnt.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  scl             1    wreg     char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  scl             1   62[BANK0 ] char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  3   56[BANK0 ] char 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4604 ;;      Params:         0       3       0       0       0       0       0
  4605 ;;      Locals:         0       4       0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0
  4607 ;;      Totals:         0       7       0       0       0       0       0
  4608 ;;Total ram usage:        7 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    6
  4611 ;; This function calls:
  4612 ;;		___awdiv
  4613 ;;		___awmod
  4614 ;;		___ftmul
  4615 ;;		___wmul
  4616 ;; This function is called by:
  4617 ;;		_sprintf
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text4
  4622  001B72                     __ptext4:
  4623                           	opt stack 0
  4624  001B72                     _scale:
  4625                           	opt stack 22
  4626                           
  4627                           ; BSR set to: 1
  4628                           ;incstack = 0
  4629  001B72  FFFF               	dw	65535
  4630                           
  4631                           ;scale@scl stored from wreg
  4632  001B74  0100               	movlb	0	; () banked
  4633  001B76  6FBE               	movwf	scale@scl& (0+255),b
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;doprnt.c: 428: if(scl < 0) {
  4637  001B78  0100               	movlb	0	; () banked
  4638  001B7A  AFBE               	btfss	scale@scl& (0+255),7,b
  4639  001B7C  D160               	goto	l4103
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;doprnt.c: 429: scl = -scl;
  4643  001B7E  0100               	movlb	0	; () banked
  4644  001B80  6DBE               	negf	scale@scl& (0+255),b
  4645                           
  4646                           ;doprnt.c: 430: if(scl>=110)
  4647  001B82  0100               	movlb	0	; () banked
  4648  001B84  51BE               	movf	scale@scl& (0+255),w,b
  4649  001B86  0A80               	xorlw	128
  4650  001B88  0F12               	addlw	-238
  4651  001B8A  A0D8               	btfss	status,0,c
  4652  001B8C  D0C9               	goto	l4093
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4656  001B8E  0E00               	movlw	0
  4657  001B90  0100               	movlb	0	; () banked
  4658  001B92  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4659  001B94  0E03               	movlw	3
  4660  001B96  0100               	movlb	0	; () banked
  4661  001B98  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4662  001B9A  0E00               	movlw	0
  4663  001B9C  0100               	movlb	0	; () banked
  4664  001B9E  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4665  001BA0  0E0A               	movlw	10
  4666  001BA2  0100               	movlb	0	; () banked
  4667  001BA4  6F96               	movwf	___awdiv@divisor& (0+255),b
  4668  001BA6  0E00               	movlw	0
  4669  001BA8  0100               	movlb	0	; () banked
  4670  001BAA  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4671  001BAC  0E64               	movlw	100
  4672  001BAE  0100               	movlb	0	; () banked
  4673  001BB0  6F90               	movwf	___awmod@divisor& (0+255),b
  4674  001BB2  0100               	movlb	0	; () banked
  4675  001BB4  51BE               	movf	scale@scl& (0+255),w,b
  4676  001BB6  0100               	movlb	0	; () banked
  4677  001BB8  6F8E               	movwf	___awmod@dividend& (0+255),b
  4678  001BBA  0100               	movlb	0	; () banked
  4679  001BBC  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4680  001BBE  0100               	movlb	0	; () banked
  4681  001BC0  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4682  001BC2  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4683  001BC4  EC82  F01A         	call	___awmod	;wreg free
  4684  001BC8  0100               	movlb	0	; () banked
  4685  001BCA  C08E  F094         	movff	?___awmod,___awdiv@dividend
  4686  001BCE  0100               	movlb	0	; () banked
  4687  001BD0  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  4688  001BD4  ECCA  F018         	call	___awdiv	;wreg free
  4689  001BD8  0E09               	movlw	9
  4690  001BDA  0100               	movlb	0	; () banked
  4691  001BDC  2594               	addwf	?___awdiv& (0+255),w,b
  4692  001BDE  0100               	movlb	0	; () banked
  4693  001BE0  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4694  001BE2  0E00               	movlw	0
  4695  001BE4  0100               	movlb	0	; () banked
  4696  001BE6  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4697  001BE8  0100               	movlb	0	; () banked
  4698  001BEA  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4699  001BEC  ECDF  F01C         	call	___wmul	;wreg free
  4700  001BF0  0E29               	movlw	low __npowers_
  4701  001BF2  0100               	movlb	0	; () banked
  4702  001BF4  259C               	addwf	?___wmul& (0+255),w,b
  4703  001BF6  6EF6               	movwf	tblptrl,c
  4704  001BF8  0E06               	movlw	high __npowers_
  4705  001BFA  0100               	movlb	0	; () banked
  4706  001BFC  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4707  001BFE  6EF7               	movwf	tblptrh,c
  4708  001C00                     	if	0	;There are less than 3 active tblptr bytes
  4709  001C00                     	endif
  4710  001C00  0009               	tblrd		*+
  4711  001C02  FFFF               	dw	65535	; errata NOP
  4712  001C04  0100               	movlb	0	; () banked
  4713  001C06  CFF5 F0AC          	movff	tablat,___ftmul@f2
  4714  001C0A  0009               	tblrd		*+
  4715  001C0C  FFFF               	dw	65535	; errata NOP
  4716  001C0E  0100               	movlb	0	; () banked
  4717  001C10  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  4718  001C14  000A               	tblrd		*-
  4719  001C16  FFFF               	dw	65535	; errata NOP
  4720  001C18  0100               	movlb	0	; () banked
  4721  001C1A  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  4722  001C1E  0E00               	movlw	0
  4723  001C20  0100               	movlb	0	; () banked
  4724  001C22  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4725  001C24  0E64               	movlw	100
  4726  001C26  0100               	movlb	0	; () banked
  4727  001C28  6F96               	movwf	___awdiv@divisor& (0+255),b
  4728  001C2A  0100               	movlb	0	; () banked
  4729  001C2C  51BE               	movf	scale@scl& (0+255),w,b
  4730  001C2E  0100               	movlb	0	; () banked
  4731  001C30  6F94               	movwf	___awdiv@dividend& (0+255),b
  4732  001C32  0100               	movlb	0	; () banked
  4733  001C34  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4734  001C36  0100               	movlb	0	; () banked
  4735  001C38  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4736  001C3A  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4737  001C3C  ECCA  F018         	call	___awdiv	;wreg free
  4738  001C40  0E12               	movlw	18
  4739  001C42  0100               	movlb	0	; () banked
  4740  001C44  2594               	addwf	?___awdiv& (0+255),w,b
  4741  001C46  0100               	movlb	0	; () banked
  4742  001C48  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4743  001C4A  0E00               	movlw	0
  4744  001C4C  0100               	movlb	0	; () banked
  4745  001C4E  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4746  001C50  0100               	movlb	0	; () banked
  4747  001C52  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4748  001C54  0E00               	movlw	0
  4749  001C56  0100               	movlb	0	; () banked
  4750  001C58  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4751  001C5A  0E03               	movlw	3
  4752  001C5C  0100               	movlb	0	; () banked
  4753  001C5E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4754  001C60  ECDF  F01C         	call	___wmul	;wreg free
  4755  001C64  0E29               	movlw	low __npowers_
  4756  001C66  0100               	movlb	0	; () banked
  4757  001C68  259C               	addwf	?___wmul& (0+255),w,b
  4758  001C6A  6EF6               	movwf	tblptrl,c
  4759  001C6C  0E06               	movlw	high __npowers_
  4760  001C6E  0100               	movlb	0	; () banked
  4761  001C70  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4762  001C72  6EF7               	movwf	tblptrh,c
  4763  001C74                     	if	0	;There are less than 3 active tblptr bytes
  4764  001C74                     	endif
  4765  001C74  0009               	tblrd		*+
  4766  001C76  FFFF               	dw	65535	; errata NOP
  4767  001C78  0100               	movlb	0	; () banked
  4768  001C7A  CFF5 F0A9          	movff	tablat,___ftmul@f1
  4769  001C7E  0009               	tblrd		*+
  4770  001C80  FFFF               	dw	65535	; errata NOP
  4771  001C82  0100               	movlb	0	; () banked
  4772  001C84  CFF5 F0AA          	movff	tablat,___ftmul@f1+1
  4773  001C88  000A               	tblrd		*-
  4774  001C8A  FFFF               	dw	65535	; errata NOP
  4775  001C8C  0100               	movlb	0	; () banked
  4776  001C8E  CFF5 F0AB          	movff	tablat,___ftmul@f1+2
  4777  001C92  EC13  F015         	call	___ftmul	;wreg free
  4778  001C96  C0A9  F0BB         	movff	?___ftmul,_scale$1741
  4779  001C9A  C0AA  F0BC         	movff	?___ftmul+1,_scale$1741+1
  4780  001C9E  C0AB  F0BD         	movff	?___ftmul+2,_scale$1741+2
  4781                           
  4782                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4783  001CA2  C0BB  F0A9         	movff	_scale$1741,___ftmul@f1
  4784  001CA6  C0BC  F0AA         	movff	_scale$1741+1,___ftmul@f1+1
  4785  001CAA  C0BD  F0AB         	movff	_scale$1741+2,___ftmul@f1+2
  4786  001CAE  0E00               	movlw	0
  4787  001CB0  0100               	movlb	0	; () banked
  4788  001CB2  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4789  001CB4  0E03               	movlw	3
  4790  001CB6  0100               	movlb	0	; () banked
  4791  001CB8  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4792  001CBA  0E00               	movlw	0
  4793  001CBC  0100               	movlb	0	; () banked
  4794  001CBE  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4795  001CC0  0E0A               	movlw	10
  4796  001CC2  0100               	movlb	0	; () banked
  4797  001CC4  6F90               	movwf	___awmod@divisor& (0+255),b
  4798  001CC6  0100               	movlb	0	; () banked
  4799  001CC8  51BE               	movf	scale@scl& (0+255),w,b
  4800  001CCA  0100               	movlb	0	; () banked
  4801  001CCC  6F8E               	movwf	___awmod@dividend& (0+255),b
  4802  001CCE  0100               	movlb	0	; () banked
  4803  001CD0  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4804  001CD2  0100               	movlb	0	; () banked
  4805  001CD4  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4806  001CD6  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4807  001CD8  EC82  F01A         	call	___awmod	;wreg free
  4808  001CDC  0100               	movlb	0	; () banked
  4809  001CDE  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  4810  001CE2  0100               	movlb	0	; () banked
  4811  001CE4  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  4812  001CE8  ECDF  F01C         	call	___wmul	;wreg free
  4813  001CEC  0E29               	movlw	low __npowers_
  4814  001CEE  0100               	movlb	0	; () banked
  4815  001CF0  259C               	addwf	?___wmul& (0+255),w,b
  4816  001CF2  6EF6               	movwf	tblptrl,c
  4817  001CF4  0E06               	movlw	high __npowers_
  4818  001CF6  0100               	movlb	0	; () banked
  4819  001CF8  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4820  001CFA  6EF7               	movwf	tblptrh,c
  4821  001CFC                     	if	0	;There are less than 3 active tblptr bytes
  4822  001CFC                     	endif
  4823  001CFC  0009               	tblrd		*+
  4824  001CFE  FFFF               	dw	65535	; errata NOP
  4825  001D00  0100               	movlb	0	; () banked
  4826  001D02  CFF5 F0AC          	movff	tablat,___ftmul@f2
  4827  001D06  0009               	tblrd		*+
  4828  001D08  FFFF               	dw	65535	; errata NOP
  4829  001D0A  0100               	movlb	0	; () banked
  4830  001D0C  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  4831  001D10  000A               	tblrd		*-
  4832  001D12  FFFF               	dw	65535	; errata NOP
  4833  001D14  0100               	movlb	0	; () banked
  4834  001D16  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  4835  001D1A  EC13  F015         	call	___ftmul	;wreg free
  4836  001D1E  D1D6               	goto	L14
  4837  001D20                     l4093:
  4838                           
  4839                           ;doprnt.c: 432: else if(scl > 10)
  4840  001D20  0100               	movlb	0	; () banked
  4841  001D22  51BE               	movf	scale@scl& (0+255),w,b
  4842  001D24  0A80               	xorlw	128
  4843  001D26  0F75               	addlw	-139
  4844  001D28  A0D8               	btfss	status,0,c
  4845  001D2A  D073               	goto	l4099
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4849  001D2C  0E00               	movlw	0
  4850  001D2E  0100               	movlb	0	; () banked
  4851  001D30  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4852  001D32  0E0A               	movlw	10
  4853  001D34  0100               	movlb	0	; () banked
  4854  001D36  6F96               	movwf	___awdiv@divisor& (0+255),b
  4855  001D38  0100               	movlb	0	; () banked
  4856  001D3A  51BE               	movf	scale@scl& (0+255),w,b
  4857  001D3C  0100               	movlb	0	; () banked
  4858  001D3E  6F94               	movwf	___awdiv@dividend& (0+255),b
  4859  001D40  0100               	movlb	0	; () banked
  4860  001D42  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4861  001D44  0100               	movlb	0	; () banked
  4862  001D46  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4863  001D48  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4864  001D4A  ECCA  F018         	call	___awdiv	;wreg free
  4865  001D4E  0E09               	movlw	9
  4866  001D50  0100               	movlb	0	; () banked
  4867  001D52  2594               	addwf	?___awdiv& (0+255),w,b
  4868  001D54  0100               	movlb	0	; () banked
  4869  001D56  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4870  001D58  0E00               	movlw	0
  4871  001D5A  0100               	movlb	0	; () banked
  4872  001D5C  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4873  001D5E  0100               	movlb	0	; () banked
  4874  001D60  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4875  001D62  0E00               	movlw	0
  4876  001D64  0100               	movlb	0	; () banked
  4877  001D66  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4878  001D68  0E03               	movlw	3
  4879  001D6A  0100               	movlb	0	; () banked
  4880  001D6C  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4881  001D6E  ECDF  F01C         	call	___wmul	;wreg free
  4882  001D72  0E29               	movlw	low __npowers_
  4883  001D74  0100               	movlb	0	; () banked
  4884  001D76  259C               	addwf	?___wmul& (0+255),w,b
  4885  001D78  6EF6               	movwf	tblptrl,c
  4886  001D7A  0E06               	movlw	high __npowers_
  4887  001D7C  0100               	movlb	0	; () banked
  4888  001D7E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4889  001D80  6EF7               	movwf	tblptrh,c
  4890  001D82                     	if	0	;There are less than 3 active tblptr bytes
  4891  001D82                     	endif
  4892  001D82  0009               	tblrd		*+
  4893  001D84  FFFF               	dw	65535	; errata NOP
  4894  001D86  0100               	movlb	0	; () banked
  4895  001D88  CFF5 F0A9          	movff	tablat,___ftmul@f1
  4896  001D8C  0009               	tblrd		*+
  4897  001D8E  FFFF               	dw	65535	; errata NOP
  4898  001D90  0100               	movlb	0	; () banked
  4899  001D92  CFF5 F0AA          	movff	tablat,___ftmul@f1+1
  4900  001D96  000A               	tblrd		*-
  4901  001D98  FFFF               	dw	65535	; errata NOP
  4902  001D9A  0100               	movlb	0	; () banked
  4903  001D9C  CFF5 F0AB          	movff	tablat,___ftmul@f1+2
  4904  001DA0  0E00               	movlw	0
  4905  001DA2  0100               	movlb	0	; () banked
  4906  001DA4  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4907  001DA6  0E03               	movlw	3
  4908  001DA8  0100               	movlb	0	; () banked
  4909  001DAA  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4910  001DAC  0E00               	movlw	0
  4911  001DAE  0100               	movlb	0	; () banked
  4912  001DB0  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4913  001DB2  0E0A               	movlw	10
  4914  001DB4  0100               	movlb	0	; () banked
  4915  001DB6  6F90               	movwf	___awmod@divisor& (0+255),b
  4916  001DB8  0100               	movlb	0	; () banked
  4917  001DBA  51BE               	movf	scale@scl& (0+255),w,b
  4918  001DBC  0100               	movlb	0	; () banked
  4919  001DBE  6F8E               	movwf	___awmod@dividend& (0+255),b
  4920  001DC0  0100               	movlb	0	; () banked
  4921  001DC2  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4922  001DC4  0100               	movlb	0	; () banked
  4923  001DC6  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4924  001DC8  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4925  001DCA  EC82  F01A         	call	___awmod	;wreg free
  4926  001DCE  0100               	movlb	0	; () banked
  4927  001DD0  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  4928  001DD4  0100               	movlb	0	; () banked
  4929  001DD6  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  4930  001DDA  ECDF  F01C         	call	___wmul	;wreg free
  4931  001DDE  0E29               	movlw	low __npowers_
  4932  001DE0  0100               	movlb	0	; () banked
  4933  001DE2  259C               	addwf	?___wmul& (0+255),w,b
  4934  001DE4  6EF6               	movwf	tblptrl,c
  4935  001DE6  0E06               	movlw	high __npowers_
  4936  001DE8  0100               	movlb	0	; () banked
  4937  001DEA  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4938  001DEC  6EF7               	movwf	tblptrh,c
  4939  001DEE                     	if	0	;There are less than 3 active tblptr bytes
  4940  001DEE                     	endif
  4941  001DEE  0009               	tblrd		*+
  4942  001DF0  FFFF               	dw	65535	; errata NOP
  4943  001DF2  0100               	movlb	0	; () banked
  4944  001DF4  CFF5 F0AC          	movff	tablat,___ftmul@f2
  4945  001DF8  0009               	tblrd		*+
  4946  001DFA  FFFF               	dw	65535	; errata NOP
  4947  001DFC  0100               	movlb	0	; () banked
  4948  001DFE  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  4949  001E02  000A               	tblrd		*-
  4950  001E04  FFFF               	dw	65535	; errata NOP
  4951  001E06  0100               	movlb	0	; () banked
  4952  001E08  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  4953  001E0C  EC13  F015         	call	___ftmul	;wreg free
  4954  001E10  D15D               	goto	L14
  4955  001E12                     l4099:
  4956                           
  4957                           ;doprnt.c: 434: return _npowers_[scl];
  4958  001E12  0100               	movlb	0	; () banked
  4959  001E14  51BE               	movf	scale@scl& (0+255),w,b
  4960  001E16  0D03               	mullw	3
  4961  001E18  0E29               	movlw	low __npowers_
  4962  001E1A  24F3               	addwf	prodl,w,c
  4963  001E1C  6EF6               	movwf	tblptrl,c
  4964  001E1E  0E06               	movlw	high __npowers_
  4965  001E20  20F4               	addwfc	prodh,w,c
  4966  001E22  6EF7               	movwf	tblptrh,c
  4967  001E24                     	if	0	;There are less than 3 active tblptr bytes
  4968  001E24                     	endif
  4969  001E24  0009               	tblrd		*+
  4970  001E26  FFFF               	dw	65535	; errata NOP
  4971  001E28  0100               	movlb	0	; () banked
  4972  001E2A  CFF5 F0B8          	movff	tablat,?_scale
  4973  001E2E  0009               	tblrd		*+
  4974  001E30  FFFF               	dw	65535	; errata NOP
  4975  001E32  0100               	movlb	0	; () banked
  4976  001E34  CFF5 F0B9          	movff	tablat,?_scale+1
  4977  001E38  000A               	tblrd		*-
  4978  001E3A  FFFF               	dw	65535	; errata NOP
  4979  001E3C  D163               	goto	L13
  4980  001E3E                     l4103:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;doprnt.c: 435: }
  4984                           ;doprnt.c: 436: if(scl>=110)
  4985  001E3E  0100               	movlb	0	; () banked
  4986  001E40  51BE               	movf	scale@scl& (0+255),w,b
  4987  001E42  0A80               	xorlw	128
  4988  001E44  0F12               	addlw	-238
  4989  001E46  A0D8               	btfss	status,0,c
  4990  001E48  D0C9               	goto	l4111
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4994  001E4A  0E00               	movlw	0
  4995  001E4C  0100               	movlb	0	; () banked
  4996  001E4E  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4997  001E50  0E03               	movlw	3
  4998  001E52  0100               	movlb	0	; () banked
  4999  001E54  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5000  001E56  0E00               	movlw	0
  5001  001E58  0100               	movlb	0	; () banked
  5002  001E5A  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5003  001E5C  0E0A               	movlw	10
  5004  001E5E  0100               	movlb	0	; () banked
  5005  001E60  6F96               	movwf	___awdiv@divisor& (0+255),b
  5006  001E62  0E00               	movlw	0
  5007  001E64  0100               	movlb	0	; () banked
  5008  001E66  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5009  001E68  0E64               	movlw	100
  5010  001E6A  0100               	movlb	0	; () banked
  5011  001E6C  6F90               	movwf	___awmod@divisor& (0+255),b
  5012  001E6E  0100               	movlb	0	; () banked
  5013  001E70  51BE               	movf	scale@scl& (0+255),w,b
  5014  001E72  0100               	movlb	0	; () banked
  5015  001E74  6F8E               	movwf	___awmod@dividend& (0+255),b
  5016  001E76  0100               	movlb	0	; () banked
  5017  001E78  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5018  001E7A  0100               	movlb	0	; () banked
  5019  001E7C  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5020  001E7E  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5021  001E80  EC82  F01A         	call	___awmod	;wreg free
  5022  001E84  0100               	movlb	0	; () banked
  5023  001E86  C08E  F094         	movff	?___awmod,___awdiv@dividend
  5024  001E8A  0100               	movlb	0	; () banked
  5025  001E8C  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  5026  001E90  ECCA  F018         	call	___awdiv	;wreg free
  5027  001E94  0E09               	movlw	9
  5028  001E96  0100               	movlb	0	; () banked
  5029  001E98  2594               	addwf	?___awdiv& (0+255),w,b
  5030  001E9A  0100               	movlb	0	; () banked
  5031  001E9C  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5032  001E9E  0E00               	movlw	0
  5033  001EA0  0100               	movlb	0	; () banked
  5034  001EA2  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5035  001EA4  0100               	movlb	0	; () banked
  5036  001EA6  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5037  001EA8  ECDF  F01C         	call	___wmul	;wreg free
  5038  001EAC  0E50               	movlw	low __powers_
  5039  001EAE  0100               	movlb	0	; () banked
  5040  001EB0  259C               	addwf	?___wmul& (0+255),w,b
  5041  001EB2  6EF6               	movwf	tblptrl,c
  5042  001EB4  0E06               	movlw	high __powers_
  5043  001EB6  0100               	movlb	0	; () banked
  5044  001EB8  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5045  001EBA  6EF7               	movwf	tblptrh,c
  5046  001EBC                     	if	0	;There are less than 3 active tblptr bytes
  5047  001EBC                     	endif
  5048  001EBC  0009               	tblrd		*+
  5049  001EBE  FFFF               	dw	65535	; errata NOP
  5050  001EC0  0100               	movlb	0	; () banked
  5051  001EC2  CFF5 F0AC          	movff	tablat,___ftmul@f2
  5052  001EC6  0009               	tblrd		*+
  5053  001EC8  FFFF               	dw	65535	; errata NOP
  5054  001ECA  0100               	movlb	0	; () banked
  5055  001ECC  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  5056  001ED0  000A               	tblrd		*-
  5057  001ED2  FFFF               	dw	65535	; errata NOP
  5058  001ED4  0100               	movlb	0	; () banked
  5059  001ED6  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  5060  001EDA  0E00               	movlw	0
  5061  001EDC  0100               	movlb	0	; () banked
  5062  001EDE  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5063  001EE0  0E64               	movlw	100
  5064  001EE2  0100               	movlb	0	; () banked
  5065  001EE4  6F96               	movwf	___awdiv@divisor& (0+255),b
  5066  001EE6  0100               	movlb	0	; () banked
  5067  001EE8  51BE               	movf	scale@scl& (0+255),w,b
  5068  001EEA  0100               	movlb	0	; () banked
  5069  001EEC  6F94               	movwf	___awdiv@dividend& (0+255),b
  5070  001EEE  0100               	movlb	0	; () banked
  5071  001EF0  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5072  001EF2  0100               	movlb	0	; () banked
  5073  001EF4  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  5074  001EF6  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5075  001EF8  ECCA  F018         	call	___awdiv	;wreg free
  5076  001EFC  0E12               	movlw	18
  5077  001EFE  0100               	movlb	0	; () banked
  5078  001F00  2594               	addwf	?___awdiv& (0+255),w,b
  5079  001F02  0100               	movlb	0	; () banked
  5080  001F04  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5081  001F06  0E00               	movlw	0
  5082  001F08  0100               	movlb	0	; () banked
  5083  001F0A  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5084  001F0C  0100               	movlb	0	; () banked
  5085  001F0E  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5086  001F10  0E00               	movlw	0
  5087  001F12  0100               	movlb	0	; () banked
  5088  001F14  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5089  001F16  0E03               	movlw	3
  5090  001F18  0100               	movlb	0	; () banked
  5091  001F1A  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5092  001F1C  ECDF  F01C         	call	___wmul	;wreg free
  5093  001F20  0E50               	movlw	low __powers_
  5094  001F22  0100               	movlb	0	; () banked
  5095  001F24  259C               	addwf	?___wmul& (0+255),w,b
  5096  001F26  6EF6               	movwf	tblptrl,c
  5097  001F28  0E06               	movlw	high __powers_
  5098  001F2A  0100               	movlb	0	; () banked
  5099  001F2C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5100  001F2E  6EF7               	movwf	tblptrh,c
  5101  001F30                     	if	0	;There are less than 3 active tblptr bytes
  5102  001F30                     	endif
  5103  001F30  0009               	tblrd		*+
  5104  001F32  FFFF               	dw	65535	; errata NOP
  5105  001F34  0100               	movlb	0	; () banked
  5106  001F36  CFF5 F0A9          	movff	tablat,___ftmul@f1
  5107  001F3A  0009               	tblrd		*+
  5108  001F3C  FFFF               	dw	65535	; errata NOP
  5109  001F3E  0100               	movlb	0	; () banked
  5110  001F40  CFF5 F0AA          	movff	tablat,___ftmul@f1+1
  5111  001F44  000A               	tblrd		*-
  5112  001F46  FFFF               	dw	65535	; errata NOP
  5113  001F48  0100               	movlb	0	; () banked
  5114  001F4A  CFF5 F0AB          	movff	tablat,___ftmul@f1+2
  5115  001F4E  EC13  F015         	call	___ftmul	;wreg free
  5116  001F52  C0A9  F0BB         	movff	?___ftmul,_scale$1741
  5117  001F56  C0AA  F0BC         	movff	?___ftmul+1,_scale$1741+1
  5118  001F5A  C0AB  F0BD         	movff	?___ftmul+2,_scale$1741+2
  5119                           
  5120                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5121  001F5E  C0BB  F0A9         	movff	_scale$1741,___ftmul@f1
  5122  001F62  C0BC  F0AA         	movff	_scale$1741+1,___ftmul@f1+1
  5123  001F66  C0BD  F0AB         	movff	_scale$1741+2,___ftmul@f1+2
  5124  001F6A  0E00               	movlw	0
  5125  001F6C  0100               	movlb	0	; () banked
  5126  001F6E  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5127  001F70  0E03               	movlw	3
  5128  001F72  0100               	movlb	0	; () banked
  5129  001F74  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5130  001F76  0E00               	movlw	0
  5131  001F78  0100               	movlb	0	; () banked
  5132  001F7A  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5133  001F7C  0E0A               	movlw	10
  5134  001F7E  0100               	movlb	0	; () banked
  5135  001F80  6F90               	movwf	___awmod@divisor& (0+255),b
  5136  001F82  0100               	movlb	0	; () banked
  5137  001F84  51BE               	movf	scale@scl& (0+255),w,b
  5138  001F86  0100               	movlb	0	; () banked
  5139  001F88  6F8E               	movwf	___awmod@dividend& (0+255),b
  5140  001F8A  0100               	movlb	0	; () banked
  5141  001F8C  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5142  001F8E  0100               	movlb	0	; () banked
  5143  001F90  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5144  001F92  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5145  001F94  EC82  F01A         	call	___awmod	;wreg free
  5146  001F98  0100               	movlb	0	; () banked
  5147  001F9A  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5148  001F9E  0100               	movlb	0	; () banked
  5149  001FA0  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5150  001FA4  ECDF  F01C         	call	___wmul	;wreg free
  5151  001FA8  0E50               	movlw	low __powers_
  5152  001FAA  0100               	movlb	0	; () banked
  5153  001FAC  259C               	addwf	?___wmul& (0+255),w,b
  5154  001FAE  6EF6               	movwf	tblptrl,c
  5155  001FB0  0E06               	movlw	high __powers_
  5156  001FB2  0100               	movlb	0	; () banked
  5157  001FB4  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5158  001FB6  6EF7               	movwf	tblptrh,c
  5159  001FB8                     	if	0	;There are less than 3 active tblptr bytes
  5160  001FB8                     	endif
  5161  001FB8  0009               	tblrd		*+
  5162  001FBA  FFFF               	dw	65535	; errata NOP
  5163  001FBC  0100               	movlb	0	; () banked
  5164  001FBE  CFF5 F0AC          	movff	tablat,___ftmul@f2
  5165  001FC2  0009               	tblrd		*+
  5166  001FC4  FFFF               	dw	65535	; errata NOP
  5167  001FC6  0100               	movlb	0	; () banked
  5168  001FC8  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  5169  001FCC  000A               	tblrd		*-
  5170  001FCE  FFFF               	dw	65535	; errata NOP
  5171  001FD0  0100               	movlb	0	; () banked
  5172  001FD2  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  5173  001FD6  EC13  F015         	call	___ftmul	;wreg free
  5174  001FDA  D078               	goto	L14
  5175  001FDC                     l4111:
  5176                           
  5177                           ;doprnt.c: 438: else if(scl > 10)
  5178  001FDC  0100               	movlb	0	; () banked
  5179  001FDE  51BE               	movf	scale@scl& (0+255),w,b
  5180  001FE0  0A80               	xorlw	128
  5181  001FE2  0F75               	addlw	-139
  5182  001FE4  A0D8               	btfss	status,0,c
  5183  001FE6  D079               	goto	l4117
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5187  001FE8  0E00               	movlw	0
  5188  001FEA  0100               	movlb	0	; () banked
  5189  001FEC  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5190  001FEE  0E0A               	movlw	10
  5191  001FF0  0100               	movlb	0	; () banked
  5192  001FF2  6F96               	movwf	___awdiv@divisor& (0+255),b
  5193  001FF4  0100               	movlb	0	; () banked
  5194  001FF6  51BE               	movf	scale@scl& (0+255),w,b
  5195  001FF8  0100               	movlb	0	; () banked
  5196  001FFA  6F94               	movwf	___awdiv@dividend& (0+255),b
  5197  001FFC  0100               	movlb	0	; () banked
  5198  001FFE  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5199  002000  0100               	movlb	0	; () banked
  5200  002002  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  5201  002004  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5202  002006  ECCA  F018         	call	___awdiv	;wreg free
  5203  00200A  0E09               	movlw	9
  5204  00200C  0100               	movlb	0	; () banked
  5205  00200E  2594               	addwf	?___awdiv& (0+255),w,b
  5206  002010  0100               	movlb	0	; () banked
  5207  002012  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5208  002014  0E00               	movlw	0
  5209  002016  0100               	movlb	0	; () banked
  5210  002018  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5211  00201A  0100               	movlb	0	; () banked
  5212  00201C  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5213  00201E  0E00               	movlw	0
  5214  002020  0100               	movlb	0	; () banked
  5215  002022  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5216  002024  0E03               	movlw	3
  5217  002026  0100               	movlb	0	; () banked
  5218  002028  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5219  00202A  ECDF  F01C         	call	___wmul	;wreg free
  5220  00202E  0E50               	movlw	low __powers_
  5221  002030  0100               	movlb	0	; () banked
  5222  002032  259C               	addwf	?___wmul& (0+255),w,b
  5223  002034  6EF6               	movwf	tblptrl,c
  5224  002036  0E06               	movlw	high __powers_
  5225  002038  0100               	movlb	0	; () banked
  5226  00203A  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5227  00203C  6EF7               	movwf	tblptrh,c
  5228  00203E                     	if	0	;There are less than 3 active tblptr bytes
  5229  00203E                     	endif
  5230  00203E  0009               	tblrd		*+
  5231  002040  FFFF               	dw	65535	; errata NOP
  5232  002042  0100               	movlb	0	; () banked
  5233  002044  CFF5 F0A9          	movff	tablat,___ftmul@f1
  5234  002048  0009               	tblrd		*+
  5235  00204A  FFFF               	dw	65535	; errata NOP
  5236  00204C  0100               	movlb	0	; () banked
  5237  00204E  CFF5 F0AA          	movff	tablat,___ftmul@f1+1
  5238  002052  000A               	tblrd		*-
  5239  002054  FFFF               	dw	65535	; errata NOP
  5240  002056  0100               	movlb	0	; () banked
  5241  002058  CFF5 F0AB          	movff	tablat,___ftmul@f1+2
  5242  00205C  0E00               	movlw	0
  5243  00205E  0100               	movlb	0	; () banked
  5244  002060  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5245  002062  0E03               	movlw	3
  5246  002064  0100               	movlb	0	; () banked
  5247  002066  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5248  002068  0E00               	movlw	0
  5249  00206A  0100               	movlb	0	; () banked
  5250  00206C  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5251  00206E  0E0A               	movlw	10
  5252  002070  0100               	movlb	0	; () banked
  5253  002072  6F90               	movwf	___awmod@divisor& (0+255),b
  5254  002074  0100               	movlb	0	; () banked
  5255  002076  51BE               	movf	scale@scl& (0+255),w,b
  5256  002078  0100               	movlb	0	; () banked
  5257  00207A  6F8E               	movwf	___awmod@dividend& (0+255),b
  5258  00207C  0100               	movlb	0	; () banked
  5259  00207E  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5260  002080  0100               	movlb	0	; () banked
  5261  002082  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5262  002084  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5263  002086  EC82  F01A         	call	___awmod	;wreg free
  5264  00208A  0100               	movlb	0	; () banked
  5265  00208C  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5266  002090  0100               	movlb	0	; () banked
  5267  002092  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5268  002096  ECDF  F01C         	call	___wmul	;wreg free
  5269  00209A  0E50               	movlw	low __powers_
  5270  00209C  0100               	movlb	0	; () banked
  5271  00209E  259C               	addwf	?___wmul& (0+255),w,b
  5272  0020A0  6EF6               	movwf	tblptrl,c
  5273  0020A2  0E06               	movlw	high __powers_
  5274  0020A4  0100               	movlb	0	; () banked
  5275  0020A6  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5276  0020A8  6EF7               	movwf	tblptrh,c
  5277  0020AA                     	if	0	;There are less than 3 active tblptr bytes
  5278  0020AA                     	endif
  5279  0020AA  0009               	tblrd		*+
  5280  0020AC  FFFF               	dw	65535	; errata NOP
  5281  0020AE  0100               	movlb	0	; () banked
  5282  0020B0  CFF5 F0AC          	movff	tablat,___ftmul@f2
  5283  0020B4  0009               	tblrd		*+
  5284  0020B6  FFFF               	dw	65535	; errata NOP
  5285  0020B8  0100               	movlb	0	; () banked
  5286  0020BA  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  5287  0020BE  000A               	tblrd		*-
  5288  0020C0  FFFF               	dw	65535	; errata NOP
  5289  0020C2  0100               	movlb	0	; () banked
  5290  0020C4  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  5291  0020C8  EC13  F015         	call	___ftmul	;wreg free
  5292  0020CC                     L14:
  5293  0020CC  C0A9  F0B8         	movff	?___ftmul,?_scale
  5294  0020D0  C0AA  F0B9         	movff	?___ftmul+1,?_scale+1
  5295  0020D4  C0AB  F0BA         	movff	?___ftmul+2,?_scale+2
  5296  0020D8  D018               	goto	l210
  5297  0020DA                     l4117:
  5298                           
  5299                           ;doprnt.c: 440: return _powers_[scl];
  5300  0020DA  0100               	movlb	0	; () banked
  5301  0020DC  51BE               	movf	scale@scl& (0+255),w,b
  5302  0020DE  0D03               	mullw	3
  5303  0020E0  0E50               	movlw	low __powers_
  5304  0020E2  24F3               	addwf	prodl,w,c
  5305  0020E4  6EF6               	movwf	tblptrl,c
  5306  0020E6  0E06               	movlw	high __powers_
  5307  0020E8  20F4               	addwfc	prodh,w,c
  5308  0020EA  6EF7               	movwf	tblptrh,c
  5309  0020EC                     	if	0	;There are less than 3 active tblptr bytes
  5310  0020EC                     	endif
  5311  0020EC  0009               	tblrd		*+
  5312  0020EE  FFFF               	dw	65535	; errata NOP
  5313  0020F0  0100               	movlb	0	; () banked
  5314  0020F2  CFF5 F0B8          	movff	tablat,?_scale
  5315  0020F6  0009               	tblrd		*+
  5316  0020F8  FFFF               	dw	65535	; errata NOP
  5317  0020FA  0100               	movlb	0	; () banked
  5318  0020FC  CFF5 F0B9          	movff	tablat,?_scale+1
  5319  002100  000A               	tblrd		*-
  5320  002102  FFFF               	dw	65535	; errata NOP
  5321  002104                     L13:
  5322  002104  0100               	movlb	0	; () banked
  5323  002106  CFF5 F0BA          	movff	tablat,?_scale+2
  5324  00210A                     l210:
  5325  00210A  0012               	return	
  5326  00210C  FFFF               	dw	65535	; errata NOP
  5327  00210E                     __end_of_scale:
  5328                           	opt stack 0
  5329                           tblptru	equ	0xFF8
  5330                           tblptrh	equ	0xFF7
  5331                           tblptrl	equ	0xFF6
  5332                           tablat	equ	0xFF5
  5333                           prodh	equ	0xFF4
  5334                           prodl	equ	0xFF3
  5335                           postinc0	equ	0xFEE
  5336                           wreg	equ	0xFE8
  5337                           postinc1	equ	0xFE6
  5338                           postdec1	equ	0xFE5
  5339                           fsr1l	equ	0xFE1
  5340                           indf2	equ	0xFDF
  5341                           postinc2	equ	0xFDE
  5342                           postdec2	equ	0xFDD
  5343                           fsr2h	equ	0xFDA
  5344                           fsr2l	equ	0xFD9
  5345                           status	equ	0xFD8
  5346                           
  5347 ;; *************** function _isdigit *****************
  5348 ;; Defined at:
  5349 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/isdigit.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  c               1    wreg     unsigned char 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  c               1   16[BANK0 ] unsigned char 
  5354 ;; Return value:  Size  Location     Type
  5355 ;;		None               void
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5363 ;;      Params:         0       0       0       0       0       0       0
  5364 ;;      Locals:         0       2       0       0       0       0       0
  5365 ;;      Temps:          0       1       0       0       0       0       0
  5366 ;;      Totals:         0       3       0       0       0       0       0
  5367 ;;Total ram usage:        3 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    4
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_sprintf
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text5
  5378  003A68                     __ptext5:
  5379                           	opt stack 0
  5380  003A68                     _isdigit:
  5381                           	opt stack 24
  5382                           
  5383                           ;incstack = 0
  5384  003A68  FFFF               	dw	65535
  5385                           
  5386                           ;isdigit@c stored from wreg
  5387  003A6A  0100               	movlb	0	; () banked
  5388  003A6C  6F90               	movwf	isdigit@c& (0+255),b
  5389                           
  5390                           ; BSR set to: 0
  5391  003A6E  0E00               	movlw	0
  5392  003A70  0100               	movlb	0	; () banked
  5393  003A72  6F8F               	movwf	_isdigit$1503& (0+255),b
  5394                           
  5395                           ; BSR set to: 0
  5396  003A74  0E3A               	movlw	58
  5397  003A76  0100               	movlb	0	; () banked
  5398  003A78  5D90               	subwf	isdigit@c& (0+255),w,b
  5399  003A7A  B0D8               	btfsc	status,0,c
  5400  003A7C  D007               	goto	l4129
  5401                           
  5402                           ; BSR set to: 0
  5403  003A7E  0E2F               	movlw	47
  5404  003A80  0100               	movlb	0	; () banked
  5405  003A82  6590               	cpfsgt	isdigit@c& (0+255),b
  5406  003A84  D003               	goto	l4129
  5407                           
  5408                           ; BSR set to: 0
  5409  003A86  0E01               	movlw	1
  5410  003A88  0100               	movlb	0	; () banked
  5411  003A8A  6F8F               	movwf	_isdigit$1503& (0+255),b
  5412  003A8C                     l4129:
  5413                           
  5414                           ; BSR set to: 0
  5415  003A8C  C08F  F08E         	movff	_isdigit$1503,??_isdigit
  5416  003A90  0100               	movlb	0	; () banked
  5417  003A92  318E               	rrcf	??_isdigit& (0+255),w,b
  5418                           
  5419                           ; BSR set to: 0
  5420                           
  5421                           ; BSR set to: 0
  5422  003A94  0012               	return	
  5423  003A96  FFFF               	dw	65535	; errata NOP
  5424  003A98                     __end_of_isdigit:
  5425                           	opt stack 0
  5426                           tblptru	equ	0xFF8
  5427                           tblptrh	equ	0xFF7
  5428                           tblptrl	equ	0xFF6
  5429                           tablat	equ	0xFF5
  5430                           prodh	equ	0xFF4
  5431                           prodl	equ	0xFF3
  5432                           postinc0	equ	0xFEE
  5433                           wreg	equ	0xFE8
  5434                           postinc1	equ	0xFE6
  5435                           postdec1	equ	0xFE5
  5436                           fsr1l	equ	0xFE1
  5437                           indf2	equ	0xFDF
  5438                           postinc2	equ	0xFDE
  5439                           postdec2	equ	0xFDD
  5440                           fsr2h	equ	0xFDA
  5441                           fsr2l	equ	0xFD9
  5442                           status	equ	0xFD8
  5443                           
  5444 ;; *************** function _fround *****************
  5445 ;; Defined at:
  5446 ;;		line 409 in file "/Applications/microchip/xc8/v1.33/sources/common/doprnt.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  prec            1    wreg     unsigned char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  prec            1   65[BANK0 ] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  3   56[BANK0 ] unsigned char 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5460 ;;      Params:         0       3       0       0       0       0       0
  5461 ;;      Locals:         0       7       0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0
  5463 ;;      Totals:         0      10       0       0       0       0       0
  5464 ;;Total ram usage:       10 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    6
  5467 ;; This function calls:
  5468 ;;		___awdiv
  5469 ;;		___awmod
  5470 ;;		___ftmul
  5471 ;;		___wmul
  5472 ;; This function is called by:
  5473 ;;		_sprintf
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text6
  5478  00210E                     __ptext6:
  5479                           	opt stack 0
  5480  00210E                     _fround:
  5481                           	opt stack 22
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;incstack = 0
  5485  00210E  FFFF               	dw	65535
  5486                           
  5487                           ;fround@prec stored from wreg
  5488  002110  0100               	movlb	0	; () banked
  5489  002112  6FC1               	movwf	fround@prec& (0+255),b
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;doprnt.c: 413: if(prec>=110)
  5493  002114  0E6D               	movlw	109
  5494  002116  0100               	movlb	0	; () banked
  5495  002118  65C1               	cpfsgt	fround@prec& (0+255),b
  5496  00211A  D0D4               	goto	l4071
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5500  00211C  0E00               	movlw	0
  5501  00211E  0100               	movlb	0	; () banked
  5502  002120  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5503  002122  0E03               	movlw	3
  5504  002124  0100               	movlb	0	; () banked
  5505  002126  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5506  002128  0E00               	movlw	0
  5507  00212A  0100               	movlb	0	; () banked
  5508  00212C  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5509  00212E  0E0A               	movlw	10
  5510  002130  0100               	movlb	0	; () banked
  5511  002132  6F96               	movwf	___awdiv@divisor& (0+255),b
  5512  002134  0E00               	movlw	0
  5513  002136  0100               	movlb	0	; () banked
  5514  002138  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5515  00213A  0E64               	movlw	100
  5516  00213C  0100               	movlb	0	; () banked
  5517  00213E  6F90               	movwf	___awmod@divisor& (0+255),b
  5518  002140  0100               	movlb	0	; () banked
  5519  002142  C0C1  F08E         	movff	fround@prec,___awmod@dividend
  5520  002146  0100               	movlb	0	; () banked
  5521  002148  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5522  00214A  EC82  F01A         	call	___awmod	;wreg free
  5523  00214E  0100               	movlb	0	; () banked
  5524  002150  C08E  F094         	movff	?___awmod,___awdiv@dividend
  5525  002154  0100               	movlb	0	; () banked
  5526  002156  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  5527  00215A  ECCA  F018         	call	___awdiv	;wreg free
  5528  00215E  0E09               	movlw	9
  5529  002160  0100               	movlb	0	; () banked
  5530  002162  2594               	addwf	?___awdiv& (0+255),w,b
  5531  002164  0100               	movlb	0	; () banked
  5532  002166  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5533  002168  0E00               	movlw	0
  5534  00216A  0100               	movlb	0	; () banked
  5535  00216C  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5536  00216E  0100               	movlb	0	; () banked
  5537  002170  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5538  002172  ECDF  F01C         	call	___wmul	;wreg free
  5539  002176  0E29               	movlw	low __npowers_
  5540  002178  0100               	movlb	0	; () banked
  5541  00217A  259C               	addwf	?___wmul& (0+255),w,b
  5542  00217C  6EF6               	movwf	tblptrl,c
  5543  00217E  0E06               	movlw	high __npowers_
  5544  002180  0100               	movlb	0	; () banked
  5545  002182  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5546  002184  6EF7               	movwf	tblptrh,c
  5547  002186                     	if	0	;There are less than 3 active tblptr bytes
  5548  002186                     	endif
  5549  002186  0009               	tblrd		*+
  5550  002188  FFFF               	dw	65535	; errata NOP
  5551  00218A  0100               	movlb	0	; () banked
  5552  00218C  CFF5 F0AC          	movff	tablat,___ftmul@f2
  5553  002190  0009               	tblrd		*+
  5554  002192  FFFF               	dw	65535	; errata NOP
  5555  002194  0100               	movlb	0	; () banked
  5556  002196  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  5557  00219A  000A               	tblrd		*-
  5558  00219C  FFFF               	dw	65535	; errata NOP
  5559  00219E  0100               	movlb	0	; () banked
  5560  0021A0  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  5561  0021A4  0E00               	movlw	0
  5562  0021A6  0100               	movlb	0	; () banked
  5563  0021A8  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5564  0021AA  0E64               	movlw	100
  5565  0021AC  0100               	movlb	0	; () banked
  5566  0021AE  6F96               	movwf	___awdiv@divisor& (0+255),b
  5567  0021B0  0100               	movlb	0	; () banked
  5568  0021B2  C0C1  F094         	movff	fround@prec,___awdiv@dividend
  5569  0021B6  0100               	movlb	0	; () banked
  5570  0021B8  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5571  0021BA  ECCA  F018         	call	___awdiv	;wreg free
  5572  0021BE  0E12               	movlw	18
  5573  0021C0  0100               	movlb	0	; () banked
  5574  0021C2  2594               	addwf	?___awdiv& (0+255),w,b
  5575  0021C4  0100               	movlb	0	; () banked
  5576  0021C6  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5577  0021C8  0E00               	movlw	0
  5578  0021CA  0100               	movlb	0	; () banked
  5579  0021CC  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5580  0021CE  0100               	movlb	0	; () banked
  5581  0021D0  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5582  0021D2  0E00               	movlw	0
  5583  0021D4  0100               	movlb	0	; () banked
  5584  0021D6  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5585  0021D8  0E03               	movlw	3
  5586  0021DA  0100               	movlb	0	; () banked
  5587  0021DC  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5588  0021DE  ECDF  F01C         	call	___wmul	;wreg free
  5589  0021E2  0E29               	movlw	low __npowers_
  5590  0021E4  0100               	movlb	0	; () banked
  5591  0021E6  259C               	addwf	?___wmul& (0+255),w,b
  5592  0021E8  6EF6               	movwf	tblptrl,c
  5593  0021EA  0E06               	movlw	high __npowers_
  5594  0021EC  0100               	movlb	0	; () banked
  5595  0021EE  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5596  0021F0  6EF7               	movwf	tblptrh,c
  5597  0021F2                     	if	0	;There are less than 3 active tblptr bytes
  5598  0021F2                     	endif
  5599  0021F2  0009               	tblrd		*+
  5600  0021F4  FFFF               	dw	65535	; errata NOP
  5601  0021F6  0100               	movlb	0	; () banked
  5602  0021F8  CFF5 F0A9          	movff	tablat,___ftmul@f1
  5603  0021FC  0009               	tblrd		*+
  5604  0021FE  FFFF               	dw	65535	; errata NOP
  5605  002200  0100               	movlb	0	; () banked
  5606  002202  CFF5 F0AA          	movff	tablat,___ftmul@f1+1
  5607  002206  000A               	tblrd		*-
  5608  002208  FFFF               	dw	65535	; errata NOP
  5609  00220A  0100               	movlb	0	; () banked
  5610  00220C  CFF5 F0AB          	movff	tablat,___ftmul@f1+2
  5611  002210  EC13  F015         	call	___ftmul	;wreg free
  5612  002214  C0A9  F0BE         	movff	?___ftmul,_fround$1739
  5613  002218  C0AA  F0BF         	movff	?___ftmul+1,_fround$1739+1
  5614  00221C  C0AB  F0C0         	movff	?___ftmul+2,_fround$1739+2
  5615                           
  5616                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5617  002220  0E00               	movlw	0
  5618  002222  0100               	movlb	0	; () banked
  5619  002224  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5620  002226  0E03               	movlw	3
  5621  002228  0100               	movlb	0	; () banked
  5622  00222A  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5623  00222C  0E00               	movlw	0
  5624  00222E  0100               	movlb	0	; () banked
  5625  002230  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5626  002232  0E0A               	movlw	10
  5627  002234  0100               	movlb	0	; () banked
  5628  002236  6F90               	movwf	___awmod@divisor& (0+255),b
  5629  002238  0100               	movlb	0	; () banked
  5630  00223A  C0C1  F08E         	movff	fround@prec,___awmod@dividend
  5631  00223E  0100               	movlb	0	; () banked
  5632  002240  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5633  002242  EC82  F01A         	call	___awmod	;wreg free
  5634  002246  0100               	movlb	0	; () banked
  5635  002248  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5636  00224C  0100               	movlb	0	; () banked
  5637  00224E  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5638  002252  ECDF  F01C         	call	___wmul	;wreg free
  5639  002256  0E29               	movlw	low __npowers_
  5640  002258  0100               	movlb	0	; () banked
  5641  00225A  259C               	addwf	?___wmul& (0+255),w,b
  5642  00225C  6EF6               	movwf	tblptrl,c
  5643  00225E  0E06               	movlw	high __npowers_
  5644  002260  0100               	movlb	0	; () banked
  5645  002262  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5646  002264  6EF7               	movwf	tblptrh,c
  5647  002266                     	if	0	;There are less than 3 active tblptr bytes
  5648  002266                     	endif
  5649  002266  0009               	tblrd		*+
  5650  002268  FFFF               	dw	65535	; errata NOP
  5651  00226A  0100               	movlb	0	; () banked
  5652  00226C  CFF5 F0AC          	movff	tablat,___ftmul@f2
  5653  002270  0009               	tblrd		*+
  5654  002272  FFFF               	dw	65535	; errata NOP
  5655  002274  0100               	movlb	0	; () banked
  5656  002276  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  5657  00227A  000A               	tblrd		*-
  5658  00227C  FFFF               	dw	65535	; errata NOP
  5659  00227E  0100               	movlb	0	; () banked
  5660  002280  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  5661  002284  C0BE  F0A9         	movff	_fround$1739,___ftmul@f1
  5662  002288  C0BF  F0AA         	movff	_fround$1739+1,___ftmul@f1+1
  5663  00228C  C0C0  F0AB         	movff	_fround$1739+2,___ftmul@f1+2
  5664  002290  EC13  F015         	call	___ftmul	;wreg free
  5665  002294  C0A9  F0BB         	movff	?___ftmul,_fround$1740
  5666  002298  C0AA  F0BC         	movff	?___ftmul+1,_fround$1740+1
  5667  00229C  C0AB  F0BD         	movff	?___ftmul+2,_fround$1740+2
  5668                           
  5669                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5670  0022A0  C0BB  F0A9         	movff	_fround$1740,___ftmul@f1
  5671  0022A4  C0BC  F0AA         	movff	_fround$1740+1,___ftmul@f1+1
  5672  0022A8  C0BD  F0AB         	movff	_fround$1740+2,___ftmul@f1+2
  5673  0022AC  0E00               	movlw	0
  5674  0022AE  0100               	movlb	0	; () banked
  5675  0022B0  6FAC               	movwf	___ftmul@f2& (0+255),b
  5676  0022B2  0E00               	movlw	0
  5677  0022B4  0100               	movlb	0	; () banked
  5678  0022B6  6FAD               	movwf	(___ftmul@f2+1)& (0+255),b
  5679  0022B8  0E3F               	movlw	63
  5680  0022BA  0100               	movlb	0	; () banked
  5681  0022BC  6FAE               	movwf	(___ftmul@f2+2)& (0+255),b
  5682  0022BE  EC13  F015         	call	___ftmul	;wreg free
  5683  0022C2  D0A9               	goto	L16
  5684  0022C4                     l4071:
  5685                           
  5686                           ;doprnt.c: 415: else if(prec > 10)
  5687  0022C4  0E0A               	movlw	10
  5688  0022C6  0100               	movlb	0	; () banked
  5689  0022C8  65C1               	cpfsgt	fround@prec& (0+255),b
  5690  0022CA  D082               	goto	l4079
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5694  0022CC  0E00               	movlw	0
  5695  0022CE  0100               	movlb	0	; () banked
  5696  0022D0  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5697  0022D2  0E03               	movlw	3
  5698  0022D4  0100               	movlb	0	; () banked
  5699  0022D6  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5700  0022D8  0E00               	movlw	0
  5701  0022DA  0100               	movlb	0	; () banked
  5702  0022DC  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5703  0022DE  0E0A               	movlw	10
  5704  0022E0  0100               	movlb	0	; () banked
  5705  0022E2  6F90               	movwf	___awmod@divisor& (0+255),b
  5706  0022E4  0100               	movlb	0	; () banked
  5707  0022E6  C0C1  F08E         	movff	fround@prec,___awmod@dividend
  5708  0022EA  0100               	movlb	0	; () banked
  5709  0022EC  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5710  0022EE  EC82  F01A         	call	___awmod	;wreg free
  5711  0022F2  0100               	movlb	0	; () banked
  5712  0022F4  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5713  0022F8  0100               	movlb	0	; () banked
  5714  0022FA  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5715  0022FE  ECDF  F01C         	call	___wmul	;wreg free
  5716  002302  0E29               	movlw	low __npowers_
  5717  002304  0100               	movlb	0	; () banked
  5718  002306  259C               	addwf	?___wmul& (0+255),w,b
  5719  002308  6EF6               	movwf	tblptrl,c
  5720  00230A  0E06               	movlw	high __npowers_
  5721  00230C  0100               	movlb	0	; () banked
  5722  00230E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5723  002310  6EF7               	movwf	tblptrh,c
  5724  002312                     	if	0	;There are less than 3 active tblptr bytes
  5725  002312                     	endif
  5726  002312  0009               	tblrd		*+
  5727  002314  FFFF               	dw	65535	; errata NOP
  5728  002316  0100               	movlb	0	; () banked
  5729  002318  CFF5 F0AC          	movff	tablat,___ftmul@f2
  5730  00231C  0009               	tblrd		*+
  5731  00231E  FFFF               	dw	65535	; errata NOP
  5732  002320  0100               	movlb	0	; () banked
  5733  002322  CFF5 F0AD          	movff	tablat,___ftmul@f2+1
  5734  002326  000A               	tblrd		*-
  5735  002328  FFFF               	dw	65535	; errata NOP
  5736  00232A  0100               	movlb	0	; () banked
  5737  00232C  CFF5 F0AE          	movff	tablat,___ftmul@f2+2
  5738  002330  0E00               	movlw	0
  5739  002332  0100               	movlb	0	; () banked
  5740  002334  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5741  002336  0E0A               	movlw	10
  5742  002338  0100               	movlb	0	; () banked
  5743  00233A  6F96               	movwf	___awdiv@divisor& (0+255),b
  5744  00233C  0100               	movlb	0	; () banked
  5745  00233E  C0C1  F094         	movff	fround@prec,___awdiv@dividend
  5746  002342  0100               	movlb	0	; () banked
  5747  002344  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5748  002346  ECCA  F018         	call	___awdiv	;wreg free
  5749  00234A  0E09               	movlw	9
  5750  00234C  0100               	movlb	0	; () banked
  5751  00234E  2594               	addwf	?___awdiv& (0+255),w,b
  5752  002350  0100               	movlb	0	; () banked
  5753  002352  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5754  002354  0E00               	movlw	0
  5755  002356  0100               	movlb	0	; () banked
  5756  002358  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5757  00235A  0100               	movlb	0	; () banked
  5758  00235C  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5759  00235E  0E00               	movlw	0
  5760  002360  0100               	movlb	0	; () banked
  5761  002362  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5762  002364  0E03               	movlw	3
  5763  002366  0100               	movlb	0	; () banked
  5764  002368  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5765  00236A  ECDF  F01C         	call	___wmul	;wreg free
  5766  00236E  0E29               	movlw	low __npowers_
  5767  002370  0100               	movlb	0	; () banked
  5768  002372  259C               	addwf	?___wmul& (0+255),w,b
  5769  002374  6EF6               	movwf	tblptrl,c
  5770  002376  0E06               	movlw	high __npowers_
  5771  002378  0100               	movlb	0	; () banked
  5772  00237A  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5773  00237C  6EF7               	movwf	tblptrh,c
  5774  00237E                     	if	0	;There are less than 3 active tblptr bytes
  5775  00237E                     	endif
  5776  00237E  0009               	tblrd		*+
  5777  002380  FFFF               	dw	65535	; errata NOP
  5778  002382  0100               	movlb	0	; () banked
  5779  002384  CFF5 F0A9          	movff	tablat,___ftmul@f1
  5780  002388  0009               	tblrd		*+
  5781  00238A  FFFF               	dw	65535	; errata NOP
  5782  00238C  0100               	movlb	0	; () banked
  5783  00238E  CFF5 F0AA          	movff	tablat,___ftmul@f1+1
  5784  002392  000A               	tblrd		*-
  5785  002394  FFFF               	dw	65535	; errata NOP
  5786  002396  0100               	movlb	0	; () banked
  5787  002398  CFF5 F0AB          	movff	tablat,___ftmul@f1+2
  5788  00239C  EC13  F015         	call	___ftmul	;wreg free
  5789  0023A0  C0A9  F0BE         	movff	?___ftmul,_fround$1739
  5790  0023A4  C0AA  F0BF         	movff	?___ftmul+1,_fround$1739+1
  5791  0023A8  C0AB  F0C0         	movff	?___ftmul+2,_fround$1739+2
  5792                           
  5793                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5794  0023AC  C0BE  F0A9         	movff	_fround$1739,___ftmul@f1
  5795  0023B0  C0BF  F0AA         	movff	_fround$1739+1,___ftmul@f1+1
  5796  0023B4  C0C0  F0AB         	movff	_fround$1739+2,___ftmul@f1+2
  5797  0023B8  0E00               	movlw	0
  5798  0023BA  0100               	movlb	0	; () banked
  5799  0023BC  6FAC               	movwf	___ftmul@f2& (0+255),b
  5800  0023BE  0E00               	movlw	0
  5801  0023C0  0100               	movlb	0	; () banked
  5802  0023C2  6FAD               	movwf	(___ftmul@f2+1)& (0+255),b
  5803  0023C4  0E3F               	movlw	63
  5804  0023C6  0100               	movlb	0	; () banked
  5805  0023C8  6FAE               	movwf	(___ftmul@f2+2)& (0+255),b
  5806  0023CA  EC13  F015         	call	___ftmul	;wreg free
  5807  0023CE  D023               	goto	L16
  5808  0023D0                     l4079:
  5809                           
  5810                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5811  0023D0  0100               	movlb	0	; () banked
  5812  0023D2  51C1               	movf	fround@prec& (0+255),w,b
  5813  0023D4  0D03               	mullw	3
  5814  0023D6  0E29               	movlw	low __npowers_
  5815  0023D8  24F3               	addwf	prodl,w,c
  5816  0023DA  6EF6               	movwf	tblptrl,c
  5817  0023DC  0E06               	movlw	high __npowers_
  5818  0023DE  20F4               	addwfc	prodh,w,c
  5819  0023E0  6EF7               	movwf	tblptrh,c
  5820  0023E2                     	if	0	;There are less than 3 active tblptr bytes
  5821  0023E2                     	endif
  5822  0023E2  0009               	tblrd		*+
  5823  0023E4  FFFF               	dw	65535	; errata NOP
  5824  0023E6  0100               	movlb	0	; () banked
  5825  0023E8  CFF5 F0A9          	movff	tablat,___ftmul@f1
  5826  0023EC  0009               	tblrd		*+
  5827  0023EE  FFFF               	dw	65535	; errata NOP
  5828  0023F0  0100               	movlb	0	; () banked
  5829  0023F2  CFF5 F0AA          	movff	tablat,___ftmul@f1+1
  5830  0023F6  000A               	tblrd		*-
  5831  0023F8  FFFF               	dw	65535	; errata NOP
  5832  0023FA  0100               	movlb	0	; () banked
  5833  0023FC  CFF5 F0AB          	movff	tablat,___ftmul@f1+2
  5834  002400  0E00               	movlw	0
  5835  002402  0100               	movlb	0	; () banked
  5836  002404  6FAC               	movwf	___ftmul@f2& (0+255),b
  5837  002406  0E00               	movlw	0
  5838  002408  0100               	movlb	0	; () banked
  5839  00240A  6FAD               	movwf	(___ftmul@f2+1)& (0+255),b
  5840  00240C  0E3F               	movlw	63
  5841  00240E  0100               	movlb	0	; () banked
  5842  002410  6FAE               	movwf	(___ftmul@f2+2)& (0+255),b
  5843  002412  EC13  F015         	call	___ftmul	;wreg free
  5844  002416                     L16:
  5845  002416  C0A9  F0B8         	movff	?___ftmul,?_fround
  5846  00241A  C0AA  F0B9         	movff	?___ftmul+1,?_fround+1
  5847  00241E  C0AB  F0BA         	movff	?___ftmul+2,?_fround+2
  5848  002422  0012               	return	
  5849  002424  FFFF               	dw	65535	; errata NOP
  5850  002426                     __end_of_fround:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           postinc0	equ	0xFEE
  5859                           wreg	equ	0xFE8
  5860                           postinc1	equ	0xFE6
  5861                           postdec1	equ	0xFE5
  5862                           fsr1l	equ	0xFE1
  5863                           indf2	equ	0xFDF
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           fsr2h	equ	0xFDA
  5867                           fsr2l	equ	0xFD9
  5868                           status	equ	0xFD8
  5869                           
  5870 ;; *************** function ___wmul *****************
  5871 ;; Defined at:
  5872 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul16.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  multiplier      2   28[BANK0 ] unsigned int 
  5875 ;;  multiplicand    2   30[BANK0 ] unsigned int 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;  product         2   32[BANK0 ] unsigned int 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  2   28[BANK0 ] unsigned int 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0, prodl, prodh
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5887 ;;      Params:         0       4       0       0       0       0       0
  5888 ;;      Locals:         0       2       0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0
  5890 ;;      Totals:         0       6       0       0       0       0       0
  5891 ;;Total ram usage:        6 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    4
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_fround
  5898 ;;		_scale
  5899 ;;		_sprintf
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text7
  5904  0039BE                     __ptext7:
  5905                           	opt stack 0
  5906  0039BE                     ___wmul:
  5907                           	opt stack 23
  5908                           
  5909                           ;incstack = 0
  5910  0039BE  FFFF               	dw	65535
  5911  0039C0  0100               	movlb	0	; () banked
  5912  0039C2  519C               	movf	___wmul@multiplier& (0+255),w,b
  5913  0039C4  0100               	movlb	0	; () banked
  5914  0039C6  039E               	mulwf	___wmul@multiplicand& (0+255),b
  5915  0039C8  CFF3 F0A0          	movff	prodl,___wmul@product
  5916  0039CC  CFF4 F0A1          	movff	prodh,___wmul@product+1
  5917  0039D0  0100               	movlb	0	; () banked
  5918  0039D2  519C               	movf	___wmul@multiplier& (0+255),w,b
  5919  0039D4  0100               	movlb	0	; () banked
  5920  0039D6  039F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5921  0039D8  50F3               	movf	prodl,w,c
  5922  0039DA  0100               	movlb	0	; () banked
  5923  0039DC  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  5924  0039DE  0100               	movlb	0	; () banked
  5925  0039E0  519D               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5926  0039E2  0100               	movlb	0	; () banked
  5927  0039E4  039E               	mulwf	___wmul@multiplicand& (0+255),b
  5928  0039E6  50F3               	movf	prodl,w,c
  5929  0039E8  0100               	movlb	0	; () banked
  5930  0039EA  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  5931                           
  5932                           ; BSR set to: 0
  5933  0039EC  C0A0  F09C         	movff	___wmul@product,?___wmul
  5934  0039F0  C0A1  F09D         	movff	___wmul@product+1,?___wmul+1
  5935                           
  5936                           ; BSR set to: 0
  5937                           
  5938                           ; BSR set to: 0
  5939  0039F4  0012               	return	
  5940  0039F6  FFFF               	dw	65535	; errata NOP
  5941  0039F8                     __end_of___wmul:
  5942                           	opt stack 0
  5943                           tblptru	equ	0xFF8
  5944                           tblptrh	equ	0xFF7
  5945                           tblptrl	equ	0xFF6
  5946                           tablat	equ	0xFF5
  5947                           prodh	equ	0xFF4
  5948                           prodl	equ	0xFF3
  5949                           postinc0	equ	0xFEE
  5950                           wreg	equ	0xFE8
  5951                           postinc1	equ	0xFE6
  5952                           postdec1	equ	0xFE5
  5953                           fsr1l	equ	0xFE1
  5954                           indf2	equ	0xFDF
  5955                           postinc2	equ	0xFDE
  5956                           postdec2	equ	0xFDD
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function ___ftmul *****************
  5962 ;; Defined at:
  5963 ;;		line 62 in file "/Applications/microchip/xc8/v1.33/sources/common/ftmul.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  f1              3   41[BANK0 ] float 
  5966 ;;  f2              3   44[BANK0 ] float 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  f3_as_produc    3   51[BANK0 ] unsigned um
  5969 ;;  sign            1   55[BANK0 ] unsigned char 
  5970 ;;  cntr            1   54[BANK0 ] unsigned char 
  5971 ;;  exp             1   50[BANK0 ] unsigned char 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  3   41[BANK0 ] float 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5981 ;;      Params:         0       6       0       0       0       0       0
  5982 ;;      Locals:         0       6       0       0       0       0       0
  5983 ;;      Temps:          0       3       0       0       0       0       0
  5984 ;;      Totals:         0      15       0       0       0       0       0
  5985 ;;Total ram usage:       15 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    5
  5988 ;; This function calls:
  5989 ;;		___ftpack
  5990 ;; This function is called by:
  5991 ;;		_fround
  5992 ;;		_scale
  5993 ;;		_sprintf
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text8
  5998  002A26                     __ptext8:
  5999                           	opt stack 0
  6000  002A26                     ___ftmul:
  6001                           	opt stack 22
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;incstack = 0
  6005  002A26  FFFF               	dw	65535
  6006  002A28  0100               	movlb	0	; () banked
  6007  002A2A  C0AB  F0AF         	movff	___ftmul@f1+2,??___ftmul
  6008  002A2E  0100               	movlb	0	; () banked
  6009  002A30  6BB0               	clrf	(??___ftmul+1)& (0+255),b
  6010  002A32  6BB1               	clrf	(??___ftmul+2)& (0+255),b
  6011  002A34  0100               	movlb	0	; () banked
  6012  002A36  35AA               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6013  002A38  0100               	movlb	0	; () banked
  6014  002A3A  37AF               	rlcf	??___ftmul& (0+255),f,b
  6015  002A3C  E301               	bnc	u4461
  6016  002A3E  81B0               	bsf	(??___ftmul+1)& (0+255),0,b
  6017  002A40                     u4461:
  6018  002A40  0100               	movlb	0	; () banked
  6019  002A42  51AF               	movf	??___ftmul& (0+255),w,b
  6020  002A44  0100               	movlb	0	; () banked
  6021  002A46  6FB2               	movwf	___ftmul@exp& (0+255),b
  6022  002A48  0100               	movlb	0	; () banked
  6023  002A4A  67B2               	tstfsz	___ftmul@exp& (0+255),b
  6024  002A4C  D001               	goto	l3927
  6025  002A4E  D013               	goto	u4490
  6026  002A50                     l3927:
  6027                           
  6028                           ; BSR set to: 0
  6029  002A50  0100               	movlb	0	; () banked
  6030  002A52  C0AE  F0AF         	movff	___ftmul@f2+2,??___ftmul
  6031  002A56  0100               	movlb	0	; () banked
  6032  002A58  6BB0               	clrf	(??___ftmul+1)& (0+255),b
  6033  002A5A  6BB1               	clrf	(??___ftmul+2)& (0+255),b
  6034  002A5C  0100               	movlb	0	; () banked
  6035  002A5E  35AD               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6036  002A60  0100               	movlb	0	; () banked
  6037  002A62  37AF               	rlcf	??___ftmul& (0+255),f,b
  6038  002A64  E301               	bnc	u4481
  6039  002A66  81B0               	bsf	(??___ftmul+1)& (0+255),0,b
  6040  002A68                     u4481:
  6041  002A68  0100               	movlb	0	; () banked
  6042  002A6A  51AF               	movf	??___ftmul& (0+255),w,b
  6043  002A6C  0100               	movlb	0	; () banked
  6044  002A6E  6FB7               	movwf	___ftmul@sign& (0+255),b
  6045  002A70  0100               	movlb	0	; () banked
  6046  002A72  67B7               	tstfsz	___ftmul@sign& (0+255),b
  6047  002A74  D00A               	goto	l3933
  6048  002A76                     u4490:
  6049                           
  6050                           ; BSR set to: 0
  6051  002A76  0E00               	movlw	0
  6052  002A78  0100               	movlb	0	; () banked
  6053  002A7A  6FA9               	movwf	?___ftmul& (0+255),b
  6054  002A7C  0E00               	movlw	0
  6055  002A7E  0100               	movlb	0	; () banked
  6056  002A80  6FAA               	movwf	(?___ftmul+1)& (0+255),b
  6057  002A82  0E00               	movlw	0
  6058  002A84  0100               	movlb	0	; () banked
  6059  002A86  6FAB               	movwf	(?___ftmul+2)& (0+255),b
  6060  002A88  D080               	goto	l799
  6061  002A8A                     l3933:
  6062                           
  6063                           ; BSR set to: 0
  6064  002A8A  0100               	movlb	0	; () banked
  6065  002A8C  51B7               	movf	___ftmul@sign& (0+255),w,b
  6066  002A8E  0F7B               	addlw	123
  6067  002A90  0100               	movlb	0	; () banked
  6068  002A92  27B2               	addwf	___ftmul@exp& (0+255),f,b
  6069                           
  6070                           ; BSR set to: 0
  6071  002A94  C0AB  F0B7         	movff	___ftmul@f1+2,___ftmul@sign
  6072  002A98  0100               	movlb	0	; () banked
  6073  002A9A  51AE               	movf	(___ftmul@f2+2)& (0+255),w,b
  6074  002A9C  0100               	movlb	0	; () banked
  6075  002A9E  1BB7               	xorwf	___ftmul@sign& (0+255),f,b
  6076  002AA0  0E80               	movlw	128
  6077  002AA2  0100               	movlb	0	; () banked
  6078  002AA4  17B7               	andwf	___ftmul@sign& (0+255),f,b
  6079                           
  6080                           ; BSR set to: 0
  6081  002AA6  0100               	movlb	0	; () banked
  6082  002AA8  8FAA               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6083                           
  6084                           ; BSR set to: 0
  6085  002AAA  0100               	movlb	0	; () banked
  6086  002AAC  8FAD               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6087                           
  6088                           ; BSR set to: 0
  6089  002AAE  0EFF               	movlw	255
  6090  002AB0  0100               	movlb	0	; () banked
  6091  002AB2  17AC               	andwf	___ftmul@f2& (0+255),f,b
  6092  002AB4  0EFF               	movlw	255
  6093  002AB6  0100               	movlb	0	; () banked
  6094  002AB8  17AD               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6095  002ABA  0E00               	movlw	0
  6096  002ABC  0100               	movlb	0	; () banked
  6097  002ABE  17AE               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6098                           
  6099                           ; BSR set to: 0
  6100  002AC0  0E00               	movlw	0
  6101  002AC2  0100               	movlb	0	; () banked
  6102  002AC4  6FB3               	movwf	___ftmul@f3_as_product& (0+255),b
  6103  002AC6  0E00               	movlw	0
  6104  002AC8  0100               	movlb	0	; () banked
  6105  002ACA  6FB4               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6106  002ACC  0E00               	movlw	0
  6107  002ACE  0100               	movlb	0	; () banked
  6108  002AD0  6FB5               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6109                           
  6110                           ; BSR set to: 0
  6111  002AD2  0E07               	movlw	7
  6112  002AD4  0100               	movlb	0	; () banked
  6113  002AD6  6FB6               	movwf	___ftmul@cntr& (0+255),b
  6114  002AD8                     l3947:
  6115                           
  6116                           ; BSR set to: 0
  6117  002AD8  0100               	movlb	0	; () banked
  6118  002ADA  A1A9               	btfss	___ftmul@f1& (0+255),0,b
  6119  002ADC  D00C               	goto	l3951
  6120                           
  6121                           ; BSR set to: 0
  6122  002ADE  0100               	movlb	0	; () banked
  6123  002AE0  51AC               	movf	___ftmul@f2& (0+255),w,b
  6124  002AE2  0100               	movlb	0	; () banked
  6125  002AE4  27B3               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6126  002AE6  0100               	movlb	0	; () banked
  6127  002AE8  51AD               	movf	(___ftmul@f2+1)& (0+255),w,b
  6128  002AEA  0100               	movlb	0	; () banked
  6129  002AEC  23B4               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6130  002AEE  0100               	movlb	0	; () banked
  6131  002AF0  51AE               	movf	(___ftmul@f2+2)& (0+255),w,b
  6132  002AF2  0100               	movlb	0	; () banked
  6133  002AF4  23B5               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6134  002AF6                     l3951:
  6135                           
  6136                           ; BSR set to: 0
  6137  002AF6  0100               	movlb	0	; () banked
  6138  002AF8  90D8               	bcf	status,0,c
  6139  002AFA  0100               	movlb	0	; () banked
  6140  002AFC  33AB               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6141  002AFE  0100               	movlb	0	; () banked
  6142  002B00  33AA               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6143  002B02  0100               	movlb	0	; () banked
  6144  002B04  33A9               	rrcf	___ftmul@f1& (0+255),f,b
  6145  002B06  0100               	movlb	0	; () banked
  6146  002B08  90D8               	bcf	status,0,c
  6147  002B0A  0100               	movlb	0	; () banked
  6148  002B0C  37AC               	rlcf	___ftmul@f2& (0+255),f,b
  6149  002B0E  0100               	movlb	0	; () banked
  6150  002B10  37AD               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6151  002B12  0100               	movlb	0	; () banked
  6152  002B14  37AE               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6153                           
  6154                           ; BSR set to: 0
  6155  002B16  0100               	movlb	0	; () banked
  6156  002B18  2FB6               	decfsz	___ftmul@cntr& (0+255),f,b
  6157  002B1A  D7DE               	goto	l3947
  6158                           
  6159                           ; BSR set to: 0
  6160                           
  6161                           ; BSR set to: 0
  6162  002B1C  0E09               	movlw	9
  6163  002B1E  0100               	movlb	0	; () banked
  6164  002B20  6FB6               	movwf	___ftmul@cntr& (0+255),b
  6165  002B22                     l3957:
  6166                           
  6167                           ; BSR set to: 0
  6168  002B22  0100               	movlb	0	; () banked
  6169  002B24  A1A9               	btfss	___ftmul@f1& (0+255),0,b
  6170  002B26  D00C               	goto	l3961
  6171                           
  6172                           ; BSR set to: 0
  6173  002B28  0100               	movlb	0	; () banked
  6174  002B2A  51AC               	movf	___ftmul@f2& (0+255),w,b
  6175  002B2C  0100               	movlb	0	; () banked
  6176  002B2E  27B3               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6177  002B30  0100               	movlb	0	; () banked
  6178  002B32  51AD               	movf	(___ftmul@f2+1)& (0+255),w,b
  6179  002B34  0100               	movlb	0	; () banked
  6180  002B36  23B4               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6181  002B38  0100               	movlb	0	; () banked
  6182  002B3A  51AE               	movf	(___ftmul@f2+2)& (0+255),w,b
  6183  002B3C  0100               	movlb	0	; () banked
  6184  002B3E  23B5               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6185  002B40                     l3961:
  6186                           
  6187                           ; BSR set to: 0
  6188  002B40  0100               	movlb	0	; () banked
  6189  002B42  90D8               	bcf	status,0,c
  6190  002B44  0100               	movlb	0	; () banked
  6191  002B46  33AB               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6192  002B48  0100               	movlb	0	; () banked
  6193  002B4A  33AA               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6194  002B4C  0100               	movlb	0	; () banked
  6195  002B4E  33A9               	rrcf	___ftmul@f1& (0+255),f,b
  6196  002B50  0100               	movlb	0	; () banked
  6197  002B52  90D8               	bcf	status,0,c
  6198  002B54  0100               	movlb	0	; () banked
  6199  002B56  33B5               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6200  002B58  0100               	movlb	0	; () banked
  6201  002B5A  33B4               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6202  002B5C  0100               	movlb	0	; () banked
  6203  002B5E  33B3               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6204                           
  6205                           ; BSR set to: 0
  6206  002B60  0100               	movlb	0	; () banked
  6207  002B62  2FB6               	decfsz	___ftmul@cntr& (0+255),f,b
  6208  002B64  D7DE               	goto	l3957
  6209                           
  6210                           ; BSR set to: 0
  6211                           
  6212                           ; BSR set to: 0
  6213  002B66  C0B3  F08E         	movff	___ftmul@f3_as_product,___ftpack@arg
  6214  002B6A  C0B4  F08F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6215  002B6E  C0B5  F090         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6216  002B72  C0B2  F091         	movff	___ftmul@exp,___ftpack@exp
  6217  002B76  C0B7  F092         	movff	___ftmul@sign,___ftpack@sign
  6218  002B7A  ECC5  F017         	call	___ftpack	;wreg free
  6219  002B7E  C08E  F0A9         	movff	?___ftpack,?___ftmul
  6220  002B82  C08F  F0AA         	movff	?___ftpack+1,?___ftmul+1
  6221  002B86  C090  F0AB         	movff	?___ftpack+2,?___ftmul+2
  6222  002B8A                     l799:
  6223  002B8A  0012               	return	
  6224  002B8C  FFFF               	dw	65535	; errata NOP
  6225  002B8E                     __end_of___ftmul:
  6226                           	opt stack 0
  6227                           tblptru	equ	0xFF8
  6228                           tblptrh	equ	0xFF7
  6229                           tblptrl	equ	0xFF6
  6230                           tablat	equ	0xFF5
  6231                           prodh	equ	0xFF4
  6232                           prodl	equ	0xFF3
  6233                           postinc0	equ	0xFEE
  6234                           wreg	equ	0xFE8
  6235                           postinc1	equ	0xFE6
  6236                           postdec1	equ	0xFE5
  6237                           fsr1l	equ	0xFE1
  6238                           indf2	equ	0xFDF
  6239                           postinc2	equ	0xFDE
  6240                           postdec2	equ	0xFDD
  6241                           fsr2h	equ	0xFDA
  6242                           fsr2l	equ	0xFD9
  6243                           status	equ	0xFD8
  6244                           
  6245 ;; *************** function ___awmod *****************
  6246 ;; Defined at:
  6247 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/awmod.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  dividend        2   14[BANK0 ] int 
  6250 ;;  divisor         2   16[BANK0 ] int 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  sign            1   19[BANK0 ] unsigned char 
  6253 ;;  counter         1   18[BANK0 ] unsigned char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  2   14[BANK0 ] int 
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0, prodl
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6263 ;;      Params:         0       4       0       0       0       0       0
  6264 ;;      Locals:         0       2       0       0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0
  6266 ;;      Totals:         0       6       0       0       0       0       0
  6267 ;;Total ram usage:        6 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    4
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_fround
  6274 ;;		_scale
  6275 ;;		_sprintf
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text9
  6280  003504                     __ptext9:
  6281                           	opt stack 0
  6282  003504                     ___awmod:
  6283                           	opt stack 23
  6284                           
  6285                           ;incstack = 0
  6286  003504  FFFF               	dw	65535
  6287  003506  0E00               	movlw	0
  6288  003508  0100               	movlb	0	; () banked
  6289  00350A  6F93               	movwf	___awmod@sign& (0+255),b
  6290                           
  6291                           ; BSR set to: 0
  6292  00350C  0100               	movlb	0	; () banked
  6293  00350E  518F               	movf	(___awmod@dividend+1)& (0+255),w,b
  6294  003510  0A80               	xorlw	128
  6295  003512  6EF3               	movwf	prodl,c
  6296  003514  0E80               	movlw	128
  6297  003516  5CF3               	subwf	prodl,w,c
  6298  003518  0E00               	movlw	0
  6299  00351A  B4D8               	btfsc	status,2,c
  6300  00351C  5D8E               	subwf	___awmod@dividend& (0+255),w,b
  6301  00351E  B0D8               	btfsc	status,0,c
  6302  003520  D009               	goto	l4021
  6303                           
  6304                           ; BSR set to: 0
  6305  003522  0100               	movlb	0	; () banked
  6306  003524  6D8E               	negf	___awmod@dividend& (0+255),b
  6307  003526  0100               	movlb	0	; () banked
  6308  003528  1F8F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6309  00352A  B0D8               	btfsc	status,0,c
  6310  00352C  2B8F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6311                           
  6312                           ; BSR set to: 0
  6313  00352E  0E01               	movlw	1
  6314  003530  0100               	movlb	0	; () banked
  6315  003532  6F93               	movwf	___awmod@sign& (0+255),b
  6316  003534                     l4021:
  6317                           
  6318                           ; BSR set to: 0
  6319  003534  0100               	movlb	0	; () banked
  6320  003536  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6321  003538  0A80               	xorlw	128
  6322  00353A  6EF3               	movwf	prodl,c
  6323  00353C  0E80               	movlw	128
  6324  00353E  5CF3               	subwf	prodl,w,c
  6325  003540  0E00               	movlw	0
  6326  003542  B4D8               	btfsc	status,2,c
  6327  003544  5D90               	subwf	___awmod@divisor& (0+255),w,b
  6328  003546  B0D8               	btfsc	status,0,c
  6329  003548  D006               	goto	l4025
  6330                           
  6331                           ; BSR set to: 0
  6332  00354A  0100               	movlb	0	; () banked
  6333  00354C  6D90               	negf	___awmod@divisor& (0+255),b
  6334  00354E  0100               	movlb	0	; () banked
  6335  003550  1F91               	comf	(___awmod@divisor+1)& (0+255),f,b
  6336  003552  B0D8               	btfsc	status,0,c
  6337  003554  2B91               	incf	(___awmod@divisor+1)& (0+255),f,b
  6338  003556                     l4025:
  6339                           
  6340                           ; BSR set to: 0
  6341  003556  0100               	movlb	0	; () banked
  6342  003558  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6343  00355A  1190               	iorwf	___awmod@divisor& (0+255),w,b
  6344  00355C  B4D8               	btfsc	status,2,c
  6345  00355E  D026               	goto	l4041
  6346                           
  6347                           ; BSR set to: 0
  6348  003560  0E01               	movlw	1
  6349  003562  0100               	movlb	0	; () banked
  6350  003564  6F92               	movwf	___awmod@counter& (0+255),b
  6351  003566  D006               	goto	l4031
  6352  003568                     l4029:
  6353                           
  6354                           ; BSR set to: 0
  6355  003568  0100               	movlb	0	; () banked
  6356  00356A  90D8               	bcf	status,0,c
  6357  00356C  3790               	rlcf	___awmod@divisor& (0+255),f,b
  6358  00356E  3791               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6359  003570  0100               	movlb	0	; () banked
  6360  003572  2B92               	incf	___awmod@counter& (0+255),f,b
  6361  003574                     l4031:
  6362                           
  6363                           ; BSR set to: 0
  6364  003574  0100               	movlb	0	; () banked
  6365  003576  AF91               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6366  003578  D7F7               	goto	l4029
  6367  00357A                     l4033:
  6368                           
  6369                           ; BSR set to: 0
  6370  00357A  0100               	movlb	0	; () banked
  6371  00357C  5190               	movf	___awmod@divisor& (0+255),w,b
  6372  00357E  0100               	movlb	0	; () banked
  6373  003580  5D8E               	subwf	___awmod@dividend& (0+255),w,b
  6374  003582  0100               	movlb	0	; () banked
  6375  003584  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6376  003586  0100               	movlb	0	; () banked
  6377  003588  598F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6378  00358A  A0D8               	btfss	status,0,c
  6379  00358C  D008               	goto	l4037
  6380                           
  6381                           ; BSR set to: 0
  6382  00358E  0100               	movlb	0	; () banked
  6383  003590  5190               	movf	___awmod@divisor& (0+255),w,b
  6384  003592  0100               	movlb	0	; () banked
  6385  003594  5F8E               	subwf	___awmod@dividend& (0+255),f,b
  6386  003596  0100               	movlb	0	; () banked
  6387  003598  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6388  00359A  0100               	movlb	0	; () banked
  6389  00359C  5B8F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6390  00359E                     l4037:
  6391                           
  6392                           ; BSR set to: 0
  6393  00359E  0100               	movlb	0	; () banked
  6394  0035A0  90D8               	bcf	status,0,c
  6395  0035A2  3391               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6396  0035A4  3390               	rrcf	___awmod@divisor& (0+255),f,b
  6397                           
  6398                           ; BSR set to: 0
  6399  0035A6  0100               	movlb	0	; () banked
  6400  0035A8  2F92               	decfsz	___awmod@counter& (0+255),f,b
  6401  0035AA  D7E7               	goto	l4033
  6402  0035AC                     l4041:
  6403                           
  6404                           ; BSR set to: 0
  6405  0035AC  0100               	movlb	0	; () banked
  6406  0035AE  5193               	movf	___awmod@sign& (0+255),w,b
  6407  0035B0  B4D8               	btfsc	status,2,c
  6408  0035B2  D006               	goto	l4045
  6409                           
  6410                           ; BSR set to: 0
  6411  0035B4  0100               	movlb	0	; () banked
  6412  0035B6  6D8E               	negf	___awmod@dividend& (0+255),b
  6413  0035B8  0100               	movlb	0	; () banked
  6414  0035BA  1F8F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6415  0035BC  B0D8               	btfsc	status,0,c
  6416  0035BE  2B8F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6417  0035C0                     l4045:
  6418                           
  6419                           ; BSR set to: 0
  6420  0035C0  C08E  F08E         	movff	___awmod@dividend,?___awmod
  6421  0035C4  C08F  F08F         	movff	___awmod@dividend+1,?___awmod+1
  6422                           
  6423                           ; BSR set to: 0
  6424                           
  6425                           ; BSR set to: 0
  6426  0035C8  0012               	return	
  6427  0035CA  FFFF               	dw	65535	; errata NOP
  6428  0035CC                     __end_of___awmod:
  6429                           	opt stack 0
  6430                           tblptru	equ	0xFF8
  6431                           tblptrh	equ	0xFF7
  6432                           tblptrl	equ	0xFF6
  6433                           tablat	equ	0xFF5
  6434                           prodh	equ	0xFF4
  6435                           prodl	equ	0xFF3
  6436                           postinc0	equ	0xFEE
  6437                           wreg	equ	0xFE8
  6438                           postinc1	equ	0xFE6
  6439                           postdec1	equ	0xFE5
  6440                           fsr1l	equ	0xFE1
  6441                           indf2	equ	0xFDF
  6442                           postinc2	equ	0xFDE
  6443                           postdec2	equ	0xFDD
  6444                           fsr2h	equ	0xFDA
  6445                           fsr2l	equ	0xFD9
  6446                           status	equ	0xFD8
  6447                           
  6448 ;; *************** function ___awdiv *****************
  6449 ;; Defined at:
  6450 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/awdiv.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  dividend        2   20[BANK0 ] int 
  6453 ;;  divisor         2   22[BANK0 ] int 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  quotient        2   26[BANK0 ] int 
  6456 ;;  sign            1   25[BANK0 ] unsigned char 
  6457 ;;  counter         1   24[BANK0 ] unsigned char 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  2   20[BANK0 ] int 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2, status,0, prodl
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6467 ;;      Params:         0       4       0       0       0       0       0
  6468 ;;      Locals:         0       4       0       0       0       0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0
  6470 ;;      Totals:         0       8       0       0       0       0       0
  6471 ;;Total ram usage:        8 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    4
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_fround
  6478 ;;		_scale
  6479 ;;		_sprintf
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text10
  6484  003194                     __ptext10:
  6485                           	opt stack 0
  6486  003194                     ___awdiv:
  6487                           	opt stack 23
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;incstack = 0
  6491  003194  FFFF               	dw	65535
  6492  003196  0E00               	movlw	0
  6493  003198  0100               	movlb	0	; () banked
  6494  00319A  6F99               	movwf	___awdiv@sign& (0+255),b
  6495                           
  6496                           ; BSR set to: 0
  6497  00319C  0100               	movlb	0	; () banked
  6498  00319E  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6499  0031A0  0A80               	xorlw	128
  6500  0031A2  6EF3               	movwf	prodl,c
  6501  0031A4  0E80               	movlw	128
  6502  0031A6  5CF3               	subwf	prodl,w,c
  6503  0031A8  0E00               	movlw	0
  6504  0031AA  B4D8               	btfsc	status,2,c
  6505  0031AC  5D96               	subwf	___awdiv@divisor& (0+255),w,b
  6506  0031AE  B0D8               	btfsc	status,0,c
  6507  0031B0  D009               	goto	l3977
  6508                           
  6509                           ; BSR set to: 0
  6510  0031B2  0100               	movlb	0	; () banked
  6511  0031B4  6D96               	negf	___awdiv@divisor& (0+255),b
  6512  0031B6  0100               	movlb	0	; () banked
  6513  0031B8  1F97               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6514  0031BA  B0D8               	btfsc	status,0,c
  6515  0031BC  2B97               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6516                           
  6517                           ; BSR set to: 0
  6518  0031BE  0E01               	movlw	1
  6519  0031C0  0100               	movlb	0	; () banked
  6520  0031C2  6F99               	movwf	___awdiv@sign& (0+255),b
  6521  0031C4                     l3977:
  6522                           
  6523                           ; BSR set to: 0
  6524  0031C4  0100               	movlb	0	; () banked
  6525  0031C6  5195               	movf	(___awdiv@dividend+1)& (0+255),w,b
  6526  0031C8  0A80               	xorlw	128
  6527  0031CA  6EF3               	movwf	prodl,c
  6528  0031CC  0E80               	movlw	128
  6529  0031CE  5CF3               	subwf	prodl,w,c
  6530  0031D0  0E00               	movlw	0
  6531  0031D2  B4D8               	btfsc	status,2,c
  6532  0031D4  5D94               	subwf	___awdiv@dividend& (0+255),w,b
  6533  0031D6  B0D8               	btfsc	status,0,c
  6534  0031D8  D009               	goto	l3983
  6535                           
  6536                           ; BSR set to: 0
  6537  0031DA  0100               	movlb	0	; () banked
  6538  0031DC  6D94               	negf	___awdiv@dividend& (0+255),b
  6539  0031DE  0100               	movlb	0	; () banked
  6540  0031E0  1F95               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6541  0031E2  B0D8               	btfsc	status,0,c
  6542  0031E4  2B95               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6543                           
  6544                           ; BSR set to: 0
  6545  0031E6  0E01               	movlw	1
  6546  0031E8  0100               	movlb	0	; () banked
  6547  0031EA  1B99               	xorwf	___awdiv@sign& (0+255),f,b
  6548  0031EC                     l3983:
  6549                           
  6550                           ; BSR set to: 0
  6551  0031EC  0E00               	movlw	0
  6552  0031EE  0100               	movlb	0	; () banked
  6553  0031F0  6F9B               	movwf	(___awdiv@quotient+1)& (0+255),b
  6554  0031F2  0E00               	movlw	0
  6555  0031F4  0100               	movlb	0	; () banked
  6556  0031F6  6F9A               	movwf	___awdiv@quotient& (0+255),b
  6557                           
  6558                           ; BSR set to: 0
  6559  0031F8  0100               	movlb	0	; () banked
  6560  0031FA  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6561  0031FC  1196               	iorwf	___awdiv@divisor& (0+255),w,b
  6562  0031FE  B4D8               	btfsc	status,2,c
  6563  003200  D02C               	goto	l4005
  6564                           
  6565                           ; BSR set to: 0
  6566  003202  0E01               	movlw	1
  6567  003204  0100               	movlb	0	; () banked
  6568  003206  6F98               	movwf	___awdiv@counter& (0+255),b
  6569  003208  D006               	goto	l3991
  6570  00320A                     l3989:
  6571                           
  6572                           ; BSR set to: 0
  6573  00320A  0100               	movlb	0	; () banked
  6574  00320C  90D8               	bcf	status,0,c
  6575  00320E  3796               	rlcf	___awdiv@divisor& (0+255),f,b
  6576  003210  3797               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6577  003212  0100               	movlb	0	; () banked
  6578  003214  2B98               	incf	___awdiv@counter& (0+255),f,b
  6579  003216                     l3991:
  6580                           
  6581                           ; BSR set to: 0
  6582  003216  0100               	movlb	0	; () banked
  6583  003218  AF97               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6584  00321A  D7F7               	goto	l3989
  6585  00321C                     l3993:
  6586                           
  6587                           ; BSR set to: 0
  6588  00321C  0100               	movlb	0	; () banked
  6589  00321E  90D8               	bcf	status,0,c
  6590  003220  379A               	rlcf	___awdiv@quotient& (0+255),f,b
  6591  003222  379B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6592                           
  6593                           ; BSR set to: 0
  6594  003224  0100               	movlb	0	; () banked
  6595  003226  5196               	movf	___awdiv@divisor& (0+255),w,b
  6596  003228  0100               	movlb	0	; () banked
  6597  00322A  5D94               	subwf	___awdiv@dividend& (0+255),w,b
  6598  00322C  0100               	movlb	0	; () banked
  6599  00322E  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6600  003230  0100               	movlb	0	; () banked
  6601  003232  5995               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6602  003234  A0D8               	btfss	status,0,c
  6603  003236  D00A               	goto	l4001
  6604                           
  6605                           ; BSR set to: 0
  6606  003238  0100               	movlb	0	; () banked
  6607  00323A  5196               	movf	___awdiv@divisor& (0+255),w,b
  6608  00323C  0100               	movlb	0	; () banked
  6609  00323E  5F94               	subwf	___awdiv@dividend& (0+255),f,b
  6610  003240  0100               	movlb	0	; () banked
  6611  003242  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6612  003244  0100               	movlb	0	; () banked
  6613  003246  5B95               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6614                           
  6615                           ; BSR set to: 0
  6616  003248  0100               	movlb	0	; () banked
  6617  00324A  819A               	bsf	___awdiv@quotient& (0+255),0,b
  6618  00324C                     l4001:
  6619                           
  6620                           ; BSR set to: 0
  6621  00324C  0100               	movlb	0	; () banked
  6622  00324E  90D8               	bcf	status,0,c
  6623  003250  3397               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6624  003252  3396               	rrcf	___awdiv@divisor& (0+255),f,b
  6625                           
  6626                           ; BSR set to: 0
  6627  003254  0100               	movlb	0	; () banked
  6628  003256  2F98               	decfsz	___awdiv@counter& (0+255),f,b
  6629  003258  D7E1               	goto	l3993
  6630  00325A                     l4005:
  6631                           
  6632                           ; BSR set to: 0
  6633  00325A  0100               	movlb	0	; () banked
  6634  00325C  5199               	movf	___awdiv@sign& (0+255),w,b
  6635  00325E  B4D8               	btfsc	status,2,c
  6636  003260  D006               	goto	l4009
  6637                           
  6638                           ; BSR set to: 0
  6639  003262  0100               	movlb	0	; () banked
  6640  003264  6D9A               	negf	___awdiv@quotient& (0+255),b
  6641  003266  0100               	movlb	0	; () banked
  6642  003268  1F9B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6643  00326A  B0D8               	btfsc	status,0,c
  6644  00326C  2B9B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6645  00326E                     l4009:
  6646                           
  6647                           ; BSR set to: 0
  6648  00326E  C09A  F094         	movff	___awdiv@quotient,?___awdiv
  6649  003272  C09B  F095         	movff	___awdiv@quotient+1,?___awdiv+1
  6650                           
  6651                           ; BSR set to: 0
  6652                           
  6653                           ; BSR set to: 0
  6654  003276  0012               	return	
  6655  003278  FFFF               	dw	65535	; errata NOP
  6656  00327A                     __end_of___awdiv:
  6657                           	opt stack 0
  6658                           tblptru	equ	0xFF8
  6659                           tblptrh	equ	0xFF7
  6660                           tblptrl	equ	0xFF6
  6661                           tablat	equ	0xFF5
  6662                           prodh	equ	0xFF4
  6663                           prodl	equ	0xFF3
  6664                           postinc0	equ	0xFEE
  6665                           wreg	equ	0xFE8
  6666                           postinc1	equ	0xFE6
  6667                           postdec1	equ	0xFE5
  6668                           fsr1l	equ	0xFE1
  6669                           indf2	equ	0xFDF
  6670                           postinc2	equ	0xFDE
  6671                           postdec2	equ	0xFDD
  6672                           fsr2h	equ	0xFDA
  6673                           fsr2l	equ	0xFD9
  6674                           status	equ	0xFD8
  6675                           
  6676 ;; *************** function __tdiv_to_l_ *****************
  6677 ;; Defined at:
  6678 ;;		line 60 in file "/Applications/microchip/xc8/v1.33/sources/common/ftdivl.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  f1              3   14[BANK0 ] float 
  6681 ;;  f2              3   17[BANK0 ] float 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  quot            4   23[BANK0 ] unsigned long 
  6684 ;;  exp1            1   28[BANK0 ] unsigned char 
  6685 ;;  cntr            1   27[BANK0 ] unsigned char 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  4   14[BANK0 ] unsigned long 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6695 ;;      Params:         0       6       0       0       0       0       0
  6696 ;;      Locals:         0       6       0       0       0       0       0
  6697 ;;      Temps:          0       3       0       0       0       0       0
  6698 ;;      Totals:         0      15       0       0       0       0       0
  6699 ;;Total ram usage:       15 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    4
  6702 ;; This function calls:
  6703 ;;		Nothing
  6704 ;; This function is called by:
  6705 ;;		_sprintf
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text11
  6710  00288C                     __ptext11:
  6711                           	opt stack 0
  6712  00288C                     __tdiv_to_l_:
  6713                           	opt stack 24
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;incstack = 0
  6717  00288C  FFFF               	dw	65535
  6718  00288E  0100               	movlb	0	; () banked
  6719  002890  C090  F094         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6720  002894  0100               	movlb	0	; () banked
  6721  002896  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6722  002898  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6723  00289A  0100               	movlb	0	; () banked
  6724  00289C  358F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6725  00289E  0100               	movlb	0	; () banked
  6726  0028A0  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6727  0028A2  E301               	bnc	u2651
  6728  0028A4  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6729  0028A6                     u2651:
  6730  0028A6  0100               	movlb	0	; () banked
  6731  0028A8  5194               	movf	??__tdiv_to_l_& (0+255),w,b
  6732  0028AA  0100               	movlb	0	; () banked
  6733  0028AC  6F9C               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6734  0028AE  0100               	movlb	0	; () banked
  6735  0028B0  679C               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  6736  0028B2  D001               	goto	l2743
  6737  0028B4  D092               	goto	u2720
  6738  0028B6                     l2743:
  6739                           
  6740                           ; BSR set to: 0
  6741  0028B6  0100               	movlb	0	; () banked
  6742  0028B8  C093  F094         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6743  0028BC  0100               	movlb	0	; () banked
  6744  0028BE  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6745  0028C0  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6746  0028C2  0100               	movlb	0	; () banked
  6747  0028C4  3592               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6748  0028C6  0100               	movlb	0	; () banked
  6749  0028C8  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6750  0028CA  E301               	bnc	u2671
  6751  0028CC  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6752  0028CE                     u2671:
  6753  0028CE  0100               	movlb	0	; () banked
  6754  0028D0  5194               	movf	??__tdiv_to_l_& (0+255),w,b
  6755  0028D2  0100               	movlb	0	; () banked
  6756  0028D4  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6757  0028D6  0100               	movlb	0	; () banked
  6758  0028D8  679B               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  6759  0028DA  D001               	goto	l2749
  6760  0028DC  D07E               	goto	u2720
  6761  0028DE                     l2749:
  6762                           
  6763                           ; BSR set to: 0
  6764  0028DE  0100               	movlb	0	; () banked
  6765  0028E0  8F8F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6766                           
  6767                           ; BSR set to: 0
  6768  0028E2  0EFF               	movlw	255
  6769  0028E4  0100               	movlb	0	; () banked
  6770  0028E6  178E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6771  0028E8  0EFF               	movlw	255
  6772  0028EA  0100               	movlb	0	; () banked
  6773  0028EC  178F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6774  0028EE  0E00               	movlw	0
  6775  0028F0  0100               	movlb	0	; () banked
  6776  0028F2  1790               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6777  0028F4  0100               	movlb	0	; () banked
  6778  0028F6  8F92               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6779                           
  6780                           ; BSR set to: 0
  6781  0028F8  0EFF               	movlw	255
  6782  0028FA  0100               	movlb	0	; () banked
  6783  0028FC  1791               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6784  0028FE  0EFF               	movlw	255
  6785  002900  0100               	movlb	0	; () banked
  6786  002902  1792               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6787  002904  0E00               	movlw	0
  6788  002906  0100               	movlb	0	; () banked
  6789  002908  1793               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6790                           
  6791                           ; BSR set to: 0
  6792  00290A  0E00               	movlw	0
  6793  00290C  0100               	movlb	0	; () banked
  6794  00290E  6F97               	movwf	__tdiv_to_l_@quot& (0+255),b
  6795  002910  0E00               	movlw	0
  6796  002912  0100               	movlb	0	; () banked
  6797  002914  6F98               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6798  002916  0E00               	movlw	0
  6799  002918  0100               	movlb	0	; () banked
  6800  00291A  6F99               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6801  00291C  0E00               	movlw	0
  6802  00291E  0100               	movlb	0	; () banked
  6803  002920  6F9A               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6804                           
  6805                           ; BSR set to: 0
  6806  002922  0E7F               	movlw	127
  6807  002924  0100               	movlb	0	; () banked
  6808  002926  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6809                           
  6810                           ; BSR set to: 0
  6811  002928  0100               	movlb	0	; () banked
  6812  00292A  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6813  00292C  0F98               	addlw	152
  6814  00292E  0100               	movlb	0	; () banked
  6815  002930  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6816                           
  6817                           ; BSR set to: 0
  6818  002932  0E18               	movlw	24
  6819  002934  0100               	movlb	0	; () banked
  6820  002936  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6821  002938                     l777:
  6822                           
  6823                           ; BSR set to: 0
  6824  002938  0100               	movlb	0	; () banked
  6825  00293A  90D8               	bcf	status,0,c
  6826  00293C  0100               	movlb	0	; () banked
  6827  00293E  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6828  002940  0100               	movlb	0	; () banked
  6829  002942  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6830  002944  0100               	movlb	0	; () banked
  6831  002946  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6832  002948  0100               	movlb	0	; () banked
  6833  00294A  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6834                           
  6835                           ; BSR set to: 0
  6836  00294C  0100               	movlb	0	; () banked
  6837  00294E  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6838  002950  0100               	movlb	0	; () banked
  6839  002952  5D8E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6840  002954  0100               	movlb	0	; () banked
  6841  002956  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6842  002958  0100               	movlb	0	; () banked
  6843  00295A  598F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6844  00295C  0100               	movlb	0	; () banked
  6845  00295E  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6846  002960  0100               	movlb	0	; () banked
  6847  002962  5990               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6848  002964  A0D8               	btfss	status,0,c
  6849  002966  D00E               	goto	l778
  6850                           
  6851                           ; BSR set to: 0
  6852  002968  0100               	movlb	0	; () banked
  6853  00296A  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6854  00296C  0100               	movlb	0	; () banked
  6855  00296E  5F8E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6856  002970  0100               	movlb	0	; () banked
  6857  002972  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6858  002974  0100               	movlb	0	; () banked
  6859  002976  5B8F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6860  002978  0100               	movlb	0	; () banked
  6861  00297A  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6862  00297C  0100               	movlb	0	; () banked
  6863  00297E  5B90               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6864                           
  6865                           ; BSR set to: 0
  6866  002980  0100               	movlb	0	; () banked
  6867  002982  8197               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6868  002984                     l778:
  6869                           
  6870                           ; BSR set to: 0
  6871  002984  0100               	movlb	0	; () banked
  6872  002986  90D8               	bcf	status,0,c
  6873  002988  0100               	movlb	0	; () banked
  6874  00298A  378E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6875  00298C  0100               	movlb	0	; () banked
  6876  00298E  378F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6877  002990  0100               	movlb	0	; () banked
  6878  002992  3790               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6879                           
  6880                           ; BSR set to: 0
  6881  002994  0100               	movlb	0	; () banked
  6882  002996  2F9B               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6883  002998  D7CF               	goto	l777
  6884                           
  6885                           ; BSR set to: 0
  6886  00299A  0100               	movlb	0	; () banked
  6887  00299C  AF9C               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6888  00299E  D019               	goto	l2781
  6889                           
  6890                           ; BSR set to: 0
  6891  0029A0  0100               	movlb	0	; () banked
  6892  0029A2  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6893  0029A4  0A80               	xorlw	128
  6894  0029A6  0100               	movlb	0	; () banked
  6895  0029A8  6F94               	movwf	??__tdiv_to_l_& (0+255),b
  6896  0029AA  0EE9               	movlw	233
  6897  0029AC  0A80               	xorlw	128
  6898  0029AE  0100               	movlb	0	; () banked
  6899  0029B0  5D94               	subwf	??__tdiv_to_l_& (0+255),w,b
  6900  0029B2  A0D8               	btfss	status,0,c
  6901  0029B4  D012               	goto	u2720
  6902  0029B6                     l2777:
  6903                           
  6904                           ; BSR set to: 0
  6905  0029B6  0100               	movlb	0	; () banked
  6906  0029B8  90D8               	bcf	status,0,c
  6907  0029BA  0100               	movlb	0	; () banked
  6908  0029BC  339A               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6909  0029BE  0100               	movlb	0	; () banked
  6910  0029C0  3399               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6911  0029C2  0100               	movlb	0	; () banked
  6912  0029C4  3398               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6913  0029C6  0100               	movlb	0	; () banked
  6914  0029C8  3397               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6915                           
  6916                           ; BSR set to: 0
  6917  0029CA  0100               	movlb	0	; () banked
  6918  0029CC  3F9C               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6919  0029CE  D7F3               	goto	l2777
  6920  0029D0  D020               	goto	l784
  6921  0029D2                     l2781:
  6922                           
  6923                           ; BSR set to: 0
  6924  0029D2  0E17               	movlw	23
  6925  0029D4  0100               	movlb	0	; () banked
  6926  0029D6  659C               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6927  0029D8  D019               	goto	l2789
  6928  0029DA                     u2720:
  6929                           
  6930                           ; BSR set to: 0
  6931  0029DA  0E00               	movlw	0
  6932  0029DC  0100               	movlb	0	; () banked
  6933  0029DE  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6934  0029E0  0E00               	movlw	0
  6935  0029E2  0100               	movlb	0	; () banked
  6936  0029E4  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6937  0029E6  0E00               	movlw	0
  6938  0029E8  0100               	movlb	0	; () banked
  6939  0029EA  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6940  0029EC  0E00               	movlw	0
  6941  0029EE  0100               	movlb	0	; () banked
  6942  0029F0  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6943  0029F2  D017               	goto	l775
  6944  0029F4                     l2787:
  6945                           
  6946                           ; BSR set to: 0
  6947  0029F4  0100               	movlb	0	; () banked
  6948  0029F6  90D8               	bcf	status,0,c
  6949  0029F8  0100               	movlb	0	; () banked
  6950  0029FA  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6951  0029FC  0100               	movlb	0	; () banked
  6952  0029FE  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6953  002A00  0100               	movlb	0	; () banked
  6954  002A02  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6955  002A04  0100               	movlb	0	; () banked
  6956  002A06  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6957  002A08  0100               	movlb	0	; () banked
  6958  002A0A  079C               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6959  002A0C                     l2789:
  6960                           
  6961                           ; BSR set to: 0
  6962  002A0C  0100               	movlb	0	; () banked
  6963  002A0E  679C               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  6964  002A10  D7F1               	goto	l2787
  6965  002A12                     l784:
  6966                           
  6967                           ; BSR set to: 0
  6968  002A12  C097  F08E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6969  002A16  C098  F08F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6970  002A1A  C099  F090         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6971  002A1E  C09A  F091         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6972  002A22                     l775:
  6973                           
  6974                           ; BSR set to: 0
  6975  002A22  0012               	return	
  6976  002A24  FFFF               	dw	65535	; errata NOP
  6977  002A26                     __end_of__tdiv_to_l_:
  6978                           	opt stack 0
  6979                           tblptru	equ	0xFF8
  6980                           tblptrh	equ	0xFF7
  6981                           tblptrl	equ	0xFF6
  6982                           tablat	equ	0xFF5
  6983                           prodh	equ	0xFF4
  6984                           prodl	equ	0xFF3
  6985                           postinc0	equ	0xFEE
  6986                           wreg	equ	0xFE8
  6987                           postinc1	equ	0xFE6
  6988                           postdec1	equ	0xFE5
  6989                           fsr1l	equ	0xFE1
  6990                           indf2	equ	0xFDF
  6991                           postinc2	equ	0xFDE
  6992                           postdec2	equ	0xFDD
  6993                           fsr2h	equ	0xFDA
  6994                           fsr2l	equ	0xFD9
  6995                           status	equ	0xFD8
  6996                           
  6997 ;; *************** function __div_to_l_ *****************
  6998 ;; Defined at:
  6999 ;;		line 60 in file "/Applications/microchip/xc8/v1.33/sources/common/fldivl.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  f1              3   14[BANK0 ] unsigned long 
  7002 ;;  f2              3   17[BANK0 ] unsigned long 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  quot            4   24[BANK0 ] unsigned long 
  7005 ;;  exp1            1   29[BANK0 ] unsigned char 
  7006 ;;  cntr            1   28[BANK0 ] unsigned char 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  4   14[BANK0 ] unsigned long 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7016 ;;      Params:         0       6       0       0       0       0       0
  7017 ;;      Locals:         0       6       0       0       0       0       0
  7018 ;;      Temps:          0       4       0       0       0       0       0
  7019 ;;      Totals:         0      16       0       0       0       0       0
  7020 ;;Total ram usage:       16 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; Hardware stack levels required when called:    4
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_sprintf
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text12
  7031  0026AA                     __ptext12:
  7032                           	opt stack 0
  7033  0026AA                     __div_to_l_:
  7034                           	opt stack 24
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;incstack = 0
  7038  0026AA  FFFF               	dw	65535
  7039  0026AC  0100               	movlb	0	; () banked
  7040  0026AE  C08E  F094         	movff	__div_to_l_@f1,??__div_to_l_
  7041  0026B2  0100               	movlb	0	; () banked
  7042  0026B4  C08F  F095         	movff	__div_to_l_@f1+1,??__div_to_l_+1
  7043  0026B8  0100               	movlb	0	; () banked
  7044  0026BA  C090  F096         	movff	__div_to_l_@f1+2,??__div_to_l_+2
  7045  0026BE  0100               	movlb	0	; () banked
  7046  0026C0  C091  F097         	movff	__div_to_l_@f1+3,??__div_to_l_+3
  7047  0026C4  0E18               	movlw	24
  7048  0026C6  D006               	goto	u2740
  7049  0026C8                     u2745:
  7050  0026C8  0100               	movlb	0	; () banked
  7051  0026CA  90D8               	bcf	status,0,c
  7052  0026CC  3397               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  7053  0026CE  3396               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  7054  0026D0  3395               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  7055  0026D2  3394               	rrcf	??__div_to_l_& (0+255),f,b
  7056  0026D4                     u2740:
  7057  0026D4  2EE8               	decfsz	wreg,f,c
  7058  0026D6  D7F8               	goto	u2745
  7059  0026D8  0100               	movlb	0	; () banked
  7060  0026DA  5194               	movf	??__div_to_l_& (0+255),w,b
  7061  0026DC  0100               	movlb	0	; () banked
  7062  0026DE  6F9D               	movwf	__div_to_l_@exp1& (0+255),b
  7063  0026E0  0100               	movlb	0	; () banked
  7064  0026E2  679D               	tstfsz	__div_to_l_@exp1& (0+255),b
  7065  0026E4  D001               	goto	l2797
  7066  0026E6  D0AC               	goto	u2810
  7067  0026E8                     l2797:
  7068                           
  7069                           ; BSR set to: 0
  7070  0026E8  0100               	movlb	0	; () banked
  7071  0026EA  C091  F094         	movff	__div_to_l_@f2,??__div_to_l_
  7072  0026EE  0100               	movlb	0	; () banked
  7073  0026F0  C092  F095         	movff	__div_to_l_@f2+1,??__div_to_l_+1
  7074  0026F4  0100               	movlb	0	; () banked
  7075  0026F6  C093  F096         	movff	__div_to_l_@f2+2,??__div_to_l_+2
  7076  0026FA  0100               	movlb	0	; () banked
  7077  0026FC  C094  F097         	movff	__div_to_l_@f2+3,??__div_to_l_+3
  7078  002700  0E18               	movlw	24
  7079  002702  D006               	goto	u2760
  7080  002704                     u2765:
  7081  002704  0100               	movlb	0	; () banked
  7082  002706  90D8               	bcf	status,0,c
  7083  002708  3397               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  7084  00270A  3396               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  7085  00270C  3395               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  7086  00270E  3394               	rrcf	??__div_to_l_& (0+255),f,b
  7087  002710                     u2760:
  7088  002710  2EE8               	decfsz	wreg,f,c
  7089  002712  D7F8               	goto	u2765
  7090  002714  0100               	movlb	0	; () banked
  7091  002716  5194               	movf	??__div_to_l_& (0+255),w,b
  7092  002718  0100               	movlb	0	; () banked
  7093  00271A  6F9C               	movwf	__div_to_l_@cntr& (0+255),b
  7094  00271C  0100               	movlb	0	; () banked
  7095  00271E  679C               	tstfsz	__div_to_l_@cntr& (0+255),b
  7096  002720  D001               	goto	l2803
  7097  002722  D08E               	goto	u2810
  7098  002724                     l2803:
  7099                           
  7100                           ; BSR set to: 0
  7101  002724  0100               	movlb	0	; () banked
  7102  002726  8F90               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7103                           
  7104                           ; BSR set to: 0
  7105  002728  0EFF               	movlw	255
  7106  00272A  0100               	movlb	0	; () banked
  7107  00272C  178E               	andwf	__div_to_l_@f1& (0+255),f,b
  7108  00272E  0EFF               	movlw	255
  7109  002730  0100               	movlb	0	; () banked
  7110  002732  178F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7111  002734  0EFF               	movlw	255
  7112  002736  0100               	movlb	0	; () banked
  7113  002738  1790               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7114  00273A  0E00               	movlw	0
  7115  00273C  0100               	movlb	0	; () banked
  7116  00273E  1791               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7117                           
  7118                           ; BSR set to: 0
  7119  002740  0100               	movlb	0	; () banked
  7120  002742  8F93               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7121  002744  0EFF               	movlw	255
  7122  002746  0100               	movlb	0	; () banked
  7123  002748  1791               	andwf	__div_to_l_@f2& (0+255),f,b
  7124  00274A  0EFF               	movlw	255
  7125  00274C  0100               	movlb	0	; () banked
  7126  00274E  1792               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7127  002750  0EFF               	movlw	255
  7128  002752  0100               	movlb	0	; () banked
  7129  002754  1793               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7130  002756  0E00               	movlw	0
  7131  002758  0100               	movlb	0	; () banked
  7132  00275A  1794               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7133                           
  7134                           ; BSR set to: 0
  7135  00275C  0E00               	movlw	0
  7136  00275E  0100               	movlb	0	; () banked
  7137  002760  6F98               	movwf	__div_to_l_@quot& (0+255),b
  7138  002762  0E00               	movlw	0
  7139  002764  0100               	movlb	0	; () banked
  7140  002766  6F99               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7141  002768  0E00               	movlw	0
  7142  00276A  0100               	movlb	0	; () banked
  7143  00276C  6F9A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7144  00276E  0E00               	movlw	0
  7145  002770  0100               	movlb	0	; () banked
  7146  002772  6F9B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7147                           
  7148                           ; BSR set to: 0
  7149  002774  0E7F               	movlw	127
  7150  002776  0100               	movlb	0	; () banked
  7151  002778  5F9D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7152                           
  7153                           ; BSR set to: 0
  7154  00277A  0100               	movlb	0	; () banked
  7155  00277C  519C               	movf	__div_to_l_@cntr& (0+255),w,b
  7156  00277E  0FA0               	addlw	160
  7157  002780  0100               	movlb	0	; () banked
  7158  002782  5F9D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7159                           
  7160                           ; BSR set to: 0
  7161  002784  0E20               	movlw	32
  7162  002786  0100               	movlb	0	; () banked
  7163  002788  6F9C               	movwf	__div_to_l_@cntr& (0+255),b
  7164  00278A                     l2817:
  7165                           
  7166                           ; BSR set to: 0
  7167  00278A  0100               	movlb	0	; () banked
  7168  00278C  90D8               	bcf	status,0,c
  7169  00278E  0100               	movlb	0	; () banked
  7170  002790  3798               	rlcf	__div_to_l_@quot& (0+255),f,b
  7171  002792  0100               	movlb	0	; () banked
  7172  002794  3799               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7173  002796  0100               	movlb	0	; () banked
  7174  002798  379A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7175  00279A  0100               	movlb	0	; () banked
  7176  00279C  379B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7177                           
  7178                           ; BSR set to: 0
  7179  00279E  0100               	movlb	0	; () banked
  7180  0027A0  5191               	movf	__div_to_l_@f2& (0+255),w,b
  7181  0027A2  0100               	movlb	0	; () banked
  7182  0027A4  5D8E               	subwf	__div_to_l_@f1& (0+255),w,b
  7183  0027A6  0100               	movlb	0	; () banked
  7184  0027A8  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7185  0027AA  0100               	movlb	0	; () banked
  7186  0027AC  598F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7187  0027AE  0100               	movlb	0	; () banked
  7188  0027B0  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7189  0027B2  0100               	movlb	0	; () banked
  7190  0027B4  5990               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7191  0027B6  0100               	movlb	0	; () banked
  7192  0027B8  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7193  0027BA  0100               	movlb	0	; () banked
  7194  0027BC  5991               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7195  0027BE  A0D8               	btfss	status,0,c
  7196  0027C0  D012               	goto	l2825
  7197                           
  7198                           ; BSR set to: 0
  7199  0027C2  0100               	movlb	0	; () banked
  7200  0027C4  5191               	movf	__div_to_l_@f2& (0+255),w,b
  7201  0027C6  0100               	movlb	0	; () banked
  7202  0027C8  5F8E               	subwf	__div_to_l_@f1& (0+255),f,b
  7203  0027CA  0100               	movlb	0	; () banked
  7204  0027CC  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7205  0027CE  0100               	movlb	0	; () banked
  7206  0027D0  5B8F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7207  0027D2  0100               	movlb	0	; () banked
  7208  0027D4  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7209  0027D6  0100               	movlb	0	; () banked
  7210  0027D8  5B90               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7211  0027DA  0100               	movlb	0	; () banked
  7212  0027DC  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7213  0027DE  0100               	movlb	0	; () banked
  7214  0027E0  5B91               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7215                           
  7216                           ; BSR set to: 0
  7217  0027E2  0100               	movlb	0	; () banked
  7218  0027E4  8198               	bsf	__div_to_l_@quot& (0+255),0,b
  7219  0027E6                     l2825:
  7220                           
  7221                           ; BSR set to: 0
  7222  0027E6  0100               	movlb	0	; () banked
  7223  0027E8  90D8               	bcf	status,0,c
  7224  0027EA  0100               	movlb	0	; () banked
  7225  0027EC  378E               	rlcf	__div_to_l_@f1& (0+255),f,b
  7226  0027EE  0100               	movlb	0	; () banked
  7227  0027F0  378F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7228  0027F2  0100               	movlb	0	; () banked
  7229  0027F4  3790               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7230  0027F6  0100               	movlb	0	; () banked
  7231  0027F8  3791               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7232                           
  7233                           ; BSR set to: 0
  7234  0027FA  0100               	movlb	0	; () banked
  7235  0027FC  2F9C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7236  0027FE  D7C5               	goto	l2817
  7237                           
  7238                           ; BSR set to: 0
  7239  002800  0100               	movlb	0	; () banked
  7240  002802  AF9D               	btfss	__div_to_l_@exp1& (0+255),7,b
  7241  002804  D019               	goto	l2839
  7242                           
  7243                           ; BSR set to: 0
  7244  002806  0100               	movlb	0	; () banked
  7245  002808  519D               	movf	__div_to_l_@exp1& (0+255),w,b
  7246  00280A  0A80               	xorlw	128
  7247  00280C  0100               	movlb	0	; () banked
  7248  00280E  6F94               	movwf	??__div_to_l_& (0+255),b
  7249  002810  0EE1               	movlw	225
  7250  002812  0A80               	xorlw	128
  7251  002814  0100               	movlb	0	; () banked
  7252  002816  5D94               	subwf	??__div_to_l_& (0+255),w,b
  7253  002818  A0D8               	btfss	status,0,c
  7254  00281A  D012               	goto	u2810
  7255  00281C                     l2835:
  7256                           
  7257                           ; BSR set to: 0
  7258  00281C  0100               	movlb	0	; () banked
  7259  00281E  90D8               	bcf	status,0,c
  7260  002820  0100               	movlb	0	; () banked
  7261  002822  339B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7262  002824  0100               	movlb	0	; () banked
  7263  002826  339A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7264  002828  0100               	movlb	0	; () banked
  7265  00282A  3399               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7266  00282C  0100               	movlb	0	; () banked
  7267  00282E  3398               	rrcf	__div_to_l_@quot& (0+255),f,b
  7268                           
  7269                           ; BSR set to: 0
  7270  002830  0100               	movlb	0	; () banked
  7271  002832  3F9D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7272  002834  D7F3               	goto	l2835
  7273  002836  D020               	goto	l666
  7274  002838                     l2839:
  7275                           
  7276                           ; BSR set to: 0
  7277  002838  0E1F               	movlw	31
  7278  00283A  0100               	movlb	0	; () banked
  7279  00283C  659D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7280  00283E  D019               	goto	l2847
  7281  002840                     u2810:
  7282                           
  7283                           ; BSR set to: 0
  7284  002840  0E00               	movlw	0
  7285  002842  0100               	movlb	0	; () banked
  7286  002844  6F8E               	movwf	?__div_to_l_& (0+255),b
  7287  002846  0E00               	movlw	0
  7288  002848  0100               	movlb	0	; () banked
  7289  00284A  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7290  00284C  0E00               	movlw	0
  7291  00284E  0100               	movlb	0	; () banked
  7292  002850  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7293  002852  0E00               	movlw	0
  7294  002854  0100               	movlb	0	; () banked
  7295  002856  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7296  002858  D017               	goto	l657
  7297  00285A                     l2845:
  7298                           
  7299                           ; BSR set to: 0
  7300  00285A  0100               	movlb	0	; () banked
  7301  00285C  90D8               	bcf	status,0,c
  7302  00285E  0100               	movlb	0	; () banked
  7303  002860  3798               	rlcf	__div_to_l_@quot& (0+255),f,b
  7304  002862  0100               	movlb	0	; () banked
  7305  002864  3799               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7306  002866  0100               	movlb	0	; () banked
  7307  002868  379A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7308  00286A  0100               	movlb	0	; () banked
  7309  00286C  379B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7310  00286E  0100               	movlb	0	; () banked
  7311  002870  079D               	decf	__div_to_l_@exp1& (0+255),f,b
  7312  002872                     l2847:
  7313                           
  7314                           ; BSR set to: 0
  7315  002872  0100               	movlb	0	; () banked
  7316  002874  679D               	tstfsz	__div_to_l_@exp1& (0+255),b
  7317  002876  D7F1               	goto	l2845
  7318  002878                     l666:
  7319                           
  7320                           ; BSR set to: 0
  7321  002878  C098  F08E         	movff	__div_to_l_@quot,?__div_to_l_
  7322  00287C  C099  F08F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7323  002880  C09A  F090         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7324  002884  C09B  F091         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7325  002888                     l657:
  7326                           
  7327                           ; BSR set to: 0
  7328  002888  0012               	return	
  7329  00288A  FFFF               	dw	65535	; errata NOP
  7330  00288C                     __end_of__div_to_l_:
  7331                           	opt stack 0
  7332                           tblptru	equ	0xFF8
  7333                           tblptrh	equ	0xFF7
  7334                           tblptrl	equ	0xFF6
  7335                           tablat	equ	0xFF5
  7336                           prodh	equ	0xFF4
  7337                           prodl	equ	0xFF3
  7338                           postinc0	equ	0xFEE
  7339                           wreg	equ	0xFE8
  7340                           postinc1	equ	0xFE6
  7341                           postdec1	equ	0xFE5
  7342                           fsr1l	equ	0xFE1
  7343                           indf2	equ	0xFDF
  7344                           postinc2	equ	0xFDE
  7345                           postdec2	equ	0xFDD
  7346                           fsr2h	equ	0xFDA
  7347                           fsr2l	equ	0xFD9
  7348                           status	equ	0xFD8
  7349                           
  7350 ;; *************** function ___lltoft *****************
  7351 ;; Defined at:
  7352 ;;		line 35 in file "/Applications/microchip/xc8/v1.33/sources/common/lltoft.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  c               4   29[BANK0 ] unsigned long 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  exp             1   37[BANK0 ] unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  3   29[BANK0 ] float 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7366 ;;      Params:         0       4       0       0       0       0       0
  7367 ;;      Locals:         0       1       0       0       0       0       0
  7368 ;;      Temps:          0       4       0       0       0       0       0
  7369 ;;      Totals:         0       9       0       0       0       0       0
  7370 ;;Total ram usage:        9 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    5
  7373 ;; This function calls:
  7374 ;;		___ftpack
  7375 ;; This function is called by:
  7376 ;;		_sprintf
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text13
  7381  0037C8                     __ptext13:
  7382                           	opt stack 0
  7383  0037C8                     ___lltoft:
  7384                           	opt stack 23
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;incstack = 0
  7388  0037C8  FFFF               	dw	65535
  7389  0037CA  0E8E               	movlw	142
  7390  0037CC  0100               	movlb	0	; () banked
  7391  0037CE  6FA5               	movwf	___lltoft@exp& (0+255),b
  7392  0037D0  D00C               	goto	l4231
  7393  0037D2                     l4229:
  7394                           
  7395                           ; BSR set to: 0
  7396  0037D2  0100               	movlb	0	; () banked
  7397  0037D4  90D8               	bcf	status,0,c
  7398  0037D6  0100               	movlb	0	; () banked
  7399  0037D8  33A0               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7400  0037DA  0100               	movlb	0	; () banked
  7401  0037DC  339F               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7402  0037DE  0100               	movlb	0	; () banked
  7403  0037E0  339E               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7404  0037E2  0100               	movlb	0	; () banked
  7405  0037E4  339D               	rrcf	___lltoft@c& (0+255),f,b
  7406  0037E6  0100               	movlb	0	; () banked
  7407  0037E8  2BA5               	incf	___lltoft@exp& (0+255),f,b
  7408  0037EA                     l4231:
  7409                           
  7410                           ; BSR set to: 0
  7411  0037EA  0E00               	movlw	0
  7412  0037EC  0100               	movlb	0	; () banked
  7413  0037EE  159D               	andwf	___lltoft@c& (0+255),w,b
  7414  0037F0  0100               	movlb	0	; () banked
  7415  0037F2  6FA1               	movwf	??___lltoft& (0+255),b
  7416  0037F4  0E00               	movlw	0
  7417  0037F6  0100               	movlb	0	; () banked
  7418  0037F8  159E               	andwf	(___lltoft@c+1)& (0+255),w,b
  7419  0037FA  0100               	movlb	0	; () banked
  7420  0037FC  6FA2               	movwf	(??___lltoft+1)& (0+255),b
  7421  0037FE  0E00               	movlw	0
  7422  003800  0100               	movlb	0	; () banked
  7423  003802  159F               	andwf	(___lltoft@c+2)& (0+255),w,b
  7424  003804  0100               	movlb	0	; () banked
  7425  003806  6FA3               	movwf	(??___lltoft+2)& (0+255),b
  7426  003808  0EFF               	movlw	255
  7427  00380A  0100               	movlb	0	; () banked
  7428  00380C  15A0               	andwf	(___lltoft@c+3)& (0+255),w,b
  7429  00380E  0100               	movlb	0	; () banked
  7430  003810  6FA4               	movwf	(??___lltoft+3)& (0+255),b
  7431  003812  0100               	movlb	0	; () banked
  7432  003814  51A4               	movf	(??___lltoft+3)& (0+255),w,b
  7433  003816  11A1               	iorwf	??___lltoft& (0+255),w,b
  7434  003818  11A2               	iorwf	(??___lltoft+1)& (0+255),w,b
  7435  00381A  11A3               	iorwf	(??___lltoft+2)& (0+255),w,b
  7436  00381C  A4D8               	btfss	status,2,c
  7437  00381E  D7D9               	goto	l4229
  7438                           
  7439                           ; BSR set to: 0
  7440                           
  7441                           ; BSR set to: 0
  7442  003820  C09D  F08E         	movff	___lltoft@c,___ftpack@arg
  7443  003824  C09E  F08F         	movff	___lltoft@c+1,___ftpack@arg+1
  7444  003828  C09F  F090         	movff	___lltoft@c+2,___ftpack@arg+2
  7445  00382C  C0A5  F091         	movff	___lltoft@exp,___ftpack@exp
  7446  003830  0E00               	movlw	0
  7447  003832  0100               	movlb	0	; () banked
  7448  003834  6F92               	movwf	___ftpack@sign& (0+255),b
  7449  003836  ECC5  F017         	call	___ftpack	;wreg free
  7450  00383A  C08E  F09D         	movff	?___ftpack,?___lltoft
  7451  00383E  C08F  F09E         	movff	?___ftpack+1,?___lltoft+1
  7452  003842  C090  F09F         	movff	?___ftpack+2,?___lltoft+2
  7453  003846  0012               	return	
  7454  003848  FFFF               	dw	65535	; errata NOP
  7455  00384A                     __end_of___lltoft:
  7456                           	opt stack 0
  7457                           tblptru	equ	0xFF8
  7458                           tblptrh	equ	0xFF7
  7459                           tblptrl	equ	0xFF6
  7460                           tablat	equ	0xFF5
  7461                           prodh	equ	0xFF4
  7462                           prodl	equ	0xFF3
  7463                           postinc0	equ	0xFEE
  7464                           wreg	equ	0xFE8
  7465                           postinc1	equ	0xFE6
  7466                           postdec1	equ	0xFE5
  7467                           fsr1l	equ	0xFE1
  7468                           indf2	equ	0xFDF
  7469                           postinc2	equ	0xFDE
  7470                           postdec2	equ	0xFDD
  7471                           fsr2h	equ	0xFDA
  7472                           fsr2l	equ	0xFD9
  7473                           status	equ	0xFD8
  7474                           
  7475 ;; *************** function ___llmod *****************
  7476 ;; Defined at:
  7477 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/llmod.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  dividend        4   14[BANK0 ] unsigned long 
  7480 ;;  divisor         4   18[BANK0 ] unsigned long 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  counter         1   22[BANK0 ] unsigned char 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  4   14[BANK0 ] unsigned long 
  7485 ;; Registers used:
  7486 ;;		wreg, status,2, status,0
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7492 ;;      Params:         0       8       0       0       0       0       0
  7493 ;;      Locals:         0       1       0       0       0       0       0
  7494 ;;      Temps:          0       0       0       0       0       0       0
  7495 ;;      Totals:         0       9       0       0       0       0       0
  7496 ;;Total ram usage:        9 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:    4
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_sprintf
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text14
  7507  003678                     __ptext14:
  7508                           	opt stack 0
  7509  003678                     ___llmod:
  7510                           	opt stack 24
  7511                           
  7512                           ;incstack = 0
  7513  003678  FFFF               	dw	65535
  7514  00367A  0100               	movlb	0	; () banked
  7515  00367C  5195               	movf	(___llmod@divisor+3)& (0+255),w,b
  7516  00367E  1192               	iorwf	___llmod@divisor& (0+255),w,b
  7517  003680  1193               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7518  003682  1194               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7519  003684  B4D8               	btfsc	status,2,c
  7520  003686  D042               	goto	l873
  7521                           
  7522                           ; BSR set to: 0
  7523  003688  0E01               	movlw	1
  7524  00368A  0100               	movlb	0	; () banked
  7525  00368C  6F96               	movwf	___llmod@counter& (0+255),b
  7526  00368E  D00C               	goto	l4217
  7527  003690                     l4215:
  7528                           
  7529                           ; BSR set to: 0
  7530  003690  0100               	movlb	0	; () banked
  7531  003692  90D8               	bcf	status,0,c
  7532  003694  0100               	movlb	0	; () banked
  7533  003696  3792               	rlcf	___llmod@divisor& (0+255),f,b
  7534  003698  0100               	movlb	0	; () banked
  7535  00369A  3793               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7536  00369C  0100               	movlb	0	; () banked
  7537  00369E  3794               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7538  0036A0  0100               	movlb	0	; () banked
  7539  0036A2  3795               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7540  0036A4  0100               	movlb	0	; () banked
  7541  0036A6  2B96               	incf	___llmod@counter& (0+255),f,b
  7542  0036A8                     l4217:
  7543                           
  7544                           ; BSR set to: 0
  7545  0036A8  0100               	movlb	0	; () banked
  7546  0036AA  AF95               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7547  0036AC  D7F1               	goto	l4215
  7548  0036AE                     l4219:
  7549                           
  7550                           ; BSR set to: 0
  7551  0036AE  0100               	movlb	0	; () banked
  7552  0036B0  5192               	movf	___llmod@divisor& (0+255),w,b
  7553  0036B2  0100               	movlb	0	; () banked
  7554  0036B4  5D8E               	subwf	___llmod@dividend& (0+255),w,b
  7555  0036B6  0100               	movlb	0	; () banked
  7556  0036B8  5193               	movf	(___llmod@divisor+1)& (0+255),w,b
  7557  0036BA  0100               	movlb	0	; () banked
  7558  0036BC  598F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7559  0036BE  0100               	movlb	0	; () banked
  7560  0036C0  5194               	movf	(___llmod@divisor+2)& (0+255),w,b
  7561  0036C2  0100               	movlb	0	; () banked
  7562  0036C4  5990               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7563  0036C6  0100               	movlb	0	; () banked
  7564  0036C8  5195               	movf	(___llmod@divisor+3)& (0+255),w,b
  7565  0036CA  0100               	movlb	0	; () banked
  7566  0036CC  5991               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7567  0036CE  A0D8               	btfss	status,0,c
  7568  0036D0  D010               	goto	l4223
  7569                           
  7570                           ; BSR set to: 0
  7571  0036D2  0100               	movlb	0	; () banked
  7572  0036D4  5192               	movf	___llmod@divisor& (0+255),w,b
  7573  0036D6  0100               	movlb	0	; () banked
  7574  0036D8  5F8E               	subwf	___llmod@dividend& (0+255),f,b
  7575  0036DA  0100               	movlb	0	; () banked
  7576  0036DC  5193               	movf	(___llmod@divisor+1)& (0+255),w,b
  7577  0036DE  0100               	movlb	0	; () banked
  7578  0036E0  5B8F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7579  0036E2  0100               	movlb	0	; () banked
  7580  0036E4  5194               	movf	(___llmod@divisor+2)& (0+255),w,b
  7581  0036E6  0100               	movlb	0	; () banked
  7582  0036E8  5B90               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7583  0036EA  0100               	movlb	0	; () banked
  7584  0036EC  5195               	movf	(___llmod@divisor+3)& (0+255),w,b
  7585  0036EE  0100               	movlb	0	; () banked
  7586  0036F0  5B91               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7587  0036F2                     l4223:
  7588                           
  7589                           ; BSR set to: 0
  7590  0036F2  0100               	movlb	0	; () banked
  7591  0036F4  90D8               	bcf	status,0,c
  7592  0036F6  0100               	movlb	0	; () banked
  7593  0036F8  3395               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7594  0036FA  0100               	movlb	0	; () banked
  7595  0036FC  3394               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7596  0036FE  0100               	movlb	0	; () banked
  7597  003700  3393               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7598  003702  0100               	movlb	0	; () banked
  7599  003704  3392               	rrcf	___llmod@divisor& (0+255),f,b
  7600                           
  7601                           ; BSR set to: 0
  7602  003706  0100               	movlb	0	; () banked
  7603  003708  2F96               	decfsz	___llmod@counter& (0+255),f,b
  7604  00370A  D7D1               	goto	l4219
  7605  00370C                     l873:
  7606                           
  7607                           ; BSR set to: 0
  7608  00370C  C08E  F08E         	movff	___llmod@dividend,?___llmod
  7609  003710  C08F  F08F         	movff	___llmod@dividend+1,?___llmod+1
  7610  003714  C090  F090         	movff	___llmod@dividend+2,?___llmod+2
  7611  003718  C091  F091         	movff	___llmod@dividend+3,?___llmod+3
  7612                           
  7613                           ; BSR set to: 0
  7614  00371C  0012               	return	
  7615  00371E  FFFF               	dw	65535	; errata NOP
  7616  003720                     __end_of___llmod:
  7617                           	opt stack 0
  7618                           tblptru	equ	0xFF8
  7619                           tblptrh	equ	0xFF7
  7620                           tblptrl	equ	0xFF6
  7621                           tablat	equ	0xFF5
  7622                           prodh	equ	0xFF4
  7623                           prodl	equ	0xFF3
  7624                           postinc0	equ	0xFEE
  7625                           wreg	equ	0xFE8
  7626                           postinc1	equ	0xFE6
  7627                           postdec1	equ	0xFE5
  7628                           fsr1l	equ	0xFE1
  7629                           indf2	equ	0xFDF
  7630                           postinc2	equ	0xFDE
  7631                           postdec2	equ	0xFDD
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636 ;; *************** function ___lldiv *****************
  7637 ;; Defined at:
  7638 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/lldiv.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  dividend        4   14[BANK0 ] unsigned long 
  7641 ;;  divisor         4   18[BANK0 ] unsigned long 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  quotient        4   22[BANK0 ] unsigned long 
  7644 ;;  counter         1   26[BANK0 ] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  4   14[BANK0 ] unsigned long 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2, status,0
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7654 ;;      Params:         0       8       0       0       0       0       0
  7655 ;;      Locals:         0       5       0       0       0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0
  7657 ;;      Totals:         0      13       0       0       0       0       0
  7658 ;;Total ram usage:       13 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:    4
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		_sprintf
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text15
  7669  003354                     __ptext15:
  7670                           	opt stack 0
  7671  003354                     ___lldiv:
  7672                           	opt stack 24
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;incstack = 0
  7676  003354  FFFF               	dw	65535
  7677  003356  0E00               	movlw	0
  7678  003358  0100               	movlb	0	; () banked
  7679  00335A  6F96               	movwf	___lldiv@quotient& (0+255),b
  7680  00335C  0E00               	movlw	0
  7681  00335E  0100               	movlb	0	; () banked
  7682  003360  6F97               	movwf	(___lldiv@quotient+1)& (0+255),b
  7683  003362  0E00               	movlw	0
  7684  003364  0100               	movlb	0	; () banked
  7685  003366  6F98               	movwf	(___lldiv@quotient+2)& (0+255),b
  7686  003368  0E00               	movlw	0
  7687  00336A  0100               	movlb	0	; () banked
  7688  00336C  6F99               	movwf	(___lldiv@quotient+3)& (0+255),b
  7689                           
  7690                           ; BSR set to: 0
  7691  00336E  0100               	movlb	0	; () banked
  7692  003370  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7693  003372  1192               	iorwf	___lldiv@divisor& (0+255),w,b
  7694  003374  1193               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7695  003376  1194               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7696  003378  B4D8               	btfsc	status,2,c
  7697  00337A  D04E               	goto	l863
  7698                           
  7699                           ; BSR set to: 0
  7700  00337C  0E01               	movlw	1
  7701  00337E  0100               	movlb	0	; () banked
  7702  003380  6F9A               	movwf	___lldiv@counter& (0+255),b
  7703  003382  D00C               	goto	l4197
  7704  003384                     l4195:
  7705                           
  7706                           ; BSR set to: 0
  7707  003384  0100               	movlb	0	; () banked
  7708  003386  90D8               	bcf	status,0,c
  7709  003388  0100               	movlb	0	; () banked
  7710  00338A  3792               	rlcf	___lldiv@divisor& (0+255),f,b
  7711  00338C  0100               	movlb	0	; () banked
  7712  00338E  3793               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7713  003390  0100               	movlb	0	; () banked
  7714  003392  3794               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7715  003394  0100               	movlb	0	; () banked
  7716  003396  3795               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7717  003398  0100               	movlb	0	; () banked
  7718  00339A  2B9A               	incf	___lldiv@counter& (0+255),f,b
  7719  00339C                     l4197:
  7720                           
  7721                           ; BSR set to: 0
  7722  00339C  0100               	movlb	0	; () banked
  7723  00339E  AF95               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7724  0033A0  D7F1               	goto	l4195
  7725  0033A2                     l4199:
  7726                           
  7727                           ; BSR set to: 0
  7728  0033A2  0100               	movlb	0	; () banked
  7729  0033A4  90D8               	bcf	status,0,c
  7730  0033A6  0100               	movlb	0	; () banked
  7731  0033A8  3796               	rlcf	___lldiv@quotient& (0+255),f,b
  7732  0033AA  0100               	movlb	0	; () banked
  7733  0033AC  3797               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7734  0033AE  0100               	movlb	0	; () banked
  7735  0033B0  3798               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7736  0033B2  0100               	movlb	0	; () banked
  7737  0033B4  3799               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7738                           
  7739                           ; BSR set to: 0
  7740  0033B6  0100               	movlb	0	; () banked
  7741  0033B8  5192               	movf	___lldiv@divisor& (0+255),w,b
  7742  0033BA  0100               	movlb	0	; () banked
  7743  0033BC  5D8E               	subwf	___lldiv@dividend& (0+255),w,b
  7744  0033BE  0100               	movlb	0	; () banked
  7745  0033C0  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7746  0033C2  0100               	movlb	0	; () banked
  7747  0033C4  598F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7748  0033C6  0100               	movlb	0	; () banked
  7749  0033C8  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7750  0033CA  0100               	movlb	0	; () banked
  7751  0033CC  5990               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7752  0033CE  0100               	movlb	0	; () banked
  7753  0033D0  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7754  0033D2  0100               	movlb	0	; () banked
  7755  0033D4  5991               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7756  0033D6  A0D8               	btfss	status,0,c
  7757  0033D8  D012               	goto	l4207
  7758                           
  7759                           ; BSR set to: 0
  7760  0033DA  0100               	movlb	0	; () banked
  7761  0033DC  5192               	movf	___lldiv@divisor& (0+255),w,b
  7762  0033DE  0100               	movlb	0	; () banked
  7763  0033E0  5F8E               	subwf	___lldiv@dividend& (0+255),f,b
  7764  0033E2  0100               	movlb	0	; () banked
  7765  0033E4  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7766  0033E6  0100               	movlb	0	; () banked
  7767  0033E8  5B8F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7768  0033EA  0100               	movlb	0	; () banked
  7769  0033EC  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7770  0033EE  0100               	movlb	0	; () banked
  7771  0033F0  5B90               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7772  0033F2  0100               	movlb	0	; () banked
  7773  0033F4  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7774  0033F6  0100               	movlb	0	; () banked
  7775  0033F8  5B91               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7776                           
  7777                           ; BSR set to: 0
  7778  0033FA  0100               	movlb	0	; () banked
  7779  0033FC  8196               	bsf	___lldiv@quotient& (0+255),0,b
  7780  0033FE                     l4207:
  7781                           
  7782                           ; BSR set to: 0
  7783  0033FE  0100               	movlb	0	; () banked
  7784  003400  90D8               	bcf	status,0,c
  7785  003402  0100               	movlb	0	; () banked
  7786  003404  3395               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7787  003406  0100               	movlb	0	; () banked
  7788  003408  3394               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7789  00340A  0100               	movlb	0	; () banked
  7790  00340C  3393               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7791  00340E  0100               	movlb	0	; () banked
  7792  003410  3392               	rrcf	___lldiv@divisor& (0+255),f,b
  7793                           
  7794                           ; BSR set to: 0
  7795  003412  0100               	movlb	0	; () banked
  7796  003414  2F9A               	decfsz	___lldiv@counter& (0+255),f,b
  7797  003416  D7C5               	goto	l4199
  7798  003418                     l863:
  7799                           
  7800                           ; BSR set to: 0
  7801  003418  C096  F08E         	movff	___lldiv@quotient,?___lldiv
  7802  00341C  C097  F08F         	movff	___lldiv@quotient+1,?___lldiv+1
  7803  003420  C098  F090         	movff	___lldiv@quotient+2,?___lldiv+2
  7804  003424  C099  F091         	movff	___lldiv@quotient+3,?___lldiv+3
  7805                           
  7806                           ; BSR set to: 0
  7807  003428  0012               	return	
  7808  00342A  FFFF               	dw	65535	; errata NOP
  7809  00342C                     __end_of___lldiv:
  7810                           	opt stack 0
  7811                           tblptru	equ	0xFF8
  7812                           tblptrh	equ	0xFF7
  7813                           tblptrl	equ	0xFF6
  7814                           tablat	equ	0xFF5
  7815                           prodh	equ	0xFF4
  7816                           prodl	equ	0xFF3
  7817                           postinc0	equ	0xFEE
  7818                           wreg	equ	0xFE8
  7819                           postinc1	equ	0xFE6
  7820                           postdec1	equ	0xFE5
  7821                           fsr1l	equ	0xFE1
  7822                           indf2	equ	0xFDF
  7823                           postinc2	equ	0xFDE
  7824                           postdec2	equ	0xFDD
  7825                           fsr2h	equ	0xFDA
  7826                           fsr2l	equ	0xFD9
  7827                           status	equ	0xFD8
  7828                           
  7829 ;; *************** function ___fttol *****************
  7830 ;; Defined at:
  7831 ;;		line 44 in file "/Applications/microchip/xc8/v1.33/sources/common/fttol.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  f1              3   14[BANK0 ] float 
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;  lval            4   24[BANK0 ] unsigned long 
  7836 ;;  exp1            1   28[BANK0 ] unsigned char 
  7837 ;;  sign1           1   23[BANK0 ] unsigned char 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  4   14[BANK0 ] long 
  7840 ;; Registers used:
  7841 ;;		wreg, status,2, status,0
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7847 ;;      Params:         0       4       0       0       0       0       0
  7848 ;;      Locals:         0       6       0       0       0       0       0
  7849 ;;      Temps:          0       5       0       0       0       0       0
  7850 ;;      Totals:         0      15       0       0       0       0       0
  7851 ;;Total ram usage:       15 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    4
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_sprintf
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text16
  7862  002CF2                     __ptext16:
  7863                           	opt stack 0
  7864  002CF2                     ___fttol:
  7865                           	opt stack 24
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;incstack = 0
  7869  002CF2  FFFF               	dw	65535
  7870  002CF4  0100               	movlb	0	; () banked
  7871  002CF6  C090  F092         	movff	___fttol@f1+2,??___fttol
  7872  002CFA  0100               	movlb	0	; () banked
  7873  002CFC  6B93               	clrf	(??___fttol+1)& (0+255),b
  7874  002CFE  6B94               	clrf	(??___fttol+2)& (0+255),b
  7875  002D00  0100               	movlb	0	; () banked
  7876  002D02  358F               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7877  002D04  0100               	movlb	0	; () banked
  7878  002D06  3792               	rlcf	??___fttol& (0+255),f,b
  7879  002D08  E301               	bnc	u2921
  7880  002D0A  8193               	bsf	(??___fttol+1)& (0+255),0,b
  7881  002D0C                     u2921:
  7882  002D0C  0100               	movlb	0	; () banked
  7883  002D0E  5192               	movf	??___fttol& (0+255),w,b
  7884  002D10  0100               	movlb	0	; () banked
  7885  002D12  6F9C               	movwf	___fttol@exp1& (0+255),b
  7886  002D14  0100               	movlb	0	; () banked
  7887  002D16  679C               	tstfsz	___fttol@exp1& (0+255),b
  7888  002D18  D001               	goto	l2929
  7889  002D1A  D059               	goto	u2970
  7890  002D1C                     l2929:
  7891                           
  7892                           ; BSR set to: 0
  7893  002D1C  0E17               	movlw	23
  7894  002D1E  0100               	movlb	0	; () banked
  7895  002D20  6F92               	movwf	??___fttol& (0+255),b
  7896  002D22  0100               	movlb	0	; () banked
  7897  002D24  C08E  F093         	movff	___fttol@f1,??___fttol+1
  7898  002D28  0100               	movlb	0	; () banked
  7899  002D2A  C08F  F094         	movff	___fttol@f1+1,??___fttol+2
  7900  002D2E  0100               	movlb	0	; () banked
  7901  002D30  C090  F095         	movff	___fttol@f1+2,??___fttol+3
  7902  002D34  0100               	movlb	0	; () banked
  7903  002D36  2992               	incf	??___fttol& (0+255),w,b
  7904  002D38  0100               	movlb	0	; () banked
  7905  002D3A  6F96               	movwf	(??___fttol+4)& (0+255),b
  7906  002D3C  D005               	goto	u2940
  7907  002D3E                     u2945:
  7908  002D3E  0100               	movlb	0	; () banked
  7909  002D40  90D8               	bcf	status,0,c
  7910  002D42  3395               	rrcf	(??___fttol+3)& (0+255),f,b
  7911  002D44  3394               	rrcf	(??___fttol+2)& (0+255),f,b
  7912  002D46  3393               	rrcf	(??___fttol+1)& (0+255),f,b
  7913  002D48                     u2940:
  7914  002D48  0100               	movlb	0	; () banked
  7915  002D4A  2F96               	decfsz	(??___fttol+4)& (0+255),f,b
  7916  002D4C  D7F8               	goto	u2945
  7917  002D4E  0100               	movlb	0	; () banked
  7918  002D50  5193               	movf	(??___fttol+1)& (0+255),w,b
  7919  002D52  0100               	movlb	0	; () banked
  7920  002D54  6F97               	movwf	___fttol@sign1& (0+255),b
  7921                           
  7922                           ; BSR set to: 0
  7923  002D56  0100               	movlb	0	; () banked
  7924  002D58  8F8F               	bsf	(___fttol@f1+1)& (0+255),7,b
  7925                           
  7926                           ; BSR set to: 0
  7927  002D5A  0EFF               	movlw	255
  7928  002D5C  0100               	movlb	0	; () banked
  7929  002D5E  178E               	andwf	___fttol@f1& (0+255),f,b
  7930  002D60  0EFF               	movlw	255
  7931  002D62  0100               	movlb	0	; () banked
  7932  002D64  178F               	andwf	(___fttol@f1+1)& (0+255),f,b
  7933  002D66  0E00               	movlw	0
  7934  002D68  0100               	movlb	0	; () banked
  7935  002D6A  1790               	andwf	(___fttol@f1+2)& (0+255),f,b
  7936                           
  7937                           ; BSR set to: 0
  7938  002D6C  0100               	movlb	0	; () banked
  7939  002D6E  518E               	movf	___fttol@f1& (0+255),w,b
  7940  002D70  0100               	movlb	0	; () banked
  7941  002D72  6F98               	movwf	___fttol@lval& (0+255),b
  7942  002D74  0100               	movlb	0	; () banked
  7943  002D76  518F               	movf	(___fttol@f1+1)& (0+255),w,b
  7944  002D78  0100               	movlb	0	; () banked
  7945  002D7A  6F99               	movwf	(___fttol@lval+1)& (0+255),b
  7946  002D7C  0100               	movlb	0	; () banked
  7947  002D7E  5190               	movf	(___fttol@f1+2)& (0+255),w,b
  7948  002D80  0100               	movlb	0	; () banked
  7949  002D82  6F9A               	movwf	(___fttol@lval+2)& (0+255),b
  7950  002D84  0100               	movlb	0	; () banked
  7951  002D86  6B9B               	clrf	(___fttol@lval+3)& (0+255),b
  7952                           
  7953                           ; BSR set to: 0
  7954  002D88  0E8E               	movlw	142
  7955  002D8A  0100               	movlb	0	; () banked
  7956  002D8C  5F9C               	subwf	___fttol@exp1& (0+255),f,b
  7957                           
  7958                           ; BSR set to: 0
  7959  002D8E  0100               	movlb	0	; () banked
  7960  002D90  AF9C               	btfss	___fttol@exp1& (0+255),7,b
  7961  002D92  D019               	goto	l2951
  7962                           
  7963                           ; BSR set to: 0
  7964  002D94  0100               	movlb	0	; () banked
  7965  002D96  519C               	movf	___fttol@exp1& (0+255),w,b
  7966  002D98  0A80               	xorlw	128
  7967  002D9A  0100               	movlb	0	; () banked
  7968  002D9C  6F92               	movwf	??___fttol& (0+255),b
  7969  002D9E  0EF1               	movlw	241
  7970  002DA0  0A80               	xorlw	128
  7971  002DA2  0100               	movlb	0	; () banked
  7972  002DA4  5D92               	subwf	??___fttol& (0+255),w,b
  7973  002DA6  A0D8               	btfss	status,0,c
  7974  002DA8  D012               	goto	u2970
  7975  002DAA                     l2947:
  7976                           
  7977                           ; BSR set to: 0
  7978  002DAA  0100               	movlb	0	; () banked
  7979  002DAC  90D8               	bcf	status,0,c
  7980  002DAE  0100               	movlb	0	; () banked
  7981  002DB0  339B               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7982  002DB2  0100               	movlb	0	; () banked
  7983  002DB4  339A               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7984  002DB6  0100               	movlb	0	; () banked
  7985  002DB8  3399               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7986  002DBA  0100               	movlb	0	; () banked
  7987  002DBC  3398               	rrcf	___fttol@lval& (0+255),f,b
  7988                           
  7989                           ; BSR set to: 0
  7990  002DBE  0100               	movlb	0	; () banked
  7991  002DC0  3F9C               	incfsz	___fttol@exp1& (0+255),f,b
  7992  002DC2  D7F3               	goto	l2947
  7993  002DC4  D020               	goto	l2961
  7994  002DC6                     l2951:
  7995                           
  7996                           ; BSR set to: 0
  7997  002DC6  0E17               	movlw	23
  7998  002DC8  0100               	movlb	0	; () banked
  7999  002DCA  659C               	cpfsgt	___fttol@exp1& (0+255),b
  8000  002DCC  D019               	goto	l2959
  8001  002DCE                     u2970:
  8002                           
  8003                           ; BSR set to: 0
  8004  002DCE  0E00               	movlw	0
  8005  002DD0  0100               	movlb	0	; () banked
  8006  002DD2  6F8E               	movwf	?___fttol& (0+255),b
  8007  002DD4  0E00               	movlw	0
  8008  002DD6  0100               	movlb	0	; () banked
  8009  002DD8  6F8F               	movwf	(?___fttol+1)& (0+255),b
  8010  002DDA  0E00               	movlw	0
  8011  002DDC  0100               	movlb	0	; () banked
  8012  002DDE  6F90               	movwf	(?___fttol+2)& (0+255),b
  8013  002DE0  0E00               	movlw	0
  8014  002DE2  0100               	movlb	0	; () banked
  8015  002DE4  6F91               	movwf	(?___fttol+3)& (0+255),b
  8016  002DE6  D02A               	goto	l819
  8017  002DE8                     l2957:
  8018                           
  8019                           ; BSR set to: 0
  8020  002DE8  0100               	movlb	0	; () banked
  8021  002DEA  90D8               	bcf	status,0,c
  8022  002DEC  0100               	movlb	0	; () banked
  8023  002DEE  3798               	rlcf	___fttol@lval& (0+255),f,b
  8024  002DF0  0100               	movlb	0	; () banked
  8025  002DF2  3799               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8026  002DF4  0100               	movlb	0	; () banked
  8027  002DF6  379A               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8028  002DF8  0100               	movlb	0	; () banked
  8029  002DFA  379B               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8030  002DFC  0100               	movlb	0	; () banked
  8031  002DFE  079C               	decf	___fttol@exp1& (0+255),f,b
  8032  002E00                     l2959:
  8033                           
  8034                           ; BSR set to: 0
  8035  002E00  0100               	movlb	0	; () banked
  8036  002E02  679C               	tstfsz	___fttol@exp1& (0+255),b
  8037  002E04  D7F1               	goto	l2957
  8038  002E06                     l2961:
  8039                           
  8040                           ; BSR set to: 0
  8041  002E06  0100               	movlb	0	; () banked
  8042  002E08  5197               	movf	___fttol@sign1& (0+255),w,b
  8043  002E0A  B4D8               	btfsc	status,2,c
  8044  002E0C  D00F               	goto	l2965
  8045                           
  8046                           ; BSR set to: 0
  8047  002E0E  0100               	movlb	0	; () banked
  8048  002E10  1F9B               	comf	(___fttol@lval+3)& (0+255),f,b
  8049  002E12  0100               	movlb	0	; () banked
  8050  002E14  1F9A               	comf	(___fttol@lval+2)& (0+255),f,b
  8051  002E16  0100               	movlb	0	; () banked
  8052  002E18  1F99               	comf	(___fttol@lval+1)& (0+255),f,b
  8053  002E1A  0100               	movlb	0	; () banked
  8054  002E1C  6D98               	negf	___fttol@lval& (0+255),b
  8055  002E1E  0E00               	movlw	0
  8056  002E20  0100               	movlb	0	; () banked
  8057  002E22  2399               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8058  002E24  0100               	movlb	0	; () banked
  8059  002E26  239A               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8060  002E28  0100               	movlb	0	; () banked
  8061  002E2A  239B               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8062  002E2C                     l2965:
  8063                           
  8064                           ; BSR set to: 0
  8065  002E2C  C098  F08E         	movff	___fttol@lval,?___fttol
  8066  002E30  C099  F08F         	movff	___fttol@lval+1,?___fttol+1
  8067  002E34  C09A  F090         	movff	___fttol@lval+2,?___fttol+2
  8068  002E38  C09B  F091         	movff	___fttol@lval+3,?___fttol+3
  8069  002E3C                     l819:
  8070                           
  8071                           ; BSR set to: 0
  8072  002E3C  0012               	return	
  8073  002E3E  FFFF               	dw	65535	; errata NOP
  8074  002E40                     __end_of___fttol:
  8075                           	opt stack 0
  8076                           tblptru	equ	0xFF8
  8077                           tblptrh	equ	0xFF7
  8078                           tblptrl	equ	0xFF6
  8079                           tablat	equ	0xFF5
  8080                           prodh	equ	0xFF4
  8081                           prodl	equ	0xFF3
  8082                           postinc0	equ	0xFEE
  8083                           wreg	equ	0xFE8
  8084                           postinc1	equ	0xFE6
  8085                           postdec1	equ	0xFE5
  8086                           fsr1l	equ	0xFE1
  8087                           indf2	equ	0xFDF
  8088                           postinc2	equ	0xFDE
  8089                           postdec2	equ	0xFDD
  8090                           fsr2h	equ	0xFDA
  8091                           fsr2l	equ	0xFD9
  8092                           status	equ	0xFD8
  8093                           
  8094 ;; *************** function ___ftsub *****************
  8095 ;; Defined at:
  8096 ;;		line 20 in file "/Applications/microchip/xc8/v1.33/sources/common/ftsub.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  f1              3   78[BANK0 ] float 
  8099 ;;  f2              3   81[BANK0 ] float 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  3   78[BANK0 ] float 
  8104 ;; Registers used:
  8105 ;;		wreg, status,2, status,0, cstack
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8111 ;;      Params:         0       6       0       0       0       0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0       0       0
  8114 ;;      Totals:         0       6       0       0       0       0       0
  8115 ;;Total ram usage:        6 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:    6
  8118 ;; This function calls:
  8119 ;;		___ftadd
  8120 ;; This function is called by:
  8121 ;;		_sprintf
  8122 ;;		_ReadEncoder
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text17
  8127  003904                     __ptext17:
  8128                           	opt stack 0
  8129  003904                     ___ftsub:
  8130                           	opt stack 22
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;incstack = 0
  8134  003904  FFFF               	dw	65535
  8135  003906  0E00               	movlw	0
  8136  003908  0100               	movlb	0	; () banked
  8137  00390A  1BD1               	xorwf	___ftsub@f2& (0+255),f,b
  8138  00390C  0E00               	movlw	0
  8139  00390E  0100               	movlb	0	; () banked
  8140  003910  1BD2               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8141  003912  0E80               	movlw	128
  8142  003914  0100               	movlb	0	; () banked
  8143  003916  1BD3               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8144                           
  8145                           ; BSR set to: 0
  8146  003918  C0CE  F0C2         	movff	___ftsub@f1,___ftadd@f1
  8147  00391C  C0CF  F0C3         	movff	___ftsub@f1+1,___ftadd@f1+1
  8148  003920  C0D0  F0C4         	movff	___ftsub@f1+2,___ftadd@f1+2
  8149  003924  C0D1  F0C5         	movff	___ftsub@f2,___ftadd@f2
  8150  003928  C0D2  F0C6         	movff	___ftsub@f2+1,___ftadd@f2+1
  8151  00392C  C0D3  F0C7         	movff	___ftsub@f2+2,___ftadd@f2+2
  8152  003930  EC13  F012         	call	___ftadd	;wreg free
  8153  003934  C0C2  F0CE         	movff	?___ftadd,?___ftsub
  8154  003938  C0C3  F0CF         	movff	?___ftadd+1,?___ftsub+1
  8155  00393C  C0C4  F0D0         	movff	?___ftadd+2,?___ftsub+2
  8156  003940  0012               	return	
  8157  003942  FFFF               	dw	65535	; errata NOP
  8158  003944                     __end_of___ftsub:
  8159                           	opt stack 0
  8160                           tblptru	equ	0xFF8
  8161                           tblptrh	equ	0xFF7
  8162                           tblptrl	equ	0xFF6
  8163                           tablat	equ	0xFF5
  8164                           prodh	equ	0xFF4
  8165                           prodl	equ	0xFF3
  8166                           postinc0	equ	0xFEE
  8167                           wreg	equ	0xFE8
  8168                           postinc1	equ	0xFE6
  8169                           postdec1	equ	0xFE5
  8170                           fsr1l	equ	0xFE1
  8171                           indf2	equ	0xFDF
  8172                           postinc2	equ	0xFDE
  8173                           postdec2	equ	0xFDD
  8174                           fsr2h	equ	0xFDA
  8175                           fsr2l	equ	0xFD9
  8176                           status	equ	0xFD8
  8177                           
  8178 ;; *************** function ___ftadd *****************
  8179 ;; Defined at:
  8180 ;;		line 86 in file "/Applications/microchip/xc8/v1.33/sources/common/ftadd.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  f1              3   66[BANK0 ] float 
  8183 ;;  f2              3   69[BANK0 ] float 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  exp1            1   77[BANK0 ] unsigned char 
  8186 ;;  exp2            1   76[BANK0 ] unsigned char 
  8187 ;;  sign            1   75[BANK0 ] unsigned char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  3   66[BANK0 ] float 
  8190 ;; Registers used:
  8191 ;;		wreg, status,2, status,0, cstack
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8197 ;;      Params:         0       6       0       0       0       0       0
  8198 ;;      Locals:         0       3       0       0       0       0       0
  8199 ;;      Temps:          0       3       0       0       0       0       0
  8200 ;;      Totals:         0      12       0       0       0       0       0
  8201 ;;Total ram usage:       12 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; Hardware stack levels required when called:    5
  8204 ;; This function calls:
  8205 ;;		___ftpack
  8206 ;; This function is called by:
  8207 ;;		_sprintf
  8208 ;;		___ftsub
  8209 ;;		_ReadEncoder
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text18
  8214  002426                     __ptext18:
  8215                           	opt stack 0
  8216  002426                     ___ftadd:
  8217                           	opt stack 22
  8218                           
  8219                           ;incstack = 0
  8220  002426  FFFF               	dw	65535
  8221  002428  0100               	movlb	0	; () banked
  8222  00242A  C0C4  F0C8         	movff	___ftadd@f1+2,??___ftadd
  8223  00242E  0100               	movlb	0	; () banked
  8224  002430  6BC9               	clrf	(??___ftadd+1)& (0+255),b
  8225  002432  6BCA               	clrf	(??___ftadd+2)& (0+255),b
  8226  002434  0100               	movlb	0	; () banked
  8227  002436  35C3               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8228  002438  0100               	movlb	0	; () banked
  8229  00243A  37C8               	rlcf	??___ftadd& (0+255),f,b
  8230  00243C  E301               	bnc	u4251
  8231  00243E  81C9               	bsf	(??___ftadd+1)& (0+255),0,b
  8232  002440                     u4251:
  8233  002440  0100               	movlb	0	; () banked
  8234  002442  51C8               	movf	??___ftadd& (0+255),w,b
  8235  002444  0100               	movlb	0	; () banked
  8236  002446  6FCD               	movwf	___ftadd@exp1& (0+255),b
  8237  002448  0100               	movlb	0	; () banked
  8238  00244A  C0C7  F0C8         	movff	___ftadd@f2+2,??___ftadd
  8239  00244E  0100               	movlb	0	; () banked
  8240  002450  6BC9               	clrf	(??___ftadd+1)& (0+255),b
  8241  002452  6BCA               	clrf	(??___ftadd+2)& (0+255),b
  8242  002454  0100               	movlb	0	; () banked
  8243  002456  35C6               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8244  002458  0100               	movlb	0	; () banked
  8245  00245A  37C8               	rlcf	??___ftadd& (0+255),f,b
  8246  00245C  E301               	bnc	u4261
  8247  00245E  81C9               	bsf	(??___ftadd+1)& (0+255),0,b
  8248  002460                     u4261:
  8249  002460  0100               	movlb	0	; () banked
  8250  002462  51C8               	movf	??___ftadd& (0+255),w,b
  8251  002464  0100               	movlb	0	; () banked
  8252  002466  6FCC               	movwf	___ftadd@exp2& (0+255),b
  8253                           
  8254                           ; BSR set to: 0
  8255  002468  0100               	movlb	0	; () banked
  8256  00246A  51CD               	movf	___ftadd@exp1& (0+255),w,b
  8257  00246C  B4D8               	btfsc	status,2,c
  8258  00246E  D012               	goto	l735
  8259                           
  8260                           ; BSR set to: 0
  8261  002470  0100               	movlb	0	; () banked
  8262  002472  51CC               	movf	___ftadd@exp2& (0+255),w,b
  8263  002474  0100               	movlb	0	; () banked
  8264  002476  5DCD               	subwf	___ftadd@exp1& (0+255),w,b
  8265  002478  B0D8               	btfsc	status,0,c
  8266  00247A  D013               	goto	l3859
  8267                           
  8268                           ; BSR set to: 0
  8269  00247C  0100               	movlb	0	; () banked
  8270  00247E  51CD               	movf	___ftadd@exp1& (0+255),w,b
  8271  002480  0800               	sublw	0
  8272  002482  0100               	movlb	0	; () banked
  8273  002484  25CC               	addwf	___ftadd@exp2& (0+255),w,b
  8274  002486  0100               	movlb	0	; () banked
  8275  002488  6FC8               	movwf	??___ftadd& (0+255),b
  8276  00248A  0E19               	movlw	25
  8277  00248C  0100               	movlb	0	; () banked
  8278  00248E  5DC8               	subwf	??___ftadd& (0+255),w,b
  8279  002490  A0D8               	btfss	status,0,c
  8280  002492  D007               	goto	l3859
  8281  002494                     l735:
  8282                           
  8283                           ; BSR set to: 0
  8284  002494  C0C5  F0C2         	movff	___ftadd@f2,?___ftadd
  8285  002498  C0C6  F0C3         	movff	___ftadd@f2+1,?___ftadd+1
  8286  00249C  C0C7  F0C4         	movff	___ftadd@f2+2,?___ftadd+2
  8287  0024A0  D102               	goto	l736
  8288  0024A2                     l3859:
  8289                           
  8290                           ; BSR set to: 0
  8291  0024A2  0100               	movlb	0	; () banked
  8292  0024A4  51CC               	movf	___ftadd@exp2& (0+255),w,b
  8293  0024A6  B4D8               	btfsc	status,2,c
  8294  0024A8  D012               	goto	l739
  8295                           
  8296                           ; BSR set to: 0
  8297  0024AA  0100               	movlb	0	; () banked
  8298  0024AC  51CD               	movf	___ftadd@exp1& (0+255),w,b
  8299  0024AE  0100               	movlb	0	; () banked
  8300  0024B0  5DCC               	subwf	___ftadd@exp2& (0+255),w,b
  8301  0024B2  B0D8               	btfsc	status,0,c
  8302  0024B4  D013               	goto	l3865
  8303                           
  8304                           ; BSR set to: 0
  8305  0024B6  0100               	movlb	0	; () banked
  8306  0024B8  51CC               	movf	___ftadd@exp2& (0+255),w,b
  8307  0024BA  0800               	sublw	0
  8308  0024BC  0100               	movlb	0	; () banked
  8309  0024BE  25CD               	addwf	___ftadd@exp1& (0+255),w,b
  8310  0024C0  0100               	movlb	0	; () banked
  8311  0024C2  6FC8               	movwf	??___ftadd& (0+255),b
  8312  0024C4  0E19               	movlw	25
  8313  0024C6  0100               	movlb	0	; () banked
  8314  0024C8  5DC8               	subwf	??___ftadd& (0+255),w,b
  8315  0024CA  A0D8               	btfss	status,0,c
  8316  0024CC  D007               	goto	l3865
  8317  0024CE                     l739:
  8318                           
  8319                           ; BSR set to: 0
  8320  0024CE  C0C2  F0C2         	movff	___ftadd@f1,?___ftadd
  8321  0024D2  C0C3  F0C3         	movff	___ftadd@f1+1,?___ftadd+1
  8322  0024D6  C0C4  F0C4         	movff	___ftadd@f1+2,?___ftadd+2
  8323  0024DA  D0E5               	goto	l736
  8324  0024DC                     l3865:
  8325                           
  8326                           ; BSR set to: 0
  8327  0024DC  0E06               	movlw	6
  8328  0024DE  0100               	movlb	0	; () banked
  8329  0024E0  6FCB               	movwf	___ftadd@sign& (0+255),b
  8330                           
  8331                           ; BSR set to: 0
  8332  0024E2  0100               	movlb	0	; () banked
  8333  0024E4  AFC4               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8334  0024E6  D002               	goto	l3871
  8335                           
  8336                           ; BSR set to: 0
  8337  0024E8  0100               	movlb	0	; () banked
  8338  0024EA  8FCB               	bsf	___ftadd@sign& (0+255),7,b
  8339  0024EC                     l3871:
  8340                           
  8341                           ; BSR set to: 0
  8342  0024EC  0100               	movlb	0	; () banked
  8343  0024EE  AFC7               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8344  0024F0  D002               	goto	l741
  8345                           
  8346                           ; BSR set to: 0
  8347  0024F2  0100               	movlb	0	; () banked
  8348  0024F4  8DCB               	bsf	___ftadd@sign& (0+255),6,b
  8349  0024F6                     l741:
  8350                           
  8351                           ; BSR set to: 0
  8352  0024F6  0100               	movlb	0	; () banked
  8353  0024F8  8FC3               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8354                           
  8355                           ; BSR set to: 0
  8356  0024FA  0EFF               	movlw	255
  8357  0024FC  0100               	movlb	0	; () banked
  8358  0024FE  17C2               	andwf	___ftadd@f1& (0+255),f,b
  8359  002500  0EFF               	movlw	255
  8360  002502  0100               	movlb	0	; () banked
  8361  002504  17C3               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8362  002506  0E00               	movlw	0
  8363  002508  0100               	movlb	0	; () banked
  8364  00250A  17C4               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8365  00250C  0100               	movlb	0	; () banked
  8366  00250E  8FC6               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8367                           
  8368                           ; BSR set to: 0
  8369  002510  0EFF               	movlw	255
  8370  002512  0100               	movlb	0	; () banked
  8371  002514  17C5               	andwf	___ftadd@f2& (0+255),f,b
  8372  002516  0EFF               	movlw	255
  8373  002518  0100               	movlb	0	; () banked
  8374  00251A  17C6               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8375  00251C  0E00               	movlw	0
  8376  00251E  0100               	movlb	0	; () banked
  8377  002520  17C7               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8378                           
  8379                           ; BSR set to: 0
  8380  002522  0100               	movlb	0	; () banked
  8381  002524  51CC               	movf	___ftadd@exp2& (0+255),w,b
  8382  002526  0100               	movlb	0	; () banked
  8383  002528  5DCD               	subwf	___ftadd@exp1& (0+255),w,b
  8384  00252A  B0D8               	btfsc	status,0,c
  8385  00252C  D02A               	goto	l3891
  8386  00252E                     l3881:
  8387                           
  8388                           ; BSR set to: 0
  8389  00252E  0100               	movlb	0	; () banked
  8390  002530  90D8               	bcf	status,0,c
  8391  002532  0100               	movlb	0	; () banked
  8392  002534  37C5               	rlcf	___ftadd@f2& (0+255),f,b
  8393  002536  0100               	movlb	0	; () banked
  8394  002538  37C6               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8395  00253A  0100               	movlb	0	; () banked
  8396  00253C  37C7               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8397  00253E  0100               	movlb	0	; () banked
  8398  002540  07CC               	decf	___ftadd@exp2& (0+255),f,b
  8399                           
  8400                           ; BSR set to: 0
  8401  002542  0100               	movlb	0	; () banked
  8402  002544  51CC               	movf	___ftadd@exp2& (0+255),w,b
  8403  002546  0100               	movlb	0	; () banked
  8404  002548  19CD               	xorwf	___ftadd@exp1& (0+255),w,b
  8405  00254A  B4D8               	btfsc	status,2,c
  8406  00254C  D014               	goto	l3889
  8407                           
  8408                           ; BSR set to: 0
  8409  00254E  0100               	movlb	0	; () banked
  8410  002550  07CB               	decf	___ftadd@sign& (0+255),f,b
  8411  002552  C0CB  F0C8         	movff	___ftadd@sign,??___ftadd
  8412  002556  0E07               	movlw	7
  8413  002558  0100               	movlb	0	; () banked
  8414  00255A  17C8               	andwf	??___ftadd& (0+255),f,b
  8415  00255C  B4D8               	btfsc	status,2,c
  8416  00255E  D00B               	goto	l3889
  8417  002560  D7E6               	goto	l3881
  8418  002562                     l3887:
  8419                           
  8420                           ; BSR set to: 0
  8421  002562  0100               	movlb	0	; () banked
  8422  002564  90D8               	bcf	status,0,c
  8423  002566  0100               	movlb	0	; () banked
  8424  002568  33C4               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8425  00256A  0100               	movlb	0	; () banked
  8426  00256C  33C3               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8427  00256E  0100               	movlb	0	; () banked
  8428  002570  33C2               	rrcf	___ftadd@f1& (0+255),f,b
  8429  002572  0100               	movlb	0	; () banked
  8430  002574  2BCD               	incf	___ftadd@exp1& (0+255),f,b
  8431  002576                     l3889:
  8432                           
  8433                           ; BSR set to: 0
  8434  002576  0100               	movlb	0	; () banked
  8435  002578  51CC               	movf	___ftadd@exp2& (0+255),w,b
  8436  00257A  0100               	movlb	0	; () banked
  8437  00257C  63CD               	cpfseq	___ftadd@exp1& (0+255),b
  8438  00257E  D7F1               	goto	l3887
  8439  002580  D02F               	goto	l750
  8440  002582                     l3891:
  8441                           
  8442                           ; BSR set to: 0
  8443  002582  0100               	movlb	0	; () banked
  8444  002584  51CD               	movf	___ftadd@exp1& (0+255),w,b
  8445  002586  0100               	movlb	0	; () banked
  8446  002588  5DCC               	subwf	___ftadd@exp2& (0+255),w,b
  8447  00258A  B0D8               	btfsc	status,0,c
  8448  00258C  D029               	goto	l750
  8449  00258E                     l3893:
  8450                           
  8451                           ; BSR set to: 0
  8452  00258E  0100               	movlb	0	; () banked
  8453  002590  90D8               	bcf	status,0,c
  8454  002592  0100               	movlb	0	; () banked
  8455  002594  37C2               	rlcf	___ftadd@f1& (0+255),f,b
  8456  002596  0100               	movlb	0	; () banked
  8457  002598  37C3               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8458  00259A  0100               	movlb	0	; () banked
  8459  00259C  37C4               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8460  00259E  0100               	movlb	0	; () banked
  8461  0025A0  07CD               	decf	___ftadd@exp1& (0+255),f,b
  8462                           
  8463                           ; BSR set to: 0
  8464  0025A2  0100               	movlb	0	; () banked
  8465  0025A4  51CC               	movf	___ftadd@exp2& (0+255),w,b
  8466  0025A6  0100               	movlb	0	; () banked
  8467  0025A8  19CD               	xorwf	___ftadd@exp1& (0+255),w,b
  8468  0025AA  B4D8               	btfsc	status,2,c
  8469  0025AC  D014               	goto	l3901
  8470                           
  8471                           ; BSR set to: 0
  8472  0025AE  0100               	movlb	0	; () banked
  8473  0025B0  07CB               	decf	___ftadd@sign& (0+255),f,b
  8474  0025B2  C0CB  F0C8         	movff	___ftadd@sign,??___ftadd
  8475  0025B6  0E07               	movlw	7
  8476  0025B8  0100               	movlb	0	; () banked
  8477  0025BA  17C8               	andwf	??___ftadd& (0+255),f,b
  8478  0025BC  B4D8               	btfsc	status,2,c
  8479  0025BE  D00B               	goto	l3901
  8480  0025C0  D7E6               	goto	l3893
  8481  0025C2                     l3899:
  8482                           
  8483                           ; BSR set to: 0
  8484  0025C2  0100               	movlb	0	; () banked
  8485  0025C4  90D8               	bcf	status,0,c
  8486  0025C6  0100               	movlb	0	; () banked
  8487  0025C8  33C7               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8488  0025CA  0100               	movlb	0	; () banked
  8489  0025CC  33C6               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8490  0025CE  0100               	movlb	0	; () banked
  8491  0025D0  33C5               	rrcf	___ftadd@f2& (0+255),f,b
  8492  0025D2  0100               	movlb	0	; () banked
  8493  0025D4  2BCC               	incf	___ftadd@exp2& (0+255),f,b
  8494  0025D6                     l3901:
  8495                           
  8496                           ; BSR set to: 0
  8497  0025D6  0100               	movlb	0	; () banked
  8498  0025D8  51CC               	movf	___ftadd@exp2& (0+255),w,b
  8499  0025DA  0100               	movlb	0	; () banked
  8500  0025DC  63CD               	cpfseq	___ftadd@exp1& (0+255),b
  8501  0025DE  D7F1               	goto	l3899
  8502  0025E0                     l750:
  8503                           
  8504                           ; BSR set to: 0
  8505  0025E0  0100               	movlb	0	; () banked
  8506  0025E2  AFCB               	btfss	___ftadd@sign& (0+255),7,b
  8507  0025E4  D012               	goto	l759
  8508                           
  8509                           ; BSR set to: 0
  8510  0025E6  0EFF               	movlw	255
  8511  0025E8  0100               	movlb	0	; () banked
  8512  0025EA  1BC2               	xorwf	___ftadd@f1& (0+255),f,b
  8513  0025EC  0EFF               	movlw	255
  8514  0025EE  0100               	movlb	0	; () banked
  8515  0025F0  1BC3               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8516  0025F2  0EFF               	movlw	255
  8517  0025F4  0100               	movlb	0	; () banked
  8518  0025F6  1BC4               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8519  0025F8  0E01               	movlw	1
  8520  0025FA  0100               	movlb	0	; () banked
  8521  0025FC  27C2               	addwf	___ftadd@f1& (0+255),f,b
  8522  0025FE  0E00               	movlw	0
  8523  002600  0100               	movlb	0	; () banked
  8524  002602  23C3               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8525  002604  0E00               	movlw	0
  8526  002606  0100               	movlb	0	; () banked
  8527  002608  23C4               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8528  00260A                     l759:
  8529                           
  8530                           ; BSR set to: 0
  8531  00260A  0100               	movlb	0	; () banked
  8532  00260C  ADCB               	btfss	___ftadd@sign& (0+255),6,b
  8533  00260E  D012               	goto	l3907
  8534                           
  8535                           ; BSR set to: 0
  8536  002610  0EFF               	movlw	255
  8537  002612  0100               	movlb	0	; () banked
  8538  002614  1BC5               	xorwf	___ftadd@f2& (0+255),f,b
  8539  002616  0EFF               	movlw	255
  8540  002618  0100               	movlb	0	; () banked
  8541  00261A  1BC6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8542  00261C  0EFF               	movlw	255
  8543  00261E  0100               	movlb	0	; () banked
  8544  002620  1BC7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8545  002622  0E01               	movlw	1
  8546  002624  0100               	movlb	0	; () banked
  8547  002626  27C5               	addwf	___ftadd@f2& (0+255),f,b
  8548  002628  0E00               	movlw	0
  8549  00262A  0100               	movlb	0	; () banked
  8550  00262C  23C6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8551  00262E  0E00               	movlw	0
  8552  002630  0100               	movlb	0	; () banked
  8553  002632  23C7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8554  002634                     l3907:
  8555                           
  8556                           ; BSR set to: 0
  8557  002634  0E00               	movlw	0
  8558  002636  0100               	movlb	0	; () banked
  8559  002638  6FCB               	movwf	___ftadd@sign& (0+255),b
  8560                           
  8561                           ; BSR set to: 0
  8562  00263A  0100               	movlb	0	; () banked
  8563  00263C  51C2               	movf	___ftadd@f1& (0+255),w,b
  8564  00263E  0100               	movlb	0	; () banked
  8565  002640  27C5               	addwf	___ftadd@f2& (0+255),f,b
  8566  002642  0100               	movlb	0	; () banked
  8567  002644  51C3               	movf	(___ftadd@f1+1)& (0+255),w,b
  8568  002646  0100               	movlb	0	; () banked
  8569  002648  23C6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8570  00264A  0100               	movlb	0	; () banked
  8571  00264C  51C4               	movf	(___ftadd@f1+2)& (0+255),w,b
  8572  00264E  0100               	movlb	0	; () banked
  8573  002650  23C7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8574                           
  8575                           ; BSR set to: 0
  8576  002652  0100               	movlb	0	; () banked
  8577  002654  AFC7               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8578  002656  D015               	goto	l3917
  8579                           
  8580                           ; BSR set to: 0
  8581  002658  0EFF               	movlw	255
  8582  00265A  0100               	movlb	0	; () banked
  8583  00265C  1BC5               	xorwf	___ftadd@f2& (0+255),f,b
  8584  00265E  0EFF               	movlw	255
  8585  002660  0100               	movlb	0	; () banked
  8586  002662  1BC6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8587  002664  0EFF               	movlw	255
  8588  002666  0100               	movlb	0	; () banked
  8589  002668  1BC7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8590  00266A  0E01               	movlw	1
  8591  00266C  0100               	movlb	0	; () banked
  8592  00266E  27C5               	addwf	___ftadd@f2& (0+255),f,b
  8593  002670  0E00               	movlw	0
  8594  002672  0100               	movlb	0	; () banked
  8595  002674  23C6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8596  002676  0E00               	movlw	0
  8597  002678  0100               	movlb	0	; () banked
  8598  00267A  23C7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8599                           
  8600                           ; BSR set to: 0
  8601  00267C  0E01               	movlw	1
  8602  00267E  0100               	movlb	0	; () banked
  8603  002680  6FCB               	movwf	___ftadd@sign& (0+255),b
  8604  002682                     l3917:
  8605                           
  8606                           ; BSR set to: 0
  8607  002682  C0C5  F08E         	movff	___ftadd@f2,___ftpack@arg
  8608  002686  C0C6  F08F         	movff	___ftadd@f2+1,___ftpack@arg+1
  8609  00268A  C0C7  F090         	movff	___ftadd@f2+2,___ftpack@arg+2
  8610  00268E  C0CD  F091         	movff	___ftadd@exp1,___ftpack@exp
  8611  002692  C0CB  F092         	movff	___ftadd@sign,___ftpack@sign
  8612  002696  ECC5  F017         	call	___ftpack	;wreg free
  8613  00269A  C08E  F0C2         	movff	?___ftpack,?___ftadd
  8614  00269E  C08F  F0C3         	movff	?___ftpack+1,?___ftadd+1
  8615  0026A2  C090  F0C4         	movff	?___ftpack+2,?___ftadd+2
  8616  0026A6                     l736:
  8617  0026A6  0012               	return	
  8618  0026A8  FFFF               	dw	65535	; errata NOP
  8619  0026AA                     __end_of___ftadd:
  8620                           	opt stack 0
  8621                           tblptru	equ	0xFF8
  8622                           tblptrh	equ	0xFF7
  8623                           tblptrl	equ	0xFF6
  8624                           tablat	equ	0xFF5
  8625                           prodh	equ	0xFF4
  8626                           prodl	equ	0xFF3
  8627                           postinc0	equ	0xFEE
  8628                           wreg	equ	0xFE8
  8629                           postinc1	equ	0xFE6
  8630                           postdec1	equ	0xFE5
  8631                           fsr1l	equ	0xFE1
  8632                           indf2	equ	0xFDF
  8633                           postinc2	equ	0xFDE
  8634                           postdec2	equ	0xFDD
  8635                           fsr2h	equ	0xFDA
  8636                           fsr2l	equ	0xFD9
  8637                           status	equ	0xFD8
  8638                           
  8639 ;; *************** function ___ftneg *****************
  8640 ;; Defined at:
  8641 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/ftneg.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  f1              3   38[BANK0 ] float 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;		None
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  3   38[BANK0 ] float 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8655 ;;      Params:         0       3       0       0       0       0       0
  8656 ;;      Locals:         0       0       0       0       0       0       0
  8657 ;;      Temps:          0       0       0       0       0       0       0
  8658 ;;      Totals:         0       3       0       0       0       0       0
  8659 ;;Total ram usage:        3 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    4
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_sprintf
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           	psect	text19
  8670  003A32                     __ptext19:
  8671                           	opt stack 0
  8672  003A32                     ___ftneg:
  8673                           	opt stack 24
  8674                           
  8675                           ;incstack = 0
  8676  003A32  FFFF               	dw	65535
  8677  003A34  0E7F               	movlw	127
  8678  003A36  0100               	movlb	0	; () banked
  8679  003A38  15A8               	andwf	(___ftneg@f1+2)& (0+255),w,b
  8680  003A3A  0100               	movlb	0	; () banked
  8681  003A3C  11A7               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8682  003A3E  0100               	movlb	0	; () banked
  8683  003A40  11A6               	iorwf	___ftneg@f1& (0+255),w,b
  8684  003A42  B4D8               	btfsc	status,2,c
  8685  003A44  D009               	goto	l809
  8686                           
  8687                           ; BSR set to: 0
  8688  003A46  0E00               	movlw	0
  8689  003A48  0100               	movlb	0	; () banked
  8690  003A4A  1BA6               	xorwf	___ftneg@f1& (0+255),f,b
  8691  003A4C  0E00               	movlw	0
  8692  003A4E  0100               	movlb	0	; () banked
  8693  003A50  1BA7               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8694  003A52  0E80               	movlw	128
  8695  003A54  0100               	movlb	0	; () banked
  8696  003A56  1BA8               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8697  003A58                     l809:
  8698                           
  8699                           ; BSR set to: 0
  8700  003A58  C0A6  F0A6         	movff	___ftneg@f1,?___ftneg
  8701  003A5C  C0A7  F0A7         	movff	___ftneg@f1+1,?___ftneg+1
  8702  003A60  C0A8  F0A8         	movff	___ftneg@f1+2,?___ftneg+2
  8703                           
  8704                           ; BSR set to: 0
  8705  003A64  0012               	return	
  8706  003A66  FFFF               	dw	65535	; errata NOP
  8707  003A68                     __end_of___ftneg:
  8708                           	opt stack 0
  8709                           tblptru	equ	0xFF8
  8710                           tblptrh	equ	0xFF7
  8711                           tblptrl	equ	0xFF6
  8712                           tablat	equ	0xFF5
  8713                           prodh	equ	0xFF4
  8714                           prodl	equ	0xFF3
  8715                           postinc0	equ	0xFEE
  8716                           wreg	equ	0xFE8
  8717                           postinc1	equ	0xFE6
  8718                           postdec1	equ	0xFE5
  8719                           fsr1l	equ	0xFE1
  8720                           indf2	equ	0xFDF
  8721                           postinc2	equ	0xFDE
  8722                           postdec2	equ	0xFDD
  8723                           fsr2h	equ	0xFDA
  8724                           fsr2l	equ	0xFD9
  8725                           status	equ	0xFD8
  8726                           
  8727 ;; *************** function ___ftge *****************
  8728 ;; Defined at:
  8729 ;;		line 4 in file "/Applications/microchip/xc8/v1.33/sources/common/ftge.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  ff1             3   78[BANK0 ] float 
  8732 ;;  ff2             3   81[BANK0 ] float 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;		None
  8735 ;; Return value:  Size  Location     Type
  8736 ;;		None               void
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8744 ;;      Params:         0       6       0       0       0       0       0
  8745 ;;      Locals:         0       0       0       0       0       0       0
  8746 ;;      Temps:          0       3       0       0       0       0       0
  8747 ;;      Totals:         0       9       0       0       0       0       0
  8748 ;;Total ram usage:        9 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:    4
  8751 ;; This function calls:
  8752 ;;		Nothing
  8753 ;; This function is called by:
  8754 ;;		_sprintf
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text20
  8759  00342C                     __ptext20:
  8760                           	opt stack 0
  8761  00342C                     ___ftge:
  8762                           	opt stack 24
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;incstack = 0
  8766  00342C  FFFF               	dw	65535
  8767  00342E  0100               	movlb	0	; () banked
  8768  003430  AFD0               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8769  003432  D020               	goto	l2905
  8770                           
  8771                           ; BSR set to: 0
  8772  003434  0100               	movlb	0	; () banked
  8773  003436  C0CE  F0D4         	movff	___ftge@ff1,??___ftge
  8774  00343A  0100               	movlb	0	; () banked
  8775  00343C  C0CF  F0D5         	movff	___ftge@ff1+1,??___ftge+1
  8776  003440  0100               	movlb	0	; () banked
  8777  003442  C0D0  F0D6         	movff	___ftge@ff1+2,??___ftge+2
  8778  003446  0100               	movlb	0	; () banked
  8779  003448  1FD4               	comf	??___ftge& (0+255),f,b
  8780  00344A  1FD5               	comf	(??___ftge+1)& (0+255),f,b
  8781  00344C  1FD6               	comf	(??___ftge+2)& (0+255),f,b
  8782  00344E  2BD4               	incf	??___ftge& (0+255),f,b
  8783  003450  0E00               	movlw	0
  8784  003452  23D5               	addwfc	(??___ftge+1)& (0+255),f,b
  8785  003454  23D6               	addwfc	(??___ftge+2)& (0+255),f,b
  8786  003456  0E00               	movlw	0
  8787  003458  0100               	movlb	0	; () banked
  8788  00345A  25D4               	addwf	??___ftge& (0+255),w,b
  8789  00345C  0100               	movlb	0	; () banked
  8790  00345E  6FCE               	movwf	___ftge@ff1& (0+255),b
  8791  003460  0E00               	movlw	0
  8792  003462  0100               	movlb	0	; () banked
  8793  003464  21D5               	addwfc	(??___ftge+1)& (0+255),w,b
  8794  003466  0100               	movlb	0	; () banked
  8795  003468  6FCF               	movwf	(___ftge@ff1+1)& (0+255),b
  8796  00346A  0E80               	movlw	128
  8797  00346C  0100               	movlb	0	; () banked
  8798  00346E  21D6               	addwfc	(??___ftge+2)& (0+255),w,b
  8799  003470  0100               	movlb	0	; () banked
  8800  003472  6FD0               	movwf	(___ftge@ff1+2)& (0+255),b
  8801  003474                     l2905:
  8802                           
  8803                           ; BSR set to: 0
  8804  003474  0100               	movlb	0	; () banked
  8805  003476  AFD3               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8806  003478  D020               	goto	l2909
  8807                           
  8808                           ; BSR set to: 0
  8809  00347A  0100               	movlb	0	; () banked
  8810  00347C  C0D1  F0D4         	movff	___ftge@ff2,??___ftge
  8811  003480  0100               	movlb	0	; () banked
  8812  003482  C0D2  F0D5         	movff	___ftge@ff2+1,??___ftge+1
  8813  003486  0100               	movlb	0	; () banked
  8814  003488  C0D3  F0D6         	movff	___ftge@ff2+2,??___ftge+2
  8815  00348C  0100               	movlb	0	; () banked
  8816  00348E  1FD4               	comf	??___ftge& (0+255),f,b
  8817  003490  1FD5               	comf	(??___ftge+1)& (0+255),f,b
  8818  003492  1FD6               	comf	(??___ftge+2)& (0+255),f,b
  8819  003494  2BD4               	incf	??___ftge& (0+255),f,b
  8820  003496  0E00               	movlw	0
  8821  003498  23D5               	addwfc	(??___ftge+1)& (0+255),f,b
  8822  00349A  23D6               	addwfc	(??___ftge+2)& (0+255),f,b
  8823  00349C  0E00               	movlw	0
  8824  00349E  0100               	movlb	0	; () banked
  8825  0034A0  25D4               	addwf	??___ftge& (0+255),w,b
  8826  0034A2  0100               	movlb	0	; () banked
  8827  0034A4  6FD1               	movwf	___ftge@ff2& (0+255),b
  8828  0034A6  0E00               	movlw	0
  8829  0034A8  0100               	movlb	0	; () banked
  8830  0034AA  21D5               	addwfc	(??___ftge+1)& (0+255),w,b
  8831  0034AC  0100               	movlb	0	; () banked
  8832  0034AE  6FD2               	movwf	(___ftge@ff2+1)& (0+255),b
  8833  0034B0  0E80               	movlw	128
  8834  0034B2  0100               	movlb	0	; () banked
  8835  0034B4  21D6               	addwfc	(??___ftge+2)& (0+255),w,b
  8836  0034B6  0100               	movlb	0	; () banked
  8837  0034B8  6FD3               	movwf	(___ftge@ff2+2)& (0+255),b
  8838  0034BA                     l2909:
  8839                           
  8840                           ; BSR set to: 0
  8841  0034BA  0E00               	movlw	0
  8842  0034BC  0100               	movlb	0	; () banked
  8843  0034BE  1BCE               	xorwf	___ftge@ff1& (0+255),f,b
  8844  0034C0  0E00               	movlw	0
  8845  0034C2  0100               	movlb	0	; () banked
  8846  0034C4  1BCF               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8847  0034C6  0E80               	movlw	128
  8848  0034C8  0100               	movlb	0	; () banked
  8849  0034CA  1BD0               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8850                           
  8851                           ; BSR set to: 0
  8852  0034CC  0E00               	movlw	0
  8853  0034CE  0100               	movlb	0	; () banked
  8854  0034D0  1BD1               	xorwf	___ftge@ff2& (0+255),f,b
  8855  0034D2  0E00               	movlw	0
  8856  0034D4  0100               	movlb	0	; () banked
  8857  0034D6  1BD2               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8858  0034D8  0E80               	movlw	128
  8859  0034DA  0100               	movlb	0	; () banked
  8860  0034DC  1BD3               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8861  0034DE  0100               	movlb	0	; () banked
  8862  0034E0  51D1               	movf	___ftge@ff2& (0+255),w,b
  8863  0034E2  0100               	movlb	0	; () banked
  8864  0034E4  5DCE               	subwf	___ftge@ff1& (0+255),w,b
  8865  0034E6  0100               	movlb	0	; () banked
  8866  0034E8  51D2               	movf	(___ftge@ff2+1)& (0+255),w,b
  8867  0034EA  0100               	movlb	0	; () banked
  8868  0034EC  59CF               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8869  0034EE  0100               	movlb	0	; () banked
  8870  0034F0  51D3               	movf	(___ftge@ff2+2)& (0+255),w,b
  8871  0034F2  0100               	movlb	0	; () banked
  8872  0034F4  59D0               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8873  0034F6  B0D8               	btfsc	status,0,c
  8874  0034F8  D002               	goto	l2915
  8875                           
  8876                           ; BSR set to: 0
  8877  0034FA  90D8               	bcf	status,0,c
  8878  0034FC  D001               	goto	l793
  8879  0034FE                     l2915:
  8880                           
  8881                           ; BSR set to: 0
  8882  0034FE  80D8               	bsf	status,0,c
  8883  003500                     l793:
  8884                           
  8885                           ; BSR set to: 0
  8886  003500  0012               	return	
  8887  003502  FFFF               	dw	65535	; errata NOP
  8888  003504                     __end_of___ftge:
  8889                           	opt stack 0
  8890                           tblptru	equ	0xFF8
  8891                           tblptrh	equ	0xFF7
  8892                           tblptrl	equ	0xFF6
  8893                           tablat	equ	0xFF5
  8894                           prodh	equ	0xFF4
  8895                           prodl	equ	0xFF3
  8896                           postinc0	equ	0xFEE
  8897                           wreg	equ	0xFE8
  8898                           postinc1	equ	0xFE6
  8899                           postdec1	equ	0xFE5
  8900                           fsr1l	equ	0xFE1
  8901                           indf2	equ	0xFDF
  8902                           postinc2	equ	0xFDE
  8903                           postdec2	equ	0xFDD
  8904                           fsr2h	equ	0xFDA
  8905                           fsr2l	equ	0xFD9
  8906                           status	equ	0xFD8
  8907                           
  8908 ;; *************** function ___ftdiv *****************
  8909 ;; Defined at:
  8910 ;;		line 49 in file "/Applications/microchip/xc8/v1.33/sources/common/ftdiv.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  f1              3   63[BANK0 ] float 
  8913 ;;  f2              3   66[BANK0 ] float 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  f3              3   73[BANK0 ] float 
  8916 ;;  sign            1   77[BANK0 ] unsigned char 
  8917 ;;  exp             1   76[BANK0 ] unsigned char 
  8918 ;;  cntr            1   72[BANK0 ] unsigned char 
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  3   63[BANK0 ] float 
  8921 ;; Registers used:
  8922 ;;		wreg, status,2, status,0, cstack
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8928 ;;      Params:         0       6       0       0       0       0       0
  8929 ;;      Locals:         0       6       0       0       0       0       0
  8930 ;;      Temps:          0       3       0       0       0       0       0
  8931 ;;      Totals:         0      15       0       0       0       0       0
  8932 ;;Total ram usage:       15 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:    5
  8935 ;; This function calls:
  8936 ;;		___ftpack
  8937 ;; This function is called by:
  8938 ;;		_sprintf
  8939 ;;		_ReadEncoder
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text21
  8944  002E40                     __ptext21:
  8945                           	opt stack 0
  8946  002E40                     ___ftdiv:
  8947                           	opt stack 23
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;incstack = 0
  8951  002E40  FFFF               	dw	65535
  8952  002E42  0100               	movlb	0	; () banked
  8953  002E44  C0C1  F0C5         	movff	___ftdiv@f1+2,??___ftdiv
  8954  002E48  0100               	movlb	0	; () banked
  8955  002E4A  6BC6               	clrf	(??___ftdiv+1)& (0+255),b
  8956  002E4C  6BC7               	clrf	(??___ftdiv+2)& (0+255),b
  8957  002E4E  0100               	movlb	0	; () banked
  8958  002E50  35C0               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8959  002E52  0100               	movlb	0	; () banked
  8960  002E54  37C5               	rlcf	??___ftdiv& (0+255),f,b
  8961  002E56  E301               	bnc	u4731
  8962  002E58  81C6               	bsf	(??___ftdiv+1)& (0+255),0,b
  8963  002E5A                     u4731:
  8964  002E5A  0100               	movlb	0	; () banked
  8965  002E5C  51C5               	movf	??___ftdiv& (0+255),w,b
  8966  002E5E  0100               	movlb	0	; () banked
  8967  002E60  6FCC               	movwf	___ftdiv@exp& (0+255),b
  8968  002E62  0100               	movlb	0	; () banked
  8969  002E64  67CC               	tstfsz	___ftdiv@exp& (0+255),b
  8970  002E66  D001               	goto	l4139
  8971  002E68  D013               	goto	u4760
  8972  002E6A                     l4139:
  8973                           
  8974                           ; BSR set to: 0
  8975  002E6A  0100               	movlb	0	; () banked
  8976  002E6C  C0C4  F0C5         	movff	___ftdiv@f2+2,??___ftdiv
  8977  002E70  0100               	movlb	0	; () banked
  8978  002E72  6BC6               	clrf	(??___ftdiv+1)& (0+255),b
  8979  002E74  6BC7               	clrf	(??___ftdiv+2)& (0+255),b
  8980  002E76  0100               	movlb	0	; () banked
  8981  002E78  35C3               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8982  002E7A  0100               	movlb	0	; () banked
  8983  002E7C  37C5               	rlcf	??___ftdiv& (0+255),f,b
  8984  002E7E  E301               	bnc	u4751
  8985  002E80  81C6               	bsf	(??___ftdiv+1)& (0+255),0,b
  8986  002E82                     u4751:
  8987  002E82  0100               	movlb	0	; () banked
  8988  002E84  51C5               	movf	??___ftdiv& (0+255),w,b
  8989  002E86  0100               	movlb	0	; () banked
  8990  002E88  6FCD               	movwf	___ftdiv@sign& (0+255),b
  8991  002E8A  0100               	movlb	0	; () banked
  8992  002E8C  67CD               	tstfsz	___ftdiv@sign& (0+255),b
  8993  002E8E  D00A               	goto	l4145
  8994  002E90                     u4760:
  8995                           
  8996                           ; BSR set to: 0
  8997  002E90  0E00               	movlw	0
  8998  002E92  0100               	movlb	0	; () banked
  8999  002E94  6FBF               	movwf	?___ftdiv& (0+255),b
  9000  002E96  0E00               	movlw	0
  9001  002E98  0100               	movlb	0	; () banked
  9002  002E9A  6FC0               	movwf	(?___ftdiv+1)& (0+255),b
  9003  002E9C  0E00               	movlw	0
  9004  002E9E  0100               	movlb	0	; () banked
  9005  002EA0  6FC1               	movwf	(?___ftdiv+2)& (0+255),b
  9006  002EA2  D071               	goto	l767
  9007  002EA4                     l4145:
  9008                           
  9009                           ; BSR set to: 0
  9010  002EA4  0E00               	movlw	0
  9011  002EA6  0100               	movlb	0	; () banked
  9012  002EA8  6FC9               	movwf	___ftdiv@f3& (0+255),b
  9013  002EAA  0E00               	movlw	0
  9014  002EAC  0100               	movlb	0	; () banked
  9015  002EAE  6FCA               	movwf	(___ftdiv@f3+1)& (0+255),b
  9016  002EB0  0E00               	movlw	0
  9017  002EB2  0100               	movlb	0	; () banked
  9018  002EB4  6FCB               	movwf	(___ftdiv@f3+2)& (0+255),b
  9019                           
  9020                           ; BSR set to: 0
  9021  002EB6  0100               	movlb	0	; () banked
  9022  002EB8  51CD               	movf	___ftdiv@sign& (0+255),w,b
  9023  002EBA  0F89               	addlw	137
  9024  002EBC  0100               	movlb	0	; () banked
  9025  002EBE  5FCC               	subwf	___ftdiv@exp& (0+255),f,b
  9026                           
  9027                           ; BSR set to: 0
  9028  002EC0  C0C1  F0CD         	movff	___ftdiv@f1+2,___ftdiv@sign
  9029                           
  9030                           ; BSR set to: 0
  9031  002EC4  0100               	movlb	0	; () banked
  9032  002EC6  51C4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9033  002EC8  0100               	movlb	0	; () banked
  9034  002ECA  1BCD               	xorwf	___ftdiv@sign& (0+255),f,b
  9035                           
  9036                           ; BSR set to: 0
  9037  002ECC  0E80               	movlw	128
  9038  002ECE  0100               	movlb	0	; () banked
  9039  002ED0  17CD               	andwf	___ftdiv@sign& (0+255),f,b
  9040                           
  9041                           ; BSR set to: 0
  9042  002ED2  0100               	movlb	0	; () banked
  9043  002ED4  8FC0               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9044                           
  9045                           ; BSR set to: 0
  9046  002ED6  0EFF               	movlw	255
  9047  002ED8  0100               	movlb	0	; () banked
  9048  002EDA  17BF               	andwf	___ftdiv@f1& (0+255),f,b
  9049  002EDC  0EFF               	movlw	255
  9050  002EDE  0100               	movlb	0	; () banked
  9051  002EE0  17C0               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9052  002EE2  0E00               	movlw	0
  9053  002EE4  0100               	movlb	0	; () banked
  9054  002EE6  17C1               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9055                           
  9056                           ; BSR set to: 0
  9057  002EE8  0100               	movlb	0	; () banked
  9058  002EEA  8FC3               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9059                           
  9060                           ; BSR set to: 0
  9061  002EEC  0EFF               	movlw	255
  9062  002EEE  0100               	movlb	0	; () banked
  9063  002EF0  17C2               	andwf	___ftdiv@f2& (0+255),f,b
  9064  002EF2  0EFF               	movlw	255
  9065  002EF4  0100               	movlb	0	; () banked
  9066  002EF6  17C3               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9067  002EF8  0E00               	movlw	0
  9068  002EFA  0100               	movlb	0	; () banked
  9069  002EFC  17C4               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9070                           
  9071                           ; BSR set to: 0
  9072  002EFE  0E18               	movlw	24
  9073  002F00  0100               	movlb	0	; () banked
  9074  002F02  6FC8               	movwf	___ftdiv@cntr& (0+255),b
  9075  002F04                     l4165:
  9076                           
  9077                           ; BSR set to: 0
  9078  002F04  0100               	movlb	0	; () banked
  9079  002F06  90D8               	bcf	status,0,c
  9080  002F08  0100               	movlb	0	; () banked
  9081  002F0A  37C9               	rlcf	___ftdiv@f3& (0+255),f,b
  9082  002F0C  0100               	movlb	0	; () banked
  9083  002F0E  37CA               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9084  002F10  0100               	movlb	0	; () banked
  9085  002F12  37CB               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9086                           
  9087                           ; BSR set to: 0
  9088  002F14  0100               	movlb	0	; () banked
  9089  002F16  51C2               	movf	___ftdiv@f2& (0+255),w,b
  9090  002F18  0100               	movlb	0	; () banked
  9091  002F1A  5DBF               	subwf	___ftdiv@f1& (0+255),w,b
  9092  002F1C  0100               	movlb	0	; () banked
  9093  002F1E  51C3               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9094  002F20  0100               	movlb	0	; () banked
  9095  002F22  59C0               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9096  002F24  0100               	movlb	0	; () banked
  9097  002F26  51C4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9098  002F28  0100               	movlb	0	; () banked
  9099  002F2A  59C1               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9100  002F2C  A0D8               	btfss	status,0,c
  9101  002F2E  D00E               	goto	l770
  9102                           
  9103                           ; BSR set to: 0
  9104  002F30  0100               	movlb	0	; () banked
  9105  002F32  51C2               	movf	___ftdiv@f2& (0+255),w,b
  9106  002F34  0100               	movlb	0	; () banked
  9107  002F36  5FBF               	subwf	___ftdiv@f1& (0+255),f,b
  9108  002F38  0100               	movlb	0	; () banked
  9109  002F3A  51C3               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9110  002F3C  0100               	movlb	0	; () banked
  9111  002F3E  5BC0               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9112  002F40  0100               	movlb	0	; () banked
  9113  002F42  51C4               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9114  002F44  0100               	movlb	0	; () banked
  9115  002F46  5BC1               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9116                           
  9117                           ; BSR set to: 0
  9118  002F48  0100               	movlb	0	; () banked
  9119  002F4A  81C9               	bsf	___ftdiv@f3& (0+255),0,b
  9120  002F4C                     l770:
  9121                           
  9122                           ; BSR set to: 0
  9123  002F4C  0100               	movlb	0	; () banked
  9124  002F4E  90D8               	bcf	status,0,c
  9125  002F50  0100               	movlb	0	; () banked
  9126  002F52  37BF               	rlcf	___ftdiv@f1& (0+255),f,b
  9127  002F54  0100               	movlb	0	; () banked
  9128  002F56  37C0               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9129  002F58  0100               	movlb	0	; () banked
  9130  002F5A  37C1               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9131                           
  9132                           ; BSR set to: 0
  9133  002F5C  0100               	movlb	0	; () banked
  9134  002F5E  2FC8               	decfsz	___ftdiv@cntr& (0+255),f,b
  9135  002F60  D7D1               	goto	l4165
  9136                           
  9137                           ; BSR set to: 0
  9138                           
  9139                           ; BSR set to: 0
  9140  002F62  C0C9  F08E         	movff	___ftdiv@f3,___ftpack@arg
  9141  002F66  C0CA  F08F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9142  002F6A  C0CB  F090         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9143  002F6E  C0CC  F091         	movff	___ftdiv@exp,___ftpack@exp
  9144  002F72  C0CD  F092         	movff	___ftdiv@sign,___ftpack@sign
  9145  002F76  ECC5  F017         	call	___ftpack	;wreg free
  9146  002F7A  C08E  F0BF         	movff	?___ftpack,?___ftdiv
  9147  002F7E  C08F  F0C0         	movff	?___ftpack+1,?___ftdiv+1
  9148  002F82  C090  F0C1         	movff	?___ftpack+2,?___ftdiv+2
  9149  002F86                     l767:
  9150  002F86  0012               	return	
  9151  002F88  FFFF               	dw	65535	; errata NOP
  9152  002F8A                     __end_of___ftdiv:
  9153                           	opt stack 0
  9154                           tblptru	equ	0xFF8
  9155                           tblptrh	equ	0xFF7
  9156                           tblptrl	equ	0xFF6
  9157                           tablat	equ	0xFF5
  9158                           prodh	equ	0xFF4
  9159                           prodl	equ	0xFF3
  9160                           postinc0	equ	0xFEE
  9161                           wreg	equ	0xFE8
  9162                           postinc1	equ	0xFE6
  9163                           postdec1	equ	0xFE5
  9164                           fsr1l	equ	0xFE1
  9165                           indf2	equ	0xFDF
  9166                           postinc2	equ	0xFDE
  9167                           postdec2	equ	0xFDD
  9168                           fsr2h	equ	0xFDA
  9169                           fsr2l	equ	0xFD9
  9170                           status	equ	0xFD8
  9171                           
  9172 ;; *************** function ___ftpack *****************
  9173 ;; Defined at:
  9174 ;;		line 62 in file "/Applications/microchip/xc8/v1.33/sources/common/float.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;  arg             3   14[BANK0 ] unsigned um
  9177 ;;  exp             1   17[BANK0 ] unsigned char 
  9178 ;;  sign            1   18[BANK0 ] unsigned char 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;		None
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  3   14[BANK0 ] float 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9190 ;;      Params:         0       5       0       0       0       0       0
  9191 ;;      Locals:         0       0       0       0       0       0       0
  9192 ;;      Temps:          0       3       0       0       0       0       0
  9193 ;;      Totals:         0       8       0       0       0       0       0
  9194 ;;Total ram usage:        8 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    4
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		___ftadd
  9201 ;;		___ftdiv
  9202 ;;		___ftmul
  9203 ;;		___lltoft
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text22
  9208  002F8A                     __ptext22:
  9209                           	opt stack 0
  9210  002F8A                     ___ftpack:
  9211                           	opt stack 22
  9212                           
  9213                           ;incstack = 0
  9214  002F8A  FFFF               	dw	65535
  9215  002F8C  0100               	movlb	0	; () banked
  9216  002F8E  5191               	movf	___ftpack@exp& (0+255),w,b
  9217  002F90  B4D8               	btfsc	status,2,c
  9218  002F92  D008               	goto	l3815
  9219                           
  9220                           ; BSR set to: 0
  9221  002F94  0100               	movlb	0	; () banked
  9222  002F96  518E               	movf	___ftpack@arg& (0+255),w,b
  9223  002F98  0100               	movlb	0	; () banked
  9224  002F9A  118F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9225  002F9C  0100               	movlb	0	; () banked
  9226  002F9E  1190               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9227  002FA0  A4D8               	btfss	status,2,c
  9228  002FA2  D014               	goto	l3821
  9229  002FA4                     l3815:
  9230                           
  9231                           ; BSR set to: 0
  9232  002FA4  0E00               	movlw	0
  9233  002FA6  0100               	movlb	0	; () banked
  9234  002FA8  6F8E               	movwf	?___ftpack& (0+255),b
  9235  002FAA  0E00               	movlw	0
  9236  002FAC  0100               	movlb	0	; () banked
  9237  002FAE  6F8F               	movwf	(?___ftpack+1)& (0+255),b
  9238  002FB0  0E00               	movlw	0
  9239  002FB2  0100               	movlb	0	; () banked
  9240  002FB4  6F90               	movwf	(?___ftpack+2)& (0+255),b
  9241  002FB6  D06E               	goto	l698
  9242  002FB8                     l3819:
  9243                           
  9244                           ; BSR set to: 0
  9245  002FB8  0100               	movlb	0	; () banked
  9246  002FBA  2B91               	incf	___ftpack@exp& (0+255),f,b
  9247  002FBC  0100               	movlb	0	; () banked
  9248  002FBE  90D8               	bcf	status,0,c
  9249  002FC0  0100               	movlb	0	; () banked
  9250  002FC2  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9251  002FC4  0100               	movlb	0	; () banked
  9252  002FC6  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9253  002FC8  0100               	movlb	0	; () banked
  9254  002FCA  338E               	rrcf	___ftpack@arg& (0+255),f,b
  9255  002FCC                     l3821:
  9256                           
  9257                           ; BSR set to: 0
  9258  002FCC  0E00               	movlw	0
  9259  002FCE  0100               	movlb	0	; () banked
  9260  002FD0  158E               	andwf	___ftpack@arg& (0+255),w,b
  9261  002FD2  0100               	movlb	0	; () banked
  9262  002FD4  6F93               	movwf	??___ftpack& (0+255),b
  9263  002FD6  0E00               	movlw	0
  9264  002FD8  0100               	movlb	0	; () banked
  9265  002FDA  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9266  002FDC  0100               	movlb	0	; () banked
  9267  002FDE  6F94               	movwf	(??___ftpack+1)& (0+255),b
  9268  002FE0  0EFE               	movlw	254
  9269  002FE2  0100               	movlb	0	; () banked
  9270  002FE4  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9271  002FE6  0100               	movlb	0	; () banked
  9272  002FE8  6F95               	movwf	(??___ftpack+2)& (0+255),b
  9273  002FEA  0100               	movlb	0	; () banked
  9274  002FEC  5193               	movf	??___ftpack& (0+255),w,b
  9275  002FEE  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  9276  002FF0  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  9277  002FF2  B4D8               	btfsc	status,2,c
  9278  002FF4  D014               	goto	l3827
  9279  002FF6  D7E0               	goto	l3819
  9280  002FF8                     l3823:
  9281                           
  9282                           ; BSR set to: 0
  9283  002FF8  0100               	movlb	0	; () banked
  9284  002FFA  2B91               	incf	___ftpack@exp& (0+255),f,b
  9285                           
  9286                           ; BSR set to: 0
  9287  002FFC  0E01               	movlw	1
  9288  002FFE  0100               	movlb	0	; () banked
  9289  003000  278E               	addwf	___ftpack@arg& (0+255),f,b
  9290  003002  0E00               	movlw	0
  9291  003004  0100               	movlb	0	; () banked
  9292  003006  238F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9293  003008  0E00               	movlw	0
  9294  00300A  0100               	movlb	0	; () banked
  9295  00300C  2390               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9296  00300E  0100               	movlb	0	; () banked
  9297  003010  90D8               	bcf	status,0,c
  9298  003012  0100               	movlb	0	; () banked
  9299  003014  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9300  003016  0100               	movlb	0	; () banked
  9301  003018  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9302  00301A  0100               	movlb	0	; () banked
  9303  00301C  338E               	rrcf	___ftpack@arg& (0+255),f,b
  9304  00301E                     l3827:
  9305                           
  9306                           ; BSR set to: 0
  9307  00301E  0E00               	movlw	0
  9308  003020  0100               	movlb	0	; () banked
  9309  003022  158E               	andwf	___ftpack@arg& (0+255),w,b
  9310  003024  0100               	movlb	0	; () banked
  9311  003026  6F93               	movwf	??___ftpack& (0+255),b
  9312  003028  0E00               	movlw	0
  9313  00302A  0100               	movlb	0	; () banked
  9314  00302C  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9315  00302E  0100               	movlb	0	; () banked
  9316  003030  6F94               	movwf	(??___ftpack+1)& (0+255),b
  9317  003032  0EFF               	movlw	255
  9318  003034  0100               	movlb	0	; () banked
  9319  003036  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9320  003038  0100               	movlb	0	; () banked
  9321  00303A  6F95               	movwf	(??___ftpack+2)& (0+255),b
  9322  00303C  0100               	movlb	0	; () banked
  9323  00303E  5193               	movf	??___ftpack& (0+255),w,b
  9324  003040  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  9325  003042  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  9326  003044  B4D8               	btfsc	status,2,c
  9327  003046  D00B               	goto	l3831
  9328  003048  D7D7               	goto	l3823
  9329  00304A                     l3829:
  9330                           
  9331                           ; BSR set to: 0
  9332  00304A  0100               	movlb	0	; () banked
  9333  00304C  0791               	decf	___ftpack@exp& (0+255),f,b
  9334  00304E  0100               	movlb	0	; () banked
  9335  003050  90D8               	bcf	status,0,c
  9336  003052  0100               	movlb	0	; () banked
  9337  003054  378E               	rlcf	___ftpack@arg& (0+255),f,b
  9338  003056  0100               	movlb	0	; () banked
  9339  003058  378F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9340  00305A  0100               	movlb	0	; () banked
  9341  00305C  3790               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9342  00305E                     l3831:
  9343                           
  9344                           ; BSR set to: 0
  9345  00305E  0100               	movlb	0	; () banked
  9346  003060  AF8F               	btfss	(___ftpack@arg+1)& (0+255),7,b
  9347  003062  D7F3               	goto	l3829
  9348                           
  9349                           ; BSR set to: 0
  9350  003064  0100               	movlb	0	; () banked
  9351  003066  B191               	btfsc	___ftpack@exp& (0+255),0,b
  9352  003068  D002               	goto	l3835
  9353                           
  9354                           ; BSR set to: 0
  9355  00306A  0100               	movlb	0	; () banked
  9356  00306C  9F8F               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9357  00306E                     l3835:
  9358                           
  9359                           ; BSR set to: 0
  9360  00306E  0100               	movlb	0	; () banked
  9361  003070  90D8               	bcf	status,0,c
  9362  003072  3391               	rrcf	___ftpack@exp& (0+255),f,b
  9363  003074  0100               	movlb	0	; () banked
  9364  003076  5191               	movf	___ftpack@exp& (0+255),w,b
  9365  003078  0100               	movlb	0	; () banked
  9366  00307A  1390               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9367                           
  9368                           ; BSR set to: 0
  9369  00307C  0100               	movlb	0	; () banked
  9370  00307E  5192               	movf	___ftpack@sign& (0+255),w,b
  9371  003080  B4D8               	btfsc	status,2,c
  9372  003082  D002               	goto	l3841
  9373                           
  9374                           ; BSR set to: 0
  9375  003084  0100               	movlb	0	; () banked
  9376  003086  8F90               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9377  003088                     l3841:
  9378                           
  9379                           ; BSR set to: 0
  9380  003088  C08E  F08E         	movff	___ftpack@arg,?___ftpack
  9381  00308C  C08F  F08F         	movff	___ftpack@arg+1,?___ftpack+1
  9382  003090  C090  F090         	movff	___ftpack@arg+2,?___ftpack+2
  9383  003094                     l698:
  9384                           
  9385                           ; BSR set to: 0
  9386  003094  0012               	return	
  9387  003096  FFFF               	dw	65535	; errata NOP
  9388  003098                     __end_of___ftpack:
  9389                           	opt stack 0
  9390                           tblptru	equ	0xFF8
  9391                           tblptrh	equ	0xFF7
  9392                           tblptrl	equ	0xFF6
  9393                           tablat	equ	0xFF5
  9394                           prodh	equ	0xFF4
  9395                           prodl	equ	0xFF3
  9396                           postinc0	equ	0xFEE
  9397                           wreg	equ	0xFE8
  9398                           postinc1	equ	0xFE6
  9399                           postdec1	equ	0xFE5
  9400                           fsr1l	equ	0xFE1
  9401                           indf2	equ	0xFDF
  9402                           postinc2	equ	0xFDE
  9403                           postdec2	equ	0xFDD
  9404                           fsr2h	equ	0xFDA
  9405                           fsr2l	equ	0xFD9
  9406                           status	equ	0xFD8
  9407                           
  9408 ;; *************** function _DisplayLCD *****************
  9409 ;; Defined at:
  9410 ;;		line 75 in file "user.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;  tempPtr         2   15[BANK0 ] PTR unsigned char 
  9413 ;;		 -> main@Msg3(10), main@Msg2(5), main@Msg1(6), main@LCDinit(7), 
  9414 ;;  init            2   17[BANK0 ] int 
  9415 ;; Auto vars:     Size  Location     Type
  9416 ;;  currentChar     1   19[BANK0 ] unsigned char 
  9417 ;; Return value:  Size  Location     Type
  9418 ;;		None               void
  9419 ;; Registers used:
  9420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9421 ;; Tracked objects:
  9422 ;;		On entry : 0/0
  9423 ;;		On exit  : 0/0
  9424 ;;		Unchanged: 0/0
  9425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9426 ;;      Params:         0       4       0       0       0       0       0
  9427 ;;      Locals:         0       1       0       0       0       0       0
  9428 ;;      Temps:          0       0       0       0       0       0       0
  9429 ;;      Totals:         0       5       0       0       0       0       0
  9430 ;;Total ram usage:        5 bytes
  9431 ;; Hardware stack levels used:    1
  9432 ;; Hardware stack levels required when called:    5
  9433 ;; This function calls:
  9434 ;;		_Delay100TCYx
  9435 ;;		_Delay10TCYx
  9436 ;;		_Delay1KTCYx
  9437 ;; This function is called by:
  9438 ;;		_main
  9439 ;;		_WriteLCD
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text23
  9444  003720                     __ptext23:
  9445                           	opt stack 0
  9446  003720                     _DisplayLCD:
  9447                           	opt stack 24
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;incstack = 0
  9451  003720  FFFF               	dw	65535
  9452                           
  9453                           ;user.c: 77: char currentChar;
  9454                           ;user.c: 81: if (init == 1)
  9455  003722  0100               	movlb	0	; () banked
  9456  003724  0591               	decf	DisplayLCD@init& (0+255),w,b
  9457  003726  1192               	iorwf	(DisplayLCD@init+1)& (0+255),w,b
  9458  003728  A4D8               	btfss	status,2,c
  9459  00372A  D029               	goto	l147
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;user.c: 82: {
  9463                           ;user.c: 83: Delay1KTCYx(250);
  9464  00372C  0EFA               	movlw	250
  9465  00372E  EC86  F01D         	call	_Delay1KTCYx
  9466                           
  9467                           ;user.c: 84: PORTEbits.RE0 = 0;
  9468  003732  9084               	bcf	3972,0,c	;volatile
  9469                           
  9470                           ;user.c: 85: while (*tempPtr != 0)
  9471  003734  D01C               	goto	l4265
  9472  003736                     l4243:
  9473                           
  9474                           ;user.c: 86: {
  9475                           ;user.c: 87: currentChar = *tempPtr;
  9476  003736  C08F  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
  9477  00373A  C090  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
  9478  00373E  50DF               	movf	indf2,w,c
  9479  003740  0100               	movlb	0	; () banked
  9480  003742  6F93               	movwf	DisplayLCD@currentChar& (0+255),b
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;user.c: 88: PORTEbits.RE1 = 1;
  9484  003744  8284               	bsf	3972,1,c	;volatile
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;user.c: 89: PORTD = currentChar;
  9488  003746  C093  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;user.c: 90: PORTEbits.RE1 = 0;
  9492  00374A  9284               	bcf	3972,1,c	;volatile
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;user.c: 91: Delay100TCYx(250);
  9496  00374C  0EFA               	movlw	250
  9497  00374E  EC7B  F01D         	call	_Delay100TCYx
  9498                           
  9499                           ;user.c: 92: currentChar <<= 4;
  9500  003752  0100               	movlb	0	; () banked
  9501  003754  3B93               	swapf	DisplayLCD@currentChar& (0+255),f,b
  9502  003756  0EF0               	movlw	240
  9503  003758  1793               	andwf	DisplayLCD@currentChar& (0+255),f,b
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;user.c: 93: PORTEbits.RE1 = 1;
  9507  00375A  8284               	bsf	3972,1,c	;volatile
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;user.c: 94: PORTD = currentChar;
  9511  00375C  C093  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;user.c: 95: PORTEbits.RE1 = 0;
  9515  003760  9284               	bcf	3972,1,c	;volatile
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;user.c: 96: Delay100TCYx(250);
  9519  003762  0EFA               	movlw	250
  9520  003764  EC7B  F01D         	call	_Delay100TCYx
  9521                           
  9522                           ;user.c: 97: tempPtr++;
  9523  003768  0100               	movlb	0	; () banked
  9524  00376A  4B8F               	infsnz	DisplayLCD@tempPtr& (0+255),f,b
  9525  00376C  2B90               	incf	(DisplayLCD@tempPtr+1)& (0+255),f,b
  9526  00376E                     l4265:
  9527  00376E  C08F  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
  9528  003772  C090  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
  9529  003776  50DF               	movf	indf2,w,c
  9530  003778  B4D8               	btfsc	status,2,c
  9531  00377A  D024               	goto	l155
  9532  00377C  D7DC               	goto	l4243
  9533  00377E                     l147:
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;user.c: 100: else
  9537                           ;user.c: 101: {
  9538                           ;user.c: 102: PORTEbits.RE0 = 0;
  9539  00377E  9084               	bcf	3972,0,c	;volatile
  9540                           
  9541                           ;user.c: 103: while (*tempPtr)
  9542  003780  D01A               	goto	l4289
  9543  003782                     l4267:
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;user.c: 104: {
  9547                           ;user.c: 105: currentChar = *tempPtr;
  9548  003782  C08F  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
  9549  003786  C090  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
  9550  00378A  50DF               	movf	indf2,w,c
  9551  00378C  0100               	movlb	0	; () banked
  9552  00378E  6F93               	movwf	DisplayLCD@currentChar& (0+255),b
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;user.c: 106: PORTEbits.RE1 = 1;
  9556  003790  8284               	bsf	3972,1,c	;volatile
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;user.c: 107: PORTD = currentChar;
  9560  003792  C093  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;user.c: 108: PORTEbits.RE1 = 0;
  9564  003796  9284               	bcf	3972,1,c	;volatile
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;user.c: 109: currentChar <<= 4;
  9568  003798  0100               	movlb	0	; () banked
  9569  00379A  3B93               	swapf	DisplayLCD@currentChar& (0+255),f,b
  9570  00379C  0EF0               	movlw	240
  9571  00379E  1793               	andwf	DisplayLCD@currentChar& (0+255),f,b
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;user.c: 110: PORTEbits.RE1 = 1;
  9575  0037A0  8284               	bsf	3972,1,c	;volatile
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;user.c: 111: PORTD = currentChar;
  9579  0037A2  C093  FF83         	movff	DisplayLCD@currentChar,3971	;volatile
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;user.c: 112: PORTEbits.RE1 = 0;
  9583  0037A6  9284               	bcf	3972,1,c	;volatile
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;user.c: 113: Delay10TCYx(10);
  9587  0037A8  0E0A               	movlw	10
  9588  0037AA  EC64  F01D         	call	_Delay10TCYx
  9589                           
  9590                           ;user.c: 114: PORTEbits.RE0 = 1;
  9591  0037AE  8084               	bsf	3972,0,c	;volatile
  9592                           
  9593                           ;user.c: 115: tempPtr++;
  9594  0037B0  0100               	movlb	0	; () banked
  9595  0037B2  4B8F               	infsnz	DisplayLCD@tempPtr& (0+255),f,b
  9596  0037B4  2B90               	incf	(DisplayLCD@tempPtr+1)& (0+255),f,b
  9597  0037B6                     l4289:
  9598                           
  9599                           ; BSR set to: 0
  9600  0037B6  C08F  FFD9         	movff	DisplayLCD@tempPtr,fsr2l
  9601  0037BA  C090  FFDA         	movff	DisplayLCD@tempPtr+1,fsr2h
  9602  0037BE  50DF               	movf	indf2,w,c
  9603  0037C0  A4D8               	btfss	status,2,c
  9604  0037C2  D7DF               	goto	l4267
  9605  0037C4                     l155:
  9606  0037C4  0012               	return	
  9607  0037C6  FFFF               	dw	65535	; errata NOP
  9608  0037C8                     __end_of_DisplayLCD:
  9609                           	opt stack 0
  9610                           tblptru	equ	0xFF8
  9611                           tblptrh	equ	0xFF7
  9612                           tblptrl	equ	0xFF6
  9613                           tablat	equ	0xFF5
  9614                           prodh	equ	0xFF4
  9615                           prodl	equ	0xFF3
  9616                           postinc0	equ	0xFEE
  9617                           wreg	equ	0xFE8
  9618                           postinc1	equ	0xFE6
  9619                           postdec1	equ	0xFE5
  9620                           fsr1l	equ	0xFE1
  9621                           indf2	equ	0xFDF
  9622                           postinc2	equ	0xFDE
  9623                           postdec2	equ	0xFDD
  9624                           fsr2h	equ	0xFDA
  9625                           fsr2l	equ	0xFD9
  9626                           status	equ	0xFD8
  9627                           
  9628 ;; *************** function _Delay10TCYx *****************
  9629 ;; Defined at:
  9630 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d10tcyx.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  unit            1    wreg     unsigned char 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  unit            1   14[BANK0 ] unsigned char 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;		None               void
  9637 ;; Registers used:
  9638 ;;		wreg
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9644 ;;      Params:         0       0       0       0       0       0       0
  9645 ;;      Locals:         0       1       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0
  9647 ;;      Totals:         0       1       0       0       0       0       0
  9648 ;;Total ram usage:        1 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    4
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_DisplayLCD
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           	psect	text24
  9659  003AC8                     __ptext24:
  9660                           	opt stack 0
  9661  003AC8                     _Delay10TCYx:
  9662                           	opt stack 24
  9663                           
  9664                           ;incstack = 0
  9665  003AC8  FFFF               	dw	65535
  9666                           
  9667                           ;Delay10TCYx@unit stored from wreg
  9668  003ACA  0100               	movlb	0	; () banked
  9669  003ACC  6F8E               	movwf	Delay10TCYx@unit& (0+255),b
  9670  003ACE                     l584:
  9671                           
  9672                           ; BSR set to: 0
  9673                           
  9674                           ; BSR set to: 0
  9675  003ACE  0E02               	movlw	2
  9676  003AD0                     u5797:
  9677  003AD0  F000               	nop	
  9678  003AD2  2EE8               	decfsz	wreg,f,c
  9679  003AD4  D7FD               	goto	u5797
  9680  003AD6  0100               	movlb	0	; () banked
  9681  003AD8  2F8E               	decfsz	Delay10TCYx@unit& (0+255),f,b
  9682  003ADA  D7F9               	goto	l584
  9683                           
  9684                           ; BSR set to: 0
  9685                           
  9686                           ; BSR set to: 0
  9687  003ADC  0012               	return	
  9688  003ADE  FFFF               	dw	65535	; errata NOP
  9689  003AE0                     __end_of_Delay10TCYx:
  9690                           	opt stack 0
  9691                           tblptru	equ	0xFF8
  9692                           tblptrh	equ	0xFF7
  9693                           tblptrl	equ	0xFF6
  9694                           tablat	equ	0xFF5
  9695                           prodh	equ	0xFF4
  9696                           prodl	equ	0xFF3
  9697                           postinc0	equ	0xFEE
  9698                           wreg	equ	0xFE8
  9699                           postinc1	equ	0xFE6
  9700                           postdec1	equ	0xFE5
  9701                           fsr1l	equ	0xFE1
  9702                           indf2	equ	0xFDF
  9703                           postinc2	equ	0xFDE
  9704                           postdec2	equ	0xFDD
  9705                           fsr2h	equ	0xFDA
  9706                           fsr2l	equ	0xFD9
  9707                           status	equ	0xFD8
  9708                           
  9709 ;; *************** function _Delay100TCYx *****************
  9710 ;; Defined at:
  9711 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d100tcyx.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  unit            1    wreg     unsigned char 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  unit            1   14[BANK0 ] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;		None               void
  9718 ;; Registers used:
  9719 ;;		wreg
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9725 ;;      Params:         0       0       0       0       0       0       0
  9726 ;;      Locals:         0       1       0       0       0       0       0
  9727 ;;      Temps:          0       0       0       0       0       0       0
  9728 ;;      Totals:         0       1       0       0       0       0       0
  9729 ;;Total ram usage:        1 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    4
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_DisplayLCD
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text25
  9740  003AF6                     __ptext25:
  9741                           	opt stack 0
  9742  003AF6                     _Delay100TCYx:
  9743                           	opt stack 24
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;incstack = 0
  9747  003AF6  FFFF               	dw	65535
  9748                           
  9749                           ;Delay100TCYx@unit stored from wreg
  9750  003AF8  0100               	movlb	0	; () banked
  9751  003AFA  6F8E               	movwf	Delay100TCYx@unit& (0+255),b
  9752  003AFC                     l577:
  9753                           
  9754                           ; BSR set to: 0
  9755                           
  9756                           ; BSR set to: 0
  9757  003AFC  0E19               	movlw	25
  9758  003AFE                     u5807:
  9759  003AFE  2EE8               	decfsz	wreg,f,c
  9760  003B00  D7FE               	goto	u5807
  9761  003B02  0100               	movlb	0	; () banked
  9762  003B04  2F8E               	decfsz	Delay100TCYx@unit& (0+255),f,b
  9763  003B06  D7FA               	goto	l577
  9764                           
  9765                           ; BSR set to: 0
  9766                           
  9767                           ; BSR set to: 0
  9768  003B08  0012               	return	
  9769  003B0A  FFFF               	dw	65535	; errata NOP
  9770  003B0C                     __end_of_Delay100TCYx:
  9771                           	opt stack 0
  9772                           tblptru	equ	0xFF8
  9773                           tblptrh	equ	0xFF7
  9774                           tblptrl	equ	0xFF6
  9775                           tablat	equ	0xFF5
  9776                           prodh	equ	0xFF4
  9777                           prodl	equ	0xFF3
  9778                           postinc0	equ	0xFEE
  9779                           wreg	equ	0xFE8
  9780                           postinc1	equ	0xFE6
  9781                           postdec1	equ	0xFE5
  9782                           fsr1l	equ	0xFE1
  9783                           indf2	equ	0xFDF
  9784                           postinc2	equ	0xFDE
  9785                           postdec2	equ	0xFDD
  9786                           fsr2h	equ	0xFDA
  9787                           fsr2l	equ	0xFD9
  9788                           status	equ	0xFD8
  9789                           
  9790 ;; *************** function _InitInterrupts *****************
  9791 ;; Defined at:
  9792 ;;		line 129 in file "user.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;		None
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;		None               void
  9799 ;; Registers used:
  9800 ;;		None
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9806 ;;      Params:         0       0       0       0       0       0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0
  9808 ;;      Temps:          0       0       0       0       0       0       0
  9809 ;;      Totals:         0       0       0       0       0       0       0
  9810 ;;Total ram usage:        0 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    4
  9813 ;; This function calls:
  9814 ;;		Nothing
  9815 ;; This function is called by:
  9816 ;;		_main
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           	psect	text26
  9821  003A98                     __ptext26:
  9822                           	opt stack 0
  9823  003A98                     _InitInterrupts:
  9824                           	opt stack 26
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;incstack = 0
  9828  003A98  FFFF               	dw	65535
  9829                           
  9830                           ;user.c: 133: RCONbits.IPEN = 1;
  9831  003A9A  8ED0               	bsf	4048,7,c	;volatile
  9832                           
  9833                           ;user.c: 134: INTCONbits.GIEH = 1;
  9834  003A9C  8EF2               	bsf	intcon,7,c	;volatile
  9835                           
  9836                           ;user.c: 135: INTCONbits.GIEL = 1;
  9837  003A9E  8CF2               	bsf	intcon,6,c	;volatile
  9838                           
  9839                           ;user.c: 139: INTCON2bits.NOT_RBPU = 0;
  9840  003AA0  9EF1               	bcf	intcon2,7,c	;volatile
  9841                           
  9842                           ;user.c: 140: INTCON2bits.RBIP = 0;
  9843  003AA2  90F1               	bcf	intcon2,0,c	;volatile
  9844                           
  9845                           ;user.c: 141: INTCONbits.RBIF = 0;
  9846  003AA4  90F2               	bcf	intcon,0,c	;volatile
  9847                           
  9848                           ;user.c: 142: INTCONbits.RBIE = 1;
  9849  003AA6  86F2               	bsf	intcon,3,c	;volatile
  9850                           
  9851                           ;user.c: 146: CCP1CONbits.CCP1M3 = 1;
  9852  003AA8  86BD               	bsf	4029,3,c	;volatile
  9853                           
  9854                           ;user.c: 147: CCP1CONbits.CCP1M2 = 1;
  9855  003AAA  84BD               	bsf	4029,2,c	;volatile
  9856                           
  9857                           ;user.c: 148: CCP1CONbits.CCP1M1 = 0;
  9858  003AAC  92BD               	bcf	4029,1,c	;volatile
  9859                           
  9860                           ;user.c: 149: CCP1CONbits.CCP1M0 = 0;
  9861  003AAE  90BD               	bcf	4029,0,c	;volatile
  9862                           
  9863                           ;user.c: 153: INTCONbits.TMR0IF = 0;
  9864  003AB0  94F2               	bcf	intcon,2,c	;volatile
  9865                           
  9866                           ;user.c: 154: INTCON2bits.TMR0IP = 0;
  9867  003AB2  94F1               	bcf	intcon2,2,c	;volatile
  9868                           
  9869                           ;user.c: 155: INTCONbits.TMR0IE = 1;
  9870  003AB4  8AF2               	bsf	intcon,5,c	;volatile
  9871                           
  9872                           ;user.c: 159: T0CONbits.T08BIT = 0;
  9873  003AB6  9CD5               	bcf	4053,6,c	;volatile
  9874                           
  9875                           ;user.c: 160: T0CONbits.T0CS = 0;
  9876  003AB8  9AD5               	bcf	4053,5,c	;volatile
  9877                           
  9878                           ;user.c: 161: T0CONbits.PSA = 1;
  9879  003ABA  86D5               	bsf	4053,3,c	;volatile
  9880                           
  9881                           ;user.c: 162: T0CONbits.TMR0ON = 1;
  9882  003ABC  8ED5               	bsf	4053,7,c	;volatile
  9883                           
  9884                           ;user.c: 166: T2CONbits.T2CKPS1 = 1;
  9885  003ABE  82CA               	bsf	4042,1,c	;volatile
  9886                           
  9887                           ;user.c: 167: T2CONbits.T2CKPS0 = 1;
  9888  003AC0  80CA               	bsf	4042,0,c	;volatile
  9889                           
  9890                           ;user.c: 168: T2CONbits.TMR2ON = 1;
  9891  003AC2  84CA               	bsf	4042,2,c	;volatile
  9892  003AC4  0012               	return	
  9893  003AC6  FFFF               	dw	65535	; errata NOP
  9894  003AC8                     __end_of_InitInterrupts:
  9895                           	opt stack 0
  9896                           tblptru	equ	0xFF8
  9897                           tblptrh	equ	0xFF7
  9898                           tblptrl	equ	0xFF6
  9899                           tablat	equ	0xFF5
  9900                           prodh	equ	0xFF4
  9901                           prodl	equ	0xFF3
  9902                           intcon	equ	0xFF2
  9903                           intcon2	equ	0xFF1
  9904                           postinc0	equ	0xFEE
  9905                           wreg	equ	0xFE8
  9906                           postinc1	equ	0xFE6
  9907                           postdec1	equ	0xFE5
  9908                           fsr1l	equ	0xFE1
  9909                           indf2	equ	0xFDF
  9910                           postinc2	equ	0xFDE
  9911                           postdec2	equ	0xFDD
  9912                           fsr2h	equ	0xFDA
  9913                           fsr2l	equ	0xFD9
  9914                           status	equ	0xFD8
  9915                           
  9916 ;; *************** function _InitApp *****************
  9917 ;; Defined at:
  9918 ;;		line 22 in file "user.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;		None
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;		None
  9923 ;; Return value:  Size  Location     Type
  9924 ;;		None               void
  9925 ;; Registers used:
  9926 ;;		wreg, status,2, status,0, cstack
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9932 ;;      Params:         0       0       0       0       0       0       0
  9933 ;;      Locals:         0       0       0       0       0       0       0
  9934 ;;      Temps:          0       0       0       0       0       0       0
  9935 ;;      Totals:         0       0       0       0       0       0       0
  9936 ;;Total ram usage:        0 bytes
  9937 ;; Hardware stack levels used:    1
  9938 ;; Hardware stack levels required when called:    6
  9939 ;; This function calls:
  9940 ;;		_WaitHalfSec
  9941 ;; This function is called by:
  9942 ;;		_main
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text27
  9947  003982                     __ptext27:
  9948                           	opt stack 0
  9949  003982                     _InitApp:
  9950                           	opt stack 24
  9951                           
  9952                           ;incstack = 0
  9953  003982  FFFF               	dw	65535
  9954                           
  9955                           ;user.c: 26: TRISA = 0b11100001;
  9956  003984  0EE1               	movlw	225
  9957  003986  6E92               	movwf	3986,c	;volatile
  9958                           
  9959                           ;user.c: 27: TRISBbits.RB4 = 1;
  9960  003988  8893               	bsf	3987,4,c	;volatile
  9961                           
  9962                           ;user.c: 28: TRISBbits.RB5 = 1;
  9963  00398A  8A93               	bsf	3987,5,c	;volatile
  9964                           
  9965                           ;user.c: 29: TRISBbits.RB1 = 0;
  9966  00398C  9293               	bcf	3987,1,c	;volatile
  9967                           
  9968                           ;user.c: 30: PORTBbits.RB1 = 1;
  9969  00398E  8281               	bsf	3969,1,c	;volatile
  9970                           
  9971                           ;user.c: 31: TRISCbits.RC2 = 0;
  9972  003990  9494               	bcf	3988,2,c	;volatile
  9973                           
  9974                           ;user.c: 32: TRISD = 0b00001111;
  9975  003992  0E0F               	movlw	15
  9976  003994  6E95               	movwf	3989,c	;volatile
  9977                           
  9978                           ;user.c: 33: TRISE = 0b00000100;
  9979  003996  0E04               	movlw	4
  9980  003998  6E96               	movwf	3990,c	;volatile
  9981                           
  9982                           ;user.c: 34: ADCON1 = 0b10000111;
  9983  00399A  0E87               	movlw	135
  9984  00399C  6EC1               	movwf	4033,c	;volatile
  9985                           
  9986                           ;user.c: 38: PORTA = 0b00010000;
  9987  00399E  0E10               	movlw	16
  9988  0039A0  6E80               	movwf	3968,c	;volatile
  9989                           
  9990                           ;user.c: 39: PORTAbits.RA3 = 1;
  9991  0039A2  8680               	bsf	3968,3,c	;volatile
  9992                           
  9993                           ;user.c: 40: WaitHalfSec();
  9994  0039A4  ECFC  F01C         	call	_WaitHalfSec	;wreg free
  9995                           
  9996                           ;user.c: 41: PORTAbits.RA3 = 0;
  9997  0039A8  9680               	bcf	3968,3,c	;volatile
  9998                           
  9999                           ;user.c: 42: PORTAbits.RA2 = 1;
 10000  0039AA  8480               	bsf	3968,2,c	;volatile
 10001                           
 10002                           ;user.c: 43: WaitHalfSec();
 10003  0039AC  ECFC  F01C         	call	_WaitHalfSec	;wreg free
 10004                           
 10005                           ;user.c: 44: PORTAbits.RA2 = 0;
 10006  0039B0  9480               	bcf	3968,2,c	;volatile
 10007                           
 10008                           ;user.c: 45: PORTAbits.RA1 = 1;
 10009  0039B2  8280               	bsf	3968,1,c	;volatile
 10010                           
 10011                           ;user.c: 46: WaitHalfSec();
 10012  0039B4  ECFC  F01C         	call	_WaitHalfSec	;wreg free
 10013                           
 10014                           ;user.c: 47: PORTAbits.RA1 = 0;
 10015  0039B8  9280               	bcf	3968,1,c	;volatile
 10016  0039BA  0012               	return	
 10017  0039BC  FFFF               	dw	65535	; errata NOP
 10018  0039BE                     __end_of_InitApp:
 10019                           	opt stack 0
 10020                           tblptru	equ	0xFF8
 10021                           tblptrh	equ	0xFF7
 10022                           tblptrl	equ	0xFF6
 10023                           tablat	equ	0xFF5
 10024                           prodh	equ	0xFF4
 10025                           prodl	equ	0xFF3
 10026                           intcon	equ	0xFF2
 10027                           intcon2	equ	0xFF1
 10028                           postinc0	equ	0xFEE
 10029                           wreg	equ	0xFE8
 10030                           postinc1	equ	0xFE6
 10031                           postdec1	equ	0xFE5
 10032                           fsr1l	equ	0xFE1
 10033                           indf2	equ	0xFDF
 10034                           postinc2	equ	0xFDE
 10035                           postdec2	equ	0xFDD
 10036                           fsr2h	equ	0xFDA
 10037                           fsr2l	equ	0xFD9
 10038                           status	equ	0xFD8
 10039                           
 10040 ;; *************** function _WaitHalfSec *****************
 10041 ;; Defined at:
 10042 ;;		line 54 in file "user.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;		None
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  Halfcount       2   15[BANK0 ] int 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;		None               void
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, status,0, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10056 ;;      Params:         0       0       0       0       0       0       0
 10057 ;;      Locals:         0       2       0       0       0       0       0
 10058 ;;      Temps:          0       0       0       0       0       0       0
 10059 ;;      Totals:         0       2       0       0       0       0       0
 10060 ;;Total ram usage:        2 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; Hardware stack levels required when called:    5
 10063 ;; This function calls:
 10064 ;;		_Delay1KTCYx
 10065 ;; This function is called by:
 10066 ;;		_main
 10067 ;;		_InitApp
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text28
 10072  0039F8                     __ptext28:
 10073                           	opt stack 0
 10074  0039F8                     _WaitHalfSec:
 10075                           	opt stack 25
 10076                           
 10077                           ;incstack = 0
 10078  0039F8  FFFF               	dw	65535
 10079                           
 10080                           ;user.c: 56: int Halfcount = 50;
 10081  0039FA  0E00               	movlw	0
 10082  0039FC  0100               	movlb	0	; () banked
 10083  0039FE  6F90               	movwf	(WaitHalfSec@Halfcount+1)& (0+255),b
 10084  003A00  0E32               	movlw	50
 10085  003A02  0100               	movlb	0	; () banked
 10086  003A04  6F8F               	movwf	WaitHalfSec@Halfcount& (0+255),b
 10087                           
 10088                           ;user.c: 57: while (Halfcount != 0)
 10089  003A06  D00D               	goto	l4297
 10090  003A08                     l4293:
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;user.c: 58: {
 10094                           ;user.c: 59: Delay1KTCYx(25);
 10095  003A08  0E19               	movlw	25
 10096  003A0A  EC86  F01D         	call	_Delay1KTCYx
 10097                           
 10098                           ;user.c: 60: Halfcount = Halfcount-1;
 10099  003A0E  0EFF               	movlw	255
 10100  003A10  0100               	movlb	0	; () banked
 10101  003A12  258F               	addwf	WaitHalfSec@Halfcount& (0+255),w,b
 10102  003A14  0100               	movlb	0	; () banked
 10103  003A16  6F8F               	movwf	WaitHalfSec@Halfcount& (0+255),b
 10104  003A18  0EFF               	movlw	255
 10105  003A1A  0100               	movlb	0	; () banked
 10106  003A1C  2190               	addwfc	(WaitHalfSec@Halfcount+1)& (0+255),w,b
 10107  003A1E  0100               	movlb	0	; () banked
 10108  003A20  6F90               	movwf	(WaitHalfSec@Halfcount+1)& (0+255),b
 10109  003A22                     l4297:
 10110                           
 10111                           ; BSR set to: 0
 10112  003A22  0100               	movlb	0	; () banked
 10113  003A24  5190               	movf	(WaitHalfSec@Halfcount+1)& (0+255),w,b
 10114  003A26  118F               	iorwf	WaitHalfSec@Halfcount& (0+255),w,b
 10115  003A28  B4D8               	btfsc	status,2,c
 10116                           
 10117                           ; BSR set to: 0
 10118                           
 10119                           ; BSR set to: 0
 10120  003A2A  0012               	return	
 10121  003A2C  FFFF               	dw	65535	; assembler added errata NOP
 10122  003A2E  D7EC               	goto	l4293
 10123  003A30  FFFF               	dw	65535	; errata NOP
 10124  003A32                     __end_of_WaitHalfSec:
 10125                           	opt stack 0
 10126                           tblptru	equ	0xFF8
 10127                           tblptrh	equ	0xFF7
 10128                           tblptrl	equ	0xFF6
 10129                           tablat	equ	0xFF5
 10130                           prodh	equ	0xFF4
 10131                           prodl	equ	0xFF3
 10132                           intcon	equ	0xFF2
 10133                           intcon2	equ	0xFF1
 10134                           postinc0	equ	0xFEE
 10135                           wreg	equ	0xFE8
 10136                           postinc1	equ	0xFE6
 10137                           postdec1	equ	0xFE5
 10138                           fsr1l	equ	0xFE1
 10139                           indf2	equ	0xFDF
 10140                           postinc2	equ	0xFDE
 10141                           postdec2	equ	0xFDD
 10142                           fsr2h	equ	0xFDA
 10143                           fsr2l	equ	0xFD9
 10144                           status	equ	0xFD8
 10145                           
 10146 ;; *************** function _Delay1KTCYx *****************
 10147 ;; Defined at:
 10148 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d1ktcyx.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  unit            1    wreg     unsigned char 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;  unit            1   14[BANK0 ] unsigned char 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;		None               void
 10155 ;; Registers used:
 10156 ;;		wreg
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10162 ;;      Params:         0       0       0       0       0       0       0
 10163 ;;      Locals:         0       1       0       0       0       0       0
 10164 ;;      Temps:          0       0       0       0       0       0       0
 10165 ;;      Totals:         0       1       0       0       0       0       0
 10166 ;;Total ram usage:        1 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:    4
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_WaitHalfSec
 10173 ;;		_DisplayLCD
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text29
 10178  003B0C                     __ptext29:
 10179                           	opt stack 0
 10180  003B0C                     _Delay1KTCYx:
 10181                           	opt stack 24
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;incstack = 0
 10185  003B0C  FFFF               	dw	65535
 10186                           
 10187                           ;Delay1KTCYx@unit stored from wreg
 10188  003B0E  0100               	movlb	0	; () banked
 10189  003B10  6F8E               	movwf	Delay1KTCYx@unit& (0+255),b
 10190  003B12                     l591:
 10191                           
 10192                           ; BSR set to: 0
 10193                           
 10194                           ; BSR set to: 0
 10195  003B12  0EFA               	movlw	250
 10196  003B14                     u5817:
 10197  003B14  2EE8               	decfsz	wreg,f,c
 10198  003B16  D7FE               	goto	u5817
 10199  003B18  0100               	movlb	0	; () banked
 10200  003B1A  2F8E               	decfsz	Delay1KTCYx@unit& (0+255),f,b
 10201  003B1C  D7FA               	goto	l591
 10202                           
 10203                           ; BSR set to: 0
 10204                           
 10205                           ; BSR set to: 0
 10206  003B1E  0012               	return	
 10207  003B20  FFFF               	dw	65535	; errata NOP
 10208  003B22                     __end_of_Delay1KTCYx:
 10209                           	opt stack 0
 10210                           tblptru	equ	0xFF8
 10211                           tblptrh	equ	0xFF7
 10212                           tblptrl	equ	0xFF6
 10213                           tablat	equ	0xFF5
 10214                           prodh	equ	0xFF4
 10215                           prodl	equ	0xFF3
 10216                           intcon	equ	0xFF2
 10217                           intcon2	equ	0xFF1
 10218                           postinc0	equ	0xFEE
 10219                           wreg	equ	0xFE8
 10220                           postinc1	equ	0xFE6
 10221                           postdec1	equ	0xFE5
 10222                           fsr1l	equ	0xFE1
 10223                           indf2	equ	0xFDF
 10224                           postinc2	equ	0xFDE
 10225                           postdec2	equ	0xFDD
 10226                           fsr2h	equ	0xFDA
 10227                           fsr2l	equ	0xFD9
 10228                           status	equ	0xFD8
 10229                           
 10230 ;; *************** function _CloseTimer0 *****************
 10231 ;; Defined at:
 10232 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0close.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;		None
 10235 ;; Auto vars:     Size  Location     Type
 10236 ;;		None
 10237 ;; Return value:  Size  Location     Type
 10238 ;;		None               void
 10239 ;; Registers used:
 10240 ;;		None
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10246 ;;      Params:         0       0       0       0       0       0       0
 10247 ;;      Locals:         0       0       0       0       0       0       0
 10248 ;;      Temps:          0       0       0       0       0       0       0
 10249 ;;      Totals:         0       0       0       0       0       0       0
 10250 ;;Total ram usage:        0 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    4
 10253 ;; This function calls:
 10254 ;;		Nothing
 10255 ;; This function is called by:
 10256 ;;		_main
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text30
 10261  003B4A                     __ptext30:
 10262                           	opt stack 0
 10263  003B4A                     _CloseTimer0:
 10264                           	opt stack 26
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;incstack = 0
 10268  003B4A  FFFF               	dw	65535
 10269  003B4C  9ED5               	bcf	4053,7,c	;volatile
 10270  003B4E  9AF2               	bcf	intcon,5,c	;volatile
 10271  003B50  0012               	return	
 10272  003B52  FFFF               	dw	65535	; errata NOP
 10273  003B54                     __end_of_CloseTimer0:
 10274                           	opt stack 0
 10275                           tblptru	equ	0xFF8
 10276                           tblptrh	equ	0xFF7
 10277                           tblptrl	equ	0xFF6
 10278                           tablat	equ	0xFF5
 10279                           prodh	equ	0xFF4
 10280                           prodl	equ	0xFF3
 10281                           intcon	equ	0xFF2
 10282                           intcon2	equ	0xFF1
 10283                           postinc0	equ	0xFEE
 10284                           wreg	equ	0xFE8
 10285                           postinc1	equ	0xFE6
 10286                           postdec1	equ	0xFE5
 10287                           fsr1l	equ	0xFE1
 10288                           indf2	equ	0xFDF
 10289                           postinc2	equ	0xFDE
 10290                           postdec2	equ	0xFDD
 10291                           fsr2h	equ	0xFDA
 10292                           fsr2l	equ	0xFD9
 10293                           status	equ	0xFD8
 10294                           
 10295 ;; *************** function _low_isr *****************
 10296 ;; Defined at:
 10297 ;;		line 126 in file "main.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;		None
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;		None
 10302 ;; Return value:  Size  Location     Type
 10303 ;;		None               void
 10304 ;; Registers used:
 10305 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10311 ;;      Params:         0       0       0       0       0       0       0
 10312 ;;      Locals:         0       0       0       0       0       0       0
 10313 ;;      Temps:         19       0       0       0       0       0       0
 10314 ;;      Totals:        19       0       0       0       0       0       0
 10315 ;;Total ram usage:       19 bytes
 10316 ;; Hardware stack levels used:    1
 10317 ;; Hardware stack levels required when called:    3
 10318 ;; This function calls:
 10319 ;;		___awtoft
 10320 ;;		i1_WriteTimer0
 10321 ;;		i1___ftdiv
 10322 ;; This function is called by:
 10323 ;;		Interrupt level 1
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327 ;; *************** function _TimerStopped *****************
 10328 ;; Defined at:
 10329 ;;		line 15 in file "interrupts.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;		None
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;		None
 10334 ;; Return value:  Size  Location     Type
 10335 ;;		None               void
 10336 ;; Registers used:
 10337 ;;		None
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10343 ;;      Params:         0       0       0       0       0       0       0
 10344 ;;      Locals:         0       0       0       0       0       0       0
 10345 ;;      Temps:         17       0       0       0       0       0       0
 10346 ;;      Totals:        17       0       0       0       0       0       0
 10347 ;;Total ram usage:       17 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:    1
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		Interrupt level 1
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	intcodelo
 10358  000018                     __pintcodelo:
 10359                           	opt stack 0
 10360  000018                     _low_isr:
 10361                           	opt stack 22
 10362                           
 10363                           ;incstack = 0
 10364  000018  FFFF               	dw	65535	; errata NOP
 10365  00001A  CFD8 F01E          	movff	status,??_low_isr+2
 10366  00001E  CFE8 F01F          	movff	wreg,??_low_isr+3
 10367  000022  CFE0 F020          	movff	bsr,??_low_isr+4
 10368  000026  CFFA F021          	movff	pclath,??_low_isr+5
 10369  00002A  CFFB F022          	movff	pclatu,??_low_isr+6
 10370  00002E  CFE9 F023          	movff	fsr0l,??_low_isr+7
 10371  000032  CFEA F024          	movff	fsr0h,??_low_isr+8
 10372  000036  CFE1 F025          	movff	fsr1l,??_low_isr+9
 10373  00003A  CFE2 F026          	movff	fsr1h,??_low_isr+10
 10374  00003E  CFD9 F027          	movff	fsr2l,??_low_isr+11
 10375  000042  CFDA F028          	movff	fsr2h,??_low_isr+12
 10376  000046  CFF3 F029          	movff	prodl,??_low_isr+13
 10377  00004A  CFF4 F02A          	movff	prodh,??_low_isr+14
 10378  00004E  CFF6 F02B          	movff	tblptrl,??_low_isr+15
 10379  000052  CFF7 F02C          	movff	tblptrh,??_low_isr+16
 10380  000056  CFF8 F02D          	movff	tblptru,??_low_isr+17
 10381  00005A  CFF5 F02E          	movff	tablat,??_low_isr+18
 10382                           
 10383                           ;main.c: 128: if(INTCONbits.RBIF == 1)
 10384  00005E  A0F2               	btfss	intcon,0,c	;volatile
 10385  000060  D012               	goto	i1l66
 10386                           
 10387                           ;main.c: 129: {
 10388                           ;main.c: 131: if (CHA == PORTBbits.RB5)
 10389  000062  AA81               	btfss	3969,5,c	;volatile
 10390  000064  D002               	goto	i1u406_20
 10391  000066  0E01               	movlw	1
 10392  000068  D001               	goto	i1u406_26
 10393  00006A                     i1u406_20:
 10394  00006A  0E00               	movlw	0
 10395  00006C                     i1u406_26:
 10396  00006C  6E1C               	movwf	??_low_isr& (0+255),c
 10397  00006E  6A1D               	clrf	(??_low_isr+1)& (0+255),c
 10398  000070  5046               	movf	_CHA+1,w,c
 10399  000072  181D               	xorwf	??_low_isr+1,w,c
 10400  000074  E102               	bnz	i1u407_25
 10401  000076  5045               	movf	_CHA,w,c
 10402  000078  181C               	xorwf	??_low_isr,w,c
 10403  00007A                     i1u407_25:
 10404  00007A  B4D8               	btfsc	status,2,c
 10405  00007C  D002               	goto	i1l3757
 10406                           
 10407                           ;main.c: 135: else
 10408                           ;main.c: 136: {
 10409                           ;main.c: 137: CHAcount++;
 10410                           
 10411                           ;main.c: 132: {
 10412                           ;main.c: 134: }
 10413  00007E  4A47               	infsnz	_CHAcount,f,c
 10414  000080  2A48               	incf	_CHAcount+1,f,c
 10415  000082                     i1l3757:
 10416                           
 10417                           ;main.c: 138: }
 10418                           ;main.c: 139: INTCONbits.RBIF = 0;
 10419  000082  90F2               	bcf	intcon,0,c	;volatile
 10420                           
 10421                           ;main.c: 140: }
 10422  000084  D041               	goto	i1l73
 10423  000086                     i1l66:
 10424                           
 10425                           ;main.c: 142: else if (INTCONbits.TMR0IF == 1)
 10426  000086  A4F2               	btfss	intcon,2,c	;volatile
 10427  000088  D03F               	goto	i1l73
 10428                           
 10429                           ;main.c: 143: {
 10430                           ;main.c: 144: if (TMR0count == 20)
 10431  00008A  504F               	movf	_TMR0count,w,c
 10432  00008C  0A14               	xorlw	20
 10433  00008E  1050               	iorwf	_TMR0count+1,w,c
 10434  000090  A4D8               	btfss	status,2,c
 10435  000092  D031               	goto	i1l3767
 10436                           
 10437                           ;main.c: 145: {
 10438                           ;main.c: 148: RPS = ((double)CHAcount)/CountPerRev;
 10439  000094  C047  F009         	movff	_CHAcount,___awtoft@c
 10440  000098  C048  F00A         	movff	_CHAcount+1,___awtoft@c+1
 10441  00009C  EC5C  F01C         	call	___awtoft	;wreg free
 10442  0000A0  C009  F00D         	movff	?___awtoft,i1___ftdiv@f1
 10443  0000A4  C00A  F00E         	movff	?___awtoft+1,i1___ftdiv@f1+1
 10444  0000A8  C00B  F00F         	movff	?___awtoft+2,i1___ftdiv@f1+2
 10445  0000AC  0E97               	movlw	low _CountPerRev
 10446  0000AE  6EF6               	movwf	tblptrl,c
 10447  0000B0                     	if	1	;There is more than 1 active tblptr byte
 10448  0000B0  0E06               	movlw	high _CountPerRev
 10449  0000B2  6EF7               	movwf	tblptrh,c
 10450  0000B4                     	endif
 10451  0000B4                     	if	0	;There are less than 3 active tblptr bytes
 10452  0000B4                     	endif
 10453  0000B4  0009               	tblrd		*+
 10454  0000B6  FFFF               	dw	65535	; errata NOP
 10455  0000B8  CFF5 F009          	movff	tablat,___awtoft@c
 10456  0000BC  000A               	tblrd		*-
 10457  0000BE  FFFF               	dw	65535	; errata NOP
 10458  0000C0  CFF5 F00A          	movff	tablat,___awtoft@c+1
 10459  0000C4  EC5C  F01C         	call	___awtoft	;wreg free
 10460  0000C8  C009  F010         	movff	?___awtoft,i1___ftdiv@f2
 10461  0000CC  C00A  F011         	movff	?___awtoft+1,i1___ftdiv@f2+1
 10462  0000D0  C00B  F012         	movff	?___awtoft+2,i1___ftdiv@f2+2
 10463  0000D4  EC3D  F019         	call	i1___ftdiv	;wreg free
 10464  0000D8  C00D  F15E         	movff	?i1___ftdiv,_RPS
 10465  0000DC  C00E  F15F         	movff	?i1___ftdiv+1,_RPS+1
 10466  0000E0  C00F  F160         	movff	?i1___ftdiv+2,_RPS+2
 10467                           
 10468                           ;main.c: 149: CHAcount = 0;
 10469  0000E4  0E00               	movlw	0
 10470  0000E6  6E48               	movwf	_CHAcount+1,c
 10471  0000E8  0E00               	movlw	0
 10472  0000EA  6E47               	movwf	_CHAcount,c
 10473                           
 10474                           ;main.c: 151: TMR0count = 0;
 10475  0000EC  0E00               	movlw	0
 10476  0000EE  6E50               	movwf	_TMR0count+1,c
 10477  0000F0  0E00               	movlw	0
 10478  0000F2  6E4F               	movwf	_TMR0count,c
 10479                           
 10480                           ;main.c: 152: }
 10481  0000F4  D002               	goto	i1l3769
 10482  0000F6                     i1l3767:
 10483                           
 10484                           ;main.c: 153: else
 10485                           ;main.c: 154: {
 10486                           ;main.c: 155: TMR0count++;
 10487  0000F6  4A4F               	infsnz	_TMR0count,f,c
 10488  0000F8  2A50               	incf	_TMR0count+1,f,c
 10489  0000FA                     i1l3769:
 10490                           
 10491                           ;main.c: 156: }
 10492                           ;main.c: 157: WriteTimer0(0x0BDC);
 10493  0000FA  0E0B               	movlw	11
 10494  0000FC  6E02               	movwf	i1WriteTimer0@timer0+1,c
 10495  0000FE  0EDC               	movlw	220
 10496  000100  6E01               	movwf	i1WriteTimer0@timer0,c
 10497  000102  EC91  F01D         	call	i1_WriteTimer0	;wreg free
 10498                           
 10499                           ;main.c: 158: INTCONbits.TMR0IF = 0;
 10500  000106  94F2               	bcf	intcon,2,c	;volatile
 10501  000108                     i1l73:
 10502  000108  C02E  FFF5         	movff	??_low_isr+18,tablat
 10503  00010C  C02D  FFF8         	movff	??_low_isr+17,tblptru
 10504  000110  C02C  FFF7         	movff	??_low_isr+16,tblptrh
 10505  000114  C02B  FFF6         	movff	??_low_isr+15,tblptrl
 10506  000118  C02A  FFF4         	movff	??_low_isr+14,prodh
 10507  00011C  C029  FFF3         	movff	??_low_isr+13,prodl
 10508  000120  C028  FFDA         	movff	??_low_isr+12,fsr2h
 10509  000124  C027  FFD9         	movff	??_low_isr+11,fsr2l
 10510  000128  C026  FFE2         	movff	??_low_isr+10,fsr1h
 10511  00012C  C025  FFE1         	movff	??_low_isr+9,fsr1l
 10512  000130  C024  FFEA         	movff	??_low_isr+8,fsr0h
 10513  000134  C023  FFE9         	movff	??_low_isr+7,fsr0l
 10514  000138  C022  FFFB         	movff	??_low_isr+6,pclatu
 10515  00013C  C021  FFFA         	movff	??_low_isr+5,pclath
 10516  000140  C020  FFE0         	movff	??_low_isr+4,bsr
 10517  000144  C01F  FFE8         	movff	??_low_isr+3,wreg
 10518  000148  C01E  FFD8         	movff	??_low_isr+2,status
 10519  00014C  0010               	retfie	
 10520  00014E  FFFF               	dw	65535	; errata NOP
 10521  000150                     __end_of_low_isr:
 10522                           	opt stack 0
 10523  000150                     _TimerStopped:
 10524                           	opt stack 24
 10525                           
 10526                           ;incstack = 0
 10527  000150  FFFF               	dw	65535	; errata NOP
 10528  000152  CFD8 F02F          	movff	status,??_TimerStopped
 10529  000156  CFE8 F030          	movff	wreg,??_TimerStopped+1
 10530  00015A  CFE0 F031          	movff	bsr,??_TimerStopped+2
 10531  00015E  CFFA F032          	movff	pclath,??_TimerStopped+3
 10532  000162  CFFB F033          	movff	pclatu,??_TimerStopped+4
 10533  000166  CFE9 F034          	movff	fsr0l,??_TimerStopped+5
 10534  00016A  CFEA F035          	movff	fsr0h,??_TimerStopped+6
 10535  00016E  CFE1 F036          	movff	fsr1l,??_TimerStopped+7
 10536  000172  CFE2 F037          	movff	fsr1h,??_TimerStopped+8
 10537  000176  CFD9 F038          	movff	fsr2l,??_TimerStopped+9
 10538  00017A  CFDA F039          	movff	fsr2h,??_TimerStopped+10
 10539  00017E  CFF3 F03A          	movff	prodl,??_TimerStopped+11
 10540  000182  CFF4 F03B          	movff	prodh,??_TimerStopped+12
 10541  000186  CFF6 F03C          	movff	tblptrl,??_TimerStopped+13
 10542  00018A  CFF7 F03D          	movff	tblptrh,??_TimerStopped+14
 10543  00018E  CFF8 F03E          	movff	tblptru,??_TimerStopped+15
 10544  000192  CFF5 F03F          	movff	tablat,??_TimerStopped+16
 10545                           
 10546                           ;interrupts.c: 18: if(INTCONbits.INT0F == 1)
 10547  000196  A2F2               	btfss	intcon,1,c	;volatile
 10548  000198  D002               	goto	i1l183
 10549                           
 10550                           ;interrupts.c: 19: {
 10551                           ;interrupts.c: 20: LATB4 = ~LATB4;
 10552  00019A  788A               	btg	3978,4,c	;volatile
 10553                           
 10554                           ;interrupts.c: 21: INTCONbits.INT0F = 0;
 10555  00019C  92F2               	bcf	intcon,1,c	;volatile
 10556  00019E                     i1l183:
 10557  00019E  C03F  FFF5         	movff	??_TimerStopped+16,tablat
 10558  0001A2  C03E  FFF8         	movff	??_TimerStopped+15,tblptru
 10559  0001A6  C03D  FFF7         	movff	??_TimerStopped+14,tblptrh
 10560  0001AA  C03C  FFF6         	movff	??_TimerStopped+13,tblptrl
 10561  0001AE  C03B  FFF4         	movff	??_TimerStopped+12,prodh
 10562  0001B2  C03A  FFF3         	movff	??_TimerStopped+11,prodl
 10563  0001B6  C039  FFDA         	movff	??_TimerStopped+10,fsr2h
 10564  0001BA  C038  FFD9         	movff	??_TimerStopped+9,fsr2l
 10565  0001BE  C037  FFE2         	movff	??_TimerStopped+8,fsr1h
 10566  0001C2  C036  FFE1         	movff	??_TimerStopped+7,fsr1l
 10567  0001C6  C035  FFEA         	movff	??_TimerStopped+6,fsr0h
 10568  0001CA  C034  FFE9         	movff	??_TimerStopped+5,fsr0l
 10569  0001CE  C033  FFFB         	movff	??_TimerStopped+4,pclatu
 10570  0001D2  C032  FFFA         	movff	??_TimerStopped+3,pclath
 10571  0001D6  C031  FFE0         	movff	??_TimerStopped+2,bsr
 10572  0001DA  C030  FFE8         	movff	??_TimerStopped+1,wreg
 10573  0001DE  C02F  FFD8         	movff	??_TimerStopped,status
 10574  0001E2  0010               	retfie	
 10575  0001E4  FFFF               	dw	65535	; errata NOP
 10576  0001E6                     __end_of_TimerStopped:
 10577                           	opt stack 0
 10578                           pclatu	equ	0xFFB
 10579                           pclath	equ	0xFFA
 10580                           tblptru	equ	0xFF8
 10581                           tblptrh	equ	0xFF7
 10582                           tblptrl	equ	0xFF6
 10583                           tablat	equ	0xFF5
 10584                           prodh	equ	0xFF4
 10585                           prodl	equ	0xFF3
 10586                           intcon	equ	0xFF2
 10587                           intcon2	equ	0xFF1
 10588                           postinc0	equ	0xFEE
 10589                           fsr0h	equ	0xFEA
 10590                           fsr0l	equ	0xFE9
 10591                           wreg	equ	0xFE8
 10592                           postinc1	equ	0xFE6
 10593                           postdec1	equ	0xFE5
 10594                           fsr1h	equ	0xFE2
 10595                           fsr1l	equ	0xFE1
 10596                           bsr	equ	0xFE0
 10597                           indf2	equ	0xFDF
 10598                           postinc2	equ	0xFDE
 10599                           postdec2	equ	0xFDD
 10600                           fsr2h	equ	0xFDA
 10601                           fsr2l	equ	0xFD9
 10602                           status	equ	0xFD8
 10603                           
 10604 ;; *************** function i1___ftdiv *****************
 10605 ;; Defined at:
 10606 ;;		line 49 in file "/Applications/microchip/xc8/v1.33/sources/common/ftdiv.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  f1              3   12[COMRAM] float 
 10609 ;;  f2              3   15[COMRAM] float 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  __ftdiv         3   22[COMRAM] float 
 10612 ;;  __ftdiv         1   26[COMRAM] unsigned char 
 10613 ;;  __ftdiv         1   25[COMRAM] unsigned char 
 10614 ;;  __ftdiv         1   21[COMRAM] unsigned char 
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  3   12[COMRAM] float 
 10617 ;; Registers used:
 10618 ;;		wreg, status,2, status,0, cstack
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10624 ;;      Params:         6       0       0       0       0       0       0
 10625 ;;      Locals:         6       0       0       0       0       0       0
 10626 ;;      Temps:          3       0       0       0       0       0       0
 10627 ;;      Totals:        15       0       0       0       0       0       0
 10628 ;;Total ram usage:       15 bytes
 10629 ;; Hardware stack levels used:    1
 10630 ;; Hardware stack levels required when called:    2
 10631 ;; This function calls:
 10632 ;;		i1___ftpack
 10633 ;; This function is called by:
 10634 ;;		_low_isr
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text32
 10639  00327A                     __ptext32:
 10640                           	opt stack 0
 10641  00327A                     i1___ftdiv:
 10642                           	opt stack 22
 10643                           
 10644                           ;incstack = 0
 10645  00327A  FFFF               	dw	65535
 10646  00327C  C00F  F013         	movff	i1___ftdiv@f1+2,??i1___ftdiv
 10647  003280  6A14               	clrf	(??i1___ftdiv+1)& (0+255),c
 10648  003282  6A15               	clrf	(??i1___ftdiv+2)& (0+255),c
 10649  003284  340E               	rlcf	i1___ftdiv@f1+1,w,c
 10650  003286  3613               	rlcf	??i1___ftdiv& (0+255),f,c
 10651  003288  E301               	bnc	u395_21
 10652  00328A  8014               	bsf	(??i1___ftdiv+1)& (0+255),0,c
 10653  00328C                     u395_21:
 10654  00328C  5013               	movf	??i1___ftdiv,w,c
 10655  00328E  6E1A               	movwf	i1___ftdiv@exp,c
 10656  003290  661A               	tstfsz	i1___ftdiv@exp& (0+255),c
 10657  003292  D001               	goto	i1l3663
 10658  003294  D00C               	goto	i1u398_20
 10659  003296                     i1l3663:
 10660  003296  C012  F013         	movff	i1___ftdiv@f2+2,??i1___ftdiv
 10661  00329A  6A14               	clrf	(??i1___ftdiv+1)& (0+255),c
 10662  00329C  6A15               	clrf	(??i1___ftdiv+2)& (0+255),c
 10663  00329E  3411               	rlcf	i1___ftdiv@f2+1,w,c
 10664  0032A0  3613               	rlcf	??i1___ftdiv& (0+255),f,c
 10665  0032A2  E301               	bnc	u397_21
 10666  0032A4  8014               	bsf	(??i1___ftdiv+1)& (0+255),0,c
 10667  0032A6                     u397_21:
 10668  0032A6  5013               	movf	??i1___ftdiv,w,c
 10669  0032A8  6E1B               	movwf	i1___ftdiv@sign,c
 10670  0032AA  661B               	tstfsz	i1___ftdiv@sign& (0+255),c
 10671  0032AC  D007               	goto	i1l3669
 10672  0032AE                     i1u398_20:
 10673  0032AE  0E00               	movlw	0
 10674  0032B0  6E0D               	movwf	?i1___ftdiv,c
 10675  0032B2  0E00               	movlw	0
 10676  0032B4  6E0E               	movwf	?i1___ftdiv+1,c
 10677  0032B6  0E00               	movlw	0
 10678  0032B8  6E0F               	movwf	?i1___ftdiv+2,c
 10679  0032BA  D04A               	goto	i1l767
 10680  0032BC                     i1l3669:
 10681  0032BC  0E00               	movlw	0
 10682  0032BE  6E17               	movwf	i1___ftdiv@f3,c
 10683  0032C0  0E00               	movlw	0
 10684  0032C2  6E18               	movwf	i1___ftdiv@f3+1,c
 10685  0032C4  0E00               	movlw	0
 10686  0032C6  6E19               	movwf	i1___ftdiv@f3+2,c
 10687  0032C8  501B               	movf	i1___ftdiv@sign,w,c
 10688  0032CA  0F89               	addlw	137
 10689  0032CC  5E1A               	subwf	i1___ftdiv@exp,f,c
 10690  0032CE  C00F  F01B         	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
 10691  0032D2  5012               	movf	i1___ftdiv@f2+2,w,c
 10692  0032D4  1A1B               	xorwf	i1___ftdiv@sign,f,c
 10693  0032D6  0E80               	movlw	128
 10694  0032D8  161B               	andwf	i1___ftdiv@sign,f,c
 10695  0032DA  8E0E               	bsf	i1___ftdiv@f1+1,7,c
 10696  0032DC  0EFF               	movlw	255
 10697  0032DE  160D               	andwf	i1___ftdiv@f1,f,c
 10698  0032E0  0EFF               	movlw	255
 10699  0032E2  160E               	andwf	i1___ftdiv@f1+1,f,c
 10700  0032E4  0E00               	movlw	0
 10701  0032E6  160F               	andwf	i1___ftdiv@f1+2,f,c
 10702  0032E8  8E11               	bsf	i1___ftdiv@f2+1,7,c
 10703  0032EA  0EFF               	movlw	255
 10704  0032EC  1610               	andwf	i1___ftdiv@f2,f,c
 10705  0032EE  0EFF               	movlw	255
 10706  0032F0  1611               	andwf	i1___ftdiv@f2+1,f,c
 10707  0032F2  0E00               	movlw	0
 10708  0032F4  1612               	andwf	i1___ftdiv@f2+2,f,c
 10709  0032F6  0E18               	movlw	24
 10710  0032F8  6E16               	movwf	i1___ftdiv@cntr,c
 10711  0032FA                     i1l3689:
 10712  0032FA  90D8               	bcf	status,0,c
 10713  0032FC  3617               	rlcf	i1___ftdiv@f3,f,c
 10714  0032FE  3618               	rlcf	i1___ftdiv@f3+1,f,c
 10715  003300  3619               	rlcf	i1___ftdiv@f3+2,f,c
 10716  003302  5010               	movf	i1___ftdiv@f2,w,c
 10717  003304  5C0D               	subwf	i1___ftdiv@f1,w,c
 10718  003306  5011               	movf	i1___ftdiv@f2+1,w,c
 10719  003308  580E               	subwfb	i1___ftdiv@f1+1,w,c
 10720  00330A  5012               	movf	i1___ftdiv@f2+2,w,c
 10721  00330C  580F               	subwfb	i1___ftdiv@f1+2,w,c
 10722  00330E  A0D8               	btfss	status,0,c
 10723  003310  D007               	goto	i1l770
 10724  003312  5010               	movf	i1___ftdiv@f2,w,c
 10725  003314  5E0D               	subwf	i1___ftdiv@f1,f,c
 10726  003316  5011               	movf	i1___ftdiv@f2+1,w,c
 10727  003318  5A0E               	subwfb	i1___ftdiv@f1+1,f,c
 10728  00331A  5012               	movf	i1___ftdiv@f2+2,w,c
 10729  00331C  5A0F               	subwfb	i1___ftdiv@f1+2,f,c
 10730  00331E  8017               	bsf	i1___ftdiv@f3,0,c
 10731  003320                     i1l770:
 10732  003320  90D8               	bcf	status,0,c
 10733  003322  360D               	rlcf	i1___ftdiv@f1,f,c
 10734  003324  360E               	rlcf	i1___ftdiv@f1+1,f,c
 10735  003326  360F               	rlcf	i1___ftdiv@f1+2,f,c
 10736  003328  2E16               	decfsz	i1___ftdiv@cntr,f,c
 10737  00332A  D7E7               	goto	i1l3689
 10738  00332C  C017  F001         	movff	i1___ftdiv@f3,i1___ftpack@arg
 10739  003330  C018  F002         	movff	i1___ftdiv@f3+1,i1___ftpack@arg+1
 10740  003334  C019  F003         	movff	i1___ftdiv@f3+2,i1___ftpack@arg+2
 10741  003338  C01A  F004         	movff	i1___ftdiv@exp,i1___ftpack@exp
 10742  00333C  C01B  F005         	movff	i1___ftdiv@sign,i1___ftpack@sign
 10743  003340  ECE6  F01A         	call	i1___ftpack	;wreg free
 10744  003344  C001  F00D         	movff	?i1___ftpack,?i1___ftdiv
 10745  003348  C002  F00E         	movff	?i1___ftpack+1,?i1___ftdiv+1
 10746  00334C  C003  F00F         	movff	?i1___ftpack+2,?i1___ftdiv+2
 10747  003350                     i1l767:
 10748  003350  0012               	return	
 10749  003352  FFFF               	dw	65535	; errata NOP
 10750  003354                     __end_ofi1___ftdiv:
 10751                           	opt stack 0
 10752                           pclatu	equ	0xFFB
 10753                           pclath	equ	0xFFA
 10754                           tblptru	equ	0xFF8
 10755                           tblptrh	equ	0xFF7
 10756                           tblptrl	equ	0xFF6
 10757                           tablat	equ	0xFF5
 10758                           prodh	equ	0xFF4
 10759                           prodl	equ	0xFF3
 10760                           intcon	equ	0xFF2
 10761                           intcon2	equ	0xFF1
 10762                           postinc0	equ	0xFEE
 10763                           fsr0h	equ	0xFEA
 10764                           fsr0l	equ	0xFE9
 10765                           wreg	equ	0xFE8
 10766                           postinc1	equ	0xFE6
 10767                           postdec1	equ	0xFE5
 10768                           fsr1h	equ	0xFE2
 10769                           fsr1l	equ	0xFE1
 10770                           bsr	equ	0xFE0
 10771                           indf2	equ	0xFDF
 10772                           postinc2	equ	0xFDE
 10773                           postdec2	equ	0xFDD
 10774                           fsr2h	equ	0xFDA
 10775                           fsr2l	equ	0xFD9
 10776                           status	equ	0xFD8
 10777                           
 10778 ;; *************** function i1_WriteTimer0 *****************
 10779 ;; Defined at:
 10780 ;;		line 16 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/Timers/t0write.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;  timer0          2    0[COMRAM] unsigned int 
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;  WriteTimer0     2    2[COMRAM] struct Timers
 10785 ;; Return value:  Size  Location     Type
 10786 ;;		None               void
 10787 ;; Registers used:
 10788 ;;		None
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10794 ;;      Params:         2       0       0       0       0       0       0
 10795 ;;      Locals:         2       0       0       0       0       0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0
 10797 ;;      Totals:         4       0       0       0       0       0       0
 10798 ;;Total ram usage:        4 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    1
 10801 ;; This function calls:
 10802 ;;		Nothing
 10803 ;; This function is called by:
 10804 ;;		_low_isr
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text33
 10809  003B22                     __ptext33:
 10810                           	opt stack 0
 10811  003B22                     i1_WriteTimer0:
 10812                           	opt stack 23
 10813                           
 10814                           ;incstack = 0
 10815  003B22  FFFF               	dw	65535
 10816  003B24  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
 10817  003B28  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
 10818  003B2C  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
 10819  003B30  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
 10820  003B34  0012               	return	
 10821  003B36  FFFF               	dw	65535	; errata NOP
 10822  003B38                     __end_ofi1_WriteTimer0:
 10823                           	opt stack 0
 10824                           pclatu	equ	0xFFB
 10825                           pclath	equ	0xFFA
 10826                           tblptru	equ	0xFF8
 10827                           tblptrh	equ	0xFF7
 10828                           tblptrl	equ	0xFF6
 10829                           tablat	equ	0xFF5
 10830                           prodh	equ	0xFF4
 10831                           prodl	equ	0xFF3
 10832                           intcon	equ	0xFF2
 10833                           intcon2	equ	0xFF1
 10834                           postinc0	equ	0xFEE
 10835                           fsr0h	equ	0xFEA
 10836                           fsr0l	equ	0xFE9
 10837                           wreg	equ	0xFE8
 10838                           postinc1	equ	0xFE6
 10839                           postdec1	equ	0xFE5
 10840                           fsr1h	equ	0xFE2
 10841                           fsr1l	equ	0xFE1
 10842                           bsr	equ	0xFE0
 10843                           indf2	equ	0xFDF
 10844                           postinc2	equ	0xFDE
 10845                           postdec2	equ	0xFDD
 10846                           fsr2h	equ	0xFDA
 10847                           fsr2l	equ	0xFD9
 10848                           status	equ	0xFD8
 10849                           
 10850 ;; *************** function ___awtoft *****************
 10851 ;; Defined at:
 10852 ;;		line 32 in file "/Applications/microchip/xc8/v1.33/sources/common/awtoft.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  c               2    8[COMRAM] int 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  sign            1   11[COMRAM] unsigned char 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  3    8[COMRAM] float 
 10859 ;; Registers used:
 10860 ;;		wreg, status,2, status,0, prodl, cstack
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10866 ;;      Params:         3       0       0       0       0       0       0
 10867 ;;      Locals:         1       0       0       0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0
 10869 ;;      Totals:         4       0       0       0       0       0       0
 10870 ;;Total ram usage:        4 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:    2
 10873 ;; This function calls:
 10874 ;;		i1___ftpack
 10875 ;; This function is called by:
 10876 ;;		_low_isr
 10877 ;;		_ReadEncoder
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text34
 10882  0038B8                     __ptext34:
 10883                           	opt stack 0
 10884  0038B8                     ___awtoft:
 10885                           	opt stack 22
 10886                           
 10887                           ;incstack = 0
 10888  0038B8  FFFF               	dw	65535
 10889  0038BA  0E00               	movlw	0
 10890  0038BC  6E0C               	movwf	___awtoft@sign,c
 10891  0038BE  500A               	movf	___awtoft@c+1,w,c
 10892  0038C0  0A80               	xorlw	128
 10893  0038C2  6EF3               	movwf	prodl,c
 10894  0038C4  0E80               	movlw	128
 10895  0038C6  5CF3               	subwf	prodl,w,c
 10896  0038C8  0E00               	movlw	0
 10897  0038CA  B4D8               	btfsc	status,2,c
 10898  0038CC  5C09               	subwf	___awtoft@c,w,c
 10899  0038CE  B0D8               	btfsc	status,0,c
 10900  0038D0  D006               	goto	i1l3651
 10901  0038D2  6C09               	negf	___awtoft@c,c
 10902  0038D4  1E0A               	comf	___awtoft@c+1,f,c
 10903  0038D6  B0D8               	btfsc	status,0,c
 10904  0038D8  2A0A               	incf	___awtoft@c+1,f,c
 10905  0038DA  0E01               	movlw	1
 10906  0038DC  6E0C               	movwf	___awtoft@sign,c
 10907  0038DE                     i1l3651:
 10908  0038DE  C009  F001         	movff	___awtoft@c,i1___ftpack@arg
 10909  0038E2  C00A  F002         	movff	___awtoft@c+1,i1___ftpack@arg+1
 10910  0038E6  6A03               	clrf	i1___ftpack@arg+2,c
 10911  0038E8  0E8E               	movlw	142
 10912  0038EA  6E04               	movwf	i1___ftpack@exp,c
 10913  0038EC  C00C  F005         	movff	___awtoft@sign,i1___ftpack@sign
 10914  0038F0  ECE6  F01A         	call	i1___ftpack	;wreg free
 10915  0038F4  C001  F009         	movff	?i1___ftpack,?___awtoft
 10916  0038F8  C002  F00A         	movff	?i1___ftpack+1,?___awtoft+1
 10917  0038FC  C003  F00B         	movff	?i1___ftpack+2,?___awtoft+2
 10918  003900  0012               	return	
 10919  003902  FFFF               	dw	65535	; errata NOP
 10920  003904                     __end_of___awtoft:
 10921                           	opt stack 0
 10922                           pclatu	equ	0xFFB
 10923                           pclath	equ	0xFFA
 10924                           tblptru	equ	0xFF8
 10925                           tblptrh	equ	0xFF7
 10926                           tblptrl	equ	0xFF6
 10927                           tablat	equ	0xFF5
 10928                           prodh	equ	0xFF4
 10929                           prodl	equ	0xFF3
 10930                           intcon	equ	0xFF2
 10931                           intcon2	equ	0xFF1
 10932                           postinc0	equ	0xFEE
 10933                           fsr0h	equ	0xFEA
 10934                           fsr0l	equ	0xFE9
 10935                           wreg	equ	0xFE8
 10936                           postinc1	equ	0xFE6
 10937                           postdec1	equ	0xFE5
 10938                           fsr1h	equ	0xFE2
 10939                           fsr1l	equ	0xFE1
 10940                           bsr	equ	0xFE0
 10941                           indf2	equ	0xFDF
 10942                           postinc2	equ	0xFDE
 10943                           postdec2	equ	0xFDD
 10944                           fsr2h	equ	0xFDA
 10945                           fsr2l	equ	0xFD9
 10946                           status	equ	0xFD8
 10947                           
 10948 ;; *************** function i1___ftpack *****************
 10949 ;; Defined at:
 10950 ;;		line 62 in file "/Applications/microchip/xc8/v1.33/sources/common/float.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  arg             3    0[COMRAM] unsigned um
 10953 ;;  exp             1    3[COMRAM] unsigned char 
 10954 ;;  sign            1    4[COMRAM] unsigned char 
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;		None
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  3    0[COMRAM] float 
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10966 ;;      Params:         5       0       0       0       0       0       0
 10967 ;;      Locals:         0       0       0       0       0       0       0
 10968 ;;      Temps:          3       0       0       0       0       0       0
 10969 ;;      Totals:         8       0       0       0       0       0       0
 10970 ;;Total ram usage:        8 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    1
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		___awtoft
 10977 ;;		i1___ftdiv
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text35
 10982  0035CC                     __ptext35:
 10983                           	opt stack 0
 10984  0035CC                     i1___ftpack:
 10985                           	opt stack 22
 10986                           
 10987                           ;incstack = 0
 10988  0035CC  FFFF               	dw	65535
 10989  0035CE  5004               	movf	i1___ftpack@exp,w,c
 10990  0035D0  B4D8               	btfsc	status,2,c
 10991  0035D2  D005               	goto	i1l3565
 10992  0035D4  5001               	movf	i1___ftpack@arg,w,c
 10993  0035D6  1002               	iorwf	i1___ftpack@arg+1,w,c
 10994  0035D8  1003               	iorwf	i1___ftpack@arg+2,w,c
 10995  0035DA  A4D8               	btfss	status,2,c
 10996  0035DC  D00C               	goto	i1l3571
 10997  0035DE                     i1l3565:
 10998  0035DE  0E00               	movlw	0
 10999  0035E0  6E01               	movwf	?i1___ftpack,c
 11000  0035E2  0E00               	movlw	0
 11001  0035E4  6E02               	movwf	?i1___ftpack+1,c
 11002  0035E6  0E00               	movlw	0
 11003  0035E8  6E03               	movwf	?i1___ftpack+2,c
 11004  0035EA  D044               	goto	i1l698
 11005  0035EC                     i1l3569:
 11006  0035EC  2A04               	incf	i1___ftpack@exp,f,c
 11007  0035EE  90D8               	bcf	status,0,c
 11008  0035F0  3203               	rrcf	i1___ftpack@arg+2,f,c
 11009  0035F2  3202               	rrcf	i1___ftpack@arg+1,f,c
 11010  0035F4  3201               	rrcf	i1___ftpack@arg,f,c
 11011  0035F6                     i1l3571:
 11012  0035F6  0E00               	movlw	0
 11013  0035F8  1401               	andwf	i1___ftpack@arg,w,c
 11014  0035FA  6E06               	movwf	??i1___ftpack& (0+255),c
 11015  0035FC  0E00               	movlw	0
 11016  0035FE  1402               	andwf	i1___ftpack@arg+1,w,c
 11017  003600  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 11018  003602  0EFE               	movlw	254
 11019  003604  1403               	andwf	i1___ftpack@arg+2,w,c
 11020  003606  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 11021  003608  5006               	movf	??i1___ftpack,w,c
 11022  00360A  1007               	iorwf	??i1___ftpack+1,w,c
 11023  00360C  1008               	iorwf	??i1___ftpack+2,w,c
 11024  00360E  B4D8               	btfsc	status,2,c
 11025  003610  D00C               	goto	i1l3577
 11026  003612  D7EC               	goto	i1l3569
 11027  003614                     i1l3573:
 11028  003614  2A04               	incf	i1___ftpack@exp,f,c
 11029  003616  0E01               	movlw	1
 11030  003618  2601               	addwf	i1___ftpack@arg,f,c
 11031  00361A  0E00               	movlw	0
 11032  00361C  2202               	addwfc	i1___ftpack@arg+1,f,c
 11033  00361E  0E00               	movlw	0
 11034  003620  2203               	addwfc	i1___ftpack@arg+2,f,c
 11035  003622  90D8               	bcf	status,0,c
 11036  003624  3203               	rrcf	i1___ftpack@arg+2,f,c
 11037  003626  3202               	rrcf	i1___ftpack@arg+1,f,c
 11038  003628  3201               	rrcf	i1___ftpack@arg,f,c
 11039  00362A                     i1l3577:
 11040  00362A  0E00               	movlw	0
 11041  00362C  1401               	andwf	i1___ftpack@arg,w,c
 11042  00362E  6E06               	movwf	??i1___ftpack& (0+255),c
 11043  003630  0E00               	movlw	0
 11044  003632  1402               	andwf	i1___ftpack@arg+1,w,c
 11045  003634  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
 11046  003636  0EFF               	movlw	255
 11047  003638  1403               	andwf	i1___ftpack@arg+2,w,c
 11048  00363A  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
 11049  00363C  5006               	movf	??i1___ftpack,w,c
 11050  00363E  1007               	iorwf	??i1___ftpack+1,w,c
 11051  003640  1008               	iorwf	??i1___ftpack+2,w,c
 11052  003642  B4D8               	btfsc	status,2,c
 11053  003644  D006               	goto	i1l3581
 11054  003646  D7E6               	goto	i1l3573
 11055  003648                     i1l3579:
 11056  003648  0604               	decf	i1___ftpack@exp,f,c
 11057  00364A  90D8               	bcf	status,0,c
 11058  00364C  3601               	rlcf	i1___ftpack@arg,f,c
 11059  00364E  3602               	rlcf	i1___ftpack@arg+1,f,c
 11060  003650  3603               	rlcf	i1___ftpack@arg+2,f,c
 11061  003652                     i1l3581:
 11062  003652  AE02               	btfss	i1___ftpack@arg+1,7,c
 11063  003654  D7F9               	goto	i1l3579
 11064  003656  A004               	btfss	i1___ftpack@exp,0,c
 11065  003658  9E02               	bcf	i1___ftpack@arg+1,7,c
 11066  00365A  90D8               	bcf	status,0,c
 11067  00365C  3204               	rrcf	i1___ftpack@exp,f,c
 11068  00365E  5004               	movf	i1___ftpack@exp,w,c
 11069  003660  1203               	iorwf	i1___ftpack@arg+2,f,c
 11070  003662  5005               	movf	i1___ftpack@sign,w,c
 11071  003664  A4D8               	btfss	status,2,c
 11072  003666  8E03               	bsf	i1___ftpack@arg+2,7,c
 11073  003668  C001  F001         	movff	i1___ftpack@arg,?i1___ftpack
 11074  00366C  C002  F002         	movff	i1___ftpack@arg+1,?i1___ftpack+1
 11075  003670  C003  F003         	movff	i1___ftpack@arg+2,?i1___ftpack+2
 11076  003674                     i1l698:
 11077  003674  0012               	return	
 11078  003676  FFFF               	dw	65535	; errata NOP
 11079  003678                     __end_ofi1___ftpack:
 11080                           	opt stack 0
 11081                           pclatu	equ	0xFFB
 11082                           pclath	equ	0xFFA
 11083                           tblptru	equ	0xFF8
 11084                           tblptrh	equ	0xFF7
 11085                           tblptrl	equ	0xFF6
 11086                           tablat	equ	0xFF5
 11087                           prodh	equ	0xFF4
 11088                           prodl	equ	0xFF3
 11089                           intcon	equ	0xFF2
 11090                           intcon2	equ	0xFF1
 11091                           postinc0	equ	0xFEE
 11092                           fsr0h	equ	0xFEA
 11093                           fsr0l	equ	0xFE9
 11094                           wreg	equ	0xFE8
 11095                           postinc1	equ	0xFE6
 11096                           postdec1	equ	0xFE5
 11097                           fsr1h	equ	0xFE2
 11098                           fsr1l	equ	0xFE1
 11099                           bsr	equ	0xFE0
 11100                           indf2	equ	0xFDF
 11101                           postinc2	equ	0xFDE
 11102                           postdec2	equ	0xFDD
 11103                           fsr2h	equ	0xFDA
 11104                           fsr2l	equ	0xFD9
 11105                           status	equ	0xFD8
 11106                           
 11107 ;; *************** function _high_isr *****************
 11108 ;; Defined at:
 11109 ;;		line 113 in file "main.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;		None
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;		None
 11114 ;; Return value:  Size  Location     Type
 11115 ;;		None               void
 11116 ;; Registers used:
 11117 ;;		None
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11123 ;;      Params:         0       0       0       0       0       0       0
 11124 ;;      Locals:         0       0       0       0       0       0       0
 11125 ;;      Temps:          0      14       0       0       0       0       0
 11126 ;;      Totals:         0      14       0       0       0       0       0
 11127 ;;Total ram usage:       14 bytes
 11128 ;; Hardware stack levels used:    1
 11129 ;; This function calls:
 11130 ;;		Nothing
 11131 ;; This function is called by:
 11132 ;;		Interrupt level 2
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	intcode
 11137  000008                     __pintcode:
 11138                           	opt stack 0
 11139  000008                     _high_isr:
 11140                           	opt stack 22
 11141                           
 11142                           ;incstack = 0
 11143  000008  FFFF               	dw	65535	; errata NOP
 11144  00000A  CFFA F080          	movff	pclath,??_high_isr
 11145  00000E  CFFB F081          	movff	pclatu,??_high_isr+1
 11146  000012  EF25  F01C         	goto	int_func
 11147                           pclatu	equ	0xFFB
 11148                           pclath	equ	0xFFA
 11149                           tblptru	equ	0xFF8
 11150                           tblptrh	equ	0xFF7
 11151                           tblptrl	equ	0xFF6
 11152                           tablat	equ	0xFF5
 11153                           prodh	equ	0xFF4
 11154                           prodl	equ	0xFF3
 11155                           intcon	equ	0xFF2
 11156                           intcon2	equ	0xFF1
 11157                           postinc0	equ	0xFEE
 11158                           fsr0h	equ	0xFEA
 11159                           fsr0l	equ	0xFE9
 11160                           wreg	equ	0xFE8
 11161                           postinc1	equ	0xFE6
 11162                           postdec1	equ	0xFE5
 11163                           fsr1h	equ	0xFE2
 11164                           fsr1l	equ	0xFE1
 11165                           bsr	equ	0xFE0
 11166                           indf2	equ	0xFDF
 11167                           postinc2	equ	0xFDE
 11168                           postdec2	equ	0xFDD
 11169                           fsr2h	equ	0xFDA
 11170                           fsr2l	equ	0xFD9
 11171                           status	equ	0xFD8
 11172                           
 11173                           	psect	intcode_body
 11174  00384A                     __pintcode_body:
 11175                           	opt stack 22
 11176  00384A                     int_func:
 11177                           	opt stack 22
 11178  00384A  FFFF               	dw	65535	; errata NOP
 11179  00384C  CFE9 F082          	movff	fsr0l,??_high_isr+2
 11180  003850  CFEA F083          	movff	fsr0h,??_high_isr+3
 11181  003854  CFE1 F084          	movff	fsr1l,??_high_isr+4
 11182  003858  CFE2 F085          	movff	fsr1h,??_high_isr+5
 11183  00385C  CFD9 F086          	movff	fsr2l,??_high_isr+6
 11184  003860  CFDA F087          	movff	fsr2h,??_high_isr+7
 11185  003864  CFF3 F088          	movff	prodl,??_high_isr+8
 11186  003868  CFF4 F089          	movff	prodh,??_high_isr+9
 11187  00386C  CFF6 F08A          	movff	tblptrl,??_high_isr+10
 11188  003870  CFF7 F08B          	movff	tblptrh,??_high_isr+11
 11189  003874  CFF8 F08C          	movff	tblptru,??_high_isr+12
 11190  003878  CFF5 F08D          	movff	tablat,??_high_isr+13
 11191  00387C  C08D  FFF5         	movff	??_high_isr+13,tablat
 11192  003880  C08C  FFF8         	movff	??_high_isr+12,tblptru
 11193  003884  C08B  FFF7         	movff	??_high_isr+11,tblptrh
 11194  003888  C08A  FFF6         	movff	??_high_isr+10,tblptrl
 11195  00388C  C089  FFF4         	movff	??_high_isr+9,prodh
 11196  003890  C088  FFF3         	movff	??_high_isr+8,prodl
 11197  003894  C087  FFDA         	movff	??_high_isr+7,fsr2h
 11198  003898  C086  FFD9         	movff	??_high_isr+6,fsr2l
 11199  00389C  C085  FFE2         	movff	??_high_isr+5,fsr1h
 11200  0038A0  C084  FFE1         	movff	??_high_isr+4,fsr1l
 11201  0038A4  C083  FFEA         	movff	??_high_isr+3,fsr0h
 11202  0038A8  C082  FFE9         	movff	??_high_isr+2,fsr0l
 11203  0038AC  C081  FFFB         	movff	??_high_isr+1,pclatu
 11204  0038B0  C080  FFFA         	movff	??_high_isr,pclath
 11205  0038B4  0011               	retfie		f
 11206  0038B6  FFFF               	dw	65535	; errata NOP
 11207  0038B8                     __end_of_high_isr:
 11208                           	opt stack 0
 11209                           pclatu	equ	0xFFB
 11210                           pclath	equ	0xFFA
 11211                           tblptru	equ	0xFF8
 11212                           tblptrh	equ	0xFF7
 11213                           tblptrl	equ	0xFF6
 11214                           tablat	equ	0xFF5
 11215                           prodh	equ	0xFF4
 11216                           prodl	equ	0xFF3
 11217                           intcon	equ	0xFF2
 11218                           intcon2	equ	0xFF1
 11219                           postinc0	equ	0xFEE
 11220                           fsr0h	equ	0xFEA
 11221                           fsr0l	equ	0xFE9
 11222                           wreg	equ	0xFE8
 11223                           postinc1	equ	0xFE6
 11224                           postdec1	equ	0xFE5
 11225                           fsr1h	equ	0xFE2
 11226                           fsr1l	equ	0xFE1
 11227                           bsr	equ	0xFE0
 11228                           indf2	equ	0xFDF
 11229                           postinc2	equ	0xFDE
 11230                           postdec2	equ	0xFDD
 11231                           fsr2h	equ	0xFDA
 11232                           fsr2l	equ	0xFD9
 11233                           status	equ	0xFD8
 11234                           pclatu	equ	0xFFB
 11235                           pclath	equ	0xFFA
 11236                           tblptru	equ	0xFF8
 11237                           tblptrh	equ	0xFF7
 11238                           tblptrl	equ	0xFF6
 11239                           tablat	equ	0xFF5
 11240                           prodh	equ	0xFF4
 11241                           prodl	equ	0xFF3
 11242                           intcon	equ	0xFF2
 11243                           intcon2	equ	0xFF1
 11244                           postinc0	equ	0xFEE
 11245                           fsr0h	equ	0xFEA
 11246                           fsr0l	equ	0xFE9
 11247                           wreg	equ	0xFE8
 11248                           postinc1	equ	0xFE6
 11249                           postdec1	equ	0xFE5
 11250                           fsr1h	equ	0xFE2
 11251                           fsr1l	equ	0xFE1
 11252                           bsr	equ	0xFE0
 11253                           indf2	equ	0xFDF
 11254                           postinc2	equ	0xFDE
 11255                           postdec2	equ	0xFDD
 11256                           fsr2h	equ	0xFDA
 11257                           fsr2l	equ	0xFD9
 11258                           status	equ	0xFD8
 11259                           
 11260                           	psect	param0
 11261  0000                     pclatu	equ	0xFFB
 11262                           pclath	equ	0xFFA
 11263                           tblptru	equ	0xFF8
 11264                           tblptrh	equ	0xFF7
 11265                           tblptrl	equ	0xFF6
 11266                           tablat	equ	0xFF5
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           intcon2	equ	0xFF1
 11271                           postinc0	equ	0xFEE
 11272                           fsr0h	equ	0xFEA
 11273                           fsr0l	equ	0xFE9
 11274                           wreg	equ	0xFE8
 11275                           postinc1	equ	0xFE6
 11276                           postdec1	equ	0xFE5
 11277                           fsr1h	equ	0xFE2
 11278                           fsr1l	equ	0xFE1
 11279                           bsr	equ	0xFE0
 11280                           indf2	equ	0xFDF
 11281                           postinc2	equ	0xFDE
 11282                           postdec2	equ	0xFDD
 11283                           fsr2h	equ	0xFDA
 11284                           fsr2l	equ	0xFD9
 11285                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    154
    Data        18
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63      80
    BANK0           128    114     114
    BANK1           256     76      97
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> main@Msg3(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1117$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    WriteLCD@Msg	PTR unsigned char  size(2) Largest target is 10
		 -> main@Msg3(BANK1[10]), 

    WriteLCD@msgptr	PTR unsigned char  size(2) Largest target is 10
		 -> main@Msg3(BANK1[10]), 

    DisplayLCD@tempPtr	PTR unsigned char  size(2) Largest target is 10
		 -> main@Msg3(BANK1[10]), main@Msg2(BANK1[5]), main@Msg1(BANK1[6]), main@LCDinit(BANK1[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->i1___ftdiv
    i1___ftdiv->___awtoft
    ___awtoft->i1___ftpack

Critical Paths under _TimerStopped in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_WriteLCD
    _WriteLCD->_sprintf
    _sprintf->___ftge
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftneg
    ___awdiv->___awmod
    ___lltoft->___fttol
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftneg->___lltoft
    ___ftge->___ftadd
    ___ftdiv->_scale
    _DisplayLCD->_Delay100TCYx
    _DisplayLCD->_Delay10TCYx
    _DisplayLCD->_Delay1KTCYx
    _InitApp->_WaitHalfSec
    _WaitHalfSec->_Delay1KTCYx

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _TimerStopped in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_WriteLCD
    _WriteLCD->_sprintf

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _TimerStopped in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _TimerStopped in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _TimerStopped in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _TimerStopped in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _TimerStopped in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   62288
                                            113 BANK0      1     1      0
                                             48 BANK1     28    28      0
                        _CloseTimer0
                         _DisplayLCD
                            _InitApp
                     _InitInterrupts
                        _WaitHalfSec
                           _WriteLCD
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     197
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _WriteLCD                                            15     6      9   60652
                                            104 BANK0      9     0      9
                                             42 BANK1      6     6      0
                         _DisplayLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             63    52     11   59042
                                             87 BANK0     17     6     11
                                              0 BANK1     42    42      0
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   11657
                                             56 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   11378
                                             56 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2572
                                             28 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4780
                                             41 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lltoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1733
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1875
                                             20 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     409
                                             14 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          16    10      6     552
                                             14 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2289
                                             29 BANK0      9     5      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1012
                                             14 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     891
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     729
                                             14 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4632
                                             78 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4217
                                             66 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lltoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     260
                                             38 BANK0      3     0      3
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     560
                                             78 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2952
                                             63 BANK0     15     9      6
                           ___ftpack
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1992
                                             14 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _DisplayLCD                                           5     1      4     910
                                             15 BANK0      5     1      4
                       _Delay100TCYx
                        _Delay10TCYx
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay10TCYx                                          1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0      99
                        _WaitHalfSec
 ---------------------------------------------------------------------------------
 (1) _WaitHalfSec                                          2     2      0      99
                                             15 BANK0      2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CloseTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                             19    19      0    1564
                                             27 COMRAM    19    19      0
                           ___awtoft
                      i1_WriteTimer0
                          i1___ftdiv
 ---------------------------------------------------------------------------------
 (7) i1___ftdiv                                           15     9      6     697
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3     774
                                              8 COMRAM     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1___ftpack                                           8     3      5     365
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TimerStopped                                        17    17      0       0
                                             46 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_isr                                            14    14      0       0
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CloseTimer0
   _DisplayLCD
     _Delay100TCYx
     _Delay10TCYx
     _Delay1KTCYx
   _InitApp
     _WaitHalfSec
       _Delay1KTCYx
   _InitInterrupts
   _WaitHalfSec
     _Delay1KTCYx
   _WriteLCD
     _DisplayLCD
       _Delay100TCYx
       _Delay10TCYx
       _Delay1KTCYx
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___fttol (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
         ___fttol (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___fttol (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
       ___ftsub
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___fttol (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
               ___lltoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___fttol (ARG)
       ___fttol
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
         ___fttol (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___fttol (ARG)
             ___lltoft (ARG)
               ___ftpack
               ___fttol (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
           ___lltoft (ARG)
             ___ftpack
             ___fttol (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___fttol (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _WriteTimer0

 _low_isr (ROOT)
   ___awtoft
     i1___ftpack
   i1_WriteTimer0
   i1___ftdiv
     ___awtoft (ARG)
       i1___ftpack
     i1___ftpack (ARG)

 _TimerStopped (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4C      61       7       37.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     72      72       5       89.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     123      15        0.0%
DATA                 0      0     123       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 23 23:32:51 2014

                                                        WriteLCD@msgptr 012C  
                                                            i1___ftpack 35CC  
                                                          ___awdiv@sign 0099  
                                                           __CFG_BOR$ON 000000  
                                                                    bsr 000FE0  
                                                   ___wmul@multiplicand 009E  
                                                          __CFG_CP0$OFF 000000  
                                                          __CFG_CP1$OFF 000000  
                                                          __CFG_CP2$OFF 000000  
                                                          __CFG_CP3$OFF 000000  
                                                           __CFG_OSC$HS 000000  
                                                          ___ftadd@exp1 00CD  
                                                          ___ftadd@exp2 00CC  
                                                          ___ftadd@sign 00CB  
                                                                   l210 210A  
                                                                   l313 17C2  
                                                                   l155 37C4  
                                                                   l147 377E  
                                                                   l253 0B86  
                                                                   l247 0B1A  
                                                                   l280 129E  
                                                                   l248 0B1E  
                                                                   l249 1190  
                                                                   l267 0F96  
                                                                   l741 24F6  
                                                                   _CHA 0045  
                                                                   l750 25E0  
                                                                   _CHB 0049  
                                                                   l591 3B12  
                                                                   l735 2494  
                                                                   l584 3ACE  
                                                                   l736 26A6  
                                                                   l577 3AFC  
                                                                   l809 3A58  
                                                                   l657 2888  
                                                                   l770 2F4C  
                                                                   l666 2878  
                                                                   l739 24CE  
                                                                   l819 2E3C  
                                                                   l767 2F86  
                                                                   l759 260A  
                                                                   l863 3418  
                                                                   l775 2A22  
                                                                   l784 2A12  
                                                                   l793 3500  
                                                                   l873 370C  
                                                                   l777 2938  
                                                                   l698 3094  
                                                                   l778 2984  
                                                                   l799 2B8A  
                                                          __CFG_CPB$OFF 000000  
                                                                   _PR2 000FCB  
                                                          __CFG_CPD$OFF 000000  
                                                                   _QEM 0677  
                                                                   _RPS 015E  
                                                  __size_of_WriteTimer0 0016  
                                                          i1___ftdiv@f1 000D  
                                                          i1___ftdiv@f2 0010  
                                                          i1___ftdiv@f3 0017  
                                                          __CFG_BORV$45 000000  
                                                          ___awmod@sign 0093  
                                                                   wreg 000FE8  
                                                          __CFG_LVP$OFF 000000  
                                                          ___ftdiv@cntr 00C8  
                                                          __CFG_OSCS$ON 000000  
                                                          ___ftdiv@sign 00CD  
                                                          __CFG_WDT$OFF 000000  
                                                                  l4001 324C  
                                                                  l4005 325A  
                                                                  l4021 3534  
                                                                  l4031 3574  
                                                                  l4111 1FDC  
                                                                  l4103 1E3E  
                                                                  l4009 326E  
                                                                  l4033 357A  
                                                                  l4041 35AC  
                                                                  l4025 3556  
                                                                  l4045 35C0  
                                                                  l4037 359E  
                                                                  l4029 3568  
                                                                  l4117 20DA  
                                                                  l4207 33FE  
                                                                  l4223 36F2  
                                                                  l4215 3690  
                                                                  l4231 37EA  
                                                                  l4071 22C4  
                                                                  l4311 06E0  
                                                                  l4303 06C4  
                                                                  l4145 2EA4  
                                                                  l4217 36A8  
                                                                  l4129 3A8C  
                                                                  l4243 3736  
                                                                  l4139 2E6A  
                                                                  l4219 36AE  
                                                                  l2803 2724  
                                                                  l4403 0AD0  
                                                                  l4165 2F04  
                                                                  l4229 37D2  
                                                                  l4093 1D20  
                                                                  l4501 109C  
                                                                  l4421 0B6E  
                                                                  l4333 07E4  
                                                                  l4317 071E  
                                                                  l4325 07A6  
                                                                  l2743 28B6  
                                                                  l4079 23D0  
                                                                  l4503 10AA  
                                                                  l4511 10CA  
                                                                  l4415 0B56  
                                                                  l4407 0AFC  
                                                                  l4351 08A2  
                                                                  l4265 376E  
                                                                  l2905 3474  
                                                                  l2825 27E6  
                                                                  l2817 278A  
                                                                  l4601 14B0  
                                                                  l4513 10D4  
                                                                  l4433 0C76  
                                                                  l4425 0B8A  
                                                                  l4361 08D6  
                                                                  l4345 0846  
                                                                  l4353 08BE  
                                                                  l4267 3782  
                                                                  l2915 34FE  
                                                                  l4195 3384  
                                                                  l2835 281C  
                                                                  l4099 1E12  
                                                                  l4451 0DFA  
                                                                  l4363 0908  
                                                                  l4347 0854  
                                                                  l4293 3A08  
                                                                  l3821 2FCC  
                                                                  l2909 34BA  
                                                                  l3901 25D6  
                                                                  l4197 339C  
                                                                  l2845 285A  
                                                                  l2781 29D2  
                                                                  l2749 28DE  
                                                                  l4613 1522  
                                                                  l4445 0DB6  
                                                                  l4357 08D0  
                                                                  l3831 305E  
                                                                  l3823 2FF8  
                                                                  l3815 2FA4  
                                                                  l2951 2DC6  
                                                                  l4199 33A2  
                                                                  l2847 2872  
                                                                  l2839 2838  
                                                                  l4711 196E  
                                                                  l4631 15DE  
                                                                  l4551 11D0  
                                                                  l4439 0D28  
                                                                  l4297 3A22  
                                                                  l4289 37B6  
                                                                  l3841 3088  
                                                                  l2961 2E06  
                                                                  l2929 2D1C  
                                                                  l2777 29B6  
                                                                  l4617 158A  
                                                                  l4529 111A  
                                                                  l4369 0926  
                                                                  l4721 199A  
                                                                  l3835 306E  
                                                                  l3827 301E  
                                                                  l3819 2FB8  
                                                                  l3907 2634  
                                                                  l2947 2DAA  
                                                                  l2787 29F4  
                                                                  l4731 19E0  
                                                                  l4635 162E  
                                                                  l4459 0E1A  
                                                                  l4395 0A62  
                                                                  l4379 098A  
                                                                  l3829 304A  
                                                                  l3917 2682  
                                                                  l2965 2E2C  
                                                                  l2957 2DE8  
                                                                  l2797 26E8  
                                                                  l2789 2A0C  
                                                                  l3933 2A8A  
                                                                  l4741 1A44  
                                                                  l4709 1960  
                                                                  l4581 1380  
                                                                  l4493 0FC4  
                                                                  l4469 0E66  
                                                                  l3871 24EC  
                                                                  l2959 2E00  
                                                                  l3951 2AF6  
                                                                  l3927 2A50  
                                                                  l4735 1A14  
                                                                  l4727 19B8  
                                                                  l4719 198E  
                                                                  l4639 164E  
                                                                  l4647 166E  
                                                                  l4567 1244  
                                                                  l3881 252E  
                                                                  l3865 24DC  
                                                                  l3961 2B40  
                                                                  l4753 1AC0  
                                                                  l4657 16AE  
                                                                  l4577 133C  
                                                                  l4585 13D6  
                                                                  l4825 3174  
                                                                  l3891 2582  
                                                                  l3859 24A2  
                                                                  l3947 2AD8  
                                                                  l4755 1ACC  
                                                                  l4747 1A7C  
                                                                  l4683 17C6  
                                                                  l4667 1764  
                                                                  l3893 258E  
                                                                  l3957 2B22  
                                                                  l4757 1AD6  
                                                                  l4765 1B00  
                                                                  l4749 1A88  
                                                                  l4693 17FA  
                                                                  l4669 1772  
                                                                  l4677 1792  
                                                                  l4597 1484  
                                                                  l4589 141C  
                                                                  l4773 1B36  
                                                                  l3887 2562  
                                                                  l3991 3216  
                                                                  l3983 31EC  
                                                                  l4775 1B5A  
                                                                  l3889 2576  
                                                                  l3993 321C  
                                                                  l3977 31C4  
                                                                  l4697 184C  
                                                                  l3899 25C2  
                                                                  l4867 2CB4  
                                                                  l3989 320A  
                                                                  STR_1 069B  
                                                                  u5010 09DA  
                                                                  u5015 09CE  
                                                                  u2720 29DA  
                                                                  u2810 2840  
                                                                  u4251 2440  
                                                                  u2651 28A6  
                                                                  u2740 26D4  
                                                                  u4261 2460  
                                                                  u2671 28CE  
                                                                  u2760 2710  
                                                                  u2921 2D0C  
                                                                  u2745 26C8  
                                                                  u2940 2D48  
                                                                  u2765 2704  
                                                                  u4461 2A40  
                                                                  u2945 2D3E  
                                                                  u4481 2A68  
                                                                  u2970 2DCE  
                                                                  u4490 2A76  
                                                                  u4731 2E5A  
                                                                  u5700 2C4E  
                                                                  u4751 2E82  
                                                                  u4760 2E90  
                                                                  i1l73 0108  
                                                                  i1l66 0086  
                                                                  u5708 2C52  
                                                                  u5661 2B9A  
                                                                  u5807 3AFE  
                                                                  u5671 2BAC  
                                                                  u5817 3B14  
                                                                  u5681 2BBE  
                                                                  u5690 2C36  
                                                                  u5698 2C3A  
                                                                  u4995 0964  
                                                                  u5797 3AD0  
                                                          __CFG_PWRT$ON 000000  
                                                          __CFG_STVR$ON 000000  
                                                                  _main 2B8E  
                                                          ___ftpack@arg 008E  
                                                          ___ftpack@exp 0091  
                                                                  fsr0h 000FEA  
                                                                  fsr1h 000FE2  
                                                                  fsr0l 000FE9  
                                                                  fsr2h 000FDA  
                                                                  fsr1l 000FE1  
                                                                  indf2 000FDF  
                                                                  fsr2l 000FD9  
                                                                  pclat 000FFA  
                                                   i1WriteTimer0@timer0 0001  
                                                         i1___ftdiv@exp 001A  
                                                                  prodh 000FF4  
                                                                  prodl 000FF3  
                                                                  start 01E6  
                                                          _sprintf$1131 0103  
                                                          _sprintf$1742 0100  
                                                   __end_of_EncoderPoll 069B  
                                                   __end_of_CloseTimer0 3B54  
                                                          ___ftmul@cntr 00B6  
                                                          ___ftmul@sign 00B7  
                                                       __end_of_InitApp 39BE  
                                                           _Delay10TCYx 3AC8  
                                                          ___fttol@exp1 009C  
                                                          ___fttol@lval 0098  
                                                           _Delay1KTCYx 3B0C  
                                                                 ?_main 0001  
                                                         i1_WriteTimer0 3B22  
                                                       __end_of___awdiv 327A  
                                                       __end_of___ftadd 26AA  
                                                       __end_of___awmod 35CC  
                                                 __size_of_Delay100TCYx 0016  
                                                       __end_of___ftdiv 2F8A  
                                                       __end_of___ftneg 3A68  
                                                       __end_of___lldiv 342C  
                                                       __end_of___ftmul 2B8E  
                                                       ___awdiv@divisor 0096  
                                                       __end_of___llmod 3720  
                                                       __end_of___ftsub 3944  
                                                       __end_of___fttol 2E40  
                                                                 _LATB4 007C54  
                                                                 i1l183 019E  
                                                                 i1l770 3320  
                                                                 i1l767 3350  
                                                                 i1l698 3674  
                                                       ___awdiv@counter 0098  
                                                                 _TMR0H 000FD7  
                                                                 _TMR0L 000FD6  
                                                                 _PORTA 000F80  
                                                                 _PORTD 000F83  
                                                                 _TRISA 000F92  
                                                                 _TRISD 000F95  
                                                                 _TRISE 000F96  
                                                         __CFG_WRT0$OFF 000000  
                                                         __CFG_WRT1$OFF 000000  
                                                         __CFG_WRT2$OFF 000000  
                                                         __CFG_WRT3$OFF 000000  
                                                          ___lltoft@exp 00A5  
                                                            _DisplayLCD 3720  
                                                        __CFG_EBTR0$OFF 000000  
                                                        __CFG_EBTR1$OFF 000000  
                                                        __CFG_EBTR2$OFF 000000  
                                                        __CFG_EBTR3$OFF 000000  
                                                         __CFG_WRTB$OFF 000000  
                                                         __CFG_WRTC$OFF 000000  
                                                         __CFG_WRTD$OFF 000000  
                                                        __CFG_EBTRB$OFF 000000  
                                                         ___awtoft@sign 000C  
                                                       __end_of_dpowers 0629  
                                                                 _scale 1B72  
                                                       __end_of_isdigit 3A98  
                                                         ___ftpack@sign 0092  
                                                       __end_of_low_isr 0150  
                                                                 tablat 000FF5  
                                                        i1___ftdiv@cntr 0016  
                                                        i1___ftdiv@sign 001B  
                                                   __end_of_CountPerRev 0699  
                                                                 status 000FD8  
                                                       __end_of_sprintf 1B72  
                                                    __size_ofi1___ftdiv 00DA  
                                                        i1___ftpack@arg 0001  
                                                        i1___ftpack@exp 0004  
                                                       __initialization 3944  
                                                          _Delay100TCYx 3AF6  
                                                          __end_of_main 2CF2  
                                                        _InitInterrupts 3A98  
                                                           ?i1___ftpack 0001  
                                                        ?i1_WriteTimer0 0001  
                                                                ??_main 00F1  
                                                         ___fttol@sign1 0097  
                                                         __activetblptr 000002  
                                                  __size_of__tdiv_to_l_ 019A  
                                                            _PartialRot 0040  
                                                       __CFG_CCP2MUX$ON 000000  
                                                 DisplayLCD@currentChar 0093  
                                                                _ADCON1 000FC1  
                                                      ___llmod@dividend 008E  
                                                                ?_scale 00B8  
                                                                _CCPR1L 000FBE  
                                                      ___awdiv@dividend 0094  
                                                      __end_of___awtoft 3904  
                                                      __end_of___ftpack 3098  
                                                      __end_of_WriteLCD 3194  
                                                         ??_WaitHalfSec 008F  
                                                      __end_of___lltoft 384A  
                                                                i1l3571 35F6  
                                                                i1l3651 38DE  
                                                                i1l3581 3652  
                                                                i1l3573 3614  
                                                                i1l3565 35DE  
                                                                i1l3663 3296  
                                                                i1l3577 362A  
                                                                i1l3569 35EC  
                                                                i1l3579 3648  
                                                                i1l3669 32BC  
                                                                i1l3757 0082  
                                                                i1l3767 00F6  
                                                                i1l3689 32FA  
                                                                i1l3769 00FA  
                                                                u395_21 328C  
                                                           _EncoderPoll 0699  
                                                                u397_21 32A6  
                                                           _CloseTimer0 3B4A  
                                                        __CFG_WDTPS$128 000000  
                                                                _CWTurn 004B  
                                                             ??_InitApp 0091  
                                                __end_of_InitInterrupts 3AC8  
                                                      __end_of__powers_ 0677  
                                                      __end_of_high_isr 38B8  
                                                                ___ftge 342C  
                                                                ___wmul 39BE  
                                                             ??___awdiv 0098  
                                                             ??___ftadd 00C8  
                                                             ??___awmod 0092  
                                                             ??___ftdiv 00C5  
                                                             ??___ftneg 00A9  
                                                             ??___lldiv 0096  
                                                             ??___ftmul 00AF  
                                                             ??___llmod 0096  
                                                             ??___ftsub 00D4  
                                                             ??___fttol 0092  
                                                                _fround 210E  
                                                                clear_0 3952  
                                                      ___awdiv@quotient 009A  
                                                        sprintf@vd_1133 010B  
                                                       ___awmod@divisor 0090  
                                                       ___awmod@counter 0092  
                                                 ___ftmul@f3_as_product 00B3  
                                                     __end_ofi1___ftdiv 3354  
                                                             ??_isdigit 008E  
                                                          __mediumconst 0000  
                                                           ?_DisplayLCD 008F  
                                                             ??_low_isr 001C  
                                                                tblptrh 000FF7  
                                                                tblptrl 000FF6  
                                                                tblptru 000FF8  
                                                           _CountPerRev 0697  
                                                             ??_sprintf 00E2  
                                                   __size_ofi1___ftpack 00AC  
                                                            __accesstop 0080  
                                               __end_of__initialization 3978  
                                                            ___ftadd@f1 00C2  
                                                            ___ftadd@f2 00C5  
                                                            ___ftge@ff1 00CE  
                                                            ___ftge@ff2 00D1  
                                                       i1___ftpack@sign 0005  
                                                            ___ftdiv@f1 00BF  
                                                            ___ftdiv@f2 00C2  
                                                            ___ftdiv@f3 00C9  
                                                            ___ftneg@f1 00A6  
                                                            ___awtoft@c 0009  
                                                   __end_of_WaitHalfSec 3A32  
                                                       ?_InitInterrupts 0001  
                                                            ___ftmul@f1 00A9  
                                                            ___ftmul@f2 00AC  
                                                            ___ftsub@f1 00CE  
                                                            ___ftsub@f2 00D1  
                                                            ___fttol@f1 008E  
                                                        __pcstackCOMRAM 0001  
                                                          __pidataBANK1 3B38  
                                                            ___lltoft@c 009D  
                                                       ??i1_WriteTimer0 0003  
                                                         __end_of_scale 210E  
                                                            __div_to_l_ 26AA  
                                                       __div_to_l_@exp1 009D  
                                                       __div_to_l_@cntr 009C  
                                                          sprintf@integ 0114  
                                                               ??_scale 00BB  
                                                       __div_to_l_@quot 0098  
                                                          sprintf@width 0119  
                                                            __pbssBANK1 015E  
                                                         __div_to_l_@f1 008E  
                                                         __div_to_l_@f2 0091  
                                                   __size_of_DisplayLCD 00A8  
                                                               ?___ftge 00CE  
                                                          ?_Delay10TCYx 0001  
                                                               ?___wmul 009C  
                                                          ?_Delay1KTCYx 0001  
                                                      WriteTimer0@timer 0090  
                                                         ??_WriteTimer0 0090  
                                                               ?_fround 00B8  
                                                             ?___awtoft 0009  
                                                             ?___ftpack 008E  
                                                             ?_WriteLCD 00E8  
                                                             ?___lltoft 009D  
                                                               _CCWTurn 0043  
                                                               _OLD_ROT 004D  
                                                             ?_high_isr 0001  
                                                           _WaitHalfSec 39F8  
                                                         ?_TimerStopped 0001  
                                                               _InitApp 3982  
                                                     __end_of__npowers_ 0650  
                                                               __Hparam 0000  
                                                            _scale$1741 00BB  
                                                               __Lparam 0000  
                                                       __size_of___ftge 00D8  
                                                          ??i1___ftpack 0006  
                                                               ___awdiv 3194  
                                                               ___ftadd 2426  
                                                               ___awmod 3504  
                                                               ___ftdiv 2E40  
                                                               ___ftneg 3A32  
                                                               ___lldiv 3354  
                                                       __size_of___wmul 003A  
                                                               ___ftmul 2A26  
                                                               ___llmod 3678  
                                                               ___ftsub 3904  
                                                               ___fttol 2CF2  
                                                          __psmallconst 0600  
                                                               __pcinit 3944  
                                                            ??___awtoft 000C  
                                                            ??___ftpack 0093  
                                                            ??_WriteLCD 012A  
                                                       __size_of_fround 0318  
                                                       Delay10TCYx@unit 008E  
                                                               __ramtop 0600  
                                                            ??___lltoft 00A1  
                                                               __ptext0 2B8E  
                                                               __ptext1 3AE0  
                                                               __ptext2 3098  
                                                               __ptext3 06A2  
                                                               __ptext4 1B72  
                                                               __ptext5 3A68  
                                                               __ptext6 210E  
                                                               __ptext7 39BE  
                                                               __ptext8 2A26  
                                                               __ptext9 3504  
                                                             _T0CONbits 000FD5  
                                                           ?__div_to_l_ 008E  
                                                               _dpowers 0601  
                                                             _T2CONbits 000FCA  
                                                               _isdigit 3A68  
                                                      ___awmod@dividend 008E  
                                                   __end_of_WriteTimer0 3AF6  
                                                               _low_isr 0018  
                                                               _sprintf 06A2  
                                                            ??_high_isr 0080  
                                                        __pintcode_body 384A  
                                                  end_of_initialization 3978  
                                                        ??_TimerStopped 002F  
                                                    __end_ofi1___ftpack 3678  
                                                          ?_CloseTimer0 0001  
                                                         __Lmediumconst 0000  
                                                               int_func 384A  
                                                       ___lldiv@divisor 0092  
                                                       ___lldiv@counter 009A  
                                                               postdec1 000FE5  
                                                               postdec2 000FDD  
                                                               postinc0 000FEE  
                                                               postinc1 000FE6  
                                                               postinc2 000FDE  
                                                        __tdiv_to_l_@f1 008E  
                                                        __tdiv_to_l_@f2 0091  
                                                         ??__tdiv_to_l_ 0094  
                                                             _PORTAbits 000F80  
                                                             _PORTBbits 000F81  
                                                             _PORTEbits 000F84  
                                                             _TMR0count 004F  
                                                          ??_DisplayLCD 0093  
                                                             _TRISBbits 000F93  
                                                             _TRISCbits 000F94  
                                                         WriteLCD@width 012E  
                                                             i1___ftdiv 327A  
                                                      ??_InitInterrupts 008E  
                                                     DisplayLCD@tempPtr 008F  
                                                           _CCP1CONbits 000FBD  
                                                           ___ftdiv@exp 00CC  
                                                   __size_of__div_to_l_ 01E2  
                                                    i1WriteTimer0@timer 0003  
                                                           ___ftmul@exp 00B2  
                                                      Delay100TCYx@unit 008E  
                                                    __end_of_DisplayLCD 37C8  
                                                        __end_of___ftge 3504  
                                                        __end_of___wmul 39F8  
                                                  __size_of_Delay10TCYx 0018  
                                                           _WriteTimer0 3AE0  
                                                        __end_of_fround 2426  
                                                  __size_of_Delay1KTCYx 0016  
                                                   start_initialization 3944  
                                                           __end_of_QEM 0697  
                                                   __end_of__tdiv_to_l_ 2A26  
                                                            ?i1___ftdiv 000D  
                                                       ___llmod@divisor 0092  
                                                       ___llmod@counter 0096  
                                                              ??___ftge 00D4  
                                                              ??___wmul 00A0  
                                                           __pdataBANK1 014C  
                                                              ??_fround 00BB  
                                                 __end_ofi1_WriteTimer0 3B38  
                                                  __end_of_TimerStopped 01E6  
                                                           WriteLCD@Msg 00EF  
                                                            fround@prec 00C1  
                                                           WriteLCD@len 00EA  
                                                           WriteLCD@var 00EC  
                                                     __size_of___awtoft 004C  
                                                     __size_of___ftpack 010E  
                                                     __size_of_WriteLCD 00FC  
                                                     __size_of___lltoft 0082  
                                                           __pbssCOMRAM 0040  
                                                         __pcstackBANK0 0080  
                                                         __pcstackBANK1 0100  
                                                   __end_of__stringdata 06A1  
                                                          _isdigit$1503 008F  
                                                       Delay1KTCYx@unit 008E  
                                                          ?_WaitHalfSec 0001  
                                                     __size_of_high_isr 38B0  
                                                           sprintf@ccnt 0117  
                                                           sprintf@_val 011D  
                                                           sprintf@flag 011B  
                                                           sprintf@fval 0124  
                                                           sprintf@prec 0127  
                                                           sprintf@temp 010F  
                                                              ?_InitApp 0001  
                                                  __size_of_CloseTimer0 000A  
                                                         ?_Delay100TCYx 0001  
                                                             __pintcode 0008  
                                                              ?___awdiv 0094  
                                                              ?___ftadd 00C2  
                                                              ?___awmod 008E  
                                                              ?___ftdiv 00BF  
                                                              ?___ftneg 00A6  
                                                              ?___lldiv 008E  
                                                              ?___ftmul 00A9  
                                                              ?___llmod 008E  
                                                              ?___ftsub 00CE  
                                                             __npowers_ 0629  
                                                              ?___fttol 008E  
                                                           __pintcodelo 0018  
                                                           __tdiv_to_l_ 288C  
                                                        DisplayLCD@init 0091  
                                                  WaitHalfSec@Halfcount 008F  
                                                          ??__div_to_l_ 0094  
                                                           __smallconst 0600  
                                                     WriteTimer0@timer0 008E  
                                                              ?_isdigit 0001  
                                                              ?_low_isr 0001  
                                                           ??i1___ftdiv 0013  
                                                              ?_sprintf 00D7  
                                                        __size_of_scale 059C  
                                                              _CHAcount 0047  
                                                        ___wmul@product 00A0  
                                                              i1u406_20 006A  
                                                              i1u406_26 006C  
                                                              i1u407_25 007A  
                                                        ??_Delay100TCYx 008E  
                                                              i1u398_20 32AE  
                                                    __end_of__div_to_l_ 288C  
                                                              _RCONbits 000FD0  
                                                             main@F3983 014C  
                                                             main@F3985 0153  
                                                             main@F3987 0159  
                                                           __stringdata 069B  
                                                     ___wmul@multiplier 009C  
                                                           _INTCON2bits 000FF1  
                                                             copy_data0 396C  
                                                              __Hparam0 0000  
                                                      __size_of_InitApp 003C  
                                                              __Lparam0 0000  
                                                 __size_of_TimerStopped 0096  
                                                      __size_of___awdiv 00E6  
                                                      __size_of___ftadd 0284  
                                                      __size_of___awmod 00C8  
                                                      __size_of___ftdiv 014A  
                                                      __size_of___ftneg 0036  
                                                      __size_of___lldiv 00D8  
                                                      __size_of___ftmul 0168  
                                                      __size_of___llmod 00A8  
                                                      __size_of___ftsub 0040  
                                                      __size_of___fttol 014E  
                                                          ?_WriteTimer0 008E  
                                                              ___awtoft 38B8  
                                                              ___ftpack 2F8A  
                                                              _WriteLCD 3098  
                                                           _fround$1740 00BB  
                                                           _fround$1739 00BE  
                                                              ___lltoft 37C8  
                                                            sprintf@exp 0122  
                                                      __size_of_isdigit 0030  
                                                      __size_of_low_isr 0138  
                                                              __ptext10 3194  
                                                              __ptext11 288C  
                                                              __ptext20 342C  
                                                              __ptext12 26AA  
                                                              __ptext21 2E40  
                                                              __ptext13 37C8  
                                                              __ptext30 3B4A  
                                                              __ptext22 2F8A  
                                                              __ptext14 3678  
                                                              __ptext23 3720  
                                                              __ptext15 3354  
                                                              __ptext32 327A  
                                                              __ptext24 3AC8  
                                                              __ptext16 2CF2  
                                                              __ptext33 3B22  
                                                              __ptext25 3AF6  
                                                              __ptext17 3904  
                                                              __ptext34 38B8  
                                                              __ptext26 3A98  
                                                              __ptext18 2426  
                                                              __ptext35 35CC  
                                                              __ptext27 3982  
                                                              __ptext19 3A32  
                                                              __ptext28 39F8  
                                                              __ptext29 3B0C  
                                                              __powers_ 0650  
                                                              _high_isr 0008  
                                                      __size_of_sprintf 14D0  
                                                          _TimerStopped 0150  
                                                         __size_of_main 0164  
                                                  __size_of_WaitHalfSec 003A  
                                                         ??_Delay10TCYx 008E  
                                                      WriteLCD@LCDstart 00E8  
                                                              main@Msg1 0137  
                                                              main@Msg2 013D  
                                                              main@Msg3 0142  
                                                         ??_Delay1KTCYx 008E  
                                                            _INTCONbits 000FF2  
                                                  __end_of_Delay100TCYx 3B0C  
                                                              isdigit@c 0090  
                                                              scale@scl 00BE  
                                                              intlevel1 3B54  
                                                              intlevel2 3B54  
                                                             sprintf@ap 0112  
                                                      __tdiv_to_l_@exp1 009C  
                                                             sprintf@vd 0107  
                                                             sprintf@sp 00D7  
                                                      __tdiv_to_l_@cntr 009B  
                                                      __tdiv_to_l_@quot 0097  
                                                      ___lldiv@dividend 008E  
                                               __size_of_InitInterrupts 0030  
                                                          ?__tdiv_to_l_ 008E  
                                                   __end_of_Delay10TCYx 3AE0  
                                                              sprintf@c 0129  
                                                              sprintf@f 00D9  
                                                      ___lldiv@quotient 0096  
                                                   __end_of_Delay1KTCYx 3B22  
                                                         ??_CloseTimer0 008E  
                                                           main@LCDinit 0130  
                                                __size_ofi1_WriteTimer0 0016  
